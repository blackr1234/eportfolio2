var Iw=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports);var u8=Iw((d8,hl)=>{function Ew(e,n){for(var r=0;r<n.length;r++){const t=n[r];if(typeof t!="string"&&!Array.isArray(t)){for(const a in t)if(a!=="default"&&!(a in e)){const i=Object.getOwnPropertyDescriptor(t,a);i&&Object.defineProperty(e,a,i.get?i:{enumerable:!0,get:()=>t[a]})}}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))t(a);new MutationObserver(a=>{for(const i of a)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&t(o)}).observe(document,{childList:!0,subtree:!0});function r(a){const i={};return a.integrity&&(i.integrity=a.integrity),a.referrerPolicy&&(i.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?i.credentials="include":a.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function t(a){if(a.ep)return;a.ep=!0;const i=r(a);fetch(a.href,i)}})();var af=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function wi(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var rb={exports:{}},oc={},tb={exports:{}},se={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Xo=Symbol.for("react.element"),Tw=Symbol.for("react.portal"),Mw=Symbol.for("react.fragment"),Aw=Symbol.for("react.strict_mode"),Pw=Symbol.for("react.profiler"),Rw=Symbol.for("react.provider"),Dw=Symbol.for("react.context"),Ow=Symbol.for("react.forward_ref"),Lw=Symbol.for("react.suspense"),_w=Symbol.for("react.memo"),Nw=Symbol.for("react.lazy"),of=Symbol.iterator;function Bw(e){return e===null||typeof e!="object"?null:(e=of&&e[of]||e["@@iterator"],typeof e=="function"?e:null)}var ab={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},ib=Object.assign,ob={};function xi(e,n,r){this.props=e,this.context=n,this.refs=ob,this.updater=r||ab}xi.prototype.isReactComponent={};xi.prototype.setState=function(e,n){if(typeof e!="object"&&typeof e!="function"&&e!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")};xi.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")};function sb(){}sb.prototype=xi.prototype;function Bd(e,n,r){this.props=e,this.context=n,this.refs=ob,this.updater=r||ab}var Hd=Bd.prototype=new sb;Hd.constructor=Bd;ib(Hd,xi.prototype);Hd.isPureReactComponent=!0;var sf=Array.isArray,lb=Object.prototype.hasOwnProperty,qd={current:null},cb={key:!0,ref:!0,__self:!0,__source:!0};function ub(e,n,r){var t,a={},i=null,o=null;if(n!=null)for(t in n.ref!==void 0&&(o=n.ref),n.key!==void 0&&(i=""+n.key),n)lb.call(n,t)&&!cb.hasOwnProperty(t)&&(a[t]=n[t]);var s=arguments.length-2;if(s===1)a.children=r;else if(1<s){for(var l=Array(s),c=0;c<s;c++)l[c]=arguments[c+2];a.children=l}if(e&&e.defaultProps)for(t in s=e.defaultProps,s)a[t]===void 0&&(a[t]=s[t]);return{$$typeof:Xo,type:e,key:i,ref:o,props:a,_owner:qd.current}}function Hw(e,n){return{$$typeof:Xo,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}function Fd(e){return typeof e=="object"&&e!==null&&e.$$typeof===Xo}function qw(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(r){return n[r]})}var lf=/\/+/g;function ou(e,n){return typeof e=="object"&&e!==null&&e.key!=null?qw(""+e.key):n.toString(36)}function $s(e,n,r,t,a){var i=typeof e;(i==="undefined"||i==="boolean")&&(e=null);var o=!1;if(e===null)o=!0;else switch(i){case"string":case"number":o=!0;break;case"object":switch(e.$$typeof){case Xo:case Tw:o=!0}}if(o)return o=e,a=a(o),e=t===""?"."+ou(o,0):t,sf(a)?(r="",e!=null&&(r=e.replace(lf,"$&/")+"/"),$s(a,n,r,"",function(c){return c})):a!=null&&(Fd(a)&&(a=Hw(a,r+(!a.key||o&&o.key===a.key?"":(""+a.key).replace(lf,"$&/")+"/")+e)),n.push(a)),1;if(o=0,t=t===""?".":t+":",sf(e))for(var s=0;s<e.length;s++){i=e[s];var l=t+ou(i,s);o+=$s(i,n,r,l,a)}else if(l=Bw(e),typeof l=="function")for(e=l.call(e),s=0;!(i=e.next()).done;)i=i.value,l=t+ou(i,s++),o+=$s(i,n,r,l,a);else if(i==="object")throw n=String(e),Error("Objects are not valid as a React child (found: "+(n==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return o}function Ss(e,n,r){if(e==null)return e;var t=[],a=0;return $s(e,t,"","",function(i){return n.call(r,i,a++)}),t}function Fw(e){if(e._status===-1){var n=e._result;n=n(),n.then(function(r){(e._status===0||e._status===-1)&&(e._status=1,e._result=r)},function(r){(e._status===0||e._status===-1)&&(e._status=2,e._result=r)}),e._status===-1&&(e._status=0,e._result=n)}if(e._status===1)return e._result.default;throw e._result}var bn={current:null},Gs={transition:null},Jw={ReactCurrentDispatcher:bn,ReactCurrentBatchConfig:Gs,ReactCurrentOwner:qd};function pb(){throw Error("act(...) is not supported in production builds of React.")}se.Children={map:Ss,forEach:function(e,n,r){Ss(e,function(){n.apply(this,arguments)},r)},count:function(e){var n=0;return Ss(e,function(){n++}),n},toArray:function(e){return Ss(e,function(n){return n})||[]},only:function(e){if(!Fd(e))throw Error("React.Children.only expected to receive a single React element child.");return e}};se.Component=xi;se.Fragment=Mw;se.Profiler=Pw;se.PureComponent=Bd;se.StrictMode=Aw;se.Suspense=Lw;se.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Jw;se.act=pb;se.cloneElement=function(e,n,r){if(e==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var t=ib({},e.props),a=e.key,i=e.ref,o=e._owner;if(n!=null){if(n.ref!==void 0&&(i=n.ref,o=qd.current),n.key!==void 0&&(a=""+n.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(l in n)lb.call(n,l)&&!cb.hasOwnProperty(l)&&(t[l]=n[l]===void 0&&s!==void 0?s[l]:n[l])}var l=arguments.length-2;if(l===1)t.children=r;else if(1<l){s=Array(l);for(var c=0;c<l;c++)s[c]=arguments[c+2];t.children=s}return{$$typeof:Xo,type:e.type,key:a,ref:i,props:t,_owner:o}};se.createContext=function(e){return e={$$typeof:Dw,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},e.Provider={$$typeof:Rw,_context:e},e.Consumer=e};se.createElement=ub;se.createFactory=function(e){var n=ub.bind(null,e);return n.type=e,n};se.createRef=function(){return{current:null}};se.forwardRef=function(e){return{$$typeof:Ow,render:e}};se.isValidElement=Fd;se.lazy=function(e){return{$$typeof:Nw,_payload:{_status:-1,_result:e},_init:Fw}};se.memo=function(e,n){return{$$typeof:_w,type:e,compare:n===void 0?null:n}};se.startTransition=function(e){var n=Gs.transition;Gs.transition={};try{e()}finally{Gs.transition=n}};se.unstable_act=pb;se.useCallback=function(e,n){return bn.current.useCallback(e,n)};se.useContext=function(e){return bn.current.useContext(e)};se.useDebugValue=function(){};se.useDeferredValue=function(e){return bn.current.useDeferredValue(e)};se.useEffect=function(e,n){return bn.current.useEffect(e,n)};se.useId=function(){return bn.current.useId()};se.useImperativeHandle=function(e,n,r){return bn.current.useImperativeHandle(e,n,r)};se.useInsertionEffect=function(e,n){return bn.current.useInsertionEffect(e,n)};se.useLayoutEffect=function(e,n){return bn.current.useLayoutEffect(e,n)};se.useMemo=function(e,n){return bn.current.useMemo(e,n)};se.useReducer=function(e,n,r){return bn.current.useReducer(e,n,r)};se.useRef=function(e){return bn.current.useRef(e)};se.useState=function(e){return bn.current.useState(e)};se.useSyncExternalStore=function(e,n,r){return bn.current.useSyncExternalStore(e,n,r)};se.useTransition=function(){return bn.current.useTransition()};se.version="18.3.1";tb.exports=se;var b=tb.exports;const Ye=wi(b),sp=Ew({__proto__:null,default:Ye},[b]);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var zw=b,Uw=Symbol.for("react.element"),Ww=Symbol.for("react.fragment"),Vw=Object.prototype.hasOwnProperty,$w=zw.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,Gw={key:!0,ref:!0,__self:!0,__source:!0};function db(e,n,r){var t,a={},i=null,o=null;r!==void 0&&(i=""+r),n.key!==void 0&&(i=""+n.key),n.ref!==void 0&&(o=n.ref);for(t in n)Vw.call(n,t)&&!Gw.hasOwnProperty(t)&&(a[t]=n[t]);if(e&&e.defaultProps)for(t in n=e.defaultProps,n)a[t]===void 0&&(a[t]=n[t]);return{$$typeof:Uw,type:e,key:i,ref:o,props:a,_owner:$w.current}}oc.Fragment=Ww;oc.jsx=db;oc.jsxs=db;rb.exports=oc;var A=rb.exports;function Kw(e){if(e.sheet)return e.sheet;for(var n=0;n<document.styleSheets.length;n++)if(document.styleSheets[n].ownerNode===e)return document.styleSheets[n]}function Yw(e){var n=document.createElement("style");return n.setAttribute("data-emotion",e.key),e.nonce!==void 0&&n.setAttribute("nonce",e.nonce),n.appendChild(document.createTextNode("")),n.setAttribute("data-s",""),n}var Qw=function(){function e(r){var t=this;this._insertTag=function(a){var i;t.tags.length===0?t.insertionPoint?i=t.insertionPoint.nextSibling:t.prepend?i=t.container.firstChild:i=t.before:i=t.tags[t.tags.length-1].nextSibling,t.container.insertBefore(a,i),t.tags.push(a)},this.isSpeedy=r.speedy===void 0?!0:r.speedy,this.tags=[],this.ctr=0,this.nonce=r.nonce,this.key=r.key,this.container=r.container,this.prepend=r.prepend,this.insertionPoint=r.insertionPoint,this.before=null}var n=e.prototype;return n.hydrate=function(t){t.forEach(this._insertTag)},n.insert=function(t){this.ctr%(this.isSpeedy?65e3:1)===0&&this._insertTag(Yw(this));var a=this.tags[this.tags.length-1];if(this.isSpeedy){var i=Kw(a);try{i.insertRule(t,i.cssRules.length)}catch{}}else a.appendChild(document.createTextNode(t));this.ctr++},n.flush=function(){this.tags.forEach(function(t){return t.parentNode&&t.parentNode.removeChild(t)}),this.tags=[],this.ctr=0},e}(),ln="-ms-",vl="-moz-",ve="-webkit-",mb="comm",Jd="rule",zd="decl",Xw="@import",gb="@keyframes",Zw="@layer",e2=Math.abs,sc=String.fromCharCode,n2=Object.assign;function r2(e,n){return rn(e,0)^45?(((n<<2^rn(e,0))<<2^rn(e,1))<<2^rn(e,2))<<2^rn(e,3):0}function fb(e){return e.trim()}function t2(e,n){return(e=n.exec(e))?e[0]:e}function be(e,n,r){return e.replace(n,r)}function lp(e,n){return e.indexOf(n)}function rn(e,n){return e.charCodeAt(n)|0}function yo(e,n,r){return e.slice(n,r)}function Er(e){return e.length}function Ud(e){return e.length}function ws(e,n){return n.push(e),e}function a2(e,n){return e.map(n).join("")}var lc=1,ui=1,hb=0,Pn=0,Fe=0,ji="";function cc(e,n,r,t,a,i,o){return{value:e,root:n,parent:r,type:t,props:a,children:i,line:lc,column:ui,length:o,return:""}}function Ni(e,n){return n2(cc("",null,null,"",null,null,0),e,{length:-e.length},n)}function i2(){return Fe}function o2(){return Fe=Pn>0?rn(ji,--Pn):0,ui--,Fe===10&&(ui=1,lc--),Fe}function Nn(){return Fe=Pn<hb?rn(ji,Pn++):0,ui++,Fe===10&&(ui=1,lc++),Fe}function Pr(){return rn(ji,Pn)}function Ks(){return Pn}function Zo(e,n){return yo(ji,e,n)}function ko(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function vb(e){return lc=ui=1,hb=Er(ji=e),Pn=0,[]}function bb(e){return ji="",e}function Ys(e){return fb(Zo(Pn-1,cp(e===91?e+2:e===40?e+1:e)))}function s2(e){for(;(Fe=Pr())&&Fe<33;)Nn();return ko(e)>2||ko(Fe)>3?"":" "}function l2(e,n){for(;--n&&Nn()&&!(Fe<48||Fe>102||Fe>57&&Fe<65||Fe>70&&Fe<97););return Zo(e,Ks()+(n<6&&Pr()==32&&Nn()==32))}function cp(e){for(;Nn();)switch(Fe){case e:return Pn;case 34:case 39:e!==34&&e!==39&&cp(Fe);break;case 40:e===41&&cp(e);break;case 92:Nn();break}return Pn}function c2(e,n){for(;Nn()&&e+Fe!==57;)if(e+Fe===84&&Pr()===47)break;return"/*"+Zo(n,Pn-1)+"*"+sc(e===47?e:Nn())}function u2(e){for(;!ko(Pr());)Nn();return Zo(e,Pn)}function p2(e){return bb(Qs("",null,null,null,[""],e=vb(e),0,[0],e))}function Qs(e,n,r,t,a,i,o,s,l){for(var c=0,u=0,p=o,d=0,m=0,g=0,y=1,k=1,f=1,h=0,v="",x=a,I=i,S=t,E=v;k;)switch(g=h,h=Nn()){case 40:if(g!=108&&rn(E,p-1)==58){lp(E+=be(Ys(h),"&","&\f"),"&\f")!=-1&&(f=-1);break}case 34:case 39:case 91:E+=Ys(h);break;case 9:case 10:case 13:case 32:E+=s2(g);break;case 92:E+=l2(Ks()-1,7);continue;case 47:switch(Pr()){case 42:case 47:ws(d2(c2(Nn(),Ks()),n,r),l);break;default:E+="/"}break;case 123*y:s[c++]=Er(E)*f;case 125*y:case 59:case 0:switch(h){case 0:case 125:k=0;case 59+u:f==-1&&(E=be(E,/\f/g,"")),m>0&&Er(E)-p&&ws(m>32?uf(E+";",t,r,p-1):uf(be(E," ","")+";",t,r,p-2),l);break;case 59:E+=";";default:if(ws(S=cf(E,n,r,c,u,a,s,v,x=[],I=[],p),i),h===123)if(u===0)Qs(E,n,S,S,x,i,p,s,I);else switch(d===99&&rn(E,3)===110?100:d){case 100:case 108:case 109:case 115:Qs(e,S,S,t&&ws(cf(e,S,S,0,0,a,s,v,a,x=[],p),I),a,I,p,s,t?x:I);break;default:Qs(E,S,S,S,[""],I,0,s,I)}}c=u=m=0,y=f=1,v=E="",p=o;break;case 58:p=1+Er(E),m=g;default:if(y<1){if(h==123)--y;else if(h==125&&y++==0&&o2()==125)continue}switch(E+=sc(h),h*y){case 38:f=u>0?1:(E+="\f",-1);break;case 44:s[c++]=(Er(E)-1)*f,f=1;break;case 64:Pr()===45&&(E+=Ys(Nn())),d=Pr(),u=p=Er(v=E+=u2(Ks())),h++;break;case 45:g===45&&Er(E)==2&&(y=0)}}return i}function cf(e,n,r,t,a,i,o,s,l,c,u){for(var p=a-1,d=a===0?i:[""],m=Ud(d),g=0,y=0,k=0;g<t;++g)for(var f=0,h=yo(e,p+1,p=e2(y=o[g])),v=e;f<m;++f)(v=fb(y>0?d[f]+" "+h:be(h,/&\f/g,d[f])))&&(l[k++]=v);return cc(e,n,r,a===0?Jd:s,l,c,u)}function d2(e,n,r){return cc(e,n,r,mb,sc(i2()),yo(e,2,-2),0)}function uf(e,n,r,t){return cc(e,n,r,zd,yo(e,0,t),yo(e,t+1,-1),t)}function Za(e,n){for(var r="",t=Ud(e),a=0;a<t;a++)r+=n(e[a],a,e,n)||"";return r}function m2(e,n,r,t){switch(e.type){case Zw:if(e.children.length)break;case Xw:case zd:return e.return=e.return||e.value;case mb:return"";case gb:return e.return=e.value+"{"+Za(e.children,t)+"}";case Jd:e.value=e.props.join(",")}return Er(r=Za(e.children,t))?e.return=e.value+"{"+r+"}":""}function g2(e){var n=Ud(e);return function(r,t,a,i){for(var o="",s=0;s<n;s++)o+=e[s](r,t,a,i)||"";return o}}function f2(e){return function(n){n.root||(n=n.return)&&e(n)}}function h2(e){var n=Object.create(null);return function(r){return n[r]===void 0&&(n[r]=e(r)),n[r]}}var v2=function(n,r,t){for(var a=0,i=0;a=i,i=Pr(),a===38&&i===12&&(r[t]=1),!ko(i);)Nn();return Zo(n,Pn)},b2=function(n,r){var t=-1,a=44;do switch(ko(a)){case 0:a===38&&Pr()===12&&(r[t]=1),n[t]+=v2(Pn-1,r,t);break;case 2:n[t]+=Ys(a);break;case 4:if(a===44){n[++t]=Pr()===58?"&\f":"",r[t]=n[t].length;break}default:n[t]+=sc(a)}while(a=Nn());return n},y2=function(n,r){return bb(b2(vb(n),r))},pf=new WeakMap,k2=function(n){if(!(n.type!=="rule"||!n.parent||n.length<1)){for(var r=n.value,t=n.parent,a=n.column===t.column&&n.line===t.line;t.type!=="rule";)if(t=t.parent,!t)return;if(!(n.props.length===1&&r.charCodeAt(0)!==58&&!pf.get(t))&&!a){pf.set(n,!0);for(var i=[],o=y2(r,i),s=t.props,l=0,c=0;l<o.length;l++)for(var u=0;u<s.length;u++,c++)n.props[c]=i[l]?o[l].replace(/&\f/g,s[u]):s[u]+" "+o[l]}}},S2=function(n){if(n.type==="decl"){var r=n.value;r.charCodeAt(0)===108&&r.charCodeAt(2)===98&&(n.return="",n.value="")}};function yb(e,n){switch(r2(e,n)){case 5103:return ve+"print-"+e+e;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return ve+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return ve+e+vl+e+ln+e+e;case 6828:case 4268:return ve+e+ln+e+e;case 6165:return ve+e+ln+"flex-"+e+e;case 5187:return ve+e+be(e,/(\w+).+(:[^]+)/,ve+"box-$1$2"+ln+"flex-$1$2")+e;case 5443:return ve+e+ln+"flex-item-"+be(e,/flex-|-self/,"")+e;case 4675:return ve+e+ln+"flex-line-pack"+be(e,/align-content|flex-|-self/,"")+e;case 5548:return ve+e+ln+be(e,"shrink","negative")+e;case 5292:return ve+e+ln+be(e,"basis","preferred-size")+e;case 6060:return ve+"box-"+be(e,"-grow","")+ve+e+ln+be(e,"grow","positive")+e;case 4554:return ve+be(e,/([^-])(transform)/g,"$1"+ve+"$2")+e;case 6187:return be(be(be(e,/(zoom-|grab)/,ve+"$1"),/(image-set)/,ve+"$1"),e,"")+e;case 5495:case 3959:return be(e,/(image-set\([^]*)/,ve+"$1$`$1");case 4968:return be(be(e,/(.+:)(flex-)?(.*)/,ve+"box-pack:$3"+ln+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+ve+e+e;case 4095:case 3583:case 4068:case 2532:return be(e,/(.+)-inline(.+)/,ve+"$1$2")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(Er(e)-1-n>6)switch(rn(e,n+1)){case 109:if(rn(e,n+4)!==45)break;case 102:return be(e,/(.+:)(.+)-([^]+)/,"$1"+ve+"$2-$3$1"+vl+(rn(e,n+3)==108?"$3":"$2-$3"))+e;case 115:return~lp(e,"stretch")?yb(be(e,"stretch","fill-available"),n)+e:e}break;case 4949:if(rn(e,n+1)!==115)break;case 6444:switch(rn(e,Er(e)-3-(~lp(e,"!important")&&10))){case 107:return be(e,":",":"+ve)+e;case 101:return be(e,/(.+:)([^;!]+)(;|!.+)?/,"$1"+ve+(rn(e,14)===45?"inline-":"")+"box$3$1"+ve+"$2$3$1"+ln+"$2box$3")+e}break;case 5936:switch(rn(e,n+11)){case 114:return ve+e+ln+be(e,/[svh]\w+-[tblr]{2}/,"tb")+e;case 108:return ve+e+ln+be(e,/[svh]\w+-[tblr]{2}/,"tb-rl")+e;case 45:return ve+e+ln+be(e,/[svh]\w+-[tblr]{2}/,"lr")+e}return ve+e+ln+e+e}return e}var w2=function(n,r,t,a){if(n.length>-1&&!n.return)switch(n.type){case zd:n.return=yb(n.value,n.length);break;case gb:return Za([Ni(n,{value:be(n.value,"@","@"+ve)})],a);case Jd:if(n.length)return a2(n.props,function(i){switch(t2(i,/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":return Za([Ni(n,{props:[be(i,/:(read-\w+)/,":"+vl+"$1")]})],a);case"::placeholder":return Za([Ni(n,{props:[be(i,/:(plac\w+)/,":"+ve+"input-$1")]}),Ni(n,{props:[be(i,/:(plac\w+)/,":"+vl+"$1")]}),Ni(n,{props:[be(i,/:(plac\w+)/,ln+"input-$1")]})],a)}return""})}},x2=[w2],j2=function(n){var r=n.key;if(r==="css"){var t=document.querySelectorAll("style[data-emotion]:not([data-s])");Array.prototype.forEach.call(t,function(y){var k=y.getAttribute("data-emotion");k.indexOf(" ")!==-1&&(document.head.appendChild(y),y.setAttribute("data-s",""))})}var a=n.stylisPlugins||x2,i={},o,s=[];o=n.container||document.head,Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="'+r+' "]'),function(y){for(var k=y.getAttribute("data-emotion").split(" "),f=1;f<k.length;f++)i[k[f]]=!0;s.push(y)});var l,c=[k2,S2];{var u,p=[m2,f2(function(y){u.insert(y)})],d=g2(c.concat(a,p)),m=function(k){return Za(p2(k),d)};l=function(k,f,h,v){u=h,m(k?k+"{"+f.styles+"}":f.styles),v&&(g.inserted[f.name]=!0)}}var g={key:r,sheet:new Qw({key:r,container:o,nonce:n.nonce,speedy:n.speedy,prepend:n.prepend,insertionPoint:n.insertionPoint}),nonce:n.nonce,inserted:i,registered:{},insert:l};return g.sheet.hydrate(s),g};function up(){return up=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)({}).hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},up.apply(null,arguments)}var kb={exports:{}},ke={};/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ze=typeof Symbol=="function"&&Symbol.for,Wd=Ze?Symbol.for("react.element"):60103,Vd=Ze?Symbol.for("react.portal"):60106,uc=Ze?Symbol.for("react.fragment"):60107,pc=Ze?Symbol.for("react.strict_mode"):60108,dc=Ze?Symbol.for("react.profiler"):60114,mc=Ze?Symbol.for("react.provider"):60109,gc=Ze?Symbol.for("react.context"):60110,$d=Ze?Symbol.for("react.async_mode"):60111,fc=Ze?Symbol.for("react.concurrent_mode"):60111,hc=Ze?Symbol.for("react.forward_ref"):60112,vc=Ze?Symbol.for("react.suspense"):60113,C2=Ze?Symbol.for("react.suspense_list"):60120,bc=Ze?Symbol.for("react.memo"):60115,yc=Ze?Symbol.for("react.lazy"):60116,I2=Ze?Symbol.for("react.block"):60121,E2=Ze?Symbol.for("react.fundamental"):60117,T2=Ze?Symbol.for("react.responder"):60118,M2=Ze?Symbol.for("react.scope"):60119;function Fn(e){if(typeof e=="object"&&e!==null){var n=e.$$typeof;switch(n){case Wd:switch(e=e.type,e){case $d:case fc:case uc:case dc:case pc:case vc:return e;default:switch(e=e&&e.$$typeof,e){case gc:case hc:case yc:case bc:case mc:return e;default:return n}}case Vd:return n}}}function Sb(e){return Fn(e)===fc}ke.AsyncMode=$d;ke.ConcurrentMode=fc;ke.ContextConsumer=gc;ke.ContextProvider=mc;ke.Element=Wd;ke.ForwardRef=hc;ke.Fragment=uc;ke.Lazy=yc;ke.Memo=bc;ke.Portal=Vd;ke.Profiler=dc;ke.StrictMode=pc;ke.Suspense=vc;ke.isAsyncMode=function(e){return Sb(e)||Fn(e)===$d};ke.isConcurrentMode=Sb;ke.isContextConsumer=function(e){return Fn(e)===gc};ke.isContextProvider=function(e){return Fn(e)===mc};ke.isElement=function(e){return typeof e=="object"&&e!==null&&e.$$typeof===Wd};ke.isForwardRef=function(e){return Fn(e)===hc};ke.isFragment=function(e){return Fn(e)===uc};ke.isLazy=function(e){return Fn(e)===yc};ke.isMemo=function(e){return Fn(e)===bc};ke.isPortal=function(e){return Fn(e)===Vd};ke.isProfiler=function(e){return Fn(e)===dc};ke.isStrictMode=function(e){return Fn(e)===pc};ke.isSuspense=function(e){return Fn(e)===vc};ke.isValidElementType=function(e){return typeof e=="string"||typeof e=="function"||e===uc||e===fc||e===dc||e===pc||e===vc||e===C2||typeof e=="object"&&e!==null&&(e.$$typeof===yc||e.$$typeof===bc||e.$$typeof===mc||e.$$typeof===gc||e.$$typeof===hc||e.$$typeof===E2||e.$$typeof===T2||e.$$typeof===M2||e.$$typeof===I2)};ke.typeOf=Fn;kb.exports=ke;var A2=kb.exports,wb=A2,P2={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},R2={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},xb={};xb[wb.ForwardRef]=P2;xb[wb.Memo]=R2;var D2=!0;function O2(e,n,r){var t="";return r.split(" ").forEach(function(a){e[a]!==void 0?n.push(e[a]+";"):t+=a+" "}),t}var jb=function(n,r,t){var a=n.key+"-"+r.name;(t===!1||D2===!1)&&n.registered[a]===void 0&&(n.registered[a]=r.styles)},L2=function(n,r,t){jb(n,r,t);var a=n.key+"-"+r.name;if(n.inserted[r.name]===void 0){var i=r;do n.insert(r===i?"."+a:"",i,n.sheet,!0),i=i.next;while(i!==void 0)}};function _2(e){for(var n=0,r,t=0,a=e.length;a>=4;++t,a-=4)r=e.charCodeAt(t)&255|(e.charCodeAt(++t)&255)<<8|(e.charCodeAt(++t)&255)<<16|(e.charCodeAt(++t)&255)<<24,r=(r&65535)*1540483477+((r>>>16)*59797<<16),r^=r>>>24,n=(r&65535)*1540483477+((r>>>16)*59797<<16)^(n&65535)*1540483477+((n>>>16)*59797<<16);switch(a){case 3:n^=(e.charCodeAt(t+2)&255)<<16;case 2:n^=(e.charCodeAt(t+1)&255)<<8;case 1:n^=e.charCodeAt(t)&255,n=(n&65535)*1540483477+((n>>>16)*59797<<16)}return n^=n>>>13,n=(n&65535)*1540483477+((n>>>16)*59797<<16),((n^n>>>15)>>>0).toString(36)}var N2={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},B2=/[A-Z]|^ms/g,H2=/_EMO_([^_]+?)_([^]*?)_EMO_/g,Cb=function(n){return n.charCodeAt(1)===45},df=function(n){return n!=null&&typeof n!="boolean"},su=h2(function(e){return Cb(e)?e:e.replace(B2,"-$&").toLowerCase()}),mf=function(n,r){switch(n){case"animation":case"animationName":if(typeof r=="string")return r.replace(H2,function(t,a,i){return Tr={name:a,styles:i,next:Tr},a})}return N2[n]!==1&&!Cb(n)&&typeof r=="number"&&r!==0?r+"px":r};function So(e,n,r){if(r==null)return"";if(r.__emotion_styles!==void 0)return r;switch(typeof r){case"boolean":return"";case"object":{if(r.anim===1)return Tr={name:r.name,styles:r.styles,next:Tr},r.name;if(r.styles!==void 0){var t=r.next;if(t!==void 0)for(;t!==void 0;)Tr={name:t.name,styles:t.styles,next:Tr},t=t.next;var a=r.styles+";";return a}return q2(e,n,r)}case"function":{if(e!==void 0){var i=Tr,o=r(e);return Tr=i,So(e,n,o)}break}}return r}function q2(e,n,r){var t="";if(Array.isArray(r))for(var a=0;a<r.length;a++)t+=So(e,n,r[a])+";";else for(var i in r){var o=r[i];if(typeof o!="object")df(o)&&(t+=su(i)+":"+mf(i,o)+";");else if(Array.isArray(o)&&typeof o[0]=="string"&&n==null)for(var s=0;s<o.length;s++)df(o[s])&&(t+=su(i)+":"+mf(i,o[s])+";");else{var l=So(e,n,o);switch(i){case"animation":case"animationName":{t+=su(i)+":"+l+";";break}default:t+=i+"{"+l+"}"}}}return t}var gf=/label:\s*([^\s;\n{]+)\s*(;|$)/g,Tr,Ib=function(n,r,t){if(n.length===1&&typeof n[0]=="object"&&n[0]!==null&&n[0].styles!==void 0)return n[0];var a=!0,i="";Tr=void 0;var o=n[0];o==null||o.raw===void 0?(a=!1,i+=So(t,r,o)):i+=o[0];for(var s=1;s<n.length;s++)i+=So(t,r,n[s]),a&&(i+=o[s]);gf.lastIndex=0;for(var l="",c;(c=gf.exec(i))!==null;)l+="-"+c[1];var u=_2(i)+l;return{name:u,styles:i,next:Tr}},F2=function(n){return n()},J2=sp.useInsertionEffect?sp.useInsertionEffect:!1,z2=J2||F2,kc={}.hasOwnProperty,Eb=b.createContext(typeof HTMLElement<"u"?j2({key:"css"}):null);Eb.Provider;var U2=function(n){return b.forwardRef(function(r,t){var a=b.useContext(Eb);return n(r,a,t)})},W2=b.createContext({}),pp="__EMOTION_TYPE_PLEASE_DO_NOT_USE__",Tb=function(n,r){var t={};for(var a in r)kc.call(r,a)&&(t[a]=r[a]);return t[pp]=n,t},V2=function(n){var r=n.cache,t=n.serialized,a=n.isStringTag;return jb(r,t,a),z2(function(){return L2(r,t,a)}),null},$2=U2(function(e,n,r){var t=e.css;typeof t=="string"&&n.registered[t]!==void 0&&(t=n.registered[t]);var a=e[pp],i=[t],o="";typeof e.className=="string"?o=O2(n.registered,i,e.className):e.className!=null&&(o=e.className+" ");var s=Ib(i,void 0,b.useContext(W2));o+=n.key+"-"+s.name;var l={};for(var c in e)kc.call(e,c)&&c!=="css"&&c!==pp&&(l[c]=e[c]);return l.ref=r,l.className=o,b.createElement(b.Fragment,null,b.createElement(V2,{cache:n,serialized:s,isStringTag:typeof a=="string"}),b.createElement(a,l))}),Mb=$2,G2=A.Fragment;function M(e,n,r){return kc.call(n,"css")?A.jsx(Mb,Tb(e,n),r):A.jsx(e,n,r)}function ae(e,n,r){return kc.call(n,"css")?A.jsxs(Mb,Tb(e,n),r):A.jsxs(e,n,r)}var dp={},Ab={exports:{}},Jn={},Pb={exports:{}},Rb={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(e){function n(D,z){var w=D.length;D.push(z);e:for(;0<w;){var X=w-1>>>1,te=D[X];if(0<a(te,z))D[X]=z,D[w]=te,w=X;else break e}}function r(D){return D.length===0?null:D[0]}function t(D){if(D.length===0)return null;var z=D[0],w=D.pop();if(w!==z){D[0]=w;e:for(var X=0,te=D.length,j=te>>>1;X<j;){var ge=2*(X+1)-1,ce=D[ge],ie=ge+1,en=D[ie];if(0>a(ce,w))ie<te&&0>a(en,ce)?(D[X]=en,D[ie]=w,X=ie):(D[X]=ce,D[ge]=w,X=ge);else if(ie<te&&0>a(en,w))D[X]=en,D[ie]=w,X=ie;else break e}}return z}function a(D,z){var w=D.sortIndex-z.sortIndex;return w!==0?w:D.id-z.id}if(typeof performance=="object"&&typeof performance.now=="function"){var i=performance;e.unstable_now=function(){return i.now()}}else{var o=Date,s=o.now();e.unstable_now=function(){return o.now()-s}}var l=[],c=[],u=1,p=null,d=3,m=!1,g=!1,y=!1,k=typeof setTimeout=="function"?setTimeout:null,f=typeof clearTimeout=="function"?clearTimeout:null,h=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function v(D){for(var z=r(c);z!==null;){if(z.callback===null)t(c);else if(z.startTime<=D)t(c),z.sortIndex=z.expirationTime,n(l,z);else break;z=r(c)}}function x(D){if(y=!1,v(D),!g)if(r(l)!==null)g=!0,Q(I);else{var z=r(c);z!==null&&ee(x,z.startTime-D)}}function I(D,z){g=!1,y&&(y=!1,f(T),T=-1),m=!0;var w=d;try{for(v(z),p=r(l);p!==null&&(!(p.expirationTime>z)||D&&!R());){var X=p.callback;if(typeof X=="function"){p.callback=null,d=p.priorityLevel;var te=X(p.expirationTime<=z);z=e.unstable_now(),typeof te=="function"?p.callback=te:p===r(l)&&t(l),v(z)}else t(l);p=r(l)}if(p!==null)var j=!0;else{var ge=r(c);ge!==null&&ee(x,ge.startTime-z),j=!1}return j}finally{p=null,d=w,m=!1}}var S=!1,E=null,T=-1,B=5,C=-1;function R(){return!(e.unstable_now()-C<B)}function O(){if(E!==null){var D=e.unstable_now();C=D;var z=!0;try{z=E(!0,D)}finally{z?q():(S=!1,E=null)}}else S=!1}var q;if(typeof h=="function")q=function(){h(O)};else if(typeof MessageChannel<"u"){var $=new MessageChannel,J=$.port2;$.port1.onmessage=O,q=function(){J.postMessage(null)}}else q=function(){k(O,0)};function Q(D){E=D,S||(S=!0,q())}function ee(D,z){T=k(function(){D(e.unstable_now())},z)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(D){D.callback=null},e.unstable_continueExecution=function(){g||m||(g=!0,Q(I))},e.unstable_forceFrameRate=function(D){0>D||125<D?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):B=0<D?Math.floor(1e3/D):5},e.unstable_getCurrentPriorityLevel=function(){return d},e.unstable_getFirstCallbackNode=function(){return r(l)},e.unstable_next=function(D){switch(d){case 1:case 2:case 3:var z=3;break;default:z=d}var w=d;d=z;try{return D()}finally{d=w}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(D,z){switch(D){case 1:case 2:case 3:case 4:case 5:break;default:D=3}var w=d;d=D;try{return z()}finally{d=w}},e.unstable_scheduleCallback=function(D,z,w){var X=e.unstable_now();switch(typeof w=="object"&&w!==null?(w=w.delay,w=typeof w=="number"&&0<w?X+w:X):w=X,D){case 1:var te=-1;break;case 2:te=250;break;case 5:te=1073741823;break;case 4:te=1e4;break;default:te=5e3}return te=w+te,D={id:u++,callback:z,priorityLevel:D,startTime:w,expirationTime:te,sortIndex:-1},w>X?(D.sortIndex=w,n(c,D),r(l)===null&&D===r(c)&&(y?(f(T),T=-1):y=!0,ee(x,w-X))):(D.sortIndex=te,n(l,D),g||m||(g=!0,Q(I))),D},e.unstable_shouldYield=R,e.unstable_wrapCallback=function(D){var z=d;return function(){var w=d;d=z;try{return D.apply(this,arguments)}finally{d=w}}}})(Rb);Pb.exports=Rb;var K2=Pb.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Y2=b,Hn=K2;function L(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)n+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var Db=new Set,wo={};function xa(e,n){pi(e,n),pi(e+"Capture",n)}function pi(e,n){for(wo[e]=n,e=0;e<n.length;e++)Db.add(n[e])}var ot=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),mp=Object.prototype.hasOwnProperty,Q2=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ff={},hf={};function X2(e){return mp.call(hf,e)?!0:mp.call(ff,e)?!1:Q2.test(e)?hf[e]=!0:(ff[e]=!0,!1)}function Z2(e,n,r,t){if(r!==null&&r.type===0)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return t?!1:r!==null?!r.acceptsBooleans:(e=e.toLowerCase().slice(0,5),e!=="data-"&&e!=="aria-");default:return!1}}function ex(e,n,r,t){if(n===null||typeof n>"u"||Z2(e,n,r,t))return!0;if(t)return!1;if(r!==null)switch(r.type){case 3:return!n;case 4:return n===!1;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}function yn(e,n,r,t,a,i,o){this.acceptsBooleans=n===2||n===3||n===4,this.attributeName=t,this.attributeNamespace=a,this.mustUseProperty=r,this.propertyName=e,this.type=n,this.sanitizeURL=i,this.removeEmptyString=o}var an={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){an[e]=new yn(e,0,!1,e,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var n=e[0];an[n]=new yn(n,1,!1,e[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(e){an[e]=new yn(e,2,!1,e.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){an[e]=new yn(e,2,!1,e,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){an[e]=new yn(e,3,!1,e.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(e){an[e]=new yn(e,3,!0,e,null,!1,!1)});["capture","download"].forEach(function(e){an[e]=new yn(e,4,!1,e,null,!1,!1)});["cols","rows","size","span"].forEach(function(e){an[e]=new yn(e,6,!1,e,null,!1,!1)});["rowSpan","start"].forEach(function(e){an[e]=new yn(e,5,!1,e.toLowerCase(),null,!1,!1)});var Gd=/[\-:]([a-z])/g;function Kd(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var n=e.replace(Gd,Kd);an[n]=new yn(n,1,!1,e,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var n=e.replace(Gd,Kd);an[n]=new yn(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(e){var n=e.replace(Gd,Kd);an[n]=new yn(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(e){an[e]=new yn(e,1,!1,e.toLowerCase(),null,!1,!1)});an.xlinkHref=new yn("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(e){an[e]=new yn(e,1,!1,e.toLowerCase(),null,!0,!0)});function Yd(e,n,r,t){var a=an.hasOwnProperty(n)?an[n]:null;(a!==null?a.type!==0:t||!(2<n.length)||n[0]!=="o"&&n[0]!=="O"||n[1]!=="n"&&n[1]!=="N")&&(ex(n,r,a,t)&&(r=null),t||a===null?X2(n)&&(r===null?e.removeAttribute(n):e.setAttribute(n,""+r)):a.mustUseProperty?e[a.propertyName]=r===null?a.type===3?!1:"":r:(n=a.attributeName,t=a.attributeNamespace,r===null?e.removeAttribute(n):(a=a.type,r=a===3||a===4&&r===!0?"":""+r,t?e.setAttributeNS(t,n,r):e.setAttribute(n,r))))}var mt=Y2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,xs=Symbol.for("react.element"),qa=Symbol.for("react.portal"),Fa=Symbol.for("react.fragment"),Qd=Symbol.for("react.strict_mode"),gp=Symbol.for("react.profiler"),Ob=Symbol.for("react.provider"),Lb=Symbol.for("react.context"),Xd=Symbol.for("react.forward_ref"),fp=Symbol.for("react.suspense"),hp=Symbol.for("react.suspense_list"),Zd=Symbol.for("react.memo"),xt=Symbol.for("react.lazy"),_b=Symbol.for("react.offscreen"),vf=Symbol.iterator;function Bi(e){return e===null||typeof e!="object"?null:(e=vf&&e[vf]||e["@@iterator"],typeof e=="function"?e:null)}var Le=Object.assign,lu;function Xi(e){if(lu===void 0)try{throw Error()}catch(r){var n=r.stack.trim().match(/\n( *(at )?)/);lu=n&&n[1]||""}return`
`+lu+e}var cu=!1;function uu(e,n){if(!e||cu)return"";cu=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(n,[])}catch(c){var t=c}Reflect.construct(e,[],n)}else{try{n.call()}catch(c){t=c}e.call(n.prototype)}else{try{throw Error()}catch(c){t=c}e()}}catch(c){if(c&&t&&typeof c.stack=="string"){for(var a=c.stack.split(`
`),i=t.stack.split(`
`),o=a.length-1,s=i.length-1;1<=o&&0<=s&&a[o]!==i[s];)s--;for(;1<=o&&0<=s;o--,s--)if(a[o]!==i[s]){if(o!==1||s!==1)do if(o--,s--,0>s||a[o]!==i[s]){var l=`
`+a[o].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}while(1<=o&&0<=s);break}}}finally{cu=!1,Error.prepareStackTrace=r}return(e=e?e.displayName||e.name:"")?Xi(e):""}function nx(e){switch(e.tag){case 5:return Xi(e.type);case 16:return Xi("Lazy");case 13:return Xi("Suspense");case 19:return Xi("SuspenseList");case 0:case 2:case 15:return e=uu(e.type,!1),e;case 11:return e=uu(e.type.render,!1),e;case 1:return e=uu(e.type,!0),e;default:return""}}function vp(e){if(e==null)return null;if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e;switch(e){case Fa:return"Fragment";case qa:return"Portal";case gp:return"Profiler";case Qd:return"StrictMode";case fp:return"Suspense";case hp:return"SuspenseList"}if(typeof e=="object")switch(e.$$typeof){case Lb:return(e.displayName||"Context")+".Consumer";case Ob:return(e._context.displayName||"Context")+".Provider";case Xd:var n=e.render;return e=e.displayName,e||(e=n.displayName||n.name||"",e=e!==""?"ForwardRef("+e+")":"ForwardRef"),e;case Zd:return n=e.displayName||null,n!==null?n:vp(e.type)||"Memo";case xt:n=e._payload,e=e._init;try{return vp(e(n))}catch{}}return null}function rx(e){var n=e.type;switch(e.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=n.render,e=e.displayName||e.name||"",n.displayName||(e!==""?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return vp(n);case 8:return n===Qd?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof n=="function")return n.displayName||n.name||null;if(typeof n=="string")return n}return null}function Ut(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":return e;case"object":return e;default:return""}}function Nb(e){var n=e.type;return(e=e.nodeName)&&e.toLowerCase()==="input"&&(n==="checkbox"||n==="radio")}function tx(e){var n=Nb(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),t=""+e[n];if(!e.hasOwnProperty(n)&&typeof r<"u"&&typeof r.get=="function"&&typeof r.set=="function"){var a=r.get,i=r.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return a.call(this)},set:function(o){t=""+o,i.call(this,o)}}),Object.defineProperty(e,n,{enumerable:r.enumerable}),{getValue:function(){return t},setValue:function(o){t=""+o},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}function js(e){e._valueTracker||(e._valueTracker=tx(e))}function Bb(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var r=n.getValue(),t="";return e&&(t=Nb(e)?e.checked?"true":"false":e.value),e=t,e!==r?(n.setValue(e),!0):!1}function bl(e){if(e=e||(typeof document<"u"?document:void 0),typeof e>"u")return null;try{return e.activeElement||e.body}catch{return e.body}}function bp(e,n){var r=n.checked;return Le({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:r??e._wrapperState.initialChecked})}function bf(e,n){var r=n.defaultValue==null?"":n.defaultValue,t=n.checked!=null?n.checked:n.defaultChecked;r=Ut(n.value!=null?n.value:r),e._wrapperState={initialChecked:t,initialValue:r,controlled:n.type==="checkbox"||n.type==="radio"?n.checked!=null:n.value!=null}}function Hb(e,n){n=n.checked,n!=null&&Yd(e,"checked",n,!1)}function yp(e,n){Hb(e,n);var r=Ut(n.value),t=n.type;if(r!=null)t==="number"?(r===0&&e.value===""||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if(t==="submit"||t==="reset"){e.removeAttribute("value");return}n.hasOwnProperty("value")?kp(e,n.type,r):n.hasOwnProperty("defaultValue")&&kp(e,n.type,Ut(n.defaultValue)),n.checked==null&&n.defaultChecked!=null&&(e.defaultChecked=!!n.defaultChecked)}function yf(e,n,r){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var t=n.type;if(!(t!=="submit"&&t!=="reset"||n.value!==void 0&&n.value!==null))return;n=""+e._wrapperState.initialValue,r||n===e.value||(e.value=n),e.defaultValue=n}r=e.name,r!==""&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,r!==""&&(e.name=r)}function kp(e,n,r){(n!=="number"||bl(e.ownerDocument)!==e)&&(r==null?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}var Zi=Array.isArray;function ei(e,n,r,t){if(e=e.options,n){n={};for(var a=0;a<r.length;a++)n["$"+r[a]]=!0;for(r=0;r<e.length;r++)a=n.hasOwnProperty("$"+e[r].value),e[r].selected!==a&&(e[r].selected=a),a&&t&&(e[r].defaultSelected=!0)}else{for(r=""+Ut(r),n=null,a=0;a<e.length;a++){if(e[a].value===r){e[a].selected=!0,t&&(e[a].defaultSelected=!0);return}n!==null||e[a].disabled||(n=e[a])}n!==null&&(n.selected=!0)}}function Sp(e,n){if(n.dangerouslySetInnerHTML!=null)throw Error(L(91));return Le({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function kf(e,n){var r=n.value;if(r==null){if(r=n.children,n=n.defaultValue,r!=null){if(n!=null)throw Error(L(92));if(Zi(r)){if(1<r.length)throw Error(L(93));r=r[0]}n=r}n==null&&(n=""),r=n}e._wrapperState={initialValue:Ut(r)}}function qb(e,n){var r=Ut(n.value),t=Ut(n.defaultValue);r!=null&&(r=""+r,r!==e.value&&(e.value=r),n.defaultValue==null&&e.defaultValue!==r&&(e.defaultValue=r)),t!=null&&(e.defaultValue=""+t)}function Sf(e){var n=e.textContent;n===e._wrapperState.initialValue&&n!==""&&n!==null&&(e.value=n)}function Fb(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function wp(e,n){return e==null||e==="http://www.w3.org/1999/xhtml"?Fb(n):e==="http://www.w3.org/2000/svg"&&n==="foreignObject"?"http://www.w3.org/1999/xhtml":e}var Cs,Jb=function(e){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(n,r,t,a){MSApp.execUnsafeLocalFunction(function(){return e(n,r,t,a)})}:e}(function(e,n){if(e.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in e)e.innerHTML=n;else{for(Cs=Cs||document.createElement("div"),Cs.innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=Cs.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}});function xo(e,n){if(n){var r=e.firstChild;if(r&&r===e.lastChild&&r.nodeType===3){r.nodeValue=n;return}}e.textContent=n}var to={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ax=["Webkit","ms","Moz","O"];Object.keys(to).forEach(function(e){ax.forEach(function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),to[n]=to[e]})});function zb(e,n,r){return n==null||typeof n=="boolean"||n===""?"":r||typeof n!="number"||n===0||to.hasOwnProperty(e)&&to[e]?(""+n).trim():n+"px"}function Ub(e,n){e=e.style;for(var r in n)if(n.hasOwnProperty(r)){var t=r.indexOf("--")===0,a=zb(r,n[r],t);r==="float"&&(r="cssFloat"),t?e.setProperty(r,a):e[r]=a}}var ix=Le({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function xp(e,n){if(n){if(ix[e]&&(n.children!=null||n.dangerouslySetInnerHTML!=null))throw Error(L(137,e));if(n.dangerouslySetInnerHTML!=null){if(n.children!=null)throw Error(L(60));if(typeof n.dangerouslySetInnerHTML!="object"||!("__html"in n.dangerouslySetInnerHTML))throw Error(L(61))}if(n.style!=null&&typeof n.style!="object")throw Error(L(62))}}function jp(e,n){if(e.indexOf("-")===-1)return typeof n.is=="string";switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Cp=null;function em(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var Ip=null,ni=null,ri=null;function wf(e){if(e=rs(e)){if(typeof Ip!="function")throw Error(L(280));var n=e.stateNode;n&&(n=Cc(n),Ip(e.stateNode,e.type,n))}}function Wb(e){ni?ri?ri.push(e):ri=[e]:ni=e}function Vb(){if(ni){var e=ni,n=ri;if(ri=ni=null,wf(e),n)for(e=0;e<n.length;e++)wf(n[e])}}function $b(e,n){return e(n)}function Gb(){}var pu=!1;function Kb(e,n,r){if(pu)return e(n,r);pu=!0;try{return $b(e,n,r)}finally{pu=!1,(ni!==null||ri!==null)&&(Gb(),Vb())}}function jo(e,n){var r=e.stateNode;if(r===null)return null;var t=Cc(r);if(t===null)return null;r=t[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(t=!t.disabled)||(e=e.type,t=!(e==="button"||e==="input"||e==="select"||e==="textarea")),e=!t;break e;default:e=!1}if(e)return null;if(r&&typeof r!="function")throw Error(L(231,n,typeof r));return r}var Ep=!1;if(ot)try{var Hi={};Object.defineProperty(Hi,"passive",{get:function(){Ep=!0}}),window.addEventListener("test",Hi,Hi),window.removeEventListener("test",Hi,Hi)}catch{Ep=!1}function ox(e,n,r,t,a,i,o,s,l){var c=Array.prototype.slice.call(arguments,3);try{n.apply(r,c)}catch(u){this.onError(u)}}var ao=!1,yl=null,kl=!1,Tp=null,sx={onError:function(e){ao=!0,yl=e}};function lx(e,n,r,t,a,i,o,s,l){ao=!1,yl=null,ox.apply(sx,arguments)}function cx(e,n,r,t,a,i,o,s,l){if(lx.apply(this,arguments),ao){if(ao){var c=yl;ao=!1,yl=null}else throw Error(L(198));kl||(kl=!0,Tp=c)}}function ja(e){var n=e,r=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do n=e,n.flags&4098&&(r=n.return),e=n.return;while(e)}return n.tag===3?r:null}function Yb(e){if(e.tag===13){var n=e.memoizedState;if(n===null&&(e=e.alternate,e!==null&&(n=e.memoizedState)),n!==null)return n.dehydrated}return null}function xf(e){if(ja(e)!==e)throw Error(L(188))}function ux(e){var n=e.alternate;if(!n){if(n=ja(e),n===null)throw Error(L(188));return n!==e?null:e}for(var r=e,t=n;;){var a=r.return;if(a===null)break;var i=a.alternate;if(i===null){if(t=a.return,t!==null){r=t;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===r)return xf(a),e;if(i===t)return xf(a),n;i=i.sibling}throw Error(L(188))}if(r.return!==t.return)r=a,t=i;else{for(var o=!1,s=a.child;s;){if(s===r){o=!0,r=a,t=i;break}if(s===t){o=!0,t=a,r=i;break}s=s.sibling}if(!o){for(s=i.child;s;){if(s===r){o=!0,r=i,t=a;break}if(s===t){o=!0,t=i,r=a;break}s=s.sibling}if(!o)throw Error(L(189))}}if(r.alternate!==t)throw Error(L(190))}if(r.tag!==3)throw Error(L(188));return r.stateNode.current===r?e:n}function Qb(e){return e=ux(e),e!==null?Xb(e):null}function Xb(e){if(e.tag===5||e.tag===6)return e;for(e=e.child;e!==null;){var n=Xb(e);if(n!==null)return n;e=e.sibling}return null}var Zb=Hn.unstable_scheduleCallback,jf=Hn.unstable_cancelCallback,px=Hn.unstable_shouldYield,dx=Hn.unstable_requestPaint,He=Hn.unstable_now,mx=Hn.unstable_getCurrentPriorityLevel,nm=Hn.unstable_ImmediatePriority,ey=Hn.unstable_UserBlockingPriority,Sl=Hn.unstable_NormalPriority,gx=Hn.unstable_LowPriority,ny=Hn.unstable_IdlePriority,Sc=null,Rr=null;function fx(e){if(Rr&&typeof Rr.onCommitFiberRoot=="function")try{Rr.onCommitFiberRoot(Sc,e,void 0,(e.current.flags&128)===128)}catch{}}var mr=Math.clz32?Math.clz32:bx,hx=Math.log,vx=Math.LN2;function bx(e){return e>>>=0,e===0?32:31-(hx(e)/vx|0)|0}var Is=64,Es=4194304;function eo(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return e&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function wl(e,n){var r=e.pendingLanes;if(r===0)return 0;var t=0,a=e.suspendedLanes,i=e.pingedLanes,o=r&268435455;if(o!==0){var s=o&~a;s!==0?t=eo(s):(i&=o,i!==0&&(t=eo(i)))}else o=r&~a,o!==0?t=eo(o):i!==0&&(t=eo(i));if(t===0)return 0;if(n!==0&&n!==t&&!(n&a)&&(a=t&-t,i=n&-n,a>=i||a===16&&(i&4194240)!==0))return n;if(t&4&&(t|=r&16),n=e.entangledLanes,n!==0)for(e=e.entanglements,n&=t;0<n;)r=31-mr(n),a=1<<r,t|=e[r],n&=~a;return t}function yx(e,n){switch(e){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function kx(e,n){for(var r=e.suspendedLanes,t=e.pingedLanes,a=e.expirationTimes,i=e.pendingLanes;0<i;){var o=31-mr(i),s=1<<o,l=a[o];l===-1?(!(s&r)||s&t)&&(a[o]=yx(s,n)):l<=n&&(e.expiredLanes|=s),i&=~s}}function Mp(e){return e=e.pendingLanes&-1073741825,e!==0?e:e&1073741824?1073741824:0}function ry(){var e=Is;return Is<<=1,!(Is&4194240)&&(Is=64),e}function du(e){for(var n=[],r=0;31>r;r++)n.push(e);return n}function es(e,n,r){e.pendingLanes|=n,n!==536870912&&(e.suspendedLanes=0,e.pingedLanes=0),e=e.eventTimes,n=31-mr(n),e[n]=r}function Sx(e,n){var r=e.pendingLanes&~n;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=n,e.mutableReadLanes&=n,e.entangledLanes&=n,n=e.entanglements;var t=e.eventTimes;for(e=e.expirationTimes;0<r;){var a=31-mr(r),i=1<<a;n[a]=0,t[a]=-1,e[a]=-1,r&=~i}}function rm(e,n){var r=e.entangledLanes|=n;for(e=e.entanglements;r;){var t=31-mr(r),a=1<<t;a&n|e[t]&n&&(e[t]|=n),r&=~a}}var ye=0;function ty(e){return e&=-e,1<e?4<e?e&268435455?16:536870912:4:1}var ay,tm,iy,oy,sy,Ap=!1,Ts=[],Dt=null,Ot=null,Lt=null,Co=new Map,Io=new Map,It=[],wx="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Cf(e,n){switch(e){case"focusin":case"focusout":Dt=null;break;case"dragenter":case"dragleave":Ot=null;break;case"mouseover":case"mouseout":Lt=null;break;case"pointerover":case"pointerout":Co.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":Io.delete(n.pointerId)}}function qi(e,n,r,t,a,i){return e===null||e.nativeEvent!==i?(e={blockedOn:n,domEventName:r,eventSystemFlags:t,nativeEvent:i,targetContainers:[a]},n!==null&&(n=rs(n),n!==null&&tm(n)),e):(e.eventSystemFlags|=t,n=e.targetContainers,a!==null&&n.indexOf(a)===-1&&n.push(a),e)}function xx(e,n,r,t,a){switch(n){case"focusin":return Dt=qi(Dt,e,n,r,t,a),!0;case"dragenter":return Ot=qi(Ot,e,n,r,t,a),!0;case"mouseover":return Lt=qi(Lt,e,n,r,t,a),!0;case"pointerover":var i=a.pointerId;return Co.set(i,qi(Co.get(i)||null,e,n,r,t,a)),!0;case"gotpointercapture":return i=a.pointerId,Io.set(i,qi(Io.get(i)||null,e,n,r,t,a)),!0}return!1}function ly(e){var n=oa(e.target);if(n!==null){var r=ja(n);if(r!==null){if(n=r.tag,n===13){if(n=Yb(r),n!==null){e.blockedOn=n,sy(e.priority,function(){iy(r)});return}}else if(n===3&&r.stateNode.current.memoizedState.isDehydrated){e.blockedOn=r.tag===3?r.stateNode.containerInfo:null;return}}}e.blockedOn=null}function Xs(e){if(e.blockedOn!==null)return!1;for(var n=e.targetContainers;0<n.length;){var r=Pp(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(r===null){r=e.nativeEvent;var t=new r.constructor(r.type,r);Cp=t,r.target.dispatchEvent(t),Cp=null}else return n=rs(r),n!==null&&tm(n),e.blockedOn=r,!1;n.shift()}return!0}function If(e,n,r){Xs(e)&&r.delete(n)}function jx(){Ap=!1,Dt!==null&&Xs(Dt)&&(Dt=null),Ot!==null&&Xs(Ot)&&(Ot=null),Lt!==null&&Xs(Lt)&&(Lt=null),Co.forEach(If),Io.forEach(If)}function Fi(e,n){e.blockedOn===n&&(e.blockedOn=null,Ap||(Ap=!0,Hn.unstable_scheduleCallback(Hn.unstable_NormalPriority,jx)))}function Eo(e){function n(a){return Fi(a,e)}if(0<Ts.length){Fi(Ts[0],e);for(var r=1;r<Ts.length;r++){var t=Ts[r];t.blockedOn===e&&(t.blockedOn=null)}}for(Dt!==null&&Fi(Dt,e),Ot!==null&&Fi(Ot,e),Lt!==null&&Fi(Lt,e),Co.forEach(n),Io.forEach(n),r=0;r<It.length;r++)t=It[r],t.blockedOn===e&&(t.blockedOn=null);for(;0<It.length&&(r=It[0],r.blockedOn===null);)ly(r),r.blockedOn===null&&It.shift()}var ti=mt.ReactCurrentBatchConfig,xl=!0;function Cx(e,n,r,t){var a=ye,i=ti.transition;ti.transition=null;try{ye=1,am(e,n,r,t)}finally{ye=a,ti.transition=i}}function Ix(e,n,r,t){var a=ye,i=ti.transition;ti.transition=null;try{ye=4,am(e,n,r,t)}finally{ye=a,ti.transition=i}}function am(e,n,r,t){if(xl){var a=Pp(e,n,r,t);if(a===null)wu(e,n,t,jl,r),Cf(e,t);else if(xx(a,e,n,r,t))t.stopPropagation();else if(Cf(e,t),n&4&&-1<wx.indexOf(e)){for(;a!==null;){var i=rs(a);if(i!==null&&ay(i),i=Pp(e,n,r,t),i===null&&wu(e,n,t,jl,r),i===a)break;a=i}a!==null&&t.stopPropagation()}else wu(e,n,t,null,r)}}var jl=null;function Pp(e,n,r,t){if(jl=null,e=em(t),e=oa(e),e!==null)if(n=ja(e),n===null)e=null;else if(r=n.tag,r===13){if(e=Yb(n),e!==null)return e;e=null}else if(r===3){if(n.stateNode.current.memoizedState.isDehydrated)return n.tag===3?n.stateNode.containerInfo:null;e=null}else n!==e&&(e=null);return jl=e,null}function cy(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(mx()){case nm:return 1;case ey:return 4;case Sl:case gx:return 16;case ny:return 536870912;default:return 16}default:return 16}}var Tt=null,im=null,Zs=null;function uy(){if(Zs)return Zs;var e,n=im,r=n.length,t,a="value"in Tt?Tt.value:Tt.textContent,i=a.length;for(e=0;e<r&&n[e]===a[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===a[i-t];t++);return Zs=a.slice(e,1<t?1-t:void 0)}function el(e){var n=e.keyCode;return"charCode"in e?(e=e.charCode,e===0&&n===13&&(e=13)):e=n,e===10&&(e=13),32<=e||e===13?e:0}function Ms(){return!0}function Ef(){return!1}function zn(e){function n(r,t,a,i,o){this._reactName=r,this._targetInst=a,this.type=t,this.nativeEvent=i,this.target=o,this.currentTarget=null;for(var s in e)e.hasOwnProperty(s)&&(r=e[s],this[s]=r?r(i):i[s]);return this.isDefaultPrevented=(i.defaultPrevented!=null?i.defaultPrevented:i.returnValue===!1)?Ms:Ef,this.isPropagationStopped=Ef,this}return Le(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var r=this.nativeEvent;r&&(r.preventDefault?r.preventDefault():typeof r.returnValue!="unknown"&&(r.returnValue=!1),this.isDefaultPrevented=Ms)},stopPropagation:function(){var r=this.nativeEvent;r&&(r.stopPropagation?r.stopPropagation():typeof r.cancelBubble!="unknown"&&(r.cancelBubble=!0),this.isPropagationStopped=Ms)},persist:function(){},isPersistent:Ms}),n}var Ci={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},om=zn(Ci),ns=Le({},Ci,{view:0,detail:0}),Ex=zn(ns),mu,gu,Ji,wc=Le({},ns,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:sm,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==Ji&&(Ji&&e.type==="mousemove"?(mu=e.screenX-Ji.screenX,gu=e.screenY-Ji.screenY):gu=mu=0,Ji=e),mu)},movementY:function(e){return"movementY"in e?e.movementY:gu}}),Tf=zn(wc),Tx=Le({},wc,{dataTransfer:0}),Mx=zn(Tx),Ax=Le({},ns,{relatedTarget:0}),fu=zn(Ax),Px=Le({},Ci,{animationName:0,elapsedTime:0,pseudoElement:0}),Rx=zn(Px),Dx=Le({},Ci,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Ox=zn(Dx),Lx=Le({},Ci,{data:0}),Mf=zn(Lx),_x={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nx={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Bx={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Hx(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):(e=Bx[e])?!!n[e]:!1}function sm(){return Hx}var qx=Le({},ns,{key:function(e){if(e.key){var n=_x[e.key]||e.key;if(n!=="Unidentified")return n}return e.type==="keypress"?(e=el(e),e===13?"Enter":String.fromCharCode(e)):e.type==="keydown"||e.type==="keyup"?Nx[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:sm,charCode:function(e){return e.type==="keypress"?el(e):0},keyCode:function(e){return e.type==="keydown"||e.type==="keyup"?e.keyCode:0},which:function(e){return e.type==="keypress"?el(e):e.type==="keydown"||e.type==="keyup"?e.keyCode:0}}),Fx=zn(qx),Jx=Le({},wc,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Af=zn(Jx),zx=Le({},ns,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:sm}),Ux=zn(zx),Wx=Le({},Ci,{propertyName:0,elapsedTime:0,pseudoElement:0}),Vx=zn(Wx),$x=Le({},wc,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Gx=zn($x),Kx=[9,13,27,32],lm=ot&&"CompositionEvent"in window,io=null;ot&&"documentMode"in document&&(io=document.documentMode);var Yx=ot&&"TextEvent"in window&&!io,py=ot&&(!lm||io&&8<io&&11>=io),Pf=" ",Rf=!1;function dy(e,n){switch(e){case"keyup":return Kx.indexOf(n.keyCode)!==-1;case"keydown":return n.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function my(e){return e=e.detail,typeof e=="object"&&"data"in e?e.data:null}var Ja=!1;function Qx(e,n){switch(e){case"compositionend":return my(n);case"keypress":return n.which!==32?null:(Rf=!0,Pf);case"textInput":return e=n.data,e===Pf&&Rf?null:e;default:return null}}function Xx(e,n){if(Ja)return e==="compositionend"||!lm&&dy(e,n)?(e=uy(),Zs=im=Tt=null,Ja=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return py&&n.locale!=="ko"?null:n.data;default:return null}}var Zx={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Df(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n==="input"?!!Zx[e.type]:n==="textarea"}function gy(e,n,r,t){Wb(t),n=Cl(n,"onChange"),0<n.length&&(r=new om("onChange","change",null,r,t),e.push({event:r,listeners:n}))}var oo=null,To=null;function ej(e){Cy(e,0)}function xc(e){var n=Wa(e);if(Bb(n))return e}function nj(e,n){if(e==="change")return n}var fy=!1;if(ot){var hu;if(ot){var vu="oninput"in document;if(!vu){var Of=document.createElement("div");Of.setAttribute("oninput","return;"),vu=typeof Of.oninput=="function"}hu=vu}else hu=!1;fy=hu&&(!document.documentMode||9<document.documentMode)}function Lf(){oo&&(oo.detachEvent("onpropertychange",hy),To=oo=null)}function hy(e){if(e.propertyName==="value"&&xc(To)){var n=[];gy(n,To,e,em(e)),Kb(ej,n)}}function rj(e,n,r){e==="focusin"?(Lf(),oo=n,To=r,oo.attachEvent("onpropertychange",hy)):e==="focusout"&&Lf()}function tj(e){if(e==="selectionchange"||e==="keyup"||e==="keydown")return xc(To)}function aj(e,n){if(e==="click")return xc(n)}function ij(e,n){if(e==="input"||e==="change")return xc(n)}function oj(e,n){return e===n&&(e!==0||1/e===1/n)||e!==e&&n!==n}var vr=typeof Object.is=="function"?Object.is:oj;function Mo(e,n){if(vr(e,n))return!0;if(typeof e!="object"||e===null||typeof n!="object"||n===null)return!1;var r=Object.keys(e),t=Object.keys(n);if(r.length!==t.length)return!1;for(t=0;t<r.length;t++){var a=r[t];if(!mp.call(n,a)||!vr(e[a],n[a]))return!1}return!0}function _f(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Nf(e,n){var r=_f(e);e=0;for(var t;r;){if(r.nodeType===3){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=_f(r)}}function vy(e,n){return e&&n?e===n?!0:e&&e.nodeType===3?!1:n&&n.nodeType===3?vy(e,n.parentNode):"contains"in e?e.contains(n):e.compareDocumentPosition?!!(e.compareDocumentPosition(n)&16):!1:!1}function by(){for(var e=window,n=bl();n instanceof e.HTMLIFrameElement;){try{var r=typeof n.contentWindow.location.href=="string"}catch{r=!1}if(r)e=n.contentWindow;else break;n=bl(e.document)}return n}function cm(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&(n==="input"&&(e.type==="text"||e.type==="search"||e.type==="tel"||e.type==="url"||e.type==="password")||n==="textarea"||e.contentEditable==="true")}function sj(e){var n=by(),r=e.focusedElem,t=e.selectionRange;if(n!==r&&r&&r.ownerDocument&&vy(r.ownerDocument.documentElement,r)){if(t!==null&&cm(r)){if(n=t.start,e=t.end,e===void 0&&(e=n),"selectionStart"in r)r.selectionStart=n,r.selectionEnd=Math.min(e,r.value.length);else if(e=(n=r.ownerDocument||document)&&n.defaultView||window,e.getSelection){e=e.getSelection();var a=r.textContent.length,i=Math.min(t.start,a);t=t.end===void 0?i:Math.min(t.end,a),!e.extend&&i>t&&(a=t,t=i,i=a),a=Nf(r,i);var o=Nf(r,t);a&&o&&(e.rangeCount!==1||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&(n=n.createRange(),n.setStart(a.node,a.offset),e.removeAllRanges(),i>t?(e.addRange(n),e.extend(o.node,o.offset)):(n.setEnd(o.node,o.offset),e.addRange(n)))}}for(n=[],e=r;e=e.parentNode;)e.nodeType===1&&n.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(typeof r.focus=="function"&&r.focus(),r=0;r<n.length;r++)e=n[r],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}}var lj=ot&&"documentMode"in document&&11>=document.documentMode,za=null,Rp=null,so=null,Dp=!1;function Bf(e,n,r){var t=r.window===r?r.document:r.nodeType===9?r:r.ownerDocument;Dp||za==null||za!==bl(t)||(t=za,"selectionStart"in t&&cm(t)?t={start:t.selectionStart,end:t.selectionEnd}:(t=(t.ownerDocument&&t.ownerDocument.defaultView||window).getSelection(),t={anchorNode:t.anchorNode,anchorOffset:t.anchorOffset,focusNode:t.focusNode,focusOffset:t.focusOffset}),so&&Mo(so,t)||(so=t,t=Cl(Rp,"onSelect"),0<t.length&&(n=new om("onSelect","select",null,n,r),e.push({event:n,listeners:t}),n.target=za)))}function As(e,n){var r={};return r[e.toLowerCase()]=n.toLowerCase(),r["Webkit"+e]="webkit"+n,r["Moz"+e]="moz"+n,r}var Ua={animationend:As("Animation","AnimationEnd"),animationiteration:As("Animation","AnimationIteration"),animationstart:As("Animation","AnimationStart"),transitionend:As("Transition","TransitionEnd")},bu={},yy={};ot&&(yy=document.createElement("div").style,"AnimationEvent"in window||(delete Ua.animationend.animation,delete Ua.animationiteration.animation,delete Ua.animationstart.animation),"TransitionEvent"in window||delete Ua.transitionend.transition);function jc(e){if(bu[e])return bu[e];if(!Ua[e])return e;var n=Ua[e],r;for(r in n)if(n.hasOwnProperty(r)&&r in yy)return bu[e]=n[r];return e}var ky=jc("animationend"),Sy=jc("animationiteration"),wy=jc("animationstart"),xy=jc("transitionend"),jy=new Map,Hf="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function $t(e,n){jy.set(e,n),xa(n,[e])}for(var yu=0;yu<Hf.length;yu++){var ku=Hf[yu],cj=ku.toLowerCase(),uj=ku[0].toUpperCase()+ku.slice(1);$t(cj,"on"+uj)}$t(ky,"onAnimationEnd");$t(Sy,"onAnimationIteration");$t(wy,"onAnimationStart");$t("dblclick","onDoubleClick");$t("focusin","onFocus");$t("focusout","onBlur");$t(xy,"onTransitionEnd");pi("onMouseEnter",["mouseout","mouseover"]);pi("onMouseLeave",["mouseout","mouseover"]);pi("onPointerEnter",["pointerout","pointerover"]);pi("onPointerLeave",["pointerout","pointerover"]);xa("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));xa("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));xa("onBeforeInput",["compositionend","keypress","textInput","paste"]);xa("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));xa("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));xa("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var no="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),pj=new Set("cancel close invalid load scroll toggle".split(" ").concat(no));function qf(e,n,r){var t=e.type||"unknown-event";e.currentTarget=r,cx(t,n,void 0,e),e.currentTarget=null}function Cy(e,n){n=(n&4)!==0;for(var r=0;r<e.length;r++){var t=e[r],a=t.event;t=t.listeners;e:{var i=void 0;if(n)for(var o=t.length-1;0<=o;o--){var s=t[o],l=s.instance,c=s.currentTarget;if(s=s.listener,l!==i&&a.isPropagationStopped())break e;qf(a,s,c),i=l}else for(o=0;o<t.length;o++){if(s=t[o],l=s.instance,c=s.currentTarget,s=s.listener,l!==i&&a.isPropagationStopped())break e;qf(a,s,c),i=l}}}if(kl)throw e=Tp,kl=!1,Tp=null,e}function Ee(e,n){var r=n[Bp];r===void 0&&(r=n[Bp]=new Set);var t=e+"__bubble";r.has(t)||(Iy(n,e,2,!1),r.add(t))}function Su(e,n,r){var t=0;n&&(t|=4),Iy(r,e,t,n)}var Ps="_reactListening"+Math.random().toString(36).slice(2);function Ao(e){if(!e[Ps]){e[Ps]=!0,Db.forEach(function(r){r!=="selectionchange"&&(pj.has(r)||Su(r,!1,e),Su(r,!0,e))});var n=e.nodeType===9?e:e.ownerDocument;n===null||n[Ps]||(n[Ps]=!0,Su("selectionchange",!1,n))}}function Iy(e,n,r,t){switch(cy(n)){case 1:var a=Cx;break;case 4:a=Ix;break;default:a=am}r=a.bind(null,n,r,e),a=void 0,!Ep||n!=="touchstart"&&n!=="touchmove"&&n!=="wheel"||(a=!0),t?a!==void 0?e.addEventListener(n,r,{capture:!0,passive:a}):e.addEventListener(n,r,!0):a!==void 0?e.addEventListener(n,r,{passive:a}):e.addEventListener(n,r,!1)}function wu(e,n,r,t,a){var i=t;if(!(n&1)&&!(n&2)&&t!==null)e:for(;;){if(t===null)return;var o=t.tag;if(o===3||o===4){var s=t.stateNode.containerInfo;if(s===a||s.nodeType===8&&s.parentNode===a)break;if(o===4)for(o=t.return;o!==null;){var l=o.tag;if((l===3||l===4)&&(l=o.stateNode.containerInfo,l===a||l.nodeType===8&&l.parentNode===a))return;o=o.return}for(;s!==null;){if(o=oa(s),o===null)return;if(l=o.tag,l===5||l===6){t=i=o;continue e}s=s.parentNode}}t=t.return}Kb(function(){var c=i,u=em(r),p=[];e:{var d=jy.get(e);if(d!==void 0){var m=om,g=e;switch(e){case"keypress":if(el(r)===0)break e;case"keydown":case"keyup":m=Fx;break;case"focusin":g="focus",m=fu;break;case"focusout":g="blur",m=fu;break;case"beforeblur":case"afterblur":m=fu;break;case"click":if(r.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":m=Tf;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":m=Mx;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":m=Ux;break;case ky:case Sy:case wy:m=Rx;break;case xy:m=Vx;break;case"scroll":m=Ex;break;case"wheel":m=Gx;break;case"copy":case"cut":case"paste":m=Ox;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":m=Af}var y=(n&4)!==0,k=!y&&e==="scroll",f=y?d!==null?d+"Capture":null:d;y=[];for(var h=c,v;h!==null;){v=h;var x=v.stateNode;if(v.tag===5&&x!==null&&(v=x,f!==null&&(x=jo(h,f),x!=null&&y.push(Po(h,x,v)))),k)break;h=h.return}0<y.length&&(d=new m(d,g,null,r,u),p.push({event:d,listeners:y}))}}if(!(n&7)){e:{if(d=e==="mouseover"||e==="pointerover",m=e==="mouseout"||e==="pointerout",d&&r!==Cp&&(g=r.relatedTarget||r.fromElement)&&(oa(g)||g[st]))break e;if((m||d)&&(d=u.window===u?u:(d=u.ownerDocument)?d.defaultView||d.parentWindow:window,m?(g=r.relatedTarget||r.toElement,m=c,g=g?oa(g):null,g!==null&&(k=ja(g),g!==k||g.tag!==5&&g.tag!==6)&&(g=null)):(m=null,g=c),m!==g)){if(y=Tf,x="onMouseLeave",f="onMouseEnter",h="mouse",(e==="pointerout"||e==="pointerover")&&(y=Af,x="onPointerLeave",f="onPointerEnter",h="pointer"),k=m==null?d:Wa(m),v=g==null?d:Wa(g),d=new y(x,h+"leave",m,r,u),d.target=k,d.relatedTarget=v,x=null,oa(u)===c&&(y=new y(f,h+"enter",g,r,u),y.target=v,y.relatedTarget=k,x=y),k=x,m&&g)n:{for(y=m,f=g,h=0,v=y;v;v=Ra(v))h++;for(v=0,x=f;x;x=Ra(x))v++;for(;0<h-v;)y=Ra(y),h--;for(;0<v-h;)f=Ra(f),v--;for(;h--;){if(y===f||f!==null&&y===f.alternate)break n;y=Ra(y),f=Ra(f)}y=null}else y=null;m!==null&&Ff(p,d,m,y,!1),g!==null&&k!==null&&Ff(p,k,g,y,!0)}}e:{if(d=c?Wa(c):window,m=d.nodeName&&d.nodeName.toLowerCase(),m==="select"||m==="input"&&d.type==="file")var I=nj;else if(Df(d))if(fy)I=ij;else{I=tj;var S=rj}else(m=d.nodeName)&&m.toLowerCase()==="input"&&(d.type==="checkbox"||d.type==="radio")&&(I=aj);if(I&&(I=I(e,c))){gy(p,I,r,u);break e}S&&S(e,d,c),e==="focusout"&&(S=d._wrapperState)&&S.controlled&&d.type==="number"&&kp(d,"number",d.value)}switch(S=c?Wa(c):window,e){case"focusin":(Df(S)||S.contentEditable==="true")&&(za=S,Rp=c,so=null);break;case"focusout":so=Rp=za=null;break;case"mousedown":Dp=!0;break;case"contextmenu":case"mouseup":case"dragend":Dp=!1,Bf(p,r,u);break;case"selectionchange":if(lj)break;case"keydown":case"keyup":Bf(p,r,u)}var E;if(lm)e:{switch(e){case"compositionstart":var T="onCompositionStart";break e;case"compositionend":T="onCompositionEnd";break e;case"compositionupdate":T="onCompositionUpdate";break e}T=void 0}else Ja?dy(e,r)&&(T="onCompositionEnd"):e==="keydown"&&r.keyCode===229&&(T="onCompositionStart");T&&(py&&r.locale!=="ko"&&(Ja||T!=="onCompositionStart"?T==="onCompositionEnd"&&Ja&&(E=uy()):(Tt=u,im="value"in Tt?Tt.value:Tt.textContent,Ja=!0)),S=Cl(c,T),0<S.length&&(T=new Mf(T,e,null,r,u),p.push({event:T,listeners:S}),E?T.data=E:(E=my(r),E!==null&&(T.data=E)))),(E=Yx?Qx(e,r):Xx(e,r))&&(c=Cl(c,"onBeforeInput"),0<c.length&&(u=new Mf("onBeforeInput","beforeinput",null,r,u),p.push({event:u,listeners:c}),u.data=E))}Cy(p,n)})}function Po(e,n,r){return{instance:e,listener:n,currentTarget:r}}function Cl(e,n){for(var r=n+"Capture",t=[];e!==null;){var a=e,i=a.stateNode;a.tag===5&&i!==null&&(a=i,i=jo(e,r),i!=null&&t.unshift(Po(e,i,a)),i=jo(e,n),i!=null&&t.push(Po(e,i,a))),e=e.return}return t}function Ra(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5);return e||null}function Ff(e,n,r,t,a){for(var i=n._reactName,o=[];r!==null&&r!==t;){var s=r,l=s.alternate,c=s.stateNode;if(l!==null&&l===t)break;s.tag===5&&c!==null&&(s=c,a?(l=jo(r,i),l!=null&&o.unshift(Po(r,l,s))):a||(l=jo(r,i),l!=null&&o.push(Po(r,l,s)))),r=r.return}o.length!==0&&e.push({event:n,listeners:o})}var dj=/\r\n?/g,mj=/\u0000|\uFFFD/g;function Jf(e){return(typeof e=="string"?e:""+e).replace(dj,`
`).replace(mj,"")}function Rs(e,n,r){if(n=Jf(n),Jf(e)!==n&&r)throw Error(L(425))}function Il(){}var Op=null,Lp=null;function _p(e,n){return e==="textarea"||e==="noscript"||typeof n.children=="string"||typeof n.children=="number"||typeof n.dangerouslySetInnerHTML=="object"&&n.dangerouslySetInnerHTML!==null&&n.dangerouslySetInnerHTML.__html!=null}var Np=typeof setTimeout=="function"?setTimeout:void 0,gj=typeof clearTimeout=="function"?clearTimeout:void 0,zf=typeof Promise=="function"?Promise:void 0,fj=typeof queueMicrotask=="function"?queueMicrotask:typeof zf<"u"?function(e){return zf.resolve(null).then(e).catch(hj)}:Np;function hj(e){setTimeout(function(){throw e})}function xu(e,n){var r=n,t=0;do{var a=r.nextSibling;if(e.removeChild(r),a&&a.nodeType===8)if(r=a.data,r==="/$"){if(t===0){e.removeChild(a),Eo(n);return}t--}else r!=="$"&&r!=="$?"&&r!=="$!"||t++;r=a}while(r);Eo(n)}function _t(e){for(;e!=null;e=e.nextSibling){var n=e.nodeType;if(n===1||n===3)break;if(n===8){if(n=e.data,n==="$"||n==="$!"||n==="$?")break;if(n==="/$")return null}}return e}function Uf(e){e=e.previousSibling;for(var n=0;e;){if(e.nodeType===8){var r=e.data;if(r==="$"||r==="$!"||r==="$?"){if(n===0)return e;n--}else r==="/$"&&n++}e=e.previousSibling}return null}var Ii=Math.random().toString(36).slice(2),Mr="__reactFiber$"+Ii,Ro="__reactProps$"+Ii,st="__reactContainer$"+Ii,Bp="__reactEvents$"+Ii,vj="__reactListeners$"+Ii,bj="__reactHandles$"+Ii;function oa(e){var n=e[Mr];if(n)return n;for(var r=e.parentNode;r;){if(n=r[st]||r[Mr]){if(r=n.alternate,n.child!==null||r!==null&&r.child!==null)for(e=Uf(e);e!==null;){if(r=e[Mr])return r;e=Uf(e)}return n}e=r,r=e.parentNode}return null}function rs(e){return e=e[Mr]||e[st],!e||e.tag!==5&&e.tag!==6&&e.tag!==13&&e.tag!==3?null:e}function Wa(e){if(e.tag===5||e.tag===6)return e.stateNode;throw Error(L(33))}function Cc(e){return e[Ro]||null}var Hp=[],Va=-1;function Gt(e){return{current:e}}function Te(e){0>Va||(e.current=Hp[Va],Hp[Va]=null,Va--)}function Ie(e,n){Va++,Hp[Va]=e.current,e.current=n}var Wt={},dn=Gt(Wt),In=Gt(!1),fa=Wt;function di(e,n){var r=e.type.contextTypes;if(!r)return Wt;var t=e.stateNode;if(t&&t.__reactInternalMemoizedUnmaskedChildContext===n)return t.__reactInternalMemoizedMaskedChildContext;var a={},i;for(i in r)a[i]=n[i];return t&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=a),a}function En(e){return e=e.childContextTypes,e!=null}function El(){Te(In),Te(dn)}function Wf(e,n,r){if(dn.current!==Wt)throw Error(L(168));Ie(dn,n),Ie(In,r)}function Ey(e,n,r){var t=e.stateNode;if(n=n.childContextTypes,typeof t.getChildContext!="function")return r;t=t.getChildContext();for(var a in t)if(!(a in n))throw Error(L(108,rx(e)||"Unknown",a));return Le({},r,t)}function Tl(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Wt,fa=dn.current,Ie(dn,e),Ie(In,In.current),!0}function Vf(e,n,r){var t=e.stateNode;if(!t)throw Error(L(169));r?(e=Ey(e,n,fa),t.__reactInternalMemoizedMergedChildContext=e,Te(In),Te(dn),Ie(dn,e)):Te(In),Ie(In,r)}var Gr=null,Ic=!1,ju=!1;function Ty(e){Gr===null?Gr=[e]:Gr.push(e)}function yj(e){Ic=!0,Ty(e)}function Kt(){if(!ju&&Gr!==null){ju=!0;var e=0,n=ye;try{var r=Gr;for(ye=1;e<r.length;e++){var t=r[e];do t=t(!0);while(t!==null)}Gr=null,Ic=!1}catch(a){throw Gr!==null&&(Gr=Gr.slice(e+1)),Zb(nm,Kt),a}finally{ye=n,ju=!1}}return null}var $a=[],Ga=0,Ml=null,Al=0,Vn=[],$n=0,ha=null,Qr=1,Xr="";function ta(e,n){$a[Ga++]=Al,$a[Ga++]=Ml,Ml=e,Al=n}function My(e,n,r){Vn[$n++]=Qr,Vn[$n++]=Xr,Vn[$n++]=ha,ha=e;var t=Qr;e=Xr;var a=32-mr(t)-1;t&=~(1<<a),r+=1;var i=32-mr(n)+a;if(30<i){var o=a-a%5;i=(t&(1<<o)-1).toString(32),t>>=o,a-=o,Qr=1<<32-mr(n)+a|r<<a|t,Xr=i+e}else Qr=1<<i|r<<a|t,Xr=e}function um(e){e.return!==null&&(ta(e,1),My(e,1,0))}function pm(e){for(;e===Ml;)Ml=$a[--Ga],$a[Ga]=null,Al=$a[--Ga],$a[Ga]=null;for(;e===ha;)ha=Vn[--$n],Vn[$n]=null,Xr=Vn[--$n],Vn[$n]=null,Qr=Vn[--$n],Vn[$n]=null}var Bn=null,_n=null,Re=!1,ur=null;function Ay(e,n){var r=Yn(5,null,null,0);r.elementType="DELETED",r.stateNode=n,r.return=e,n=e.deletions,n===null?(e.deletions=[r],e.flags|=16):n.push(r)}function $f(e,n){switch(e.tag){case 5:var r=e.type;return n=n.nodeType!==1||r.toLowerCase()!==n.nodeName.toLowerCase()?null:n,n!==null?(e.stateNode=n,Bn=e,_n=_t(n.firstChild),!0):!1;case 6:return n=e.pendingProps===""||n.nodeType!==3?null:n,n!==null?(e.stateNode=n,Bn=e,_n=null,!0):!1;case 13:return n=n.nodeType!==8?null:n,n!==null?(r=ha!==null?{id:Qr,overflow:Xr}:null,e.memoizedState={dehydrated:n,treeContext:r,retryLane:1073741824},r=Yn(18,null,null,0),r.stateNode=n,r.return=e,e.child=r,Bn=e,_n=null,!0):!1;default:return!1}}function qp(e){return(e.mode&1)!==0&&(e.flags&128)===0}function Fp(e){if(Re){var n=_n;if(n){var r=n;if(!$f(e,n)){if(qp(e))throw Error(L(418));n=_t(r.nextSibling);var t=Bn;n&&$f(e,n)?Ay(t,r):(e.flags=e.flags&-4097|2,Re=!1,Bn=e)}}else{if(qp(e))throw Error(L(418));e.flags=e.flags&-4097|2,Re=!1,Bn=e}}}function Gf(e){for(e=e.return;e!==null&&e.tag!==5&&e.tag!==3&&e.tag!==13;)e=e.return;Bn=e}function Ds(e){if(e!==Bn)return!1;if(!Re)return Gf(e),Re=!0,!1;var n;if((n=e.tag!==3)&&!(n=e.tag!==5)&&(n=e.type,n=n!=="head"&&n!=="body"&&!_p(e.type,e.memoizedProps)),n&&(n=_n)){if(qp(e))throw Py(),Error(L(418));for(;n;)Ay(e,n),n=_t(n.nextSibling)}if(Gf(e),e.tag===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(L(317));e:{for(e=e.nextSibling,n=0;e;){if(e.nodeType===8){var r=e.data;if(r==="/$"){if(n===0){_n=_t(e.nextSibling);break e}n--}else r!=="$"&&r!=="$!"&&r!=="$?"||n++}e=e.nextSibling}_n=null}}else _n=Bn?_t(e.stateNode.nextSibling):null;return!0}function Py(){for(var e=_n;e;)e=_t(e.nextSibling)}function mi(){_n=Bn=null,Re=!1}function dm(e){ur===null?ur=[e]:ur.push(e)}var kj=mt.ReactCurrentBatchConfig;function zi(e,n,r){if(e=r.ref,e!==null&&typeof e!="function"&&typeof e!="object"){if(r._owner){if(r=r._owner,r){if(r.tag!==1)throw Error(L(309));var t=r.stateNode}if(!t)throw Error(L(147,e));var a=t,i=""+e;return n!==null&&n.ref!==null&&typeof n.ref=="function"&&n.ref._stringRef===i?n.ref:(n=function(o){var s=a.refs;o===null?delete s[i]:s[i]=o},n._stringRef=i,n)}if(typeof e!="string")throw Error(L(284));if(!r._owner)throw Error(L(290,e))}return e}function Os(e,n){throw e=Object.prototype.toString.call(n),Error(L(31,e==="[object Object]"?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function Kf(e){var n=e._init;return n(e._payload)}function Ry(e){function n(f,h){if(e){var v=f.deletions;v===null?(f.deletions=[h],f.flags|=16):v.push(h)}}function r(f,h){if(!e)return null;for(;h!==null;)n(f,h),h=h.sibling;return null}function t(f,h){for(f=new Map;h!==null;)h.key!==null?f.set(h.key,h):f.set(h.index,h),h=h.sibling;return f}function a(f,h){return f=qt(f,h),f.index=0,f.sibling=null,f}function i(f,h,v){return f.index=v,e?(v=f.alternate,v!==null?(v=v.index,v<h?(f.flags|=2,h):v):(f.flags|=2,h)):(f.flags|=1048576,h)}function o(f){return e&&f.alternate===null&&(f.flags|=2),f}function s(f,h,v,x){return h===null||h.tag!==6?(h=Pu(v,f.mode,x),h.return=f,h):(h=a(h,v),h.return=f,h)}function l(f,h,v,x){var I=v.type;return I===Fa?u(f,h,v.props.children,x,v.key):h!==null&&(h.elementType===I||typeof I=="object"&&I!==null&&I.$$typeof===xt&&Kf(I)===h.type)?(x=a(h,v.props),x.ref=zi(f,h,v),x.return=f,x):(x=sl(v.type,v.key,v.props,null,f.mode,x),x.ref=zi(f,h,v),x.return=f,x)}function c(f,h,v,x){return h===null||h.tag!==4||h.stateNode.containerInfo!==v.containerInfo||h.stateNode.implementation!==v.implementation?(h=Ru(v,f.mode,x),h.return=f,h):(h=a(h,v.children||[]),h.return=f,h)}function u(f,h,v,x,I){return h===null||h.tag!==7?(h=da(v,f.mode,x,I),h.return=f,h):(h=a(h,v),h.return=f,h)}function p(f,h,v){if(typeof h=="string"&&h!==""||typeof h=="number")return h=Pu(""+h,f.mode,v),h.return=f,h;if(typeof h=="object"&&h!==null){switch(h.$$typeof){case xs:return v=sl(h.type,h.key,h.props,null,f.mode,v),v.ref=zi(f,null,h),v.return=f,v;case qa:return h=Ru(h,f.mode,v),h.return=f,h;case xt:var x=h._init;return p(f,x(h._payload),v)}if(Zi(h)||Bi(h))return h=da(h,f.mode,v,null),h.return=f,h;Os(f,h)}return null}function d(f,h,v,x){var I=h!==null?h.key:null;if(typeof v=="string"&&v!==""||typeof v=="number")return I!==null?null:s(f,h,""+v,x);if(typeof v=="object"&&v!==null){switch(v.$$typeof){case xs:return v.key===I?l(f,h,v,x):null;case qa:return v.key===I?c(f,h,v,x):null;case xt:return I=v._init,d(f,h,I(v._payload),x)}if(Zi(v)||Bi(v))return I!==null?null:u(f,h,v,x,null);Os(f,v)}return null}function m(f,h,v,x,I){if(typeof x=="string"&&x!==""||typeof x=="number")return f=f.get(v)||null,s(h,f,""+x,I);if(typeof x=="object"&&x!==null){switch(x.$$typeof){case xs:return f=f.get(x.key===null?v:x.key)||null,l(h,f,x,I);case qa:return f=f.get(x.key===null?v:x.key)||null,c(h,f,x,I);case xt:var S=x._init;return m(f,h,v,S(x._payload),I)}if(Zi(x)||Bi(x))return f=f.get(v)||null,u(h,f,x,I,null);Os(h,x)}return null}function g(f,h,v,x){for(var I=null,S=null,E=h,T=h=0,B=null;E!==null&&T<v.length;T++){E.index>T?(B=E,E=null):B=E.sibling;var C=d(f,E,v[T],x);if(C===null){E===null&&(E=B);break}e&&E&&C.alternate===null&&n(f,E),h=i(C,h,T),S===null?I=C:S.sibling=C,S=C,E=B}if(T===v.length)return r(f,E),Re&&ta(f,T),I;if(E===null){for(;T<v.length;T++)E=p(f,v[T],x),E!==null&&(h=i(E,h,T),S===null?I=E:S.sibling=E,S=E);return Re&&ta(f,T),I}for(E=t(f,E);T<v.length;T++)B=m(E,f,T,v[T],x),B!==null&&(e&&B.alternate!==null&&E.delete(B.key===null?T:B.key),h=i(B,h,T),S===null?I=B:S.sibling=B,S=B);return e&&E.forEach(function(R){return n(f,R)}),Re&&ta(f,T),I}function y(f,h,v,x){var I=Bi(v);if(typeof I!="function")throw Error(L(150));if(v=I.call(v),v==null)throw Error(L(151));for(var S=I=null,E=h,T=h=0,B=null,C=v.next();E!==null&&!C.done;T++,C=v.next()){E.index>T?(B=E,E=null):B=E.sibling;var R=d(f,E,C.value,x);if(R===null){E===null&&(E=B);break}e&&E&&R.alternate===null&&n(f,E),h=i(R,h,T),S===null?I=R:S.sibling=R,S=R,E=B}if(C.done)return r(f,E),Re&&ta(f,T),I;if(E===null){for(;!C.done;T++,C=v.next())C=p(f,C.value,x),C!==null&&(h=i(C,h,T),S===null?I=C:S.sibling=C,S=C);return Re&&ta(f,T),I}for(E=t(f,E);!C.done;T++,C=v.next())C=m(E,f,T,C.value,x),C!==null&&(e&&C.alternate!==null&&E.delete(C.key===null?T:C.key),h=i(C,h,T),S===null?I=C:S.sibling=C,S=C);return e&&E.forEach(function(O){return n(f,O)}),Re&&ta(f,T),I}function k(f,h,v,x){if(typeof v=="object"&&v!==null&&v.type===Fa&&v.key===null&&(v=v.props.children),typeof v=="object"&&v!==null){switch(v.$$typeof){case xs:e:{for(var I=v.key,S=h;S!==null;){if(S.key===I){if(I=v.type,I===Fa){if(S.tag===7){r(f,S.sibling),h=a(S,v.props.children),h.return=f,f=h;break e}}else if(S.elementType===I||typeof I=="object"&&I!==null&&I.$$typeof===xt&&Kf(I)===S.type){r(f,S.sibling),h=a(S,v.props),h.ref=zi(f,S,v),h.return=f,f=h;break e}r(f,S);break}else n(f,S);S=S.sibling}v.type===Fa?(h=da(v.props.children,f.mode,x,v.key),h.return=f,f=h):(x=sl(v.type,v.key,v.props,null,f.mode,x),x.ref=zi(f,h,v),x.return=f,f=x)}return o(f);case qa:e:{for(S=v.key;h!==null;){if(h.key===S)if(h.tag===4&&h.stateNode.containerInfo===v.containerInfo&&h.stateNode.implementation===v.implementation){r(f,h.sibling),h=a(h,v.children||[]),h.return=f,f=h;break e}else{r(f,h);break}else n(f,h);h=h.sibling}h=Ru(v,f.mode,x),h.return=f,f=h}return o(f);case xt:return S=v._init,k(f,h,S(v._payload),x)}if(Zi(v))return g(f,h,v,x);if(Bi(v))return y(f,h,v,x);Os(f,v)}return typeof v=="string"&&v!==""||typeof v=="number"?(v=""+v,h!==null&&h.tag===6?(r(f,h.sibling),h=a(h,v),h.return=f,f=h):(r(f,h),h=Pu(v,f.mode,x),h.return=f,f=h),o(f)):r(f,h)}return k}var gi=Ry(!0),Dy=Ry(!1),Pl=Gt(null),Rl=null,Ka=null,mm=null;function gm(){mm=Ka=Rl=null}function fm(e){var n=Pl.current;Te(Pl),e._currentValue=n}function Jp(e,n,r){for(;e!==null;){var t=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,t!==null&&(t.childLanes|=n)):t!==null&&(t.childLanes&n)!==n&&(t.childLanes|=n),e===r)break;e=e.return}}function ai(e,n){Rl=e,mm=Ka=null,e=e.dependencies,e!==null&&e.firstContext!==null&&(e.lanes&n&&(Cn=!0),e.firstContext=null)}function Zn(e){var n=e._currentValue;if(mm!==e)if(e={context:e,memoizedValue:n,next:null},Ka===null){if(Rl===null)throw Error(L(308));Ka=e,Rl.dependencies={lanes:0,firstContext:e}}else Ka=Ka.next=e;return n}var sa=null;function hm(e){sa===null?sa=[e]:sa.push(e)}function Oy(e,n,r,t){var a=n.interleaved;return a===null?(r.next=r,hm(n)):(r.next=a.next,a.next=r),n.interleaved=r,lt(e,t)}function lt(e,n){e.lanes|=n;var r=e.alternate;for(r!==null&&(r.lanes|=n),r=e,e=e.return;e!==null;)e.childLanes|=n,r=e.alternate,r!==null&&(r.childLanes|=n),r=e,e=e.return;return r.tag===3?r.stateNode:null}var jt=!1;function vm(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ly(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function rt(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function Nt(e,n,r){var t=e.updateQueue;if(t===null)return null;if(t=t.shared,me&2){var a=t.pending;return a===null?n.next=n:(n.next=a.next,a.next=n),t.pending=n,lt(e,r)}return a=t.interleaved,a===null?(n.next=n,hm(t)):(n.next=a.next,a.next=n),t.interleaved=n,lt(e,r)}function nl(e,n,r){if(n=n.updateQueue,n!==null&&(n=n.shared,(r&4194240)!==0)){var t=n.lanes;t&=e.pendingLanes,r|=t,n.lanes=r,rm(e,r)}}function Yf(e,n){var r=e.updateQueue,t=e.alternate;if(t!==null&&(t=t.updateQueue,r===t)){var a=null,i=null;if(r=r.firstBaseUpdate,r!==null){do{var o={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};i===null?a=i=o:i=i.next=o,r=r.next}while(r!==null);i===null?a=i=n:i=i.next=n}else a=i=n;r={baseState:t.baseState,firstBaseUpdate:a,lastBaseUpdate:i,shared:t.shared,effects:t.effects},e.updateQueue=r;return}e=r.lastBaseUpdate,e===null?r.firstBaseUpdate=n:e.next=n,r.lastBaseUpdate=n}function Dl(e,n,r,t){var a=e.updateQueue;jt=!1;var i=a.firstBaseUpdate,o=a.lastBaseUpdate,s=a.shared.pending;if(s!==null){a.shared.pending=null;var l=s,c=l.next;l.next=null,o===null?i=c:o.next=c,o=l;var u=e.alternate;u!==null&&(u=u.updateQueue,s=u.lastBaseUpdate,s!==o&&(s===null?u.firstBaseUpdate=c:s.next=c,u.lastBaseUpdate=l))}if(i!==null){var p=a.baseState;o=0,u=c=l=null,s=i;do{var d=s.lane,m=s.eventTime;if((t&d)===d){u!==null&&(u=u.next={eventTime:m,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var g=e,y=s;switch(d=n,m=r,y.tag){case 1:if(g=y.payload,typeof g=="function"){p=g.call(m,p,d);break e}p=g;break e;case 3:g.flags=g.flags&-65537|128;case 0:if(g=y.payload,d=typeof g=="function"?g.call(m,p,d):g,d==null)break e;p=Le({},p,d);break e;case 2:jt=!0}}s.callback!==null&&s.lane!==0&&(e.flags|=64,d=a.effects,d===null?a.effects=[s]:d.push(s))}else m={eventTime:m,lane:d,tag:s.tag,payload:s.payload,callback:s.callback,next:null},u===null?(c=u=m,l=p):u=u.next=m,o|=d;if(s=s.next,s===null){if(s=a.shared.pending,s===null)break;d=s,s=d.next,d.next=null,a.lastBaseUpdate=d,a.shared.pending=null}}while(!0);if(u===null&&(l=p),a.baseState=l,a.firstBaseUpdate=c,a.lastBaseUpdate=u,n=a.shared.interleaved,n!==null){a=n;do o|=a.lane,a=a.next;while(a!==n)}else i===null&&(a.shared.lanes=0);ba|=o,e.lanes=o,e.memoizedState=p}}function Qf(e,n,r){if(e=n.effects,n.effects=null,e!==null)for(n=0;n<e.length;n++){var t=e[n],a=t.callback;if(a!==null){if(t.callback=null,t=r,typeof a!="function")throw Error(L(191,a));a.call(t)}}}var ts={},Dr=Gt(ts),Do=Gt(ts),Oo=Gt(ts);function la(e){if(e===ts)throw Error(L(174));return e}function bm(e,n){switch(Ie(Oo,n),Ie(Do,e),Ie(Dr,ts),e=n.nodeType,e){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:wp(null,"");break;default:e=e===8?n.parentNode:n,n=e.namespaceURI||null,e=e.tagName,n=wp(n,e)}Te(Dr),Ie(Dr,n)}function fi(){Te(Dr),Te(Do),Te(Oo)}function _y(e){la(Oo.current);var n=la(Dr.current),r=wp(n,e.type);n!==r&&(Ie(Do,e),Ie(Dr,r))}function ym(e){Do.current===e&&(Te(Dr),Te(Do))}var De=Gt(0);function Ol(e){for(var n=e;n!==null;){if(n.tag===13){var r=n.memoizedState;if(r!==null&&(r=r.dehydrated,r===null||r.data==="$?"||r.data==="$!"))return n}else if(n.tag===19&&n.memoizedProps.revealOrder!==void 0){if(n.flags&128)return n}else if(n.child!==null){n.child.return=n,n=n.child;continue}if(n===e)break;for(;n.sibling===null;){if(n.return===null||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var Cu=[];function km(){for(var e=0;e<Cu.length;e++)Cu[e]._workInProgressVersionPrimary=null;Cu.length=0}var rl=mt.ReactCurrentDispatcher,Iu=mt.ReactCurrentBatchConfig,va=0,Oe=null,Ue=null,Ke=null,Ll=!1,lo=!1,Lo=0,Sj=0;function on(){throw Error(L(321))}function Sm(e,n){if(n===null)return!1;for(var r=0;r<n.length&&r<e.length;r++)if(!vr(e[r],n[r]))return!1;return!0}function wm(e,n,r,t,a,i){if(va=i,Oe=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,rl.current=e===null||e.memoizedState===null?Cj:Ij,e=r(t,a),lo){i=0;do{if(lo=!1,Lo=0,25<=i)throw Error(L(301));i+=1,Ke=Ue=null,n.updateQueue=null,rl.current=Ej,e=r(t,a)}while(lo)}if(rl.current=_l,n=Ue!==null&&Ue.next!==null,va=0,Ke=Ue=Oe=null,Ll=!1,n)throw Error(L(300));return e}function xm(){var e=Lo!==0;return Lo=0,e}function Cr(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Ke===null?Oe.memoizedState=Ke=e:Ke=Ke.next=e,Ke}function er(){if(Ue===null){var e=Oe.alternate;e=e!==null?e.memoizedState:null}else e=Ue.next;var n=Ke===null?Oe.memoizedState:Ke.next;if(n!==null)Ke=n,Ue=e;else{if(e===null)throw Error(L(310));Ue=e,e={memoizedState:Ue.memoizedState,baseState:Ue.baseState,baseQueue:Ue.baseQueue,queue:Ue.queue,next:null},Ke===null?Oe.memoizedState=Ke=e:Ke=Ke.next=e}return Ke}function _o(e,n){return typeof n=="function"?n(e):n}function Eu(e){var n=er(),r=n.queue;if(r===null)throw Error(L(311));r.lastRenderedReducer=e;var t=Ue,a=t.baseQueue,i=r.pending;if(i!==null){if(a!==null){var o=a.next;a.next=i.next,i.next=o}t.baseQueue=a=i,r.pending=null}if(a!==null){i=a.next,t=t.baseState;var s=o=null,l=null,c=i;do{var u=c.lane;if((va&u)===u)l!==null&&(l=l.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),t=c.hasEagerState?c.eagerState:e(t,c.action);else{var p={lane:u,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};l===null?(s=l=p,o=t):l=l.next=p,Oe.lanes|=u,ba|=u}c=c.next}while(c!==null&&c!==i);l===null?o=t:l.next=s,vr(t,n.memoizedState)||(Cn=!0),n.memoizedState=t,n.baseState=o,n.baseQueue=l,r.lastRenderedState=t}if(e=r.interleaved,e!==null){a=e;do i=a.lane,Oe.lanes|=i,ba|=i,a=a.next;while(a!==e)}else a===null&&(r.lanes=0);return[n.memoizedState,r.dispatch]}function Tu(e){var n=er(),r=n.queue;if(r===null)throw Error(L(311));r.lastRenderedReducer=e;var t=r.dispatch,a=r.pending,i=n.memoizedState;if(a!==null){r.pending=null;var o=a=a.next;do i=e(i,o.action),o=o.next;while(o!==a);vr(i,n.memoizedState)||(Cn=!0),n.memoizedState=i,n.baseQueue===null&&(n.baseState=i),r.lastRenderedState=i}return[i,t]}function Ny(){}function By(e,n){var r=Oe,t=er(),a=n(),i=!vr(t.memoizedState,a);if(i&&(t.memoizedState=a,Cn=!0),t=t.queue,jm(Fy.bind(null,r,t,e),[e]),t.getSnapshot!==n||i||Ke!==null&&Ke.memoizedState.tag&1){if(r.flags|=2048,No(9,qy.bind(null,r,t,a,n),void 0,null),Xe===null)throw Error(L(349));va&30||Hy(r,n,a)}return a}function Hy(e,n,r){e.flags|=16384,e={getSnapshot:n,value:r},n=Oe.updateQueue,n===null?(n={lastEffect:null,stores:null},Oe.updateQueue=n,n.stores=[e]):(r=n.stores,r===null?n.stores=[e]:r.push(e))}function qy(e,n,r,t){n.value=r,n.getSnapshot=t,Jy(n)&&zy(e)}function Fy(e,n,r){return r(function(){Jy(n)&&zy(e)})}function Jy(e){var n=e.getSnapshot;e=e.value;try{var r=n();return!vr(e,r)}catch{return!0}}function zy(e){var n=lt(e,1);n!==null&&gr(n,e,1,-1)}function Xf(e){var n=Cr();return typeof e=="function"&&(e=e()),n.memoizedState=n.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:_o,lastRenderedState:e},n.queue=e,e=e.dispatch=jj.bind(null,Oe,e),[n.memoizedState,e]}function No(e,n,r,t){return e={tag:e,create:n,destroy:r,deps:t,next:null},n=Oe.updateQueue,n===null?(n={lastEffect:null,stores:null},Oe.updateQueue=n,n.lastEffect=e.next=e):(r=n.lastEffect,r===null?n.lastEffect=e.next=e:(t=r.next,r.next=e,e.next=t,n.lastEffect=e)),e}function Uy(){return er().memoizedState}function tl(e,n,r,t){var a=Cr();Oe.flags|=e,a.memoizedState=No(1|n,r,void 0,t===void 0?null:t)}function Ec(e,n,r,t){var a=er();t=t===void 0?null:t;var i=void 0;if(Ue!==null){var o=Ue.memoizedState;if(i=o.destroy,t!==null&&Sm(t,o.deps)){a.memoizedState=No(n,r,i,t);return}}Oe.flags|=e,a.memoizedState=No(1|n,r,i,t)}function Zf(e,n){return tl(8390656,8,e,n)}function jm(e,n){return Ec(2048,8,e,n)}function Wy(e,n){return Ec(4,2,e,n)}function Vy(e,n){return Ec(4,4,e,n)}function $y(e,n){if(typeof n=="function")return e=e(),n(e),function(){n(null)};if(n!=null)return e=e(),n.current=e,function(){n.current=null}}function Gy(e,n,r){return r=r!=null?r.concat([e]):null,Ec(4,4,$y.bind(null,n,e),r)}function Cm(){}function Ky(e,n){var r=er();n=n===void 0?null:n;var t=r.memoizedState;return t!==null&&n!==null&&Sm(n,t[1])?t[0]:(r.memoizedState=[e,n],e)}function Yy(e,n){var r=er();n=n===void 0?null:n;var t=r.memoizedState;return t!==null&&n!==null&&Sm(n,t[1])?t[0]:(e=e(),r.memoizedState=[e,n],e)}function Qy(e,n,r){return va&21?(vr(r,n)||(r=ry(),Oe.lanes|=r,ba|=r,e.baseState=!0),n):(e.baseState&&(e.baseState=!1,Cn=!0),e.memoizedState=r)}function wj(e,n){var r=ye;ye=r!==0&&4>r?r:4,e(!0);var t=Iu.transition;Iu.transition={};try{e(!1),n()}finally{ye=r,Iu.transition=t}}function Xy(){return er().memoizedState}function xj(e,n,r){var t=Ht(e);if(r={lane:t,action:r,hasEagerState:!1,eagerState:null,next:null},Zy(e))e1(n,r);else if(r=Oy(e,n,r,t),r!==null){var a=vn();gr(r,e,t,a),n1(r,n,t)}}function jj(e,n,r){var t=Ht(e),a={lane:t,action:r,hasEagerState:!1,eagerState:null,next:null};if(Zy(e))e1(n,a);else{var i=e.alternate;if(e.lanes===0&&(i===null||i.lanes===0)&&(i=n.lastRenderedReducer,i!==null))try{var o=n.lastRenderedState,s=i(o,r);if(a.hasEagerState=!0,a.eagerState=s,vr(s,o)){var l=n.interleaved;l===null?(a.next=a,hm(n)):(a.next=l.next,l.next=a),n.interleaved=a;return}}catch{}finally{}r=Oy(e,n,a,t),r!==null&&(a=vn(),gr(r,e,t,a),n1(r,n,t))}}function Zy(e){var n=e.alternate;return e===Oe||n!==null&&n===Oe}function e1(e,n){lo=Ll=!0;var r=e.pending;r===null?n.next=n:(n.next=r.next,r.next=n),e.pending=n}function n1(e,n,r){if(r&4194240){var t=n.lanes;t&=e.pendingLanes,r|=t,n.lanes=r,rm(e,r)}}var _l={readContext:Zn,useCallback:on,useContext:on,useEffect:on,useImperativeHandle:on,useInsertionEffect:on,useLayoutEffect:on,useMemo:on,useReducer:on,useRef:on,useState:on,useDebugValue:on,useDeferredValue:on,useTransition:on,useMutableSource:on,useSyncExternalStore:on,useId:on,unstable_isNewReconciler:!1},Cj={readContext:Zn,useCallback:function(e,n){return Cr().memoizedState=[e,n===void 0?null:n],e},useContext:Zn,useEffect:Zf,useImperativeHandle:function(e,n,r){return r=r!=null?r.concat([e]):null,tl(4194308,4,$y.bind(null,n,e),r)},useLayoutEffect:function(e,n){return tl(4194308,4,e,n)},useInsertionEffect:function(e,n){return tl(4,2,e,n)},useMemo:function(e,n){var r=Cr();return n=n===void 0?null:n,e=e(),r.memoizedState=[e,n],e},useReducer:function(e,n,r){var t=Cr();return n=r!==void 0?r(n):n,t.memoizedState=t.baseState=n,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},t.queue=e,e=e.dispatch=xj.bind(null,Oe,e),[t.memoizedState,e]},useRef:function(e){var n=Cr();return e={current:e},n.memoizedState=e},useState:Xf,useDebugValue:Cm,useDeferredValue:function(e){return Cr().memoizedState=e},useTransition:function(){var e=Xf(!1),n=e[0];return e=wj.bind(null,e[1]),Cr().memoizedState=e,[n,e]},useMutableSource:function(){},useSyncExternalStore:function(e,n,r){var t=Oe,a=Cr();if(Re){if(r===void 0)throw Error(L(407));r=r()}else{if(r=n(),Xe===null)throw Error(L(349));va&30||Hy(t,n,r)}a.memoizedState=r;var i={value:r,getSnapshot:n};return a.queue=i,Zf(Fy.bind(null,t,i,e),[e]),t.flags|=2048,No(9,qy.bind(null,t,i,r,n),void 0,null),r},useId:function(){var e=Cr(),n=Xe.identifierPrefix;if(Re){var r=Xr,t=Qr;r=(t&~(1<<32-mr(t)-1)).toString(32)+r,n=":"+n+"R"+r,r=Lo++,0<r&&(n+="H"+r.toString(32)),n+=":"}else r=Sj++,n=":"+n+"r"+r.toString(32)+":";return e.memoizedState=n},unstable_isNewReconciler:!1},Ij={readContext:Zn,useCallback:Ky,useContext:Zn,useEffect:jm,useImperativeHandle:Gy,useInsertionEffect:Wy,useLayoutEffect:Vy,useMemo:Yy,useReducer:Eu,useRef:Uy,useState:function(){return Eu(_o)},useDebugValue:Cm,useDeferredValue:function(e){var n=er();return Qy(n,Ue.memoizedState,e)},useTransition:function(){var e=Eu(_o)[0],n=er().memoizedState;return[e,n]},useMutableSource:Ny,useSyncExternalStore:By,useId:Xy,unstable_isNewReconciler:!1},Ej={readContext:Zn,useCallback:Ky,useContext:Zn,useEffect:jm,useImperativeHandle:Gy,useInsertionEffect:Wy,useLayoutEffect:Vy,useMemo:Yy,useReducer:Tu,useRef:Uy,useState:function(){return Tu(_o)},useDebugValue:Cm,useDeferredValue:function(e){var n=er();return Ue===null?n.memoizedState=e:Qy(n,Ue.memoizedState,e)},useTransition:function(){var e=Tu(_o)[0],n=er().memoizedState;return[e,n]},useMutableSource:Ny,useSyncExternalStore:By,useId:Xy,unstable_isNewReconciler:!1};function lr(e,n){if(e&&e.defaultProps){n=Le({},n),e=e.defaultProps;for(var r in e)n[r]===void 0&&(n[r]=e[r]);return n}return n}function zp(e,n,r,t){n=e.memoizedState,r=r(t,n),r=r==null?n:Le({},n,r),e.memoizedState=r,e.lanes===0&&(e.updateQueue.baseState=r)}var Tc={isMounted:function(e){return(e=e._reactInternals)?ja(e)===e:!1},enqueueSetState:function(e,n,r){e=e._reactInternals;var t=vn(),a=Ht(e),i=rt(t,a);i.payload=n,r!=null&&(i.callback=r),n=Nt(e,i,a),n!==null&&(gr(n,e,a,t),nl(n,e,a))},enqueueReplaceState:function(e,n,r){e=e._reactInternals;var t=vn(),a=Ht(e),i=rt(t,a);i.tag=1,i.payload=n,r!=null&&(i.callback=r),n=Nt(e,i,a),n!==null&&(gr(n,e,a,t),nl(n,e,a))},enqueueForceUpdate:function(e,n){e=e._reactInternals;var r=vn(),t=Ht(e),a=rt(r,t);a.tag=2,n!=null&&(a.callback=n),n=Nt(e,a,t),n!==null&&(gr(n,e,t,r),nl(n,e,t))}};function eh(e,n,r,t,a,i,o){return e=e.stateNode,typeof e.shouldComponentUpdate=="function"?e.shouldComponentUpdate(t,i,o):n.prototype&&n.prototype.isPureReactComponent?!Mo(r,t)||!Mo(a,i):!0}function r1(e,n,r){var t=!1,a=Wt,i=n.contextType;return typeof i=="object"&&i!==null?i=Zn(i):(a=En(n)?fa:dn.current,t=n.contextTypes,i=(t=t!=null)?di(e,a):Wt),n=new n(r,i),e.memoizedState=n.state!==null&&n.state!==void 0?n.state:null,n.updater=Tc,e.stateNode=n,n._reactInternals=e,t&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=i),n}function nh(e,n,r,t){e=n.state,typeof n.componentWillReceiveProps=="function"&&n.componentWillReceiveProps(r,t),typeof n.UNSAFE_componentWillReceiveProps=="function"&&n.UNSAFE_componentWillReceiveProps(r,t),n.state!==e&&Tc.enqueueReplaceState(n,n.state,null)}function Up(e,n,r,t){var a=e.stateNode;a.props=r,a.state=e.memoizedState,a.refs={},vm(e);var i=n.contextType;typeof i=="object"&&i!==null?a.context=Zn(i):(i=En(n)?fa:dn.current,a.context=di(e,i)),a.state=e.memoizedState,i=n.getDerivedStateFromProps,typeof i=="function"&&(zp(e,n,i,r),a.state=e.memoizedState),typeof n.getDerivedStateFromProps=="function"||typeof a.getSnapshotBeforeUpdate=="function"||typeof a.UNSAFE_componentWillMount!="function"&&typeof a.componentWillMount!="function"||(n=a.state,typeof a.componentWillMount=="function"&&a.componentWillMount(),typeof a.UNSAFE_componentWillMount=="function"&&a.UNSAFE_componentWillMount(),n!==a.state&&Tc.enqueueReplaceState(a,a.state,null),Dl(e,r,a,t),a.state=e.memoizedState),typeof a.componentDidMount=="function"&&(e.flags|=4194308)}function hi(e,n){try{var r="",t=n;do r+=nx(t),t=t.return;while(t);var a=r}catch(i){a=`
Error generating stack: `+i.message+`
`+i.stack}return{value:e,source:n,stack:a,digest:null}}function Mu(e,n,r){return{value:e,source:null,stack:r??null,digest:n??null}}function Wp(e,n){try{console.error(n.value)}catch(r){setTimeout(function(){throw r})}}var Tj=typeof WeakMap=="function"?WeakMap:Map;function t1(e,n,r){r=rt(-1,r),r.tag=3,r.payload={element:null};var t=n.value;return r.callback=function(){Bl||(Bl=!0,nd=t),Wp(e,n)},r}function a1(e,n,r){r=rt(-1,r),r.tag=3;var t=e.type.getDerivedStateFromError;if(typeof t=="function"){var a=n.value;r.payload=function(){return t(a)},r.callback=function(){Wp(e,n)}}var i=e.stateNode;return i!==null&&typeof i.componentDidCatch=="function"&&(r.callback=function(){Wp(e,n),typeof t!="function"&&(Bt===null?Bt=new Set([this]):Bt.add(this));var o=n.stack;this.componentDidCatch(n.value,{componentStack:o!==null?o:""})}),r}function rh(e,n,r){var t=e.pingCache;if(t===null){t=e.pingCache=new Tj;var a=new Set;t.set(n,a)}else a=t.get(n),a===void 0&&(a=new Set,t.set(n,a));a.has(r)||(a.add(r),e=Jj.bind(null,e,n,r),n.then(e,e))}function th(e){do{var n;if((n=e.tag===13)&&(n=e.memoizedState,n=n!==null?n.dehydrated!==null:!0),n)return e;e=e.return}while(e!==null);return null}function ah(e,n,r,t,a){return e.mode&1?(e.flags|=65536,e.lanes=a,e):(e===n?e.flags|=65536:(e.flags|=128,r.flags|=131072,r.flags&=-52805,r.tag===1&&(r.alternate===null?r.tag=17:(n=rt(-1,1),n.tag=2,Nt(r,n,1))),r.lanes|=1),e)}var Mj=mt.ReactCurrentOwner,Cn=!1;function gn(e,n,r,t){n.child=e===null?Dy(n,null,r,t):gi(n,e.child,r,t)}function ih(e,n,r,t,a){r=r.render;var i=n.ref;return ai(n,a),t=wm(e,n,r,t,i,a),r=xm(),e!==null&&!Cn?(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~a,ct(e,n,a)):(Re&&r&&um(n),n.flags|=1,gn(e,n,t,a),n.child)}function oh(e,n,r,t,a){if(e===null){var i=r.type;return typeof i=="function"&&!Dm(i)&&i.defaultProps===void 0&&r.compare===null&&r.defaultProps===void 0?(n.tag=15,n.type=i,i1(e,n,i,t,a)):(e=sl(r.type,null,t,n,n.mode,a),e.ref=n.ref,e.return=n,n.child=e)}if(i=e.child,!(e.lanes&a)){var o=i.memoizedProps;if(r=r.compare,r=r!==null?r:Mo,r(o,t)&&e.ref===n.ref)return ct(e,n,a)}return n.flags|=1,e=qt(i,t),e.ref=n.ref,e.return=n,n.child=e}function i1(e,n,r,t,a){if(e!==null){var i=e.memoizedProps;if(Mo(i,t)&&e.ref===n.ref)if(Cn=!1,n.pendingProps=t=i,(e.lanes&a)!==0)e.flags&131072&&(Cn=!0);else return n.lanes=e.lanes,ct(e,n,a)}return Vp(e,n,r,t,a)}function o1(e,n,r){var t=n.pendingProps,a=t.children,i=e!==null?e.memoizedState:null;if(t.mode==="hidden")if(!(n.mode&1))n.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ie(Qa,Ln),Ln|=r;else{if(!(r&1073741824))return e=i!==null?i.baseLanes|r:r,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e,cachePool:null,transitions:null},n.updateQueue=null,Ie(Qa,Ln),Ln|=e,null;n.memoizedState={baseLanes:0,cachePool:null,transitions:null},t=i!==null?i.baseLanes:r,Ie(Qa,Ln),Ln|=t}else i!==null?(t=i.baseLanes|r,n.memoizedState=null):t=r,Ie(Qa,Ln),Ln|=t;return gn(e,n,a,r),n.child}function s1(e,n){var r=n.ref;(e===null&&r!==null||e!==null&&e.ref!==r)&&(n.flags|=512,n.flags|=2097152)}function Vp(e,n,r,t,a){var i=En(r)?fa:dn.current;return i=di(n,i),ai(n,a),r=wm(e,n,r,t,i,a),t=xm(),e!==null&&!Cn?(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~a,ct(e,n,a)):(Re&&t&&um(n),n.flags|=1,gn(e,n,r,a),n.child)}function sh(e,n,r,t,a){if(En(r)){var i=!0;Tl(n)}else i=!1;if(ai(n,a),n.stateNode===null)al(e,n),r1(n,r,t),Up(n,r,t,a),t=!0;else if(e===null){var o=n.stateNode,s=n.memoizedProps;o.props=s;var l=o.context,c=r.contextType;typeof c=="object"&&c!==null?c=Zn(c):(c=En(r)?fa:dn.current,c=di(n,c));var u=r.getDerivedStateFromProps,p=typeof u=="function"||typeof o.getSnapshotBeforeUpdate=="function";p||typeof o.UNSAFE_componentWillReceiveProps!="function"&&typeof o.componentWillReceiveProps!="function"||(s!==t||l!==c)&&nh(n,o,t,c),jt=!1;var d=n.memoizedState;o.state=d,Dl(n,t,o,a),l=n.memoizedState,s!==t||d!==l||In.current||jt?(typeof u=="function"&&(zp(n,r,u,t),l=n.memoizedState),(s=jt||eh(n,r,s,t,d,l,c))?(p||typeof o.UNSAFE_componentWillMount!="function"&&typeof o.componentWillMount!="function"||(typeof o.componentWillMount=="function"&&o.componentWillMount(),typeof o.UNSAFE_componentWillMount=="function"&&o.UNSAFE_componentWillMount()),typeof o.componentDidMount=="function"&&(n.flags|=4194308)):(typeof o.componentDidMount=="function"&&(n.flags|=4194308),n.memoizedProps=t,n.memoizedState=l),o.props=t,o.state=l,o.context=c,t=s):(typeof o.componentDidMount=="function"&&(n.flags|=4194308),t=!1)}else{o=n.stateNode,Ly(e,n),s=n.memoizedProps,c=n.type===n.elementType?s:lr(n.type,s),o.props=c,p=n.pendingProps,d=o.context,l=r.contextType,typeof l=="object"&&l!==null?l=Zn(l):(l=En(r)?fa:dn.current,l=di(n,l));var m=r.getDerivedStateFromProps;(u=typeof m=="function"||typeof o.getSnapshotBeforeUpdate=="function")||typeof o.UNSAFE_componentWillReceiveProps!="function"&&typeof o.componentWillReceiveProps!="function"||(s!==p||d!==l)&&nh(n,o,t,l),jt=!1,d=n.memoizedState,o.state=d,Dl(n,t,o,a);var g=n.memoizedState;s!==p||d!==g||In.current||jt?(typeof m=="function"&&(zp(n,r,m,t),g=n.memoizedState),(c=jt||eh(n,r,c,t,d,g,l)||!1)?(u||typeof o.UNSAFE_componentWillUpdate!="function"&&typeof o.componentWillUpdate!="function"||(typeof o.componentWillUpdate=="function"&&o.componentWillUpdate(t,g,l),typeof o.UNSAFE_componentWillUpdate=="function"&&o.UNSAFE_componentWillUpdate(t,g,l)),typeof o.componentDidUpdate=="function"&&(n.flags|=4),typeof o.getSnapshotBeforeUpdate=="function"&&(n.flags|=1024)):(typeof o.componentDidUpdate!="function"||s===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),typeof o.getSnapshotBeforeUpdate!="function"||s===e.memoizedProps&&d===e.memoizedState||(n.flags|=1024),n.memoizedProps=t,n.memoizedState=g),o.props=t,o.state=g,o.context=l,t=c):(typeof o.componentDidUpdate!="function"||s===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),typeof o.getSnapshotBeforeUpdate!="function"||s===e.memoizedProps&&d===e.memoizedState||(n.flags|=1024),t=!1)}return $p(e,n,r,t,i,a)}function $p(e,n,r,t,a,i){s1(e,n);var o=(n.flags&128)!==0;if(!t&&!o)return a&&Vf(n,r,!1),ct(e,n,i);t=n.stateNode,Mj.current=n;var s=o&&typeof r.getDerivedStateFromError!="function"?null:t.render();return n.flags|=1,e!==null&&o?(n.child=gi(n,e.child,null,i),n.child=gi(n,null,s,i)):gn(e,n,s,i),n.memoizedState=t.state,a&&Vf(n,r,!0),n.child}function l1(e){var n=e.stateNode;n.pendingContext?Wf(e,n.pendingContext,n.pendingContext!==n.context):n.context&&Wf(e,n.context,!1),bm(e,n.containerInfo)}function lh(e,n,r,t,a){return mi(),dm(a),n.flags|=256,gn(e,n,r,t),n.child}var Gp={dehydrated:null,treeContext:null,retryLane:0};function Kp(e){return{baseLanes:e,cachePool:null,transitions:null}}function c1(e,n,r){var t=n.pendingProps,a=De.current,i=!1,o=(n.flags&128)!==0,s;if((s=o)||(s=e!==null&&e.memoizedState===null?!1:(a&2)!==0),s?(i=!0,n.flags&=-129):(e===null||e.memoizedState!==null)&&(a|=1),Ie(De,a&1),e===null)return Fp(n),e=n.memoizedState,e!==null&&(e=e.dehydrated,e!==null)?(n.mode&1?e.data==="$!"?n.lanes=8:n.lanes=1073741824:n.lanes=1,null):(o=t.children,e=t.fallback,i?(t=n.mode,i=n.child,o={mode:"hidden",children:o},!(t&1)&&i!==null?(i.childLanes=0,i.pendingProps=o):i=Pc(o,t,0,null),e=da(e,t,r,null),i.return=n,e.return=n,i.sibling=e,n.child=i,n.child.memoizedState=Kp(r),n.memoizedState=Gp,e):Im(n,o));if(a=e.memoizedState,a!==null&&(s=a.dehydrated,s!==null))return Aj(e,n,o,t,s,a,r);if(i){i=t.fallback,o=n.mode,a=e.child,s=a.sibling;var l={mode:"hidden",children:t.children};return!(o&1)&&n.child!==a?(t=n.child,t.childLanes=0,t.pendingProps=l,n.deletions=null):(t=qt(a,l),t.subtreeFlags=a.subtreeFlags&14680064),s!==null?i=qt(s,i):(i=da(i,o,r,null),i.flags|=2),i.return=n,t.return=n,t.sibling=i,n.child=t,t=i,i=n.child,o=e.child.memoizedState,o=o===null?Kp(r):{baseLanes:o.baseLanes|r,cachePool:null,transitions:o.transitions},i.memoizedState=o,i.childLanes=e.childLanes&~r,n.memoizedState=Gp,t}return i=e.child,e=i.sibling,t=qt(i,{mode:"visible",children:t.children}),!(n.mode&1)&&(t.lanes=r),t.return=n,t.sibling=null,e!==null&&(r=n.deletions,r===null?(n.deletions=[e],n.flags|=16):r.push(e)),n.child=t,n.memoizedState=null,t}function Im(e,n){return n=Pc({mode:"visible",children:n},e.mode,0,null),n.return=e,e.child=n}function Ls(e,n,r,t){return t!==null&&dm(t),gi(n,e.child,null,r),e=Im(n,n.pendingProps.children),e.flags|=2,n.memoizedState=null,e}function Aj(e,n,r,t,a,i,o){if(r)return n.flags&256?(n.flags&=-257,t=Mu(Error(L(422))),Ls(e,n,o,t)):n.memoizedState!==null?(n.child=e.child,n.flags|=128,null):(i=t.fallback,a=n.mode,t=Pc({mode:"visible",children:t.children},a,0,null),i=da(i,a,o,null),i.flags|=2,t.return=n,i.return=n,t.sibling=i,n.child=t,n.mode&1&&gi(n,e.child,null,o),n.child.memoizedState=Kp(o),n.memoizedState=Gp,i);if(!(n.mode&1))return Ls(e,n,o,null);if(a.data==="$!"){if(t=a.nextSibling&&a.nextSibling.dataset,t)var s=t.dgst;return t=s,i=Error(L(419)),t=Mu(i,t,void 0),Ls(e,n,o,t)}if(s=(o&e.childLanes)!==0,Cn||s){if(t=Xe,t!==null){switch(o&-o){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}a=a&(t.suspendedLanes|o)?0:a,a!==0&&a!==i.retryLane&&(i.retryLane=a,lt(e,a),gr(t,e,a,-1))}return Rm(),t=Mu(Error(L(421))),Ls(e,n,o,t)}return a.data==="$?"?(n.flags|=128,n.child=e.child,n=zj.bind(null,e),a._reactRetry=n,null):(e=i.treeContext,_n=_t(a.nextSibling),Bn=n,Re=!0,ur=null,e!==null&&(Vn[$n++]=Qr,Vn[$n++]=Xr,Vn[$n++]=ha,Qr=e.id,Xr=e.overflow,ha=n),n=Im(n,t.children),n.flags|=4096,n)}function ch(e,n,r){e.lanes|=n;var t=e.alternate;t!==null&&(t.lanes|=n),Jp(e.return,n,r)}function Au(e,n,r,t,a){var i=e.memoizedState;i===null?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:t,tail:r,tailMode:a}:(i.isBackwards=n,i.rendering=null,i.renderingStartTime=0,i.last=t,i.tail=r,i.tailMode=a)}function u1(e,n,r){var t=n.pendingProps,a=t.revealOrder,i=t.tail;if(gn(e,n,t.children,r),t=De.current,t&2)t=t&1|2,n.flags|=128;else{if(e!==null&&e.flags&128)e:for(e=n.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&ch(e,r,n);else if(e.tag===19)ch(e,r,n);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;e.sibling===null;){if(e.return===null||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}t&=1}if(Ie(De,t),!(n.mode&1))n.memoizedState=null;else switch(a){case"forwards":for(r=n.child,a=null;r!==null;)e=r.alternate,e!==null&&Ol(e)===null&&(a=r),r=r.sibling;r=a,r===null?(a=n.child,n.child=null):(a=r.sibling,r.sibling=null),Au(n,!1,a,r,i);break;case"backwards":for(r=null,a=n.child,n.child=null;a!==null;){if(e=a.alternate,e!==null&&Ol(e)===null){n.child=a;break}e=a.sibling,a.sibling=r,r=a,a=e}Au(n,!0,r,null,i);break;case"together":Au(n,!1,null,null,void 0);break;default:n.memoizedState=null}return n.child}function al(e,n){!(n.mode&1)&&e!==null&&(e.alternate=null,n.alternate=null,n.flags|=2)}function ct(e,n,r){if(e!==null&&(n.dependencies=e.dependencies),ba|=n.lanes,!(r&n.childLanes))return null;if(e!==null&&n.child!==e.child)throw Error(L(153));if(n.child!==null){for(e=n.child,r=qt(e,e.pendingProps),n.child=r,r.return=n;e.sibling!==null;)e=e.sibling,r=r.sibling=qt(e,e.pendingProps),r.return=n;r.sibling=null}return n.child}function Pj(e,n,r){switch(n.tag){case 3:l1(n),mi();break;case 5:_y(n);break;case 1:En(n.type)&&Tl(n);break;case 4:bm(n,n.stateNode.containerInfo);break;case 10:var t=n.type._context,a=n.memoizedProps.value;Ie(Pl,t._currentValue),t._currentValue=a;break;case 13:if(t=n.memoizedState,t!==null)return t.dehydrated!==null?(Ie(De,De.current&1),n.flags|=128,null):r&n.child.childLanes?c1(e,n,r):(Ie(De,De.current&1),e=ct(e,n,r),e!==null?e.sibling:null);Ie(De,De.current&1);break;case 19:if(t=(r&n.childLanes)!==0,e.flags&128){if(t)return u1(e,n,r);n.flags|=128}if(a=n.memoizedState,a!==null&&(a.rendering=null,a.tail=null,a.lastEffect=null),Ie(De,De.current),t)break;return null;case 22:case 23:return n.lanes=0,o1(e,n,r)}return ct(e,n,r)}var p1,Yp,d1,m1;p1=function(e,n){for(var r=n.child;r!==null;){if(r.tag===5||r.tag===6)e.appendChild(r.stateNode);else if(r.tag!==4&&r.child!==null){r.child.return=r,r=r.child;continue}if(r===n)break;for(;r.sibling===null;){if(r.return===null||r.return===n)return;r=r.return}r.sibling.return=r.return,r=r.sibling}};Yp=function(){};d1=function(e,n,r,t){var a=e.memoizedProps;if(a!==t){e=n.stateNode,la(Dr.current);var i=null;switch(r){case"input":a=bp(e,a),t=bp(e,t),i=[];break;case"select":a=Le({},a,{value:void 0}),t=Le({},t,{value:void 0}),i=[];break;case"textarea":a=Sp(e,a),t=Sp(e,t),i=[];break;default:typeof a.onClick!="function"&&typeof t.onClick=="function"&&(e.onclick=Il)}xp(r,t);var o;r=null;for(c in a)if(!t.hasOwnProperty(c)&&a.hasOwnProperty(c)&&a[c]!=null)if(c==="style"){var s=a[c];for(o in s)s.hasOwnProperty(o)&&(r||(r={}),r[o]="")}else c!=="dangerouslySetInnerHTML"&&c!=="children"&&c!=="suppressContentEditableWarning"&&c!=="suppressHydrationWarning"&&c!=="autoFocus"&&(wo.hasOwnProperty(c)?i||(i=[]):(i=i||[]).push(c,null));for(c in t){var l=t[c];if(s=a!=null?a[c]:void 0,t.hasOwnProperty(c)&&l!==s&&(l!=null||s!=null))if(c==="style")if(s){for(o in s)!s.hasOwnProperty(o)||l&&l.hasOwnProperty(o)||(r||(r={}),r[o]="");for(o in l)l.hasOwnProperty(o)&&s[o]!==l[o]&&(r||(r={}),r[o]=l[o])}else r||(i||(i=[]),i.push(c,r)),r=l;else c==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,s=s?s.__html:void 0,l!=null&&s!==l&&(i=i||[]).push(c,l)):c==="children"?typeof l!="string"&&typeof l!="number"||(i=i||[]).push(c,""+l):c!=="suppressContentEditableWarning"&&c!=="suppressHydrationWarning"&&(wo.hasOwnProperty(c)?(l!=null&&c==="onScroll"&&Ee("scroll",e),i||s===l||(i=[])):(i=i||[]).push(c,l))}r&&(i=i||[]).push("style",r);var c=i;(n.updateQueue=c)&&(n.flags|=4)}};m1=function(e,n,r,t){r!==t&&(n.flags|=4)};function Ui(e,n){if(!Re)switch(e.tailMode){case"hidden":n=e.tail;for(var r=null;n!==null;)n.alternate!==null&&(r=n),n=n.sibling;r===null?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var t=null;r!==null;)r.alternate!==null&&(t=r),r=r.sibling;t===null?n||e.tail===null?e.tail=null:e.tail.sibling=null:t.sibling=null}}function sn(e){var n=e.alternate!==null&&e.alternate.child===e.child,r=0,t=0;if(n)for(var a=e.child;a!==null;)r|=a.lanes|a.childLanes,t|=a.subtreeFlags&14680064,t|=a.flags&14680064,a.return=e,a=a.sibling;else for(a=e.child;a!==null;)r|=a.lanes|a.childLanes,t|=a.subtreeFlags,t|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=t,e.childLanes=r,n}function Rj(e,n,r){var t=n.pendingProps;switch(pm(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return sn(n),null;case 1:return En(n.type)&&El(),sn(n),null;case 3:return t=n.stateNode,fi(),Te(In),Te(dn),km(),t.pendingContext&&(t.context=t.pendingContext,t.pendingContext=null),(e===null||e.child===null)&&(Ds(n)?n.flags|=4:e===null||e.memoizedState.isDehydrated&&!(n.flags&256)||(n.flags|=1024,ur!==null&&(ad(ur),ur=null))),Yp(e,n),sn(n),null;case 5:ym(n);var a=la(Oo.current);if(r=n.type,e!==null&&n.stateNode!=null)d1(e,n,r,t,a),e.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!t){if(n.stateNode===null)throw Error(L(166));return sn(n),null}if(e=la(Dr.current),Ds(n)){t=n.stateNode,r=n.type;var i=n.memoizedProps;switch(t[Mr]=n,t[Ro]=i,e=(n.mode&1)!==0,r){case"dialog":Ee("cancel",t),Ee("close",t);break;case"iframe":case"object":case"embed":Ee("load",t);break;case"video":case"audio":for(a=0;a<no.length;a++)Ee(no[a],t);break;case"source":Ee("error",t);break;case"img":case"image":case"link":Ee("error",t),Ee("load",t);break;case"details":Ee("toggle",t);break;case"input":bf(t,i),Ee("invalid",t);break;case"select":t._wrapperState={wasMultiple:!!i.multiple},Ee("invalid",t);break;case"textarea":kf(t,i),Ee("invalid",t)}xp(r,i),a=null;for(var o in i)if(i.hasOwnProperty(o)){var s=i[o];o==="children"?typeof s=="string"?t.textContent!==s&&(i.suppressHydrationWarning!==!0&&Rs(t.textContent,s,e),a=["children",s]):typeof s=="number"&&t.textContent!==""+s&&(i.suppressHydrationWarning!==!0&&Rs(t.textContent,s,e),a=["children",""+s]):wo.hasOwnProperty(o)&&s!=null&&o==="onScroll"&&Ee("scroll",t)}switch(r){case"input":js(t),yf(t,i,!0);break;case"textarea":js(t),Sf(t);break;case"select":case"option":break;default:typeof i.onClick=="function"&&(t.onclick=Il)}t=a,n.updateQueue=t,t!==null&&(n.flags|=4)}else{o=a.nodeType===9?a:a.ownerDocument,e==="http://www.w3.org/1999/xhtml"&&(e=Fb(r)),e==="http://www.w3.org/1999/xhtml"?r==="script"?(e=o.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):typeof t.is=="string"?e=o.createElement(r,{is:t.is}):(e=o.createElement(r),r==="select"&&(o=e,t.multiple?o.multiple=!0:t.size&&(o.size=t.size))):e=o.createElementNS(e,r),e[Mr]=n,e[Ro]=t,p1(e,n,!1,!1),n.stateNode=e;e:{switch(o=jp(r,t),r){case"dialog":Ee("cancel",e),Ee("close",e),a=t;break;case"iframe":case"object":case"embed":Ee("load",e),a=t;break;case"video":case"audio":for(a=0;a<no.length;a++)Ee(no[a],e);a=t;break;case"source":Ee("error",e),a=t;break;case"img":case"image":case"link":Ee("error",e),Ee("load",e),a=t;break;case"details":Ee("toggle",e),a=t;break;case"input":bf(e,t),a=bp(e,t),Ee("invalid",e);break;case"option":a=t;break;case"select":e._wrapperState={wasMultiple:!!t.multiple},a=Le({},t,{value:void 0}),Ee("invalid",e);break;case"textarea":kf(e,t),a=Sp(e,t),Ee("invalid",e);break;default:a=t}xp(r,a),s=a;for(i in s)if(s.hasOwnProperty(i)){var l=s[i];i==="style"?Ub(e,l):i==="dangerouslySetInnerHTML"?(l=l?l.__html:void 0,l!=null&&Jb(e,l)):i==="children"?typeof l=="string"?(r!=="textarea"||l!=="")&&xo(e,l):typeof l=="number"&&xo(e,""+l):i!=="suppressContentEditableWarning"&&i!=="suppressHydrationWarning"&&i!=="autoFocus"&&(wo.hasOwnProperty(i)?l!=null&&i==="onScroll"&&Ee("scroll",e):l!=null&&Yd(e,i,l,o))}switch(r){case"input":js(e),yf(e,t,!1);break;case"textarea":js(e),Sf(e);break;case"option":t.value!=null&&e.setAttribute("value",""+Ut(t.value));break;case"select":e.multiple=!!t.multiple,i=t.value,i!=null?ei(e,!!t.multiple,i,!1):t.defaultValue!=null&&ei(e,!!t.multiple,t.defaultValue,!0);break;default:typeof a.onClick=="function"&&(e.onclick=Il)}switch(r){case"button":case"input":case"select":case"textarea":t=!!t.autoFocus;break e;case"img":t=!0;break e;default:t=!1}}t&&(n.flags|=4)}n.ref!==null&&(n.flags|=512,n.flags|=2097152)}return sn(n),null;case 6:if(e&&n.stateNode!=null)m1(e,n,e.memoizedProps,t);else{if(typeof t!="string"&&n.stateNode===null)throw Error(L(166));if(r=la(Oo.current),la(Dr.current),Ds(n)){if(t=n.stateNode,r=n.memoizedProps,t[Mr]=n,(i=t.nodeValue!==r)&&(e=Bn,e!==null))switch(e.tag){case 3:Rs(t.nodeValue,r,(e.mode&1)!==0);break;case 5:e.memoizedProps.suppressHydrationWarning!==!0&&Rs(t.nodeValue,r,(e.mode&1)!==0)}i&&(n.flags|=4)}else t=(r.nodeType===9?r:r.ownerDocument).createTextNode(t),t[Mr]=n,n.stateNode=t}return sn(n),null;case 13:if(Te(De),t=n.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if(Re&&_n!==null&&n.mode&1&&!(n.flags&128))Py(),mi(),n.flags|=98560,i=!1;else if(i=Ds(n),t!==null&&t.dehydrated!==null){if(e===null){if(!i)throw Error(L(318));if(i=n.memoizedState,i=i!==null?i.dehydrated:null,!i)throw Error(L(317));i[Mr]=n}else mi(),!(n.flags&128)&&(n.memoizedState=null),n.flags|=4;sn(n),i=!1}else ur!==null&&(ad(ur),ur=null),i=!0;if(!i)return n.flags&65536?n:null}return n.flags&128?(n.lanes=r,n):(t=t!==null,t!==(e!==null&&e.memoizedState!==null)&&t&&(n.child.flags|=8192,n.mode&1&&(e===null||De.current&1?Ve===0&&(Ve=3):Rm())),n.updateQueue!==null&&(n.flags|=4),sn(n),null);case 4:return fi(),Yp(e,n),e===null&&Ao(n.stateNode.containerInfo),sn(n),null;case 10:return fm(n.type._context),sn(n),null;case 17:return En(n.type)&&El(),sn(n),null;case 19:if(Te(De),i=n.memoizedState,i===null)return sn(n),null;if(t=(n.flags&128)!==0,o=i.rendering,o===null)if(t)Ui(i,!1);else{if(Ve!==0||e!==null&&e.flags&128)for(e=n.child;e!==null;){if(o=Ol(e),o!==null){for(n.flags|=128,Ui(i,!1),t=o.updateQueue,t!==null&&(n.updateQueue=t,n.flags|=4),n.subtreeFlags=0,t=r,r=n.child;r!==null;)i=r,e=t,i.flags&=14680066,o=i.alternate,o===null?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=o.childLanes,i.lanes=o.lanes,i.child=o.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=o.memoizedProps,i.memoizedState=o.memoizedState,i.updateQueue=o.updateQueue,i.type=o.type,e=o.dependencies,i.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),r=r.sibling;return Ie(De,De.current&1|2),n.child}e=e.sibling}i.tail!==null&&He()>vi&&(n.flags|=128,t=!0,Ui(i,!1),n.lanes=4194304)}else{if(!t)if(e=Ol(o),e!==null){if(n.flags|=128,t=!0,r=e.updateQueue,r!==null&&(n.updateQueue=r,n.flags|=4),Ui(i,!0),i.tail===null&&i.tailMode==="hidden"&&!o.alternate&&!Re)return sn(n),null}else 2*He()-i.renderingStartTime>vi&&r!==1073741824&&(n.flags|=128,t=!0,Ui(i,!1),n.lanes=4194304);i.isBackwards?(o.sibling=n.child,n.child=o):(r=i.last,r!==null?r.sibling=o:n.child=o,i.last=o)}return i.tail!==null?(n=i.tail,i.rendering=n,i.tail=n.sibling,i.renderingStartTime=He(),n.sibling=null,r=De.current,Ie(De,t?r&1|2:r&1),n):(sn(n),null);case 22:case 23:return Pm(),t=n.memoizedState!==null,e!==null&&e.memoizedState!==null!==t&&(n.flags|=8192),t&&n.mode&1?Ln&1073741824&&(sn(n),n.subtreeFlags&6&&(n.flags|=8192)):sn(n),null;case 24:return null;case 25:return null}throw Error(L(156,n.tag))}function Dj(e,n){switch(pm(n),n.tag){case 1:return En(n.type)&&El(),e=n.flags,e&65536?(n.flags=e&-65537|128,n):null;case 3:return fi(),Te(In),Te(dn),km(),e=n.flags,e&65536&&!(e&128)?(n.flags=e&-65537|128,n):null;case 5:return ym(n),null;case 13:if(Te(De),e=n.memoizedState,e!==null&&e.dehydrated!==null){if(n.alternate===null)throw Error(L(340));mi()}return e=n.flags,e&65536?(n.flags=e&-65537|128,n):null;case 19:return Te(De),null;case 4:return fi(),null;case 10:return fm(n.type._context),null;case 22:case 23:return Pm(),null;case 24:return null;default:return null}}var _s=!1,cn=!1,Oj=typeof WeakSet=="function"?WeakSet:Set,W=null;function Ya(e,n){var r=e.ref;if(r!==null)if(typeof r=="function")try{r(null)}catch(t){_e(e,n,t)}else r.current=null}function Qp(e,n,r){try{r()}catch(t){_e(e,n,t)}}var uh=!1;function Lj(e,n){if(Op=xl,e=by(),cm(e)){if("selectionStart"in e)var r={start:e.selectionStart,end:e.selectionEnd};else e:{r=(r=e.ownerDocument)&&r.defaultView||window;var t=r.getSelection&&r.getSelection();if(t&&t.rangeCount!==0){r=t.anchorNode;var a=t.anchorOffset,i=t.focusNode;t=t.focusOffset;try{r.nodeType,i.nodeType}catch{r=null;break e}var o=0,s=-1,l=-1,c=0,u=0,p=e,d=null;n:for(;;){for(var m;p!==r||a!==0&&p.nodeType!==3||(s=o+a),p!==i||t!==0&&p.nodeType!==3||(l=o+t),p.nodeType===3&&(o+=p.nodeValue.length),(m=p.firstChild)!==null;)d=p,p=m;for(;;){if(p===e)break n;if(d===r&&++c===a&&(s=o),d===i&&++u===t&&(l=o),(m=p.nextSibling)!==null)break;p=d,d=p.parentNode}p=m}r=s===-1||l===-1?null:{start:s,end:l}}else r=null}r=r||{start:0,end:0}}else r=null;for(Lp={focusedElem:e,selectionRange:r},xl=!1,W=n;W!==null;)if(n=W,e=n.child,(n.subtreeFlags&1028)!==0&&e!==null)e.return=n,W=e;else for(;W!==null;){n=W;try{var g=n.alternate;if(n.flags&1024)switch(n.tag){case 0:case 11:case 15:break;case 1:if(g!==null){var y=g.memoizedProps,k=g.memoizedState,f=n.stateNode,h=f.getSnapshotBeforeUpdate(n.elementType===n.type?y:lr(n.type,y),k);f.__reactInternalSnapshotBeforeUpdate=h}break;case 3:var v=n.stateNode.containerInfo;v.nodeType===1?v.textContent="":v.nodeType===9&&v.documentElement&&v.removeChild(v.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(L(163))}}catch(x){_e(n,n.return,x)}if(e=n.sibling,e!==null){e.return=n.return,W=e;break}W=n.return}return g=uh,uh=!1,g}function co(e,n,r){var t=n.updateQueue;if(t=t!==null?t.lastEffect:null,t!==null){var a=t=t.next;do{if((a.tag&e)===e){var i=a.destroy;a.destroy=void 0,i!==void 0&&Qp(n,r,i)}a=a.next}while(a!==t)}}function Mc(e,n){if(n=n.updateQueue,n=n!==null?n.lastEffect:null,n!==null){var r=n=n.next;do{if((r.tag&e)===e){var t=r.create;r.destroy=t()}r=r.next}while(r!==n)}}function Xp(e){var n=e.ref;if(n!==null){var r=e.stateNode;switch(e.tag){case 5:e=r;break;default:e=r}typeof n=="function"?n(e):n.current=e}}function g1(e){var n=e.alternate;n!==null&&(e.alternate=null,g1(n)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(n=e.stateNode,n!==null&&(delete n[Mr],delete n[Ro],delete n[Bp],delete n[vj],delete n[bj])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function f1(e){return e.tag===5||e.tag===3||e.tag===4}function ph(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||f1(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function Zp(e,n,r){var t=e.tag;if(t===5||t===6)e=e.stateNode,n?r.nodeType===8?r.parentNode.insertBefore(e,n):r.insertBefore(e,n):(r.nodeType===8?(n=r.parentNode,n.insertBefore(e,r)):(n=r,n.appendChild(e)),r=r._reactRootContainer,r!=null||n.onclick!==null||(n.onclick=Il));else if(t!==4&&(e=e.child,e!==null))for(Zp(e,n,r),e=e.sibling;e!==null;)Zp(e,n,r),e=e.sibling}function ed(e,n,r){var t=e.tag;if(t===5||t===6)e=e.stateNode,n?r.insertBefore(e,n):r.appendChild(e);else if(t!==4&&(e=e.child,e!==null))for(ed(e,n,r),e=e.sibling;e!==null;)ed(e,n,r),e=e.sibling}var nn=null,cr=!1;function St(e,n,r){for(r=r.child;r!==null;)h1(e,n,r),r=r.sibling}function h1(e,n,r){if(Rr&&typeof Rr.onCommitFiberUnmount=="function")try{Rr.onCommitFiberUnmount(Sc,r)}catch{}switch(r.tag){case 5:cn||Ya(r,n);case 6:var t=nn,a=cr;nn=null,St(e,n,r),nn=t,cr=a,nn!==null&&(cr?(e=nn,r=r.stateNode,e.nodeType===8?e.parentNode.removeChild(r):e.removeChild(r)):nn.removeChild(r.stateNode));break;case 18:nn!==null&&(cr?(e=nn,r=r.stateNode,e.nodeType===8?xu(e.parentNode,r):e.nodeType===1&&xu(e,r),Eo(e)):xu(nn,r.stateNode));break;case 4:t=nn,a=cr,nn=r.stateNode.containerInfo,cr=!0,St(e,n,r),nn=t,cr=a;break;case 0:case 11:case 14:case 15:if(!cn&&(t=r.updateQueue,t!==null&&(t=t.lastEffect,t!==null))){a=t=t.next;do{var i=a,o=i.destroy;i=i.tag,o!==void 0&&(i&2||i&4)&&Qp(r,n,o),a=a.next}while(a!==t)}St(e,n,r);break;case 1:if(!cn&&(Ya(r,n),t=r.stateNode,typeof t.componentWillUnmount=="function"))try{t.props=r.memoizedProps,t.state=r.memoizedState,t.componentWillUnmount()}catch(s){_e(r,n,s)}St(e,n,r);break;case 21:St(e,n,r);break;case 22:r.mode&1?(cn=(t=cn)||r.memoizedState!==null,St(e,n,r),cn=t):St(e,n,r);break;default:St(e,n,r)}}function dh(e){var n=e.updateQueue;if(n!==null){e.updateQueue=null;var r=e.stateNode;r===null&&(r=e.stateNode=new Oj),n.forEach(function(t){var a=Uj.bind(null,e,t);r.has(t)||(r.add(t),t.then(a,a))})}}function sr(e,n){var r=n.deletions;if(r!==null)for(var t=0;t<r.length;t++){var a=r[t];try{var i=e,o=n,s=o;e:for(;s!==null;){switch(s.tag){case 5:nn=s.stateNode,cr=!1;break e;case 3:nn=s.stateNode.containerInfo,cr=!0;break e;case 4:nn=s.stateNode.containerInfo,cr=!0;break e}s=s.return}if(nn===null)throw Error(L(160));h1(i,o,a),nn=null,cr=!1;var l=a.alternate;l!==null&&(l.return=null),a.return=null}catch(c){_e(a,n,c)}}if(n.subtreeFlags&12854)for(n=n.child;n!==null;)v1(n,e),n=n.sibling}function v1(e,n){var r=e.alternate,t=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(sr(n,e),xr(e),t&4){try{co(3,e,e.return),Mc(3,e)}catch(y){_e(e,e.return,y)}try{co(5,e,e.return)}catch(y){_e(e,e.return,y)}}break;case 1:sr(n,e),xr(e),t&512&&r!==null&&Ya(r,r.return);break;case 5:if(sr(n,e),xr(e),t&512&&r!==null&&Ya(r,r.return),e.flags&32){var a=e.stateNode;try{xo(a,"")}catch(y){_e(e,e.return,y)}}if(t&4&&(a=e.stateNode,a!=null)){var i=e.memoizedProps,o=r!==null?r.memoizedProps:i,s=e.type,l=e.updateQueue;if(e.updateQueue=null,l!==null)try{s==="input"&&i.type==="radio"&&i.name!=null&&Hb(a,i),jp(s,o);var c=jp(s,i);for(o=0;o<l.length;o+=2){var u=l[o],p=l[o+1];u==="style"?Ub(a,p):u==="dangerouslySetInnerHTML"?Jb(a,p):u==="children"?xo(a,p):Yd(a,u,p,c)}switch(s){case"input":yp(a,i);break;case"textarea":qb(a,i);break;case"select":var d=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!i.multiple;var m=i.value;m!=null?ei(a,!!i.multiple,m,!1):d!==!!i.multiple&&(i.defaultValue!=null?ei(a,!!i.multiple,i.defaultValue,!0):ei(a,!!i.multiple,i.multiple?[]:"",!1))}a[Ro]=i}catch(y){_e(e,e.return,y)}}break;case 6:if(sr(n,e),xr(e),t&4){if(e.stateNode===null)throw Error(L(162));a=e.stateNode,i=e.memoizedProps;try{a.nodeValue=i}catch(y){_e(e,e.return,y)}}break;case 3:if(sr(n,e),xr(e),t&4&&r!==null&&r.memoizedState.isDehydrated)try{Eo(n.containerInfo)}catch(y){_e(e,e.return,y)}break;case 4:sr(n,e),xr(e);break;case 13:sr(n,e),xr(e),a=e.child,a.flags&8192&&(i=a.memoizedState!==null,a.stateNode.isHidden=i,!i||a.alternate!==null&&a.alternate.memoizedState!==null||(Mm=He())),t&4&&dh(e);break;case 22:if(u=r!==null&&r.memoizedState!==null,e.mode&1?(cn=(c=cn)||u,sr(n,e),cn=c):sr(n,e),xr(e),t&8192){if(c=e.memoizedState!==null,(e.stateNode.isHidden=c)&&!u&&e.mode&1)for(W=e,u=e.child;u!==null;){for(p=W=u;W!==null;){switch(d=W,m=d.child,d.tag){case 0:case 11:case 14:case 15:co(4,d,d.return);break;case 1:Ya(d,d.return);var g=d.stateNode;if(typeof g.componentWillUnmount=="function"){t=d,r=d.return;try{n=t,g.props=n.memoizedProps,g.state=n.memoizedState,g.componentWillUnmount()}catch(y){_e(t,r,y)}}break;case 5:Ya(d,d.return);break;case 22:if(d.memoizedState!==null){gh(p);continue}}m!==null?(m.return=d,W=m):gh(p)}u=u.sibling}e:for(u=null,p=e;;){if(p.tag===5){if(u===null){u=p;try{a=p.stateNode,c?(i=a.style,typeof i.setProperty=="function"?i.setProperty("display","none","important"):i.display="none"):(s=p.stateNode,l=p.memoizedProps.style,o=l!=null&&l.hasOwnProperty("display")?l.display:null,s.style.display=zb("display",o))}catch(y){_e(e,e.return,y)}}}else if(p.tag===6){if(u===null)try{p.stateNode.nodeValue=c?"":p.memoizedProps}catch(y){_e(e,e.return,y)}}else if((p.tag!==22&&p.tag!==23||p.memoizedState===null||p===e)&&p.child!==null){p.child.return=p,p=p.child;continue}if(p===e)break e;for(;p.sibling===null;){if(p.return===null||p.return===e)break e;u===p&&(u=null),p=p.return}u===p&&(u=null),p.sibling.return=p.return,p=p.sibling}}break;case 19:sr(n,e),xr(e),t&4&&dh(e);break;case 21:break;default:sr(n,e),xr(e)}}function xr(e){var n=e.flags;if(n&2){try{e:{for(var r=e.return;r!==null;){if(f1(r)){var t=r;break e}r=r.return}throw Error(L(160))}switch(t.tag){case 5:var a=t.stateNode;t.flags&32&&(xo(a,""),t.flags&=-33);var i=ph(e);ed(e,i,a);break;case 3:case 4:var o=t.stateNode.containerInfo,s=ph(e);Zp(e,s,o);break;default:throw Error(L(161))}}catch(l){_e(e,e.return,l)}e.flags&=-3}n&4096&&(e.flags&=-4097)}function _j(e,n,r){W=e,b1(e)}function b1(e,n,r){for(var t=(e.mode&1)!==0;W!==null;){var a=W,i=a.child;if(a.tag===22&&t){var o=a.memoizedState!==null||_s;if(!o){var s=a.alternate,l=s!==null&&s.memoizedState!==null||cn;s=_s;var c=cn;if(_s=o,(cn=l)&&!c)for(W=a;W!==null;)o=W,l=o.child,o.tag===22&&o.memoizedState!==null?fh(a):l!==null?(l.return=o,W=l):fh(a);for(;i!==null;)W=i,b1(i),i=i.sibling;W=a,_s=s,cn=c}mh(e)}else a.subtreeFlags&8772&&i!==null?(i.return=a,W=i):mh(e)}}function mh(e){for(;W!==null;){var n=W;if(n.flags&8772){var r=n.alternate;try{if(n.flags&8772)switch(n.tag){case 0:case 11:case 15:cn||Mc(5,n);break;case 1:var t=n.stateNode;if(n.flags&4&&!cn)if(r===null)t.componentDidMount();else{var a=n.elementType===n.type?r.memoizedProps:lr(n.type,r.memoizedProps);t.componentDidUpdate(a,r.memoizedState,t.__reactInternalSnapshotBeforeUpdate)}var i=n.updateQueue;i!==null&&Qf(n,i,t);break;case 3:var o=n.updateQueue;if(o!==null){if(r=null,n.child!==null)switch(n.child.tag){case 5:r=n.child.stateNode;break;case 1:r=n.child.stateNode}Qf(n,o,r)}break;case 5:var s=n.stateNode;if(r===null&&n.flags&4){r=s;var l=n.memoizedProps;switch(n.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&r.focus();break;case"img":l.src&&(r.src=l.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(n.memoizedState===null){var c=n.alternate;if(c!==null){var u=c.memoizedState;if(u!==null){var p=u.dehydrated;p!==null&&Eo(p)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(L(163))}cn||n.flags&512&&Xp(n)}catch(d){_e(n,n.return,d)}}if(n===e){W=null;break}if(r=n.sibling,r!==null){r.return=n.return,W=r;break}W=n.return}}function gh(e){for(;W!==null;){var n=W;if(n===e){W=null;break}var r=n.sibling;if(r!==null){r.return=n.return,W=r;break}W=n.return}}function fh(e){for(;W!==null;){var n=W;try{switch(n.tag){case 0:case 11:case 15:var r=n.return;try{Mc(4,n)}catch(l){_e(n,r,l)}break;case 1:var t=n.stateNode;if(typeof t.componentDidMount=="function"){var a=n.return;try{t.componentDidMount()}catch(l){_e(n,a,l)}}var i=n.return;try{Xp(n)}catch(l){_e(n,i,l)}break;case 5:var o=n.return;try{Xp(n)}catch(l){_e(n,o,l)}}}catch(l){_e(n,n.return,l)}if(n===e){W=null;break}var s=n.sibling;if(s!==null){s.return=n.return,W=s;break}W=n.return}}var Nj=Math.ceil,Nl=mt.ReactCurrentDispatcher,Em=mt.ReactCurrentOwner,Qn=mt.ReactCurrentBatchConfig,me=0,Xe=null,Je=null,tn=0,Ln=0,Qa=Gt(0),Ve=0,Bo=null,ba=0,Ac=0,Tm=0,uo=null,xn=null,Mm=0,vi=1/0,Vr=null,Bl=!1,nd=null,Bt=null,Ns=!1,Mt=null,Hl=0,po=0,rd=null,il=-1,ol=0;function vn(){return me&6?He():il!==-1?il:il=He()}function Ht(e){return e.mode&1?me&2&&tn!==0?tn&-tn:kj.transition!==null?(ol===0&&(ol=ry()),ol):(e=ye,e!==0||(e=window.event,e=e===void 0?16:cy(e.type)),e):1}function gr(e,n,r,t){if(50<po)throw po=0,rd=null,Error(L(185));es(e,r,t),(!(me&2)||e!==Xe)&&(e===Xe&&(!(me&2)&&(Ac|=r),Ve===4&&Et(e,tn)),Tn(e,t),r===1&&me===0&&!(n.mode&1)&&(vi=He()+500,Ic&&Kt()))}function Tn(e,n){var r=e.callbackNode;kx(e,n);var t=wl(e,e===Xe?tn:0);if(t===0)r!==null&&jf(r),e.callbackNode=null,e.callbackPriority=0;else if(n=t&-t,e.callbackPriority!==n){if(r!=null&&jf(r),n===1)e.tag===0?yj(hh.bind(null,e)):Ty(hh.bind(null,e)),fj(function(){!(me&6)&&Kt()}),r=null;else{switch(ty(t)){case 1:r=nm;break;case 4:r=ey;break;case 16:r=Sl;break;case 536870912:r=ny;break;default:r=Sl}r=I1(r,y1.bind(null,e))}e.callbackPriority=n,e.callbackNode=r}}function y1(e,n){if(il=-1,ol=0,me&6)throw Error(L(327));var r=e.callbackNode;if(ii()&&e.callbackNode!==r)return null;var t=wl(e,e===Xe?tn:0);if(t===0)return null;if(t&30||t&e.expiredLanes||n)n=ql(e,t);else{n=t;var a=me;me|=2;var i=S1();(Xe!==e||tn!==n)&&(Vr=null,vi=He()+500,pa(e,n));do try{qj();break}catch(s){k1(e,s)}while(!0);gm(),Nl.current=i,me=a,Je!==null?n=0:(Xe=null,tn=0,n=Ve)}if(n!==0){if(n===2&&(a=Mp(e),a!==0&&(t=a,n=td(e,a))),n===1)throw r=Bo,pa(e,0),Et(e,t),Tn(e,He()),r;if(n===6)Et(e,t);else{if(a=e.current.alternate,!(t&30)&&!Bj(a)&&(n=ql(e,t),n===2&&(i=Mp(e),i!==0&&(t=i,n=td(e,i))),n===1))throw r=Bo,pa(e,0),Et(e,t),Tn(e,He()),r;switch(e.finishedWork=a,e.finishedLanes=t,n){case 0:case 1:throw Error(L(345));case 2:aa(e,xn,Vr);break;case 3:if(Et(e,t),(t&130023424)===t&&(n=Mm+500-He(),10<n)){if(wl(e,0)!==0)break;if(a=e.suspendedLanes,(a&t)!==t){vn(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Np(aa.bind(null,e,xn,Vr),n);break}aa(e,xn,Vr);break;case 4:if(Et(e,t),(t&4194240)===t)break;for(n=e.eventTimes,a=-1;0<t;){var o=31-mr(t);i=1<<o,o=n[o],o>a&&(a=o),t&=~i}if(t=a,t=He()-t,t=(120>t?120:480>t?480:1080>t?1080:1920>t?1920:3e3>t?3e3:4320>t?4320:1960*Nj(t/1960))-t,10<t){e.timeoutHandle=Np(aa.bind(null,e,xn,Vr),t);break}aa(e,xn,Vr);break;case 5:aa(e,xn,Vr);break;default:throw Error(L(329))}}}return Tn(e,He()),e.callbackNode===r?y1.bind(null,e):null}function td(e,n){var r=uo;return e.current.memoizedState.isDehydrated&&(pa(e,n).flags|=256),e=ql(e,n),e!==2&&(n=xn,xn=r,n!==null&&ad(n)),e}function ad(e){xn===null?xn=e:xn.push.apply(xn,e)}function Bj(e){for(var n=e;;){if(n.flags&16384){var r=n.updateQueue;if(r!==null&&(r=r.stores,r!==null))for(var t=0;t<r.length;t++){var a=r[t],i=a.getSnapshot;a=a.value;try{if(!vr(i(),a))return!1}catch{return!1}}}if(r=n.child,n.subtreeFlags&16384&&r!==null)r.return=n,n=r;else{if(n===e)break;for(;n.sibling===null;){if(n.return===null||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}function Et(e,n){for(n&=~Tm,n&=~Ac,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var r=31-mr(n),t=1<<r;e[r]=-1,n&=~t}}function hh(e){if(me&6)throw Error(L(327));ii();var n=wl(e,0);if(!(n&1))return Tn(e,He()),null;var r=ql(e,n);if(e.tag!==0&&r===2){var t=Mp(e);t!==0&&(n=t,r=td(e,t))}if(r===1)throw r=Bo,pa(e,0),Et(e,n),Tn(e,He()),r;if(r===6)throw Error(L(345));return e.finishedWork=e.current.alternate,e.finishedLanes=n,aa(e,xn,Vr),Tn(e,He()),null}function Am(e,n){var r=me;me|=1;try{return e(n)}finally{me=r,me===0&&(vi=He()+500,Ic&&Kt())}}function ya(e){Mt!==null&&Mt.tag===0&&!(me&6)&&ii();var n=me;me|=1;var r=Qn.transition,t=ye;try{if(Qn.transition=null,ye=1,e)return e()}finally{ye=t,Qn.transition=r,me=n,!(me&6)&&Kt()}}function Pm(){Ln=Qa.current,Te(Qa)}function pa(e,n){e.finishedWork=null,e.finishedLanes=0;var r=e.timeoutHandle;if(r!==-1&&(e.timeoutHandle=-1,gj(r)),Je!==null)for(r=Je.return;r!==null;){var t=r;switch(pm(t),t.tag){case 1:t=t.type.childContextTypes,t!=null&&El();break;case 3:fi(),Te(In),Te(dn),km();break;case 5:ym(t);break;case 4:fi();break;case 13:Te(De);break;case 19:Te(De);break;case 10:fm(t.type._context);break;case 22:case 23:Pm()}r=r.return}if(Xe=e,Je=e=qt(e.current,null),tn=Ln=n,Ve=0,Bo=null,Tm=Ac=ba=0,xn=uo=null,sa!==null){for(n=0;n<sa.length;n++)if(r=sa[n],t=r.interleaved,t!==null){r.interleaved=null;var a=t.next,i=r.pending;if(i!==null){var o=i.next;i.next=a,t.next=o}r.pending=t}sa=null}return e}function k1(e,n){do{var r=Je;try{if(gm(),rl.current=_l,Ll){for(var t=Oe.memoizedState;t!==null;){var a=t.queue;a!==null&&(a.pending=null),t=t.next}Ll=!1}if(va=0,Ke=Ue=Oe=null,lo=!1,Lo=0,Em.current=null,r===null||r.return===null){Ve=1,Bo=n,Je=null;break}e:{var i=e,o=r.return,s=r,l=n;if(n=tn,s.flags|=32768,l!==null&&typeof l=="object"&&typeof l.then=="function"){var c=l,u=s,p=u.tag;if(!(u.mode&1)&&(p===0||p===11||p===15)){var d=u.alternate;d?(u.updateQueue=d.updateQueue,u.memoizedState=d.memoizedState,u.lanes=d.lanes):(u.updateQueue=null,u.memoizedState=null)}var m=th(o);if(m!==null){m.flags&=-257,ah(m,o,s,i,n),m.mode&1&&rh(i,c,n),n=m,l=c;var g=n.updateQueue;if(g===null){var y=new Set;y.add(l),n.updateQueue=y}else g.add(l);break e}else{if(!(n&1)){rh(i,c,n),Rm();break e}l=Error(L(426))}}else if(Re&&s.mode&1){var k=th(o);if(k!==null){!(k.flags&65536)&&(k.flags|=256),ah(k,o,s,i,n),dm(hi(l,s));break e}}i=l=hi(l,s),Ve!==4&&(Ve=2),uo===null?uo=[i]:uo.push(i),i=o;do{switch(i.tag){case 3:i.flags|=65536,n&=-n,i.lanes|=n;var f=t1(i,l,n);Yf(i,f);break e;case 1:s=l;var h=i.type,v=i.stateNode;if(!(i.flags&128)&&(typeof h.getDerivedStateFromError=="function"||v!==null&&typeof v.componentDidCatch=="function"&&(Bt===null||!Bt.has(v)))){i.flags|=65536,n&=-n,i.lanes|=n;var x=a1(i,s,n);Yf(i,x);break e}}i=i.return}while(i!==null)}x1(r)}catch(I){n=I,Je===r&&r!==null&&(Je=r=r.return);continue}break}while(!0)}function S1(){var e=Nl.current;return Nl.current=_l,e===null?_l:e}function Rm(){(Ve===0||Ve===3||Ve===2)&&(Ve=4),Xe===null||!(ba&268435455)&&!(Ac&268435455)||Et(Xe,tn)}function ql(e,n){var r=me;me|=2;var t=S1();(Xe!==e||tn!==n)&&(Vr=null,pa(e,n));do try{Hj();break}catch(a){k1(e,a)}while(!0);if(gm(),me=r,Nl.current=t,Je!==null)throw Error(L(261));return Xe=null,tn=0,Ve}function Hj(){for(;Je!==null;)w1(Je)}function qj(){for(;Je!==null&&!px();)w1(Je)}function w1(e){var n=C1(e.alternate,e,Ln);e.memoizedProps=e.pendingProps,n===null?x1(e):Je=n,Em.current=null}function x1(e){var n=e;do{var r=n.alternate;if(e=n.return,n.flags&32768){if(r=Dj(r,n),r!==null){r.flags&=32767,Je=r;return}if(e!==null)e.flags|=32768,e.subtreeFlags=0,e.deletions=null;else{Ve=6,Je=null;return}}else if(r=Rj(r,n,Ln),r!==null){Je=r;return}if(n=n.sibling,n!==null){Je=n;return}Je=n=e}while(n!==null);Ve===0&&(Ve=5)}function aa(e,n,r){var t=ye,a=Qn.transition;try{Qn.transition=null,ye=1,Fj(e,n,r,t)}finally{Qn.transition=a,ye=t}return null}function Fj(e,n,r,t){do ii();while(Mt!==null);if(me&6)throw Error(L(327));r=e.finishedWork;var a=e.finishedLanes;if(r===null)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(L(177));e.callbackNode=null,e.callbackPriority=0;var i=r.lanes|r.childLanes;if(Sx(e,i),e===Xe&&(Je=Xe=null,tn=0),!(r.subtreeFlags&2064)&&!(r.flags&2064)||Ns||(Ns=!0,I1(Sl,function(){return ii(),null})),i=(r.flags&15990)!==0,r.subtreeFlags&15990||i){i=Qn.transition,Qn.transition=null;var o=ye;ye=1;var s=me;me|=4,Em.current=null,Lj(e,r),v1(r,e),sj(Lp),xl=!!Op,Lp=Op=null,e.current=r,_j(r),dx(),me=s,ye=o,Qn.transition=i}else e.current=r;if(Ns&&(Ns=!1,Mt=e,Hl=a),i=e.pendingLanes,i===0&&(Bt=null),fx(r.stateNode),Tn(e,He()),n!==null)for(t=e.onRecoverableError,r=0;r<n.length;r++)a=n[r],t(a.value,{componentStack:a.stack,digest:a.digest});if(Bl)throw Bl=!1,e=nd,nd=null,e;return Hl&1&&e.tag!==0&&ii(),i=e.pendingLanes,i&1?e===rd?po++:(po=0,rd=e):po=0,Kt(),null}function ii(){if(Mt!==null){var e=ty(Hl),n=Qn.transition,r=ye;try{if(Qn.transition=null,ye=16>e?16:e,Mt===null)var t=!1;else{if(e=Mt,Mt=null,Hl=0,me&6)throw Error(L(331));var a=me;for(me|=4,W=e.current;W!==null;){var i=W,o=i.child;if(W.flags&16){var s=i.deletions;if(s!==null){for(var l=0;l<s.length;l++){var c=s[l];for(W=c;W!==null;){var u=W;switch(u.tag){case 0:case 11:case 15:co(8,u,i)}var p=u.child;if(p!==null)p.return=u,W=p;else for(;W!==null;){u=W;var d=u.sibling,m=u.return;if(g1(u),u===c){W=null;break}if(d!==null){d.return=m,W=d;break}W=m}}}var g=i.alternate;if(g!==null){var y=g.child;if(y!==null){g.child=null;do{var k=y.sibling;y.sibling=null,y=k}while(y!==null)}}W=i}}if(i.subtreeFlags&2064&&o!==null)o.return=i,W=o;else e:for(;W!==null;){if(i=W,i.flags&2048)switch(i.tag){case 0:case 11:case 15:co(9,i,i.return)}var f=i.sibling;if(f!==null){f.return=i.return,W=f;break e}W=i.return}}var h=e.current;for(W=h;W!==null;){o=W;var v=o.child;if(o.subtreeFlags&2064&&v!==null)v.return=o,W=v;else e:for(o=h;W!==null;){if(s=W,s.flags&2048)try{switch(s.tag){case 0:case 11:case 15:Mc(9,s)}}catch(I){_e(s,s.return,I)}if(s===o){W=null;break e}var x=s.sibling;if(x!==null){x.return=s.return,W=x;break e}W=s.return}}if(me=a,Kt(),Rr&&typeof Rr.onPostCommitFiberRoot=="function")try{Rr.onPostCommitFiberRoot(Sc,e)}catch{}t=!0}return t}finally{ye=r,Qn.transition=n}}return!1}function vh(e,n,r){n=hi(r,n),n=t1(e,n,1),e=Nt(e,n,1),n=vn(),e!==null&&(es(e,1,n),Tn(e,n))}function _e(e,n,r){if(e.tag===3)vh(e,e,r);else for(;n!==null;){if(n.tag===3){vh(n,e,r);break}else if(n.tag===1){var t=n.stateNode;if(typeof n.type.getDerivedStateFromError=="function"||typeof t.componentDidCatch=="function"&&(Bt===null||!Bt.has(t))){e=hi(r,e),e=a1(n,e,1),n=Nt(n,e,1),e=vn(),n!==null&&(es(n,1,e),Tn(n,e));break}}n=n.return}}function Jj(e,n,r){var t=e.pingCache;t!==null&&t.delete(n),n=vn(),e.pingedLanes|=e.suspendedLanes&r,Xe===e&&(tn&r)===r&&(Ve===4||Ve===3&&(tn&130023424)===tn&&500>He()-Mm?pa(e,0):Tm|=r),Tn(e,n)}function j1(e,n){n===0&&(e.mode&1?(n=Es,Es<<=1,!(Es&130023424)&&(Es=4194304)):n=1);var r=vn();e=lt(e,n),e!==null&&(es(e,n,r),Tn(e,r))}function zj(e){var n=e.memoizedState,r=0;n!==null&&(r=n.retryLane),j1(e,r)}function Uj(e,n){var r=0;switch(e.tag){case 13:var t=e.stateNode,a=e.memoizedState;a!==null&&(r=a.retryLane);break;case 19:t=e.stateNode;break;default:throw Error(L(314))}t!==null&&t.delete(n),j1(e,r)}var C1;C1=function(e,n,r){if(e!==null)if(e.memoizedProps!==n.pendingProps||In.current)Cn=!0;else{if(!(e.lanes&r)&&!(n.flags&128))return Cn=!1,Pj(e,n,r);Cn=!!(e.flags&131072)}else Cn=!1,Re&&n.flags&1048576&&My(n,Al,n.index);switch(n.lanes=0,n.tag){case 2:var t=n.type;al(e,n),e=n.pendingProps;var a=di(n,dn.current);ai(n,r),a=wm(null,n,t,e,a,r);var i=xm();return n.flags|=1,typeof a=="object"&&a!==null&&typeof a.render=="function"&&a.$$typeof===void 0?(n.tag=1,n.memoizedState=null,n.updateQueue=null,En(t)?(i=!0,Tl(n)):i=!1,n.memoizedState=a.state!==null&&a.state!==void 0?a.state:null,vm(n),a.updater=Tc,n.stateNode=a,a._reactInternals=n,Up(n,t,e,r),n=$p(null,n,t,!0,i,r)):(n.tag=0,Re&&i&&um(n),gn(null,n,a,r),n=n.child),n;case 16:t=n.elementType;e:{switch(al(e,n),e=n.pendingProps,a=t._init,t=a(t._payload),n.type=t,a=n.tag=Vj(t),e=lr(t,e),a){case 0:n=Vp(null,n,t,e,r);break e;case 1:n=sh(null,n,t,e,r);break e;case 11:n=ih(null,n,t,e,r);break e;case 14:n=oh(null,n,t,lr(t.type,e),r);break e}throw Error(L(306,t,""))}return n;case 0:return t=n.type,a=n.pendingProps,a=n.elementType===t?a:lr(t,a),Vp(e,n,t,a,r);case 1:return t=n.type,a=n.pendingProps,a=n.elementType===t?a:lr(t,a),sh(e,n,t,a,r);case 3:e:{if(l1(n),e===null)throw Error(L(387));t=n.pendingProps,i=n.memoizedState,a=i.element,Ly(e,n),Dl(n,t,null,r);var o=n.memoizedState;if(t=o.element,i.isDehydrated)if(i={element:t,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},n.updateQueue.baseState=i,n.memoizedState=i,n.flags&256){a=hi(Error(L(423)),n),n=lh(e,n,t,r,a);break e}else if(t!==a){a=hi(Error(L(424)),n),n=lh(e,n,t,r,a);break e}else for(_n=_t(n.stateNode.containerInfo.firstChild),Bn=n,Re=!0,ur=null,r=Dy(n,null,t,r),n.child=r;r;)r.flags=r.flags&-3|4096,r=r.sibling;else{if(mi(),t===a){n=ct(e,n,r);break e}gn(e,n,t,r)}n=n.child}return n;case 5:return _y(n),e===null&&Fp(n),t=n.type,a=n.pendingProps,i=e!==null?e.memoizedProps:null,o=a.children,_p(t,a)?o=null:i!==null&&_p(t,i)&&(n.flags|=32),s1(e,n),gn(e,n,o,r),n.child;case 6:return e===null&&Fp(n),null;case 13:return c1(e,n,r);case 4:return bm(n,n.stateNode.containerInfo),t=n.pendingProps,e===null?n.child=gi(n,null,t,r):gn(e,n,t,r),n.child;case 11:return t=n.type,a=n.pendingProps,a=n.elementType===t?a:lr(t,a),ih(e,n,t,a,r);case 7:return gn(e,n,n.pendingProps,r),n.child;case 8:return gn(e,n,n.pendingProps.children,r),n.child;case 12:return gn(e,n,n.pendingProps.children,r),n.child;case 10:e:{if(t=n.type._context,a=n.pendingProps,i=n.memoizedProps,o=a.value,Ie(Pl,t._currentValue),t._currentValue=o,i!==null)if(vr(i.value,o)){if(i.children===a.children&&!In.current){n=ct(e,n,r);break e}}else for(i=n.child,i!==null&&(i.return=n);i!==null;){var s=i.dependencies;if(s!==null){o=i.child;for(var l=s.firstContext;l!==null;){if(l.context===t){if(i.tag===1){l=rt(-1,r&-r),l.tag=2;var c=i.updateQueue;if(c!==null){c=c.shared;var u=c.pending;u===null?l.next=l:(l.next=u.next,u.next=l),c.pending=l}}i.lanes|=r,l=i.alternate,l!==null&&(l.lanes|=r),Jp(i.return,r,n),s.lanes|=r;break}l=l.next}}else if(i.tag===10)o=i.type===n.type?null:i.child;else if(i.tag===18){if(o=i.return,o===null)throw Error(L(341));o.lanes|=r,s=o.alternate,s!==null&&(s.lanes|=r),Jp(o,r,n),o=i.sibling}else o=i.child;if(o!==null)o.return=i;else for(o=i;o!==null;){if(o===n){o=null;break}if(i=o.sibling,i!==null){i.return=o.return,o=i;break}o=o.return}i=o}gn(e,n,a.children,r),n=n.child}return n;case 9:return a=n.type,t=n.pendingProps.children,ai(n,r),a=Zn(a),t=t(a),n.flags|=1,gn(e,n,t,r),n.child;case 14:return t=n.type,a=lr(t,n.pendingProps),a=lr(t.type,a),oh(e,n,t,a,r);case 15:return i1(e,n,n.type,n.pendingProps,r);case 17:return t=n.type,a=n.pendingProps,a=n.elementType===t?a:lr(t,a),al(e,n),n.tag=1,En(t)?(e=!0,Tl(n)):e=!1,ai(n,r),r1(n,t,a),Up(n,t,a,r),$p(null,n,t,!0,e,r);case 19:return u1(e,n,r);case 22:return o1(e,n,r)}throw Error(L(156,n.tag))};function I1(e,n){return Zb(e,n)}function Wj(e,n,r,t){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=t,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Yn(e,n,r,t){return new Wj(e,n,r,t)}function Dm(e){return e=e.prototype,!(!e||!e.isReactComponent)}function Vj(e){if(typeof e=="function")return Dm(e)?1:0;if(e!=null){if(e=e.$$typeof,e===Xd)return 11;if(e===Zd)return 14}return 2}function qt(e,n){var r=e.alternate;return r===null?(r=Yn(e.tag,n,e.key,e.mode),r.elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=n,r.type=e.type,r.flags=0,r.subtreeFlags=0,r.deletions=null),r.flags=e.flags&14680064,r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,n=e.dependencies,r.dependencies=n===null?null:{lanes:n.lanes,firstContext:n.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function sl(e,n,r,t,a,i){var o=2;if(t=e,typeof e=="function")Dm(e)&&(o=1);else if(typeof e=="string")o=5;else e:switch(e){case Fa:return da(r.children,a,i,n);case Qd:o=8,a|=8;break;case gp:return e=Yn(12,r,n,a|2),e.elementType=gp,e.lanes=i,e;case fp:return e=Yn(13,r,n,a),e.elementType=fp,e.lanes=i,e;case hp:return e=Yn(19,r,n,a),e.elementType=hp,e.lanes=i,e;case _b:return Pc(r,a,i,n);default:if(typeof e=="object"&&e!==null)switch(e.$$typeof){case Ob:o=10;break e;case Lb:o=9;break e;case Xd:o=11;break e;case Zd:o=14;break e;case xt:o=16,t=null;break e}throw Error(L(130,e==null?e:typeof e,""))}return n=Yn(o,r,n,a),n.elementType=e,n.type=t,n.lanes=i,n}function da(e,n,r,t){return e=Yn(7,e,t,n),e.lanes=r,e}function Pc(e,n,r,t){return e=Yn(22,e,t,n),e.elementType=_b,e.lanes=r,e.stateNode={isHidden:!1},e}function Pu(e,n,r){return e=Yn(6,e,null,n),e.lanes=r,e}function Ru(e,n,r){return n=Yn(4,e.children!==null?e.children:[],e.key,n),n.lanes=r,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function $j(e,n,r,t,a){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=du(0),this.expirationTimes=du(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=du(0),this.identifierPrefix=t,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Om(e,n,r,t,a,i,o,s,l){return e=new $j(e,n,r,s,l),n===1?(n=1,i===!0&&(n|=8)):n=0,i=Yn(3,null,null,n),e.current=i,i.stateNode=e,i.memoizedState={element:t,isDehydrated:r,cache:null,transitions:null,pendingSuspenseBoundaries:null},vm(i),e}function Gj(e,n,r){var t=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:qa,key:t==null?null:""+t,children:e,containerInfo:n,implementation:r}}function E1(e){if(!e)return Wt;e=e._reactInternals;e:{if(ja(e)!==e||e.tag!==1)throw Error(L(170));var n=e;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(En(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(n!==null);throw Error(L(171))}if(e.tag===1){var r=e.type;if(En(r))return Ey(e,r,n)}return n}function T1(e,n,r,t,a,i,o,s,l){return e=Om(r,t,!0,e,a,i,o,s,l),e.context=E1(null),r=e.current,t=vn(),a=Ht(r),i=rt(t,a),i.callback=n??null,Nt(r,i,a),e.current.lanes=a,es(e,a,t),Tn(e,t),e}function Rc(e,n,r,t){var a=n.current,i=vn(),o=Ht(a);return r=E1(r),n.context===null?n.context=r:n.pendingContext=r,n=rt(i,o),n.payload={element:e},t=t===void 0?null:t,t!==null&&(n.callback=t),e=Nt(a,n,o),e!==null&&(gr(e,a,o,i),nl(e,a,o)),o}function Fl(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return e.child.stateNode;default:return e.child.stateNode}}function bh(e,n){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var r=e.retryLane;e.retryLane=r!==0&&r<n?r:n}}function Lm(e,n){bh(e,n),(e=e.alternate)&&bh(e,n)}function Kj(){return null}var M1=typeof reportError=="function"?reportError:function(e){console.error(e)};function _m(e){this._internalRoot=e}Dc.prototype.render=_m.prototype.render=function(e){var n=this._internalRoot;if(n===null)throw Error(L(409));Rc(e,n,null,null)};Dc.prototype.unmount=_m.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var n=e.containerInfo;ya(function(){Rc(null,e,null,null)}),n[st]=null}};function Dc(e){this._internalRoot=e}Dc.prototype.unstable_scheduleHydration=function(e){if(e){var n=oy();e={blockedOn:null,target:e,priority:n};for(var r=0;r<It.length&&n!==0&&n<It[r].priority;r++);It.splice(r,0,e),r===0&&ly(e)}};function Nm(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function Oc(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11&&(e.nodeType!==8||e.nodeValue!==" react-mount-point-unstable "))}function yh(){}function Yj(e,n,r,t,a){if(a){if(typeof t=="function"){var i=t;t=function(){var c=Fl(o);i.call(c)}}var o=T1(n,t,e,0,null,!1,!1,"",yh);return e._reactRootContainer=o,e[st]=o.current,Ao(e.nodeType===8?e.parentNode:e),ya(),o}for(;a=e.lastChild;)e.removeChild(a);if(typeof t=="function"){var s=t;t=function(){var c=Fl(l);s.call(c)}}var l=Om(e,0,!1,null,null,!1,!1,"",yh);return e._reactRootContainer=l,e[st]=l.current,Ao(e.nodeType===8?e.parentNode:e),ya(function(){Rc(n,l,r,t)}),l}function Lc(e,n,r,t,a){var i=r._reactRootContainer;if(i){var o=i;if(typeof a=="function"){var s=a;a=function(){var l=Fl(o);s.call(l)}}Rc(n,o,e,a)}else o=Yj(r,n,e,a,t);return Fl(o)}ay=function(e){switch(e.tag){case 3:var n=e.stateNode;if(n.current.memoizedState.isDehydrated){var r=eo(n.pendingLanes);r!==0&&(rm(n,r|1),Tn(n,He()),!(me&6)&&(vi=He()+500,Kt()))}break;case 13:ya(function(){var t=lt(e,1);if(t!==null){var a=vn();gr(t,e,1,a)}}),Lm(e,1)}};tm=function(e){if(e.tag===13){var n=lt(e,134217728);if(n!==null){var r=vn();gr(n,e,134217728,r)}Lm(e,134217728)}};iy=function(e){if(e.tag===13){var n=Ht(e),r=lt(e,n);if(r!==null){var t=vn();gr(r,e,n,t)}Lm(e,n)}};oy=function(){return ye};sy=function(e,n){var r=ye;try{return ye=e,n()}finally{ye=r}};Ip=function(e,n,r){switch(n){case"input":if(yp(e,r),n=r.name,r.type==="radio"&&n!=null){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<r.length;n++){var t=r[n];if(t!==e&&t.form===e.form){var a=Cc(t);if(!a)throw Error(L(90));Bb(t),yp(t,a)}}}break;case"textarea":qb(e,r);break;case"select":n=r.value,n!=null&&ei(e,!!r.multiple,n,!1)}};$b=Am;Gb=ya;var Qj={usingClientEntryPoint:!1,Events:[rs,Wa,Cc,Wb,Vb,Am]},Wi={findFiberByHostInstance:oa,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},Xj={bundleType:Wi.bundleType,version:Wi.version,rendererPackageName:Wi.rendererPackageName,rendererConfig:Wi.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:mt.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=Qb(e),e===null?null:e.stateNode},findFiberByHostInstance:Wi.findFiberByHostInstance||Kj,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Bs=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Bs.isDisabled&&Bs.supportsFiber)try{Sc=Bs.inject(Xj),Rr=Bs}catch{}}Jn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Qj;Jn.createPortal=function(e,n){var r=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!Nm(n))throw Error(L(200));return Gj(e,n,null,r)};Jn.createRoot=function(e,n){if(!Nm(e))throw Error(L(299));var r=!1,t="",a=M1;return n!=null&&(n.unstable_strictMode===!0&&(r=!0),n.identifierPrefix!==void 0&&(t=n.identifierPrefix),n.onRecoverableError!==void 0&&(a=n.onRecoverableError)),n=Om(e,1,!1,null,null,r,!1,t,a),e[st]=n.current,Ao(e.nodeType===8?e.parentNode:e),new _m(n)};Jn.findDOMNode=function(e){if(e==null)return null;if(e.nodeType===1)return e;var n=e._reactInternals;if(n===void 0)throw typeof e.render=="function"?Error(L(188)):(e=Object.keys(e).join(","),Error(L(268,e)));return e=Qb(n),e=e===null?null:e.stateNode,e};Jn.flushSync=function(e){return ya(e)};Jn.hydrate=function(e,n,r){if(!Oc(n))throw Error(L(200));return Lc(null,e,n,!0,r)};Jn.hydrateRoot=function(e,n,r){if(!Nm(e))throw Error(L(405));var t=r!=null&&r.hydratedSources||null,a=!1,i="",o=M1;if(r!=null&&(r.unstable_strictMode===!0&&(a=!0),r.identifierPrefix!==void 0&&(i=r.identifierPrefix),r.onRecoverableError!==void 0&&(o=r.onRecoverableError)),n=T1(n,null,e,1,r??null,a,!1,i,o),e[st]=n.current,Ao(e),t)for(e=0;e<t.length;e++)r=t[e],a=r._getVersion,a=a(r._source),n.mutableSourceEagerHydrationData==null?n.mutableSourceEagerHydrationData=[r,a]:n.mutableSourceEagerHydrationData.push(r,a);return new Dc(n)};Jn.render=function(e,n,r){if(!Oc(n))throw Error(L(200));return Lc(null,e,n,!1,r)};Jn.unmountComponentAtNode=function(e){if(!Oc(e))throw Error(L(40));return e._reactRootContainer?(ya(function(){Lc(null,null,e,!1,function(){e._reactRootContainer=null,e[st]=null})}),!0):!1};Jn.unstable_batchedUpdates=Am;Jn.unstable_renderSubtreeIntoContainer=function(e,n,r,t){if(!Oc(r))throw Error(L(200));if(e==null||e._reactInternals===void 0)throw Error(L(38));return Lc(e,n,r,!1,t)};Jn.version="18.3.1-next-f1338f8080-20240426";function A1(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(A1)}catch(e){console.error(e)}}A1(),Ab.exports=Jn;var P1=Ab.exports;const ca=wi(P1);var kh=P1;dp.createRoot=kh.createRoot,dp.hydrateRoot=kh.hydrateRoot;/**
 * @remix-run/router v1.16.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function Ho(){return Ho=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},Ho.apply(this,arguments)}var At;(function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"})(At||(At={}));const Sh="popstate";function Zj(e){e===void 0&&(e={});function n(a,i){let{pathname:o="/",search:s="",hash:l=""}=Ca(a.location.hash.substr(1));return!o.startsWith("/")&&!o.startsWith(".")&&(o="/"+o),id("",{pathname:o,search:s,hash:l},i.state&&i.state.usr||null,i.state&&i.state.key||"default")}function r(a,i){let o=a.document.querySelector("base"),s="";if(o&&o.getAttribute("href")){let l=a.location.href,c=l.indexOf("#");s=c===-1?l:l.slice(0,c)}return s+"#"+(typeof i=="string"?i:Jl(i))}function t(a,i){Bm(a.pathname.charAt(0)==="/","relative pathnames are not supported in hash history.push("+JSON.stringify(i)+")")}return nC(n,r,t,e)}function ze(e,n){if(e===!1||e===null||typeof e>"u")throw new Error(n)}function Bm(e,n){if(!e){typeof console<"u"&&console.warn(n);try{throw new Error(n)}catch{}}}function eC(){return Math.random().toString(36).substr(2,8)}function wh(e,n){return{usr:e.state,key:e.key,idx:n}}function id(e,n,r,t){return r===void 0&&(r=null),Ho({pathname:typeof e=="string"?e:e.pathname,search:"",hash:""},typeof n=="string"?Ca(n):n,{state:r,key:n&&n.key||t||eC()})}function Jl(e){let{pathname:n="/",search:r="",hash:t=""}=e;return r&&r!=="?"&&(n+=r.charAt(0)==="?"?r:"?"+r),t&&t!=="#"&&(n+=t.charAt(0)==="#"?t:"#"+t),n}function Ca(e){let n={};if(e){let r=e.indexOf("#");r>=0&&(n.hash=e.substr(r),e=e.substr(0,r));let t=e.indexOf("?");t>=0&&(n.search=e.substr(t),e=e.substr(0,t)),e&&(n.pathname=e)}return n}function nC(e,n,r,t){t===void 0&&(t={});let{window:a=document.defaultView,v5Compat:i=!1}=t,o=a.history,s=At.Pop,l=null,c=u();c==null&&(c=0,o.replaceState(Ho({},o.state,{idx:c}),""));function u(){return(o.state||{idx:null}).idx}function p(){s=At.Pop;let k=u(),f=k==null?null:k-c;c=k,l&&l({action:s,location:y.location,delta:f})}function d(k,f){s=At.Push;let h=id(y.location,k,f);r&&r(h,k),c=u()+1;let v=wh(h,c),x=y.createHref(h);try{o.pushState(v,"",x)}catch(I){if(I instanceof DOMException&&I.name==="DataCloneError")throw I;a.location.assign(x)}i&&l&&l({action:s,location:y.location,delta:1})}function m(k,f){s=At.Replace;let h=id(y.location,k,f);r&&r(h,k),c=u();let v=wh(h,c),x=y.createHref(h);o.replaceState(v,"",x),i&&l&&l({action:s,location:y.location,delta:0})}function g(k){let f=a.location.origin!=="null"?a.location.origin:a.location.href,h=typeof k=="string"?k:Jl(k);return h=h.replace(/ $/,"%20"),ze(f,"No window.location.(origin|href) available to create URL for href: "+h),new URL(h,f)}let y={get action(){return s},get location(){return e(a,o)},listen(k){if(l)throw new Error("A history only accepts one active listener");return a.addEventListener(Sh,p),l=k,()=>{a.removeEventListener(Sh,p),l=null}},createHref(k){return n(a,k)},createURL:g,encodeLocation(k){let f=g(k);return{pathname:f.pathname,search:f.search,hash:f.hash}},push:d,replace:m,go(k){return o.go(k)}};return y}var xh;(function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"})(xh||(xh={}));function rC(e,n,r){r===void 0&&(r="/");let t=typeof n=="string"?Ca(n):n,a=Hm(t.pathname||"/",r);if(a==null)return null;let i=R1(e);tC(i);let o=null;for(let s=0;o==null&&s<i.length;++s){let l=fC(a);o=dC(i[s],l)}return o}function R1(e,n,r,t){n===void 0&&(n=[]),r===void 0&&(r=[]),t===void 0&&(t="");let a=(i,o,s)=>{let l={relativePath:s===void 0?i.path||"":s,caseSensitive:i.caseSensitive===!0,childrenIndex:o,route:i};l.relativePath.startsWith("/")&&(ze(l.relativePath.startsWith(t),'Absolute route path "'+l.relativePath+'" nested under path '+('"'+t+'" is not valid. An absolute child route path ')+"must start with the combined path of all its parent routes."),l.relativePath=l.relativePath.slice(t.length));let c=Ft([t,l.relativePath]),u=r.concat(l);i.children&&i.children.length>0&&(ze(i.index!==!0,"Index routes must not have child routes. Please remove "+('all child routes from route path "'+c+'".')),R1(i.children,n,u,c)),!(i.path==null&&!i.index)&&n.push({path:c,score:uC(c,i.index),routesMeta:u})};return e.forEach((i,o)=>{var s;if(i.path===""||!((s=i.path)!=null&&s.includes("?")))a(i,o);else for(let l of D1(i.path))a(i,o,l)}),n}function D1(e){let n=e.split("/");if(n.length===0)return[];let[r,...t]=n,a=r.endsWith("?"),i=r.replace(/\?$/,"");if(t.length===0)return a?[i,""]:[i];let o=D1(t.join("/")),s=[];return s.push(...o.map(l=>l===""?i:[i,l].join("/"))),a&&s.push(...o),s.map(l=>e.startsWith("/")&&l===""?"/":l)}function tC(e){e.sort((n,r)=>n.score!==r.score?r.score-n.score:pC(n.routesMeta.map(t=>t.childrenIndex),r.routesMeta.map(t=>t.childrenIndex)))}const aC=/^:[\w-]+$/,iC=3,oC=2,sC=1,lC=10,cC=-2,jh=e=>e==="*";function uC(e,n){let r=e.split("/"),t=r.length;return r.some(jh)&&(t+=cC),n&&(t+=oC),r.filter(a=>!jh(a)).reduce((a,i)=>a+(aC.test(i)?iC:i===""?sC:lC),t)}function pC(e,n){return e.length===n.length&&e.slice(0,-1).every((t,a)=>t===n[a])?e[e.length-1]-n[n.length-1]:0}function dC(e,n){let{routesMeta:r}=e,t={},a="/",i=[];for(let o=0;o<r.length;++o){let s=r[o],l=o===r.length-1,c=a==="/"?n:n.slice(a.length)||"/",u=mC({path:s.relativePath,caseSensitive:s.caseSensitive,end:l},c);if(!u)return null;Object.assign(t,u.params);let p=s.route;i.push({params:t,pathname:Ft([a,u.pathname]),pathnameBase:yC(Ft([a,u.pathnameBase])),route:p}),u.pathnameBase!=="/"&&(a=Ft([a,u.pathnameBase]))}return i}function mC(e,n){typeof e=="string"&&(e={path:e,caseSensitive:!1,end:!0});let[r,t]=gC(e.path,e.caseSensitive,e.end),a=n.match(r);if(!a)return null;let i=a[0],o=i.replace(/(.)\/+$/,"$1"),s=a.slice(1);return{params:t.reduce((c,u,p)=>{let{paramName:d,isOptional:m}=u;if(d==="*"){let y=s[p]||"";o=i.slice(0,i.length-y.length).replace(/(.)\/+$/,"$1")}const g=s[p];return m&&!g?c[d]=void 0:c[d]=(g||"").replace(/%2F/g,"/"),c},{}),pathname:i,pathnameBase:o,pattern:e}}function gC(e,n,r){n===void 0&&(n=!1),r===void 0&&(r=!0),Bm(e==="*"||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were '+('"'+e.replace(/\*$/,"/*")+'" because the `*` character must ')+"always follow a `/` in the pattern. To get rid of this warning, "+('please change the route path to "'+e.replace(/\*$/,"/*")+'".'));let t=[],a="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,(o,s,l)=>(t.push({paramName:s,isOptional:l!=null}),l?"/?([^\\/]+)?":"/([^\\/]+)"));return e.endsWith("*")?(t.push({paramName:"*"}),a+=e==="*"||e==="/*"?"(.*)$":"(?:\\/(.+)|\\/*)$"):r?a+="\\/*$":e!==""&&e!=="/"&&(a+="(?:(?=\\/|$))"),[new RegExp(a,n?void 0:"i"),t]}function fC(e){try{return e.split("/").map(n=>decodeURIComponent(n).replace(/\//g,"%2F")).join("/")}catch(n){return Bm(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent '+("encoding ("+n+").")),e}}function Hm(e,n){if(n==="/")return e;if(!e.toLowerCase().startsWith(n.toLowerCase()))return null;let r=n.endsWith("/")?n.length-1:n.length,t=e.charAt(r);return t&&t!=="/"?null:e.slice(r)||"/"}function hC(e,n){n===void 0&&(n="/");let{pathname:r,search:t="",hash:a=""}=typeof e=="string"?Ca(e):e;return{pathname:r?r.startsWith("/")?r:vC(r,n):n,search:kC(t),hash:SC(a)}}function vC(e,n){let r=n.replace(/\/+$/,"").split("/");return e.split("/").forEach(a=>{a===".."?r.length>1&&r.pop():a!=="."&&r.push(a)}),r.length>1?r.join("/"):"/"}function Du(e,n,r,t){return"Cannot include a '"+e+"' character in a manually specified "+("`to."+n+"` field ["+JSON.stringify(t)+"].  Please separate it out to the ")+("`to."+r+"` field. Alternatively you may provide the full path as ")+'a string in <Link to="..."> and the router will parse it for you.'}function bC(e){return e.filter((n,r)=>r===0||n.route.path&&n.route.path.length>0)}function O1(e,n){let r=bC(e);return n?r.map((t,a)=>a===e.length-1?t.pathname:t.pathnameBase):r.map(t=>t.pathnameBase)}function L1(e,n,r,t){t===void 0&&(t=!1);let a;typeof e=="string"?a=Ca(e):(a=Ho({},e),ze(!a.pathname||!a.pathname.includes("?"),Du("?","pathname","search",a)),ze(!a.pathname||!a.pathname.includes("#"),Du("#","pathname","hash",a)),ze(!a.search||!a.search.includes("#"),Du("#","search","hash",a)));let i=e===""||a.pathname==="",o=i?"/":a.pathname,s;if(o==null)s=r;else{let p=n.length-1;if(!t&&o.startsWith("..")){let d=o.split("/");for(;d[0]==="..";)d.shift(),p-=1;a.pathname=d.join("/")}s=p>=0?n[p]:"/"}let l=hC(a,s),c=o&&o!=="/"&&o.endsWith("/"),u=(i||o===".")&&r.endsWith("/");return!l.pathname.endsWith("/")&&(c||u)&&(l.pathname+="/"),l}const Ft=e=>e.join("/").replace(/\/\/+/g,"/"),yC=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),kC=e=>!e||e==="?"?"":e.startsWith("?")?e:"?"+e,SC=e=>!e||e==="#"?"":e.startsWith("#")?e:"#"+e;function wC(e){return e!=null&&typeof e.status=="number"&&typeof e.statusText=="string"&&typeof e.internal=="boolean"&&"data"in e}const _1=["post","put","patch","delete"];new Set(_1);const xC=["get",..._1];new Set(xC);/**
 * React Router v6.23.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function qo(){return qo=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},qo.apply(this,arguments)}const qm=b.createContext(null),jC=b.createContext(null),Ia=b.createContext(null),as=b.createContext(null),Yt=b.createContext({outlet:null,matches:[],isDataRoute:!1}),N1=b.createContext(null);function CC(e,n){let{relative:r}=n===void 0?{}:n;is()||ze(!1);let{basename:t,navigator:a}=b.useContext(Ia),{hash:i,pathname:o,search:s}=H1(e,{relative:r}),l=o;return t!=="/"&&(l=o==="/"?t:Ft([t,o])),a.createHref({pathname:l,search:s,hash:i})}function is(){return b.useContext(as)!=null}function Ei(){return is()||ze(!1),b.useContext(as).location}function IC(){return b.useContext(as).navigationType}function B1(e){b.useContext(Ia).static||b.useLayoutEffect(e)}function EC(){let{isDataRoute:e}=b.useContext(Yt);return e?qC():TC()}function TC(){is()||ze(!1);let e=b.useContext(qm),{basename:n,future:r,navigator:t}=b.useContext(Ia),{matches:a}=b.useContext(Yt),{pathname:i}=Ei(),o=JSON.stringify(O1(a,r.v7_relativeSplatPath)),s=b.useRef(!1);return B1(()=>{s.current=!0}),b.useCallback(function(c,u){if(u===void 0&&(u={}),!s.current)return;if(typeof c=="number"){t.go(c);return}let p=L1(c,JSON.parse(o),i,u.relative==="path");e==null&&n!=="/"&&(p.pathname=p.pathname==="/"?n:Ft([n,p.pathname])),(u.replace?t.replace:t.push)(p,u.state,u)},[n,t,o,i,e])}function Fm(){let{matches:e}=b.useContext(Yt),n=e[e.length-1];return n?n.params:{}}function H1(e,n){let{relative:r}=n===void 0?{}:n,{future:t}=b.useContext(Ia),{matches:a}=b.useContext(Yt),{pathname:i}=Ei(),o=JSON.stringify(O1(a,t.v7_relativeSplatPath));return b.useMemo(()=>L1(e,JSON.parse(o),i,r==="path"),[e,o,i,r])}function MC(e,n){return AC(e,n)}function AC(e,n,r,t){is()||ze(!1);let{navigator:a}=b.useContext(Ia),{matches:i}=b.useContext(Yt),o=i[i.length-1],s=o?o.params:{};o&&o.pathname;let l=o?o.pathnameBase:"/";o&&o.route;let c=Ei(),u;if(n){var p;let k=typeof n=="string"?Ca(n):n;l==="/"||(p=k.pathname)!=null&&p.startsWith(l)||ze(!1),u=k}else u=c;let d=u.pathname||"/",m=d;if(l!=="/"){let k=l.replace(/^\//,"").split("/");m="/"+d.replace(/^\//,"").split("/").slice(k.length).join("/")}let g=rC(e,{pathname:m}),y=LC(g&&g.map(k=>Object.assign({},k,{params:Object.assign({},s,k.params),pathname:Ft([l,a.encodeLocation?a.encodeLocation(k.pathname).pathname:k.pathname]),pathnameBase:k.pathnameBase==="/"?l:Ft([l,a.encodeLocation?a.encodeLocation(k.pathnameBase).pathname:k.pathnameBase])})),i,r,t);return n&&y?b.createElement(as.Provider,{value:{location:qo({pathname:"/",search:"",hash:"",state:null,key:"default"},u),navigationType:At.Pop}},y):y}function PC(){let e=HC(),n=wC(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),r=e instanceof Error?e.stack:null,a={padding:"0.5rem",backgroundColor:"rgba(200,200,200, 0.5)"};return b.createElement(b.Fragment,null,b.createElement("h2",null,"Unexpected Application Error!"),b.createElement("h3",{style:{fontStyle:"italic"}},n),r?b.createElement("pre",{style:a},r):null,null)}const RC=b.createElement(PC,null);class DC extends b.Component{constructor(n){super(n),this.state={location:n.location,revalidation:n.revalidation,error:n.error}}static getDerivedStateFromError(n){return{error:n}}static getDerivedStateFromProps(n,r){return r.location!==n.location||r.revalidation!=="idle"&&n.revalidation==="idle"?{error:n.error,location:n.location,revalidation:n.revalidation}:{error:n.error!==void 0?n.error:r.error,location:r.location,revalidation:n.revalidation||r.revalidation}}componentDidCatch(n,r){console.error("React Router caught the following error during render",n,r)}render(){return this.state.error!==void 0?b.createElement(Yt.Provider,{value:this.props.routeContext},b.createElement(N1.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function OC(e){let{routeContext:n,match:r,children:t}=e,a=b.useContext(qm);return a&&a.static&&a.staticContext&&(r.route.errorElement||r.route.ErrorBoundary)&&(a.staticContext._deepestRenderedBoundaryId=r.route.id),b.createElement(Yt.Provider,{value:n},t)}function LC(e,n,r,t){var a;if(n===void 0&&(n=[]),r===void 0&&(r=null),t===void 0&&(t=null),e==null){var i;if((i=r)!=null&&i.errors)e=r.matches;else return null}let o=e,s=(a=r)==null?void 0:a.errors;if(s!=null){let u=o.findIndex(p=>p.route.id&&(s==null?void 0:s[p.route.id])!==void 0);u>=0||ze(!1),o=o.slice(0,Math.min(o.length,u+1))}let l=!1,c=-1;if(r&&t&&t.v7_partialHydration)for(let u=0;u<o.length;u++){let p=o[u];if((p.route.HydrateFallback||p.route.hydrateFallbackElement)&&(c=u),p.route.id){let{loaderData:d,errors:m}=r,g=p.route.loader&&d[p.route.id]===void 0&&(!m||m[p.route.id]===void 0);if(p.route.lazy||g){l=!0,c>=0?o=o.slice(0,c+1):o=[o[0]];break}}}return o.reduceRight((u,p,d)=>{let m,g=!1,y=null,k=null;r&&(m=s&&p.route.id?s[p.route.id]:void 0,y=p.route.errorElement||RC,l&&(c<0&&d===0?(g=!0,k=null):c===d&&(g=!0,k=p.route.hydrateFallbackElement||null)));let f=n.concat(o.slice(0,d+1)),h=()=>{let v;return m?v=y:g?v=k:p.route.Component?v=b.createElement(p.route.Component,null):p.route.element?v=p.route.element:v=u,b.createElement(OC,{match:p,routeContext:{outlet:u,matches:f,isDataRoute:r!=null},children:v})};return r&&(p.route.ErrorBoundary||p.route.errorElement||d===0)?b.createElement(DC,{location:r.location,revalidation:r.revalidation,component:y,error:m,children:h(),routeContext:{outlet:null,matches:f,isDataRoute:!0}}):h()},null)}var q1=function(e){return e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e}(q1||{}),zl=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(zl||{});function _C(e){let n=b.useContext(qm);return n||ze(!1),n}function NC(e){let n=b.useContext(jC);return n||ze(!1),n}function BC(e){let n=b.useContext(Yt);return n||ze(!1),n}function F1(e){let n=BC(),r=n.matches[n.matches.length-1];return r.route.id||ze(!1),r.route.id}function HC(){var e;let n=b.useContext(N1),r=NC(zl.UseRouteError),t=F1(zl.UseRouteError);return n!==void 0?n:(e=r.errors)==null?void 0:e[t]}function qC(){let{router:e}=_C(q1.UseNavigateStable),n=F1(zl.UseNavigateStable),r=b.useRef(!1);return B1(()=>{r.current=!0}),b.useCallback(function(a,i){i===void 0&&(i={}),r.current&&(typeof a=="number"?e.navigate(a):e.navigate(a,qo({fromRouteId:n},i)))},[e,n])}function J1(e){ze(!1)}function FC(e){let{basename:n="/",children:r=null,location:t,navigationType:a=At.Pop,navigator:i,static:o=!1,future:s}=e;is()&&ze(!1);let l=n.replace(/^\/*/,"/"),c=b.useMemo(()=>({basename:l,navigator:i,static:o,future:qo({v7_relativeSplatPath:!1},s)}),[l,s,i,o]);typeof t=="string"&&(t=Ca(t));let{pathname:u="/",search:p="",hash:d="",state:m=null,key:g="default"}=t,y=b.useMemo(()=>{let k=Hm(u,l);return k==null?null:{location:{pathname:k,search:p,hash:d,state:m,key:g},navigationType:a}},[l,u,p,d,m,g,a]);return y==null?null:b.createElement(Ia.Provider,{value:c},b.createElement(as.Provider,{children:r,value:y}))}function JC(e){let{children:n,location:r}=e;return MC(od(n),r)}new Promise(()=>{});function od(e,n){n===void 0&&(n=[]);let r=[];return b.Children.forEach(e,(t,a)=>{if(!b.isValidElement(t))return;let i=[...n,a];if(t.type===b.Fragment){r.push.apply(r,od(t.props.children,i));return}t.type!==J1&&ze(!1),!t.props.index||!t.props.children||ze(!1);let o={id:t.props.id||i.join("-"),caseSensitive:t.props.caseSensitive,element:t.props.element,Component:t.props.Component,index:t.props.index,path:t.props.path,loader:t.props.loader,action:t.props.action,errorElement:t.props.errorElement,ErrorBoundary:t.props.ErrorBoundary,hasErrorBoundary:t.props.ErrorBoundary!=null||t.props.errorElement!=null,shouldRevalidate:t.props.shouldRevalidate,handle:t.props.handle,lazy:t.props.lazy};t.props.children&&(o.children=od(t.props.children,i)),r.push(o)}),r}/**
 * React Router DOM v6.23.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function sd(){return sd=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},sd.apply(this,arguments)}function zC(e,n){if(e==null)return{};var r={},t=Object.keys(e),a,i;for(i=0;i<t.length;i++)a=t[i],!(n.indexOf(a)>=0)&&(r[a]=e[a]);return r}function UC(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}function WC(e,n){return e.button===0&&(!n||n==="_self")&&!UC(e)}const VC=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset","unstable_viewTransition"],$C="6";try{window.__reactRouterVersion=$C}catch{}const GC="startTransition",Ch=sp[GC];function KC(e){let{basename:n,children:r,future:t,window:a}=e,i=b.useRef();i.current==null&&(i.current=Zj({window:a,v5Compat:!0}));let o=i.current,[s,l]=b.useState({action:o.action,location:o.location}),{v7_startTransition:c}=t||{},u=b.useCallback(p=>{c&&Ch?Ch(()=>l(p)):l(p)},[l,c]);return b.useLayoutEffect(()=>o.listen(u),[o,u]),b.createElement(FC,{basename:n,children:r,location:s.location,navigationType:s.action,navigator:o,future:t})}const YC=typeof window<"u"&&typeof window.document<"u"&&typeof window.document.createElement<"u",QC=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,Or=b.forwardRef(function(n,r){let{onClick:t,relative:a,reloadDocument:i,replace:o,state:s,target:l,to:c,preventScrollReset:u,unstable_viewTransition:p}=n,d=zC(n,VC),{basename:m}=b.useContext(Ia),g,y=!1;if(typeof c=="string"&&QC.test(c)&&(g=c,YC))try{let v=new URL(window.location.href),x=c.startsWith("//")?new URL(v.protocol+c):new URL(c),I=Hm(x.pathname,m);x.origin===v.origin&&I!=null?c=I+x.search+x.hash:y=!0}catch{}let k=CC(c,{relative:a}),f=XC(c,{replace:o,state:s,target:l,preventScrollReset:u,relative:a,unstable_viewTransition:p});function h(v){t&&t(v),v.defaultPrevented||f(v)}return b.createElement("a",sd({},d,{href:g||k,onClick:y||i?t:h,ref:r,target:l}))});var Ih;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"})(Ih||(Ih={}));var Eh;(function(e){e.UseFetcher="useFetcher",e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"})(Eh||(Eh={}));function XC(e,n){let{target:r,replace:t,state:a,preventScrollReset:i,relative:o,unstable_viewTransition:s}=n===void 0?{}:n,l=EC(),c=Ei(),u=H1(e,{relative:o});return b.useCallback(p=>{if(WC(p,r)){p.preventDefault();let d=t!==void 0?t:Jl(c)===Jl(u);l(e,{replace:d,state:a,preventScrollReset:i,relative:o,unstable_viewTransition:s})}},[c,l,u,t,a,r,e,i,o,s])}var z1={exports:{}};/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/(function(e){(function(){var n={}.hasOwnProperty;function r(){for(var i="",o=0;o<arguments.length;o++){var s=arguments[o];s&&(i=a(i,t(s)))}return i}function t(i){if(typeof i=="string"||typeof i=="number")return i;if(typeof i!="object")return"";if(Array.isArray(i))return r.apply(null,i);if(i.toString!==Object.prototype.toString&&!i.toString.toString().includes("[native code]"))return i.toString();var o="";for(var s in i)n.call(i,s)&&i[s]&&(o=a(o,s));return o}function a(i,o){return o?i?i+" "+o:i+o:i}e.exports?(r.default=r,e.exports=r):window.classNames=r})()})(z1);var ZC=z1.exports;const V=wi(ZC),U1=["xxl","xl","lg","md","sm","xs"],W1="xs",_c=b.createContext({prefixes:{},breakpoints:U1,minBreakpoint:W1});function G(e,n){const{prefixes:r}=b.useContext(_c);return e||r[n]||n}function Jm(){const{breakpoints:e}=b.useContext(_c);return e}function zm(){const{minBreakpoint:e}=b.useContext(_c);return e}function Um(){const{dir:e}=b.useContext(_c);return e==="rtl"}var V1={exports:{}},eI="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",nI=eI,rI=nI;function $1(){}function G1(){}G1.resetWarningCache=$1;var tI=function(){function e(t,a,i,o,s,l){if(l!==rI){var c=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw c.name="Invariant Violation",c}}e.isRequired=e;function n(){return e}var r={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:n,element:e,elementType:e,instanceOf:n,node:e,objectOf:n,oneOf:n,oneOfType:n,shape:n,exact:n,checkPropTypes:G1,resetWarningCache:$1};return r.PropTypes=r,r};V1.exports=tI();var aI=V1.exports;const fn=wi(aI);function iI(e,n=U1,r=W1){const t=[];return Object.entries(e).forEach(([a,i])=>{i!=null&&(typeof i=="object"?n.forEach(o=>{const s=i[o];if(s!=null){const l=o!==r?`-${o}`:"";t.push(`${a}${l}-${s}`)}}):t.push(`${a}-${i}`))}),t}const Rn=b.forwardRef(({as:e="div",bsPrefix:n,className:r,direction:t,gap:a,...i},o)=>{n=G(n,t==="horizontal"?"hstack":"vstack");const s=Jm(),l=zm();return A.jsx(e,{...i,ref:o,className:V(r,n,...iI({gap:a},s,l))})});Rn.displayName="Stack";function jn(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return Ib(n)}const ka=b.createContext(null),Fo=(e,n=null)=>e!=null?String(e):n||null;function K1(e,n){if(e==null)return{};var r={};for(var t in e)if({}.hasOwnProperty.call(e,t)){if(n.indexOf(t)>=0)continue;r[t]=e[t]}return r}function Th(e){return"default"+e.charAt(0).toUpperCase()+e.substr(1)}function oI(e){var n=sI(e,"string");return typeof n=="symbol"?n:String(n)}function sI(e,n){if(typeof e!="object"||e===null)return e;var r=e[Symbol.toPrimitive];if(r!==void 0){var t=r.call(e,n);if(typeof t!="object")return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}function Y1(e,n,r){var t=b.useRef(e!==void 0),a=b.useState(n),i=a[0],o=a[1],s=e!==void 0,l=t.current;return t.current=s,!s&&l&&i!==n&&o(n),[s?e:i,b.useCallback(function(c){for(var u=arguments.length,p=new Array(u>1?u-1:0),d=1;d<u;d++)p[d-1]=arguments[d];r&&r.apply(void 0,[c].concat(p)),o(c)},[r])]}function Wm(e,n){return Object.keys(n).reduce(function(r,t){var a,i=r,o=i[Th(t)],s=i[t],l=K1(i,[Th(t),t].map(oI)),c=n[t],u=Y1(s,o,e[c]),p=u[0],d=u[1];return up({},l,(a={},a[t]=p,a[c]=d,a))},e)}function ld(e,n){return ld=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(r,t){return r.__proto__=t,r},ld(e,n)}function lI(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,ld(e,n)}const Q1=b.forwardRef(({bsPrefix:e,className:n,as:r,...t},a)=>{e=G(e,"navbar-brand");const i=r||(t.href?"a":"span");return A.jsx(i,{...t,ref:a,className:V(n,e)})});Q1.displayName="NavbarBrand";function os(e){return e&&e.ownerDocument||document}function cI(e){var n=os(e);return n&&n.defaultView||window}function uI(e,n){return cI(e).getComputedStyle(e,n)}var pI=/([A-Z])/g;function dI(e){return e.replace(pI,"-$1").toLowerCase()}var mI=/^ms-/;function Hs(e){return dI(e).replace(mI,"-ms-")}var gI=/^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;function fI(e){return!!(e&&gI.test(e))}function tt(e,n){var r="",t="";if(typeof n=="string")return e.style.getPropertyValue(Hs(n))||uI(e).getPropertyValue(Hs(n));Object.keys(n).forEach(function(a){var i=n[a];!i&&i!==0?e.style.removeProperty(Hs(a)):fI(a)?t+=a+"("+i+") ":r+=Hs(a)+": "+i+";"}),t&&(r+="transform: "+t+";"),e.style.cssText+=";"+r}const Mh={disabled:!1},X1=Ye.createContext(null);var hI=function(n){return n.scrollTop},ro="unmounted",Ct="exited",pr="entering",Yr="entered",Jo="exiting",gt=function(e){lI(n,e);function n(t,a){var i;i=e.call(this,t,a)||this;var o=a,s=o&&!o.isMounting?t.enter:t.appear,l;return i.appearStatus=null,t.in?s?(l=Ct,i.appearStatus=pr):l=Yr:t.unmountOnExit||t.mountOnEnter?l=ro:l=Ct,i.state={status:l},i.nextCallback=null,i}n.getDerivedStateFromProps=function(a,i){var o=a.in;return o&&i.status===ro?{status:Ct}:null};var r=n.prototype;return r.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},r.componentDidUpdate=function(a){var i=null;if(a!==this.props){var o=this.state.status;this.props.in?o!==pr&&o!==Yr&&(i=pr):(o===pr||o===Yr)&&(i=Jo)}this.updateStatus(!1,i)},r.componentWillUnmount=function(){this.cancelNextCallback()},r.getTimeouts=function(){var a=this.props.timeout,i,o,s;return i=o=s=a,a!=null&&typeof a!="number"&&(i=a.exit,o=a.enter,s=a.appear!==void 0?a.appear:o),{exit:i,enter:o,appear:s}},r.updateStatus=function(a,i){if(a===void 0&&(a=!1),i!==null)if(this.cancelNextCallback(),i===pr){if(this.props.unmountOnExit||this.props.mountOnEnter){var o=this.props.nodeRef?this.props.nodeRef.current:ca.findDOMNode(this);o&&hI(o)}this.performEnter(a)}else this.performExit();else this.props.unmountOnExit&&this.state.status===Ct&&this.setState({status:ro})},r.performEnter=function(a){var i=this,o=this.props.enter,s=this.context?this.context.isMounting:a,l=this.props.nodeRef?[s]:[ca.findDOMNode(this),s],c=l[0],u=l[1],p=this.getTimeouts(),d=s?p.appear:p.enter;if(!a&&!o||Mh.disabled){this.safeSetState({status:Yr},function(){i.props.onEntered(c)});return}this.props.onEnter(c,u),this.safeSetState({status:pr},function(){i.props.onEntering(c,u),i.onTransitionEnd(d,function(){i.safeSetState({status:Yr},function(){i.props.onEntered(c,u)})})})},r.performExit=function(){var a=this,i=this.props.exit,o=this.getTimeouts(),s=this.props.nodeRef?void 0:ca.findDOMNode(this);if(!i||Mh.disabled){this.safeSetState({status:Ct},function(){a.props.onExited(s)});return}this.props.onExit(s),this.safeSetState({status:Jo},function(){a.props.onExiting(s),a.onTransitionEnd(o.exit,function(){a.safeSetState({status:Ct},function(){a.props.onExited(s)})})})},r.cancelNextCallback=function(){this.nextCallback!==null&&(this.nextCallback.cancel(),this.nextCallback=null)},r.safeSetState=function(a,i){i=this.setNextCallback(i),this.setState(a,i)},r.setNextCallback=function(a){var i=this,o=!0;return this.nextCallback=function(s){o&&(o=!1,i.nextCallback=null,a(s))},this.nextCallback.cancel=function(){o=!1},this.nextCallback},r.onTransitionEnd=function(a,i){this.setNextCallback(i);var o=this.props.nodeRef?this.props.nodeRef.current:ca.findDOMNode(this),s=a==null&&!this.props.addEndListener;if(!o||s){setTimeout(this.nextCallback,0);return}if(this.props.addEndListener){var l=this.props.nodeRef?[this.nextCallback]:[o,this.nextCallback],c=l[0],u=l[1];this.props.addEndListener(c,u)}a!=null&&setTimeout(this.nextCallback,a)},r.render=function(){var a=this.state.status;if(a===ro)return null;var i=this.props,o=i.children;i.in,i.mountOnEnter,i.unmountOnExit,i.appear,i.enter,i.exit,i.timeout,i.addEndListener,i.onEnter,i.onEntering,i.onEntered,i.onExit,i.onExiting,i.onExited,i.nodeRef;var s=K1(i,["children","in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","addEndListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","nodeRef"]);return Ye.createElement(X1.Provider,{value:null},typeof o=="function"?o(a,s):Ye.cloneElement(Ye.Children.only(o),s))},n}(Ye.Component);gt.contextType=X1;gt.propTypes={};function Da(){}gt.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:Da,onEntering:Da,onEntered:Da,onExit:Da,onExiting:Da,onExited:Da};gt.UNMOUNTED=ro;gt.EXITED=Ct;gt.ENTERING=pr;gt.ENTERED=Yr;gt.EXITING=Jo;const Nc=!!(typeof window<"u"&&window.document&&window.document.createElement);var cd=!1,ud=!1;try{var Ou={get passive(){return cd=!0},get once(){return ud=cd=!0}};Nc&&(window.addEventListener("test",Ou,Ou),window.removeEventListener("test",Ou,!0))}catch{}function Z1(e,n,r,t){if(t&&typeof t!="boolean"&&!ud){var a=t.once,i=t.capture,o=r;!ud&&a&&(o=r.__once||function s(l){this.removeEventListener(n,s,i),r.call(this,l)},r.__once=o),e.addEventListener(n,o,cd?t:i)}e.addEventListener(n,r,t)}function vI(e,n,r,t){var a=t&&typeof t!="boolean"?t.capture:t;e.removeEventListener(n,r,a),r.__once&&e.removeEventListener(n,r.__once,a)}function Zr(e,n,r,t){return Z1(e,n,r,t),function(){vI(e,n,r,t)}}function bI(e,n,r,t){if(t===void 0&&(t=!0),e){var a=document.createEvent("HTMLEvents");a.initEvent(n,r,t),e.dispatchEvent(a)}}function yI(e){var n=tt(e,"transitionDuration")||"",r=n.indexOf("ms")===-1?1e3:1;return parseFloat(n)*r}function kI(e,n,r){r===void 0&&(r=5);var t=!1,a=setTimeout(function(){t||bI(e,"transitionend",!0)},n+r),i=Zr(e,"transitionend",function(){t=!0},{once:!0});return function(){clearTimeout(a),i()}}function SI(e,n,r,t){r==null&&(r=yI(e)||0);var a=kI(e,r,t),i=Zr(e,"transitionend",n);return function(){a(),i()}}function Ah(e,n){const r=tt(e,n)||"",t=r.indexOf("ms")===-1?1e3:1;return parseFloat(r)*t}function Vm(e,n){const r=Ah(e,"transitionDuration"),t=Ah(e,"transitionDelay"),a=SI(e,i=>{i.target===e&&(a(),n(i))},r+t)}function Vi(...e){return e.filter(n=>n!=null).reduce((n,r)=>{if(typeof r!="function")throw new Error("Invalid Argument Type, must only provide functions, undefined, or null.");return n===null?r:function(...a){n.apply(this,a),r.apply(this,a)}},null)}function e0(e){e.offsetHeight}const Ph=e=>!e||typeof e=="function"?e:n=>{e.current=n};function wI(e,n){const r=Ph(e),t=Ph(n);return a=>{r&&r(a),t&&t(a)}}function Br(e,n){return b.useMemo(()=>wI(e,n),[e,n])}function Ul(e){return e&&"setState"in e?ca.findDOMNode(e):e??null}const $m=Ye.forwardRef(({onEnter:e,onEntering:n,onEntered:r,onExit:t,onExiting:a,onExited:i,addEndListener:o,children:s,childRef:l,...c},u)=>{const p=b.useRef(null),d=Br(p,l),m=S=>{d(Ul(S))},g=S=>E=>{S&&p.current&&S(p.current,E)},y=b.useCallback(g(e),[e]),k=b.useCallback(g(n),[n]),f=b.useCallback(g(r),[r]),h=b.useCallback(g(t),[t]),v=b.useCallback(g(a),[a]),x=b.useCallback(g(i),[i]),I=b.useCallback(g(o),[o]);return A.jsx(gt,{ref:u,...c,onEnter:y,onEntered:f,onEntering:k,onExit:h,onExited:x,onExiting:v,addEndListener:I,nodeRef:p,children:typeof s=="function"?(S,E)=>s(S,{...E,ref:m}):Ye.cloneElement(s,{ref:m})})}),xI={height:["marginTop","marginBottom"],width:["marginLeft","marginRight"]};function jI(e,n){const r=`offset${e[0].toUpperCase()}${e.slice(1)}`,t=n[r],a=xI[e];return t+parseInt(tt(n,a[0]),10)+parseInt(tt(n,a[1]),10)}const CI={[Ct]:"collapse",[Jo]:"collapsing",[pr]:"collapsing",[Yr]:"collapse show"},II=Ye.forwardRef(({onEnter:e,onEntering:n,onEntered:r,onExit:t,onExiting:a,className:i,children:o,dimension:s="height",in:l=!1,timeout:c=300,mountOnEnter:u=!1,unmountOnExit:p=!1,appear:d=!1,getDimensionValue:m=jI,...g},y)=>{const k=typeof s=="function"?s():s,f=b.useMemo(()=>Vi(S=>{S.style[k]="0"},e),[k,e]),h=b.useMemo(()=>Vi(S=>{const E=`scroll${k[0].toUpperCase()}${k.slice(1)}`;S.style[k]=`${S[E]}px`},n),[k,n]),v=b.useMemo(()=>Vi(S=>{S.style[k]=null},r),[k,r]),x=b.useMemo(()=>Vi(S=>{S.style[k]=`${m(k,S)}px`,e0(S)},t),[t,m,k]),I=b.useMemo(()=>Vi(S=>{S.style[k]=null},a),[k,a]);return A.jsx($m,{ref:y,addEndListener:Vm,...g,"aria-expanded":g.role?l:null,onEnter:f,onEntering:h,onEntered:v,onExit:x,onExiting:I,childRef:o.ref,in:l,timeout:c,mountOnEnter:u,unmountOnExit:p,appear:d,children:(S,E)=>Ye.cloneElement(o,{...E,className:V(i,o.props.className,CI[S],k==="width"&&"collapse-horizontal")})})}),Qt=b.createContext(null);Qt.displayName="NavbarContext";const n0=b.forwardRef(({children:e,bsPrefix:n,...r},t)=>{n=G(n,"navbar-collapse");const a=b.useContext(Qt);return A.jsx(II,{in:!!(a&&a.expanded),...r,children:A.jsx("div",{ref:t,className:n,children:e})})});n0.displayName="NavbarCollapse";function EI(e){const n=b.useRef(e);return b.useEffect(()=>{n.current=e},[e]),n}function Ne(e){const n=EI(e);return b.useCallback(function(...r){return n.current&&n.current(...r)},[n])}const r0=b.forwardRef(({bsPrefix:e,className:n,children:r,label:t="Toggle navigation",as:a="button",onClick:i,...o},s)=>{e=G(e,"navbar-toggler");const{onToggle:l,expanded:c}=b.useContext(Qt)||{},u=Ne(p=>{i&&i(p),l&&l()});return a==="button"&&(o.type="button"),A.jsx(a,{...o,ref:s,onClick:u,"aria-label":t,className:V(n,e,!c&&"collapsed"),children:r||A.jsx("span",{className:`${e}-icon`})})});r0.displayName="NavbarToggle";const TI=typeof global<"u"&&global.navigator&&global.navigator.product==="ReactNative",MI=typeof document<"u",zo=MI||TI?b.useLayoutEffect:b.useEffect,pd=new WeakMap,Rh=(e,n)=>{if(!e||!n)return;const r=pd.get(n)||new Map;pd.set(n,r);let t=r.get(e);return t||(t=n.matchMedia(e),t.refCount=0,r.set(t.media,t)),t};function AI(e,n=typeof window>"u"?void 0:window){const r=Rh(e,n),[t,a]=b.useState(()=>r?r.matches:!1);return zo(()=>{let i=Rh(e,n);if(!i)return a(!1);let o=pd.get(n);const s=()=>{a(i.matches)};return i.refCount++,i.addListener(s),s(),()=>{i.removeListener(s),i.refCount--,i.refCount<=0&&(o==null||o.delete(i.media)),i=void 0}},[e]),t}function PI(e){const n=Object.keys(e);function r(s,l){return s===l?l:s?`${s} and ${l}`:l}function t(s){return n[Math.min(n.indexOf(s)+1,n.length-1)]}function a(s){const l=t(s);let c=e[l];return typeof c=="number"?c=`${c-.2}px`:c=`calc(${c} - 0.2px)`,`(max-width: ${c})`}function i(s){let l=e[s];return typeof l=="number"&&(l=`${l}px`),`(min-width: ${l})`}function o(s,l,c){let u;typeof s=="object"?(u=s,c=l,l=!0):(l=l||!0,u={[s]:l});let p=b.useMemo(()=>Object.entries(u).reduce((d,[m,g])=>((g==="up"||g===!0)&&(d=r(d,i(m))),(g==="down"||g===!0)&&(d=r(d,a(m))),d),""),[JSON.stringify(u)]);return AI(p,c)}return o}const RI=PI({xs:0,sm:576,md:768,lg:992,xl:1200,xxl:1400});function Lu(e){e===void 0&&(e=os());try{var n=e.activeElement;return!n||!n.nodeName?null:n}catch{return e.body}}function Uo(e,n){if(e.contains)return e.contains(n);if(e.compareDocumentPosition)return e===n||!!(e.compareDocumentPosition(n)&16)}function Gm(){const e=b.useRef(!0),n=b.useRef(()=>e.current);return b.useEffect(()=>(e.current=!0,()=>{e.current=!1}),[]),n.current}function DI(e){const n=b.useRef(e);return n.current=e,n}function t0(e){const n=DI(e);b.useEffect(()=>()=>n.current(),[])}function a0(e){const n=b.useRef(null);return b.useEffect(()=>{n.current=e}),n.current}const OI="data-rr-ui-",LI="rrUi";function Ti(e){return`${OI}${e}`}function _I(e){return`${LI}${e}`}function NI(e=document){const n=e.defaultView;return Math.abs(n.innerWidth-e.documentElement.clientWidth)}const Dh=Ti("modal-open");class Km{constructor({ownerDocument:n,handleContainerOverflow:r=!0,isRTL:t=!1}={}){this.handleContainerOverflow=r,this.isRTL=t,this.modals=[],this.ownerDocument=n}getScrollbarWidth(){return NI(this.ownerDocument)}getElement(){return(this.ownerDocument||document).body}setModalAttributes(n){}removeModalAttributes(n){}setContainerStyle(n){const r={overflow:"hidden"},t=this.isRTL?"paddingLeft":"paddingRight",a=this.getElement();n.style={overflow:a.style.overflow,[t]:a.style[t]},n.scrollBarWidth&&(r[t]=`${parseInt(tt(a,t)||"0",10)+n.scrollBarWidth}px`),a.setAttribute(Dh,""),tt(a,r)}reset(){[...this.modals].forEach(n=>this.remove(n))}removeContainerStyle(n){const r=this.getElement();r.removeAttribute(Dh),Object.assign(r.style,n.style)}add(n){let r=this.modals.indexOf(n);return r!==-1||(r=this.modals.length,this.modals.push(n),this.setModalAttributes(n),r!==0)||(this.state={scrollBarWidth:this.getScrollbarWidth(),style:{}},this.handleContainerOverflow&&this.setContainerStyle(this.state)),r}remove(n){const r=this.modals.indexOf(n);r!==-1&&(this.modals.splice(r,1),!this.modals.length&&this.handleContainerOverflow&&this.removeContainerStyle(this.state),this.removeModalAttributes(n))}isTopModal(n){return!!this.modals.length&&this.modals[this.modals.length-1]===n}}const i0=b.createContext(Nc?window:void 0);i0.Provider;function Bc(){return b.useContext(i0)}const _u=(e,n)=>Nc?e==null?(n||os()).body:(typeof e=="function"&&(e=e()),e&&"current"in e&&(e=e.current),e&&("nodeType"in e||e.getBoundingClientRect)?e:null):null;function dd(e,n){const r=Bc(),[t,a]=b.useState(()=>_u(e,r==null?void 0:r.document));if(!t){const i=_u(e);i&&a(i)}return b.useEffect(()=>{},[n,t]),b.useEffect(()=>{const i=_u(e);i!==t&&a(i)},[e,t]),t}function BI({children:e,in:n,onExited:r,mountOnEnter:t,unmountOnExit:a}){const i=b.useRef(null),o=b.useRef(n),s=Ne(r);b.useEffect(()=>{n?o.current=!0:s(i.current)},[n,s]);const l=Br(i,e.ref),c=b.cloneElement(e,{ref:l});return n?c:a||!o.current&&t?null:c}function o0(e){return e.code==="Escape"||e.keyCode===27}function HI(){const e=b.version.split(".");return{major:+e[0],minor:+e[1],patch:+e[2]}}const qI=["onEnter","onEntering","onEntered","onExit","onExiting","onExited","addEndListener","children"];function FI(e,n){if(e==null)return{};var r={},t=Object.keys(e),a,i;for(i=0;i<t.length;i++)a=t[i],!(n.indexOf(a)>=0)&&(r[a]=e[a]);return r}function JI(e){let{onEnter:n,onEntering:r,onEntered:t,onExit:a,onExiting:i,onExited:o,addEndListener:s,children:l}=e,c=FI(e,qI);const{major:u}=HI(),p=u>=19?l.props.ref:l.ref,d=b.useRef(null),m=Br(d,typeof l=="function"?null:p),g=S=>E=>{S&&d.current&&S(d.current,E)},y=b.useCallback(g(n),[n]),k=b.useCallback(g(r),[r]),f=b.useCallback(g(t),[t]),h=b.useCallback(g(a),[a]),v=b.useCallback(g(i),[i]),x=b.useCallback(g(o),[o]),I=b.useCallback(g(s),[s]);return Object.assign({},c,{nodeRef:d},n&&{onEnter:y},r&&{onEntering:k},t&&{onEntered:f},a&&{onExit:h},i&&{onExiting:v},o&&{onExited:x},s&&{addEndListener:I},{children:typeof l=="function"?(S,E)=>l(S,Object.assign({},E,{ref:m})):b.cloneElement(l,{ref:m})})}const zI=["component"];function UI(e,n){if(e==null)return{};var r={},t=Object.keys(e),a,i;for(i=0;i<t.length;i++)a=t[i],!(n.indexOf(a)>=0)&&(r[a]=e[a]);return r}const WI=b.forwardRef((e,n)=>{let{component:r}=e,t=UI(e,zI);const a=JI(t);return A.jsx(r,Object.assign({ref:n},a))});function VI({in:e,onTransition:n}){const r=b.useRef(null),t=b.useRef(!0),a=Ne(n);return zo(()=>{if(!r.current)return;let i=!1;return a({in:e,element:r.current,initial:t.current,isStale:()=>i}),()=>{i=!0}},[e,a]),zo(()=>(t.current=!1,()=>{t.current=!0}),[]),r}function $I({children:e,in:n,onExited:r,onEntered:t,transition:a}){const[i,o]=b.useState(!n);n&&i&&o(!1);const s=VI({in:!!n,onTransition:c=>{const u=()=>{c.isStale()||(c.in?t==null||t(c.element,c.initial):(o(!0),r==null||r(c.element)))};Promise.resolve(a(c)).then(u,p=>{throw c.in||o(!0),p})}}),l=Br(s,e.ref);return i&&!n?null:b.cloneElement(e,{ref:l})}function md(e,n,r){return e?A.jsx(WI,Object.assign({},r,{component:e})):n?A.jsx($I,Object.assign({},r,{transition:n})):A.jsx(BI,Object.assign({},r))}const GI=["show","role","className","style","children","backdrop","keyboard","onBackdropClick","onEscapeKeyDown","transition","runTransition","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","manager","container","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered"];function KI(e,n){if(e==null)return{};var r={},t=Object.keys(e),a,i;for(i=0;i<t.length;i++)a=t[i],!(n.indexOf(a)>=0)&&(r[a]=e[a]);return r}let Nu;function YI(e){return Nu||(Nu=new Km({ownerDocument:e==null?void 0:e.document})),Nu}function QI(e){const n=Bc(),r=e||YI(n),t=b.useRef({dialog:null,backdrop:null});return Object.assign(t.current,{add:()=>r.add(t.current),remove:()=>r.remove(t.current),isTopModal:()=>r.isTopModal(t.current),setDialogRef:b.useCallback(a=>{t.current.dialog=a},[]),setBackdropRef:b.useCallback(a=>{t.current.backdrop=a},[])})}const s0=b.forwardRef((e,n)=>{let{show:r=!1,role:t="dialog",className:a,style:i,children:o,backdrop:s=!0,keyboard:l=!0,onBackdropClick:c,onEscapeKeyDown:u,transition:p,runTransition:d,backdropTransition:m,runBackdropTransition:g,autoFocus:y=!0,enforceFocus:k=!0,restoreFocus:f=!0,restoreFocusOptions:h,renderDialog:v,renderBackdrop:x=je=>A.jsx("div",Object.assign({},je)),manager:I,container:S,onShow:E,onHide:T=()=>{},onExit:B,onExited:C,onExiting:R,onEnter:O,onEntering:q,onEntered:$}=e,J=KI(e,GI);const Q=Bc(),ee=dd(S),D=QI(I),z=Gm(),w=a0(r),[X,te]=b.useState(!r),j=b.useRef(null);b.useImperativeHandle(n,()=>D,[D]),Nc&&!w&&r&&(j.current=Lu(Q==null?void 0:Q.document)),r&&X&&te(!1);const ge=Ne(()=>{if(D.add(),Wn.current=Zr(document,"keydown",Ge),kn.current=Zr(document,"focus",()=>setTimeout(ie),!0),E&&E(),y){var je,kt;const Jr=Lu((je=(kt=D.dialog)==null?void 0:kt.ownerDocument)!=null?je:Q==null?void 0:Q.document);D.dialog&&Jr&&!Uo(D.dialog,Jr)&&(j.current=Jr,D.dialog.focus())}}),ce=Ne(()=>{if(D.remove(),Wn.current==null||Wn.current(),kn.current==null||kn.current(),f){var je;(je=j.current)==null||je.focus==null||je.focus(h),j.current=null}});b.useEffect(()=>{!r||!ee||ge()},[r,ee,ge]),b.useEffect(()=>{X&&ce()},[X,ce]),t0(()=>{ce()});const ie=Ne(()=>{if(!k||!z()||!D.isTopModal())return;const je=Lu(Q==null?void 0:Q.document);D.dialog&&je&&!Uo(D.dialog,je)&&D.dialog.focus()}),en=Ne(je=>{je.target===je.currentTarget&&(c==null||c(je),s===!0&&T())}),Ge=Ne(je=>{l&&o0(je)&&D.isTopModal()&&(u==null||u(je),je.defaultPrevented||T())}),kn=b.useRef(),Wn=b.useRef(),Sr=(...je)=>{te(!0),C==null||C(...je)};if(!ee)return null;const Ma=Object.assign({role:t,ref:D.setDialogRef,"aria-modal":t==="dialog"?!0:void 0},J,{style:i,className:a,tabIndex:-1});let bt=v?v(Ma):A.jsx("div",Object.assign({},Ma,{children:b.cloneElement(o,{role:"document"})}));bt=md(p,d,{unmountOnExit:!0,mountOnEnter:!0,appear:!0,in:!!r,onExit:B,onExiting:R,onExited:Sr,onEnter:O,onEntering:q,onEntered:$,children:bt});let yt=null;return s&&(yt=x({ref:D.setBackdropRef,onClick:en}),yt=md(m,g,{in:!!r,appear:!0,mountOnEnter:!0,unmountOnExit:!0,children:yt})),A.jsx(A.Fragment,{children:ca.createPortal(A.jsxs(A.Fragment,{children:[yt,bt]}),ee)})});s0.displayName="Modal";const XI=Object.assign(s0,{Manager:Km}),ZI={[pr]:"show",[Yr]:"show"},Wl=b.forwardRef(({className:e,children:n,transitionClasses:r={},onEnter:t,...a},i)=>{const o={in:!1,timeout:300,mountOnEnter:!1,unmountOnExit:!1,appear:!1,...a},s=b.useCallback((l,c)=>{e0(l),t==null||t(l,c)},[t]);return A.jsx($m,{ref:i,addEndListener:Vm,...o,onEnter:s,childRef:n.ref,children:(l,c)=>b.cloneElement(n,{...c,className:V("fade",e,n.props.className,ZI[l],r[l])})})});Wl.displayName="Fade";const l0=b.forwardRef(({className:e,bsPrefix:n,as:r="div",...t},a)=>(n=G(n,"offcanvas-body"),A.jsx(r,{ref:a,className:V(e,n),...t})));l0.displayName="OffcanvasBody";const eE={[pr]:"show",[Yr]:"show"},c0=b.forwardRef(({bsPrefix:e,className:n,children:r,in:t=!1,mountOnEnter:a=!1,unmountOnExit:i=!1,appear:o=!1,...s},l)=>(e=G(e,"offcanvas"),A.jsx($m,{ref:l,addEndListener:Vm,in:t,mountOnEnter:a,unmountOnExit:i,appear:o,...s,childRef:r.ref,children:(c,u)=>b.cloneElement(r,{...u,className:V(n,r.props.className,(c===pr||c===Jo)&&`${e}-toggling`,eE[c])})})));c0.displayName="OffcanvasToggling";const u0=b.createContext({onHide(){}}),nE={"aria-label":fn.string,onClick:fn.func,variant:fn.oneOf(["white"])},Ym=b.forwardRef(({className:e,variant:n,"aria-label":r="Close",...t},a)=>A.jsx("button",{ref:a,type:"button",className:V("btn-close",n&&`btn-close-${n}`,e),"aria-label":r,...t}));Ym.displayName="CloseButton";Ym.propTypes=nE;const rE=b.forwardRef(({closeLabel:e="Close",closeVariant:n,closeButton:r=!1,onHide:t,children:a,...i},o)=>{const s=b.useContext(u0),l=Ne(()=>{s==null||s.onHide(),t==null||t()});return A.jsxs("div",{ref:o,...i,children:[a,r&&A.jsx(Ym,{"aria-label":e,variant:n,onClick:l})]})}),p0=b.forwardRef(({bsPrefix:e,className:n,closeLabel:r="Close",closeButton:t=!1,...a},i)=>(e=G(e,"offcanvas-header"),A.jsx(rE,{ref:i,...a,className:V(n,e),closeLabel:r,closeButton:t})));p0.displayName="OffcanvasHeader";const Qm=e=>b.forwardRef((n,r)=>A.jsx("div",{...n,ref:r,className:V(n.className,e)})),tE=Qm("h5"),d0=b.forwardRef(({className:e,bsPrefix:n,as:r=tE,...t},a)=>(n=G(n,"offcanvas-title"),A.jsx(r,{ref:a,className:V(e,n),...t})));d0.displayName="OffcanvasTitle";function gd(e,n){return e.classList?!!n&&e.classList.contains(n):(" "+(e.className.baseVal||e.className)+" ").indexOf(" "+n+" ")!==-1}function aE(e,n){e.classList?e.classList.add(n):gd(e,n)||(typeof e.className=="string"?e.className=e.className+" "+n:e.setAttribute("class",(e.className&&e.className.baseVal||"")+" "+n))}var iE=Function.prototype.bind.call(Function.prototype.call,[].slice);function Kr(e,n){return iE(e.querySelectorAll(n))}function Oh(e,n){return e.replace(new RegExp("(^|\\s)"+n+"(?:\\s|$)","g"),"$1").replace(/\s+/g," ").replace(/^\s*|\s*$/g,"")}function oE(e,n){e.classList?e.classList.remove(n):typeof e.className=="string"?e.className=Oh(e.className,n):e.setAttribute("class",Oh(e.className&&e.className.baseVal||"",n))}const Oa={FIXED_CONTENT:".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",STICKY_CONTENT:".sticky-top",NAVBAR_TOGGLER:".navbar-toggler"};class m0 extends Km{adjustAndStore(n,r,t){const a=r.style[n];r.dataset[n]=a,tt(r,{[n]:`${parseFloat(tt(r,n))+t}px`})}restore(n,r){const t=r.dataset[n];t!==void 0&&(delete r.dataset[n],tt(r,{[n]:t}))}setContainerStyle(n){super.setContainerStyle(n);const r=this.getElement();if(aE(r,"modal-open"),!n.scrollBarWidth)return;const t=this.isRTL?"paddingLeft":"paddingRight",a=this.isRTL?"marginLeft":"marginRight";Kr(r,Oa.FIXED_CONTENT).forEach(i=>this.adjustAndStore(t,i,n.scrollBarWidth)),Kr(r,Oa.STICKY_CONTENT).forEach(i=>this.adjustAndStore(a,i,-n.scrollBarWidth)),Kr(r,Oa.NAVBAR_TOGGLER).forEach(i=>this.adjustAndStore(a,i,n.scrollBarWidth))}removeContainerStyle(n){super.removeContainerStyle(n);const r=this.getElement();oE(r,"modal-open");const t=this.isRTL?"paddingLeft":"paddingRight",a=this.isRTL?"marginLeft":"marginRight";Kr(r,Oa.FIXED_CONTENT).forEach(i=>this.restore(t,i)),Kr(r,Oa.STICKY_CONTENT).forEach(i=>this.restore(a,i)),Kr(r,Oa.NAVBAR_TOGGLER).forEach(i=>this.restore(a,i))}}let Bu;function sE(e){return Bu||(Bu=new m0(e)),Bu}function lE(e){return A.jsx(c0,{...e})}function cE(e){return A.jsx(Wl,{...e})}const g0=b.forwardRef(({bsPrefix:e,className:n,children:r,"aria-labelledby":t,placement:a="start",responsive:i,show:o=!1,backdrop:s=!0,keyboard:l=!0,scroll:c=!1,onEscapeKeyDown:u,onShow:p,onHide:d,container:m,autoFocus:g=!0,enforceFocus:y=!0,restoreFocus:k=!0,restoreFocusOptions:f,onEntered:h,onExit:v,onExiting:x,onEnter:I,onEntering:S,onExited:E,backdropClassName:T,manager:B,renderStaticNode:C=!1,...R},O)=>{const q=b.useRef();e=G(e,"offcanvas");const{onToggle:$}=b.useContext(Qt)||{},[J,Q]=b.useState(!1),ee=RI(i||"xs","up");b.useEffect(()=>{Q(i?o&&!ee:o)},[o,i,ee]);const D=Ne(()=>{$==null||$(),d==null||d()}),z=b.useMemo(()=>({onHide:D}),[D]);function w(){return B||(c?(q.current||(q.current=new m0({handleContainerOverflow:!1})),q.current):sE())}const X=(ce,...ie)=>{ce&&(ce.style.visibility="visible"),I==null||I(ce,...ie)},te=(ce,...ie)=>{ce&&(ce.style.visibility=""),E==null||E(...ie)},j=b.useCallback(ce=>A.jsx("div",{...ce,className:V(`${e}-backdrop`,T)}),[T,e]),ge=ce=>A.jsx("div",{...ce,...R,className:V(n,i?`${e}-${i}`:e,`${e}-${a}`),"aria-labelledby":t,children:r});return A.jsxs(A.Fragment,{children:[!J&&(i||C)&&ge({}),A.jsx(u0.Provider,{value:z,children:A.jsx(XI,{show:J,ref:O,backdrop:s,container:m,keyboard:l,autoFocus:g,enforceFocus:y&&!c,restoreFocus:k,restoreFocusOptions:f,onEscapeKeyDown:u,onShow:p,onHide:D,onEnter:X,onEntering:S,onEntered:h,onExit:v,onExiting:x,onExited:te,manager:w(),transition:lE,backdropTransition:cE,renderBackdrop:j,renderDialog:ge})})]})});g0.displayName="Offcanvas";const uE=Object.assign(g0,{Body:l0,Header:p0,Title:d0}),f0=b.forwardRef((e,n)=>{const r=b.useContext(Qt);return A.jsx(uE,{ref:n,show:!!(r!=null&&r.expanded),...e,renderStaticNode:!0})});f0.displayName="NavbarOffcanvas";const h0=b.forwardRef(({className:e,bsPrefix:n,as:r="span",...t},a)=>(n=G(n,"navbar-text"),A.jsx(r,{ref:a,className:V(e,n),...t})));h0.displayName="NavbarText";const v0=b.forwardRef((e,n)=>{const{bsPrefix:r,expand:t=!0,variant:a="light",bg:i,fixed:o,sticky:s,className:l,as:c="nav",expanded:u,onToggle:p,onSelect:d,collapseOnSelect:m=!1,...g}=Wm(e,{expanded:"onToggle"}),y=G(r,"navbar"),k=b.useCallback((...v)=>{d==null||d(...v),m&&u&&(p==null||p(!1))},[d,m,u,p]);g.role===void 0&&c!=="nav"&&(g.role="navigation");let f=`${y}-expand`;typeof t=="string"&&(f=`${f}-${t}`);const h=b.useMemo(()=>({onToggle:()=>p==null?void 0:p(!u),bsPrefix:y,expanded:!!u,expand:t}),[y,u,t,p]);return A.jsx(Qt.Provider,{value:h,children:A.jsx(ka.Provider,{value:k,children:A.jsx(c,{ref:n,...g,className:V(l,y,t&&f,a&&`${y}-${a}`,i&&`bg-${i}`,s&&`sticky-${s}`,o&&`fixed-${o}`)})})})});v0.displayName="Navbar";const Hu=Object.assign(v0,{Brand:Q1,Collapse:n0,Offcanvas:f0,Text:h0,Toggle:r0});var Lh={exports:{}},fd={exports:{}};(function(e,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=r;function r(t){function a(o,s,l,c,u,p){var d=c||"<<anonymous>>",m=p||l;if(s[l]==null)return o?new Error("Required "+u+" `"+m+"` was not specified "+("in `"+d+"`.")):null;for(var g=arguments.length,y=Array(g>6?g-6:0),k=6;k<g;k++)y[k-6]=arguments[k];return t.apply(void 0,[s,l,d,u,m].concat(y))}var i=a.bind(null,!1);return i.isRequired=a.bind(null,!0),i}e.exports=n.default})(fd,fd.exports);var pE=fd.exports;(function(e,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=i;var r=pE,t=a(r);function a(o){return o&&o.__esModule?o:{default:o}}function i(){for(var o=arguments.length,s=Array(o),l=0;l<o;l++)s[l]=arguments[l];function c(){for(var u=arguments.length,p=Array(u),d=0;d<u;d++)p[d]=arguments[d];var m=null;return s.forEach(function(g){if(m==null){var y=g.apply(void 0,p);y!=null&&(m=y)}}),m}return(0,t.default)(c)}e.exports=n.default})(Lh,Lh.exports);function b0(){const[,e]=b.useReducer(n=>!n,!1);return e}const Hc=b.createContext(null);Hc.displayName="NavContext";const y0=b.createContext(null),dE=["as","disabled"];function mE(e,n){if(e==null)return{};var r={},t=Object.keys(e),a,i;for(i=0;i<t.length;i++)a=t[i],!(n.indexOf(a)>=0)&&(r[a]=e[a]);return r}function gE(e){return!e||e.trim()==="#"}function Xm({tagName:e,disabled:n,href:r,target:t,rel:a,role:i,onClick:o,tabIndex:s=0,type:l}){e||(r!=null||t!=null||a!=null?e="a":e="button");const c={tagName:e};if(e==="button")return[{type:l||"button",disabled:n},c];const u=d=>{if((n||e==="a"&&gE(r))&&d.preventDefault(),n){d.stopPropagation();return}o==null||o(d)},p=d=>{d.key===" "&&(d.preventDefault(),u(d))};return e==="a"&&(r||(r="#"),n&&(r=void 0)),[{role:i??"button",disabled:void 0,tabIndex:n?void 0:s,href:r,target:e==="a"?t:void 0,"aria-disabled":n||void 0,rel:e==="a"?a:void 0,onClick:u,onKeyDown:p},c]}const Zm=b.forwardRef((e,n)=>{let{as:r,disabled:t}=e,a=mE(e,dE);const[i,{tagName:o}]=Xm(Object.assign({tagName:r,disabled:t},a));return A.jsx(o,Object.assign({},a,i,{ref:n}))});Zm.displayName="Button";const fE=["as","active","eventKey"];function hE(e,n){if(e==null)return{};var r={},t=Object.keys(e),a,i;for(i=0;i<t.length;i++)a=t[i],!(n.indexOf(a)>=0)&&(r[a]=e[a]);return r}function k0({key:e,onClick:n,active:r,id:t,role:a,disabled:i}){const o=b.useContext(ka),s=b.useContext(Hc),l=b.useContext(y0);let c=r;const u={role:a};if(s){!a&&s.role==="tablist"&&(u.role="tab");const p=s.getControllerId(e??null),d=s.getControlledId(e??null);u[Ti("event-key")]=e,u.id=p||t,c=r==null&&e!=null?s.activeKey===e:r,(c||!(l!=null&&l.unmountOnExit)&&!(l!=null&&l.mountOnEnter))&&(u["aria-controls"]=d)}return u.role==="tab"&&(u["aria-selected"]=c,c||(u.tabIndex=-1),i&&(u.tabIndex=-1,u["aria-disabled"]=!0)),u.onClick=Ne(p=>{i||(n==null||n(p),e!=null&&o&&!p.isPropagationStopped()&&o(e,p))}),[u,{isActive:c}]}const S0=b.forwardRef((e,n)=>{let{as:r=Zm,active:t,eventKey:a}=e,i=hE(e,fE);const[o,s]=k0(Object.assign({key:Fo(a,i.href),active:t},i));return o[Ti("active")]=s.isActive,A.jsx(r,Object.assign({},i,o,{ref:n}))});S0.displayName="NavItem";const vE=S0,bE=["as","onSelect","activeKey","role","onKeyDown"];function yE(e,n){if(e==null)return{};var r={},t=Object.keys(e),a,i;for(i=0;i<t.length;i++)a=t[i],!(n.indexOf(a)>=0)&&(r[a]=e[a]);return r}const _h=()=>{},Nh=Ti("event-key"),w0=b.forwardRef((e,n)=>{let{as:r="div",onSelect:t,activeKey:a,role:i,onKeyDown:o}=e,s=yE(e,bE);const l=b0(),c=b.useRef(!1),u=b.useContext(ka),p=b.useContext(y0);let d,m;p&&(i=i||"tablist",a=p.activeKey,d=p.getControlledId,m=p.getControllerId);const g=b.useRef(null),y=v=>{const x=g.current;if(!x)return null;const I=Kr(x,`[${Nh}]:not([aria-disabled=true])`),S=x.querySelector("[aria-selected=true]");if(!S||S!==document.activeElement)return null;const E=I.indexOf(S);if(E===-1)return null;let T=E+v;return T>=I.length&&(T=0),T<0&&(T=I.length-1),I[T]},k=(v,x)=>{v!=null&&(t==null||t(v,x),u==null||u(v,x))},f=v=>{if(o==null||o(v),!p)return;let x;switch(v.key){case"ArrowLeft":case"ArrowUp":x=y(-1);break;case"ArrowRight":case"ArrowDown":x=y(1);break;default:return}x&&(v.preventDefault(),k(x.dataset[_I("EventKey")]||null,v),c.current=!0,l())};b.useEffect(()=>{if(g.current&&c.current){const v=g.current.querySelector(`[${Nh}][aria-selected=true]`);v==null||v.focus()}c.current=!1});const h=Br(n,g);return A.jsx(ka.Provider,{value:k,children:A.jsx(Hc.Provider,{value:{role:i,activeKey:Fo(a),getControlledId:d||_h,getControllerId:m||_h},children:A.jsx(r,Object.assign({},s,{onKeyDown:f,ref:h,role:i}))})})});w0.displayName="Nav";const kE=Object.assign(w0,{Item:vE}),eg=b.createContext(null);eg.displayName="CardHeaderContext";const x0=b.forwardRef(({className:e,bsPrefix:n,as:r="div",...t},a)=>(n=G(n,"nav-item"),A.jsx(r,{ref:a,className:V(e,n),...t})));x0.displayName="NavItem";function hd(){return b.useState(null)}function SE(e,n,r,t=!1){const a=Ne(r);b.useEffect(()=>{const i=typeof e=="function"?e():e;return i.addEventListener(n,a,t),()=>i.removeEventListener(n,a,t)},[e])}const wE=["onKeyDown"];function xE(e,n){if(e==null)return{};var r={},t=Object.keys(e),a,i;for(i=0;i<t.length;i++)a=t[i],!(n.indexOf(a)>=0)&&(r[a]=e[a]);return r}function jE(e){return!e||e.trim()==="#"}const ng=b.forwardRef((e,n)=>{let{onKeyDown:r}=e,t=xE(e,wE);const[a]=Xm(Object.assign({tagName:"a"},t)),i=Ne(o=>{a.onKeyDown(o),r==null||r(o)});return jE(t.href)||t.role==="button"?A.jsx("a",Object.assign({ref:n},t,a,{onKeyDown:i})):A.jsx("a",Object.assign({ref:n},t,{onKeyDown:r}))});ng.displayName="Anchor";const j0=b.forwardRef(({bsPrefix:e,className:n,as:r=ng,active:t,eventKey:a,disabled:i=!1,...o},s)=>{e=G(e,"nav-link");const[l,c]=k0({key:Fo(a,o.href),active:t,disabled:i,...o});return A.jsx(r,{...o,...l,ref:s,disabled:i,className:V(n,e,i&&"disabled",c.isActive&&"active")})});j0.displayName="NavLink";const C0=b.forwardRef((e,n)=>{const{as:r="div",bsPrefix:t,variant:a,fill:i=!1,justify:o=!1,navbar:s,navbarScroll:l,className:c,activeKey:u,...p}=Wm(e,{activeKey:"onSelect"}),d=G(t,"nav");let m,g,y=!1;const k=b.useContext(Qt),f=b.useContext(eg);return k?(m=k.bsPrefix,y=s??!0):f&&({cardHeaderBsPrefix:g}=f),A.jsx(kE,{as:r,ref:n,activeKey:u,className:V(c,{[d]:!y,[`${m}-nav`]:y,[`${m}-nav-scroll`]:y&&l,[`${g}-${a}`]:!!g,[`${d}-${a}`]:!!a,[`${d}-fill`]:i,[`${d}-justified`]:o}),...p})});C0.displayName="Nav";const qu=Object.assign(C0,{Item:x0,Link:j0}),rg=b.forwardRef(({bsPrefix:e,fluid:n=!1,as:r="div",className:t,...a},i)=>{const o=G(e,"container"),s=typeof n=="string"?`-${n}`:"-fluid";return A.jsx(r,{ref:i,...a,className:V(t,n?`${o}${s}`:o)})});rg.displayName="Container";const Qe=b.forwardRef(({bsPrefix:e,className:n,as:r="div",...t},a)=>{const i=G(e,"row"),o=Jm(),s=zm(),l=`${i}-cols`,c=[];return o.forEach(u=>{const p=t[u];delete t[u];let d;p!=null&&typeof p=="object"?{cols:d}=p:d=p;const m=u!==s?`-${u}`:"";d!=null&&c.push(`${l}${m}-${d}`)}),A.jsx(r,{ref:a,...t,className:V(n,i,...c)})});Qe.displayName="Row";function CE({as:e,bsPrefix:n,className:r,...t}){n=G(n,"col");const a=Jm(),i=zm(),o=[],s=[];return a.forEach(l=>{const c=t[l];delete t[l];let u,p,d;typeof c=="object"&&c!=null?{span:u,offset:p,order:d}=c:u=c;const m=l!==i?`-${l}`:"";u&&o.push(u===!0?`${n}${m}`:`${n}${m}-${u}`),d!=null&&s.push(`order${m}-${d}`),p!=null&&s.push(`offset${m}-${p}`)}),[{...t,className:V(r,...o,...s)},{as:e,bsPrefix:n,spans:o}]}const fr=b.forwardRef((e,n)=>{const[{className:r,...t},{as:a="div",bsPrefix:i,spans:o}]=CE(e);return A.jsx(a,{...t,ref:n,className:V(r,!o.length&&i)})});fr.displayName="Col";fn.string,fn.bool,fn.bool,fn.bool,fn.bool;const tg=b.forwardRef(({bsPrefix:e,className:n,fluid:r=!1,rounded:t=!1,roundedCircle:a=!1,thumbnail:i=!1,...o},s)=>(e=G(e,"img"),A.jsx("img",{ref:s,...o,className:V(n,r&&`${e}-fluid`,t&&"rounded",a&&"rounded-circle",i&&`${e}-thumbnail`)})));tg.displayName="Image";const ll=b.forwardRef(({bsPrefix:e,size:n,vertical:r=!1,className:t,role:a="group",as:i="div",...o},s)=>{const l=G(e,"btn-group");let c=l;return r&&(c=`${l}-vertical`),A.jsx(i,{...o,ref:s,role:a,className:V(t,c,n&&`${l}-${n}`)})});ll.displayName="ButtonGroup";const Jt=b.forwardRef(({as:e,bsPrefix:n,variant:r="primary",size:t,active:a=!1,disabled:i=!1,className:o,...s},l)=>{const c=G(n,"btn"),[u,{tagName:p}]=Xm({tagName:e,disabled:i,...s}),d=p;return A.jsx(d,{...u,...s,ref:l,disabled:i,className:V(o,c,a&&"active",r&&`${c}-${r}`,t&&`${c}-${t}`,s.href&&i&&"disabled")})});Jt.displayName="Button";//! moment.js
//! version : 2.30.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
var I0;function F(){return I0.apply(null,arguments)}function IE(e){I0=e}function br(e){return e instanceof Array||Object.prototype.toString.call(e)==="[object Array]"}function ma(e){return e!=null&&Object.prototype.toString.call(e)==="[object Object]"}function fe(e,n){return Object.prototype.hasOwnProperty.call(e,n)}function ag(e){if(Object.getOwnPropertyNames)return Object.getOwnPropertyNames(e).length===0;var n;for(n in e)if(fe(e,n))return!1;return!0}function wn(e){return e===void 0}function ut(e){return typeof e=="number"||Object.prototype.toString.call(e)==="[object Number]"}function ss(e){return e instanceof Date||Object.prototype.toString.call(e)==="[object Date]"}function E0(e,n){var r=[],t,a=e.length;for(t=0;t<a;++t)r.push(n(e[t],t));return r}function Pt(e,n){for(var r in n)fe(n,r)&&(e[r]=n[r]);return fe(n,"toString")&&(e.toString=n.toString),fe(n,"valueOf")&&(e.valueOf=n.valueOf),e}function Hr(e,n,r,t){return Y0(e,n,r,t,!0).utc()}function EE(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidEra:null,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],era:null,meridiem:null,rfc2822:!1,weekdayMismatch:!1}}function re(e){return e._pf==null&&(e._pf=EE()),e._pf}var vd;Array.prototype.some?vd=Array.prototype.some:vd=function(e){var n=Object(this),r=n.length>>>0,t;for(t=0;t<r;t++)if(t in n&&e.call(this,n[t],t,n))return!0;return!1};function ig(e){var n=null,r=!1,t=e._d&&!isNaN(e._d.getTime());if(t&&(n=re(e),r=vd.call(n.parsedDateParts,function(a){return a!=null}),t=n.overflow<0&&!n.empty&&!n.invalidEra&&!n.invalidMonth&&!n.invalidWeekday&&!n.weekdayMismatch&&!n.nullInput&&!n.invalidFormat&&!n.userInvalidated&&(!n.meridiem||n.meridiem&&r),e._strict&&(t=t&&n.charsLeftOver===0&&n.unusedTokens.length===0&&n.bigHour===void 0)),Object.isFrozen==null||!Object.isFrozen(e))e._isValid=t;else return t;return e._isValid}function qc(e){var n=Hr(NaN);return e!=null?Pt(re(n),e):re(n).userInvalidated=!0,n}var Bh=F.momentProperties=[],Fu=!1;function og(e,n){var r,t,a,i=Bh.length;if(wn(n._isAMomentObject)||(e._isAMomentObject=n._isAMomentObject),wn(n._i)||(e._i=n._i),wn(n._f)||(e._f=n._f),wn(n._l)||(e._l=n._l),wn(n._strict)||(e._strict=n._strict),wn(n._tzm)||(e._tzm=n._tzm),wn(n._isUTC)||(e._isUTC=n._isUTC),wn(n._offset)||(e._offset=n._offset),wn(n._pf)||(e._pf=re(n)),wn(n._locale)||(e._locale=n._locale),i>0)for(r=0;r<i;r++)t=Bh[r],a=n[t],wn(a)||(e[t]=a);return e}function ls(e){og(this,e),this._d=new Date(e._d!=null?e._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),Fu===!1&&(Fu=!0,F.updateOffset(this),Fu=!1)}function yr(e){return e instanceof ls||e!=null&&e._isAMomentObject!=null}function T0(e){F.suppressDeprecationWarnings===!1&&typeof console<"u"&&console.warn&&console.warn("Deprecation warning: "+e)}function tr(e,n){var r=!0;return Pt(function(){if(F.deprecationHandler!=null&&F.deprecationHandler(null,e),r){var t=[],a,i,o,s=arguments.length;for(i=0;i<s;i++){if(a="",typeof arguments[i]=="object"){a+=`
[`+i+"] ";for(o in arguments[0])fe(arguments[0],o)&&(a+=o+": "+arguments[0][o]+", ");a=a.slice(0,-2)}else a=arguments[i];t.push(a)}T0(e+`
Arguments: `+Array.prototype.slice.call(t).join("")+`
`+new Error().stack),r=!1}return n.apply(this,arguments)},n)}var Hh={};function M0(e,n){F.deprecationHandler!=null&&F.deprecationHandler(e,n),Hh[e]||(T0(n),Hh[e]=!0)}F.suppressDeprecationWarnings=!1;F.deprecationHandler=null;function qr(e){return typeof Function<"u"&&e instanceof Function||Object.prototype.toString.call(e)==="[object Function]"}function TE(e){var n,r;for(r in e)fe(e,r)&&(n=e[r],qr(n)?this[r]=n:this["_"+r]=n);this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)}function bd(e,n){var r=Pt({},e),t;for(t in n)fe(n,t)&&(ma(e[t])&&ma(n[t])?(r[t]={},Pt(r[t],e[t]),Pt(r[t],n[t])):n[t]!=null?r[t]=n[t]:delete r[t]);for(t in e)fe(e,t)&&!fe(n,t)&&ma(e[t])&&(r[t]=Pt({},r[t]));return r}function sg(e){e!=null&&this.set(e)}var yd;Object.keys?yd=Object.keys:yd=function(e){var n,r=[];for(n in e)fe(e,n)&&r.push(n);return r};var ME={sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"};function AE(e,n,r){var t=this._calendar[e]||this._calendar.sameElse;return qr(t)?t.call(n,r):t}function Nr(e,n,r){var t=""+Math.abs(e),a=n-t.length,i=e>=0;return(i?r?"+":"":"-")+Math.pow(10,Math.max(0,a)).toString().substr(1)+t}var lg=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,qs=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Ju={},oi={};function K(e,n,r,t){var a=t;typeof t=="string"&&(a=function(){return this[t]()}),e&&(oi[e]=a),n&&(oi[n[0]]=function(){return Nr(a.apply(this,arguments),n[1],n[2])}),r&&(oi[r]=function(){return this.localeData().ordinal(a.apply(this,arguments),e)})}function PE(e){return e.match(/\[[\s\S]/)?e.replace(/^\[|\]$/g,""):e.replace(/\\/g,"")}function RE(e){var n=e.match(lg),r,t;for(r=0,t=n.length;r<t;r++)oi[n[r]]?n[r]=oi[n[r]]:n[r]=PE(n[r]);return function(a){var i="",o;for(o=0;o<t;o++)i+=qr(n[o])?n[o].call(a,e):n[o];return i}}function cl(e,n){return e.isValid()?(n=A0(n,e.localeData()),Ju[n]=Ju[n]||RE(n),Ju[n](e)):e.localeData().invalidDate()}function A0(e,n){var r=5;function t(a){return n.longDateFormat(a)||a}for(qs.lastIndex=0;r>=0&&qs.test(e);)e=e.replace(qs,t),qs.lastIndex=0,r-=1;return e}var DE={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"};function OE(e){var n=this._longDateFormat[e],r=this._longDateFormat[e.toUpperCase()];return n||!r?n:(this._longDateFormat[e]=r.match(lg).map(function(t){return t==="MMMM"||t==="MM"||t==="DD"||t==="dddd"?t.slice(1):t}).join(""),this._longDateFormat[e])}var LE="Invalid date";function _E(){return this._invalidDate}var NE="%d",BE=/\d{1,2}/;function HE(e){return this._ordinal.replace("%d",e)}var qE={future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",w:"a week",ww:"%d weeks",M:"a month",MM:"%d months",y:"a year",yy:"%d years"};function FE(e,n,r,t){var a=this._relativeTime[r];return qr(a)?a(e,n,r,t):a.replace(/%d/i,e)}function JE(e,n){var r=this._relativeTime[e>0?"future":"past"];return qr(r)?r(n):r.replace(/%s/i,n)}var qh={D:"date",dates:"date",date:"date",d:"day",days:"day",day:"day",e:"weekday",weekdays:"weekday",weekday:"weekday",E:"isoWeekday",isoweekdays:"isoWeekday",isoweekday:"isoWeekday",DDD:"dayOfYear",dayofyears:"dayOfYear",dayofyear:"dayOfYear",h:"hour",hours:"hour",hour:"hour",ms:"millisecond",milliseconds:"millisecond",millisecond:"millisecond",m:"minute",minutes:"minute",minute:"minute",M:"month",months:"month",month:"month",Q:"quarter",quarters:"quarter",quarter:"quarter",s:"second",seconds:"second",second:"second",gg:"weekYear",weekyears:"weekYear",weekyear:"weekYear",GG:"isoWeekYear",isoweekyears:"isoWeekYear",isoweekyear:"isoWeekYear",w:"week",weeks:"week",week:"week",W:"isoWeek",isoweeks:"isoWeek",isoweek:"isoWeek",y:"year",years:"year",year:"year"};function ar(e){return typeof e=="string"?qh[e]||qh[e.toLowerCase()]:void 0}function cg(e){var n={},r,t;for(t in e)fe(e,t)&&(r=ar(t),r&&(n[r]=e[t]));return n}var zE={date:9,day:11,weekday:11,isoWeekday:11,dayOfYear:4,hour:13,millisecond:16,minute:14,month:8,quarter:7,second:15,weekYear:1,isoWeekYear:1,week:5,isoWeek:5,year:1};function UE(e){var n=[],r;for(r in e)fe(e,r)&&n.push({unit:r,priority:zE[r]});return n.sort(function(t,a){return t.priority-a.priority}),n}var P0=/\d/,Un=/\d\d/,R0=/\d{3}/,ug=/\d{4}/,Fc=/[+-]?\d{6}/,Ae=/\d\d?/,D0=/\d\d\d\d?/,O0=/\d\d\d\d\d\d?/,Jc=/\d{1,3}/,pg=/\d{1,4}/,zc=/[+-]?\d{1,6}/,Mi=/\d+/,Uc=/[+-]?\d+/,WE=/Z|[+-]\d\d:?\d\d/gi,Wc=/Z|[+-]\d\d(?::?\d\d)?/gi,VE=/[+-]?\d+(\.\d{1,3})?/,cs=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,Ai=/^[1-9]\d?/,dg=/^([1-9]\d|\d)/,Vl;Vl={};function U(e,n,r){Vl[e]=qr(n)?n:function(t,a){return t&&r?r:n}}function $E(e,n){return fe(Vl,e)?Vl[e](n._strict,n._locale):new RegExp(GE(e))}function GE(e){return at(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(n,r,t,a,i){return r||t||a||i}))}function at(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function Gn(e){return e<0?Math.ceil(e)||0:Math.floor(e)}function le(e){var n=+e,r=0;return n!==0&&isFinite(n)&&(r=Gn(n)),r}var kd={};function Se(e,n){var r,t=n,a;for(typeof e=="string"&&(e=[e]),ut(n)&&(t=function(i,o){o[n]=le(i)}),a=e.length,r=0;r<a;r++)kd[e[r]]=t}function us(e,n){Se(e,function(r,t,a,i){a._w=a._w||{},n(r,a._w,a,i)})}function KE(e,n,r){n!=null&&fe(kd,e)&&kd[e](n,r._a,r,e)}function Vc(e){return e%4===0&&e%100!==0||e%400===0}var pn=0,et=1,Ar=2,$e=3,dr=4,nt=5,ua=6,YE=7,QE=8;K("Y",0,0,function(){var e=this.year();return e<=9999?Nr(e,4):"+"+e});K(0,["YY",2],0,function(){return this.year()%100});K(0,["YYYY",4],0,"year");K(0,["YYYYY",5],0,"year");K(0,["YYYYYY",6,!0],0,"year");U("Y",Uc);U("YY",Ae,Un);U("YYYY",pg,ug);U("YYYYY",zc,Fc);U("YYYYYY",zc,Fc);Se(["YYYYY","YYYYYY"],pn);Se("YYYY",function(e,n){n[pn]=e.length===2?F.parseTwoDigitYear(e):le(e)});Se("YY",function(e,n){n[pn]=F.parseTwoDigitYear(e)});Se("Y",function(e,n){n[pn]=parseInt(e,10)});function mo(e){return Vc(e)?366:365}F.parseTwoDigitYear=function(e){return le(e)+(le(e)>68?1900:2e3)};var L0=Pi("FullYear",!0);function XE(){return Vc(this.year())}function Pi(e,n){return function(r){return r!=null?(_0(this,e,r),F.updateOffset(this,n),this):Wo(this,e)}}function Wo(e,n){if(!e.isValid())return NaN;var r=e._d,t=e._isUTC;switch(n){case"Milliseconds":return t?r.getUTCMilliseconds():r.getMilliseconds();case"Seconds":return t?r.getUTCSeconds():r.getSeconds();case"Minutes":return t?r.getUTCMinutes():r.getMinutes();case"Hours":return t?r.getUTCHours():r.getHours();case"Date":return t?r.getUTCDate():r.getDate();case"Day":return t?r.getUTCDay():r.getDay();case"Month":return t?r.getUTCMonth():r.getMonth();case"FullYear":return t?r.getUTCFullYear():r.getFullYear();default:return NaN}}function _0(e,n,r){var t,a,i,o,s;if(!(!e.isValid()||isNaN(r))){switch(t=e._d,a=e._isUTC,n){case"Milliseconds":return void(a?t.setUTCMilliseconds(r):t.setMilliseconds(r));case"Seconds":return void(a?t.setUTCSeconds(r):t.setSeconds(r));case"Minutes":return void(a?t.setUTCMinutes(r):t.setMinutes(r));case"Hours":return void(a?t.setUTCHours(r):t.setHours(r));case"Date":return void(a?t.setUTCDate(r):t.setDate(r));case"FullYear":break;default:return}i=r,o=e.month(),s=e.date(),s=s===29&&o===1&&!Vc(i)?28:s,a?t.setUTCFullYear(i,o,s):t.setFullYear(i,o,s)}}function ZE(e){return e=ar(e),qr(this[e])?this[e]():this}function eT(e,n){if(typeof e=="object"){e=cg(e);var r=UE(e),t,a=r.length;for(t=0;t<a;t++)this[r[t].unit](e[r[t].unit])}else if(e=ar(e),qr(this[e]))return this[e](n);return this}function nT(e,n){return(e%n+n)%n}var Be;Array.prototype.indexOf?Be=Array.prototype.indexOf:Be=function(e){var n;for(n=0;n<this.length;++n)if(this[n]===e)return n;return-1};function mg(e,n){if(isNaN(e)||isNaN(n))return NaN;var r=nT(n,12);return e+=(n-r)/12,r===1?Vc(e)?29:28:31-r%7%2}K("M",["MM",2],"Mo",function(){return this.month()+1});K("MMM",0,0,function(e){return this.localeData().monthsShort(this,e)});K("MMMM",0,0,function(e){return this.localeData().months(this,e)});U("M",Ae,Ai);U("MM",Ae,Un);U("MMM",function(e,n){return n.monthsShortRegex(e)});U("MMMM",function(e,n){return n.monthsRegex(e)});Se(["M","MM"],function(e,n){n[et]=le(e)-1});Se(["MMM","MMMM"],function(e,n,r,t){var a=r._locale.monthsParse(e,t,r._strict);a!=null?n[et]=a:re(r).invalidMonth=e});var rT="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),N0="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),B0=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,tT=cs,aT=cs;function iT(e,n){return e?br(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||B0).test(n)?"format":"standalone"][e.month()]:br(this._months)?this._months:this._months.standalone}function oT(e,n){return e?br(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[B0.test(n)?"format":"standalone"][e.month()]:br(this._monthsShort)?this._monthsShort:this._monthsShort.standalone}function sT(e,n,r){var t,a,i,o=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],t=0;t<12;++t)i=Hr([2e3,t]),this._shortMonthsParse[t]=this.monthsShort(i,"").toLocaleLowerCase(),this._longMonthsParse[t]=this.months(i,"").toLocaleLowerCase();return r?n==="MMM"?(a=Be.call(this._shortMonthsParse,o),a!==-1?a:null):(a=Be.call(this._longMonthsParse,o),a!==-1?a:null):n==="MMM"?(a=Be.call(this._shortMonthsParse,o),a!==-1?a:(a=Be.call(this._longMonthsParse,o),a!==-1?a:null)):(a=Be.call(this._longMonthsParse,o),a!==-1?a:(a=Be.call(this._shortMonthsParse,o),a!==-1?a:null))}function lT(e,n,r){var t,a,i;if(this._monthsParseExact)return sT.call(this,e,n,r);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),t=0;t<12;t++){if(a=Hr([2e3,t]),r&&!this._longMonthsParse[t]&&(this._longMonthsParse[t]=new RegExp("^"+this.months(a,"").replace(".","")+"$","i"),this._shortMonthsParse[t]=new RegExp("^"+this.monthsShort(a,"").replace(".","")+"$","i")),!r&&!this._monthsParse[t]&&(i="^"+this.months(a,"")+"|^"+this.monthsShort(a,""),this._monthsParse[t]=new RegExp(i.replace(".",""),"i")),r&&n==="MMMM"&&this._longMonthsParse[t].test(e))return t;if(r&&n==="MMM"&&this._shortMonthsParse[t].test(e))return t;if(!r&&this._monthsParse[t].test(e))return t}}function H0(e,n){if(!e.isValid())return e;if(typeof n=="string"){if(/^\d+$/.test(n))n=le(n);else if(n=e.localeData().monthsParse(n),!ut(n))return e}var r=n,t=e.date();return t=t<29?t:Math.min(t,mg(e.year(),r)),e._isUTC?e._d.setUTCMonth(r,t):e._d.setMonth(r,t),e}function q0(e){return e!=null?(H0(this,e),F.updateOffset(this,!0),this):Wo(this,"Month")}function cT(){return mg(this.year(),this.month())}function uT(e){return this._monthsParseExact?(fe(this,"_monthsRegex")||F0.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(fe(this,"_monthsShortRegex")||(this._monthsShortRegex=tT),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)}function pT(e){return this._monthsParseExact?(fe(this,"_monthsRegex")||F0.call(this),e?this._monthsStrictRegex:this._monthsRegex):(fe(this,"_monthsRegex")||(this._monthsRegex=aT),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)}function F0(){function e(l,c){return c.length-l.length}var n=[],r=[],t=[],a,i,o,s;for(a=0;a<12;a++)i=Hr([2e3,a]),o=at(this.monthsShort(i,"")),s=at(this.months(i,"")),n.push(o),r.push(s),t.push(s),t.push(o);n.sort(e),r.sort(e),t.sort(e),this._monthsRegex=new RegExp("^("+t.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+r.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+n.join("|")+")","i")}function dT(e,n,r,t,a,i,o){var s;return e<100&&e>=0?(s=new Date(e+400,n,r,t,a,i,o),isFinite(s.getFullYear())&&s.setFullYear(e)):s=new Date(e,n,r,t,a,i,o),s}function Vo(e){var n,r;return e<100&&e>=0?(r=Array.prototype.slice.call(arguments),r[0]=e+400,n=new Date(Date.UTC.apply(null,r)),isFinite(n.getUTCFullYear())&&n.setUTCFullYear(e)):n=new Date(Date.UTC.apply(null,arguments)),n}function $l(e,n,r){var t=7+n-r,a=(7+Vo(e,0,t).getUTCDay()-n)%7;return-a+t-1}function J0(e,n,r,t,a){var i=(7+r-t)%7,o=$l(e,t,a),s=1+7*(n-1)+i+o,l,c;return s<=0?(l=e-1,c=mo(l)+s):s>mo(e)?(l=e+1,c=s-mo(e)):(l=e,c=s),{year:l,dayOfYear:c}}function $o(e,n,r){var t=$l(e.year(),n,r),a=Math.floor((e.dayOfYear()-t-1)/7)+1,i,o;return a<1?(o=e.year()-1,i=a+it(o,n,r)):a>it(e.year(),n,r)?(i=a-it(e.year(),n,r),o=e.year()+1):(o=e.year(),i=a),{week:i,year:o}}function it(e,n,r){var t=$l(e,n,r),a=$l(e+1,n,r);return(mo(e)-t+a)/7}K("w",["ww",2],"wo","week");K("W",["WW",2],"Wo","isoWeek");U("w",Ae,Ai);U("ww",Ae,Un);U("W",Ae,Ai);U("WW",Ae,Un);us(["w","ww","W","WW"],function(e,n,r,t){n[t.substr(0,1)]=le(e)});function mT(e){return $o(e,this._week.dow,this._week.doy).week}var gT={dow:0,doy:6};function fT(){return this._week.dow}function hT(){return this._week.doy}function vT(e){var n=this.localeData().week(this);return e==null?n:this.add((e-n)*7,"d")}function bT(e){var n=$o(this,1,4).week;return e==null?n:this.add((e-n)*7,"d")}K("d",0,"do","day");K("dd",0,0,function(e){return this.localeData().weekdaysMin(this,e)});K("ddd",0,0,function(e){return this.localeData().weekdaysShort(this,e)});K("dddd",0,0,function(e){return this.localeData().weekdays(this,e)});K("e",0,0,"weekday");K("E",0,0,"isoWeekday");U("d",Ae);U("e",Ae);U("E",Ae);U("dd",function(e,n){return n.weekdaysMinRegex(e)});U("ddd",function(e,n){return n.weekdaysShortRegex(e)});U("dddd",function(e,n){return n.weekdaysRegex(e)});us(["dd","ddd","dddd"],function(e,n,r,t){var a=r._locale.weekdaysParse(e,t,r._strict);a!=null?n.d=a:re(r).invalidWeekday=e});us(["d","e","E"],function(e,n,r,t){n[t]=le(e)});function yT(e,n){return typeof e!="string"?e:isNaN(e)?(e=n.weekdaysParse(e),typeof e=="number"?e:null):parseInt(e,10)}function kT(e,n){return typeof e=="string"?n.weekdaysParse(e)%7||7:isNaN(e)?null:e}function gg(e,n){return e.slice(n,7).concat(e.slice(0,n))}var ST="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),z0="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),wT="Su_Mo_Tu_We_Th_Fr_Sa".split("_"),xT=cs,jT=cs,CT=cs;function IT(e,n){var r=br(this._weekdays)?this._weekdays:this._weekdays[e&&e!==!0&&this._weekdays.isFormat.test(n)?"format":"standalone"];return e===!0?gg(r,this._week.dow):e?r[e.day()]:r}function ET(e){return e===!0?gg(this._weekdaysShort,this._week.dow):e?this._weekdaysShort[e.day()]:this._weekdaysShort}function TT(e){return e===!0?gg(this._weekdaysMin,this._week.dow):e?this._weekdaysMin[e.day()]:this._weekdaysMin}function MT(e,n,r){var t,a,i,o=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],t=0;t<7;++t)i=Hr([2e3,1]).day(t),this._minWeekdaysParse[t]=this.weekdaysMin(i,"").toLocaleLowerCase(),this._shortWeekdaysParse[t]=this.weekdaysShort(i,"").toLocaleLowerCase(),this._weekdaysParse[t]=this.weekdays(i,"").toLocaleLowerCase();return r?n==="dddd"?(a=Be.call(this._weekdaysParse,o),a!==-1?a:null):n==="ddd"?(a=Be.call(this._shortWeekdaysParse,o),a!==-1?a:null):(a=Be.call(this._minWeekdaysParse,o),a!==-1?a:null):n==="dddd"?(a=Be.call(this._weekdaysParse,o),a!==-1||(a=Be.call(this._shortWeekdaysParse,o),a!==-1)?a:(a=Be.call(this._minWeekdaysParse,o),a!==-1?a:null)):n==="ddd"?(a=Be.call(this._shortWeekdaysParse,o),a!==-1||(a=Be.call(this._weekdaysParse,o),a!==-1)?a:(a=Be.call(this._minWeekdaysParse,o),a!==-1?a:null)):(a=Be.call(this._minWeekdaysParse,o),a!==-1||(a=Be.call(this._weekdaysParse,o),a!==-1)?a:(a=Be.call(this._shortWeekdaysParse,o),a!==-1?a:null))}function AT(e,n,r){var t,a,i;if(this._weekdaysParseExact)return MT.call(this,e,n,r);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),t=0;t<7;t++){if(a=Hr([2e3,1]).day(t),r&&!this._fullWeekdaysParse[t]&&(this._fullWeekdaysParse[t]=new RegExp("^"+this.weekdays(a,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[t]=new RegExp("^"+this.weekdaysShort(a,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[t]=new RegExp("^"+this.weekdaysMin(a,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[t]||(i="^"+this.weekdays(a,"")+"|^"+this.weekdaysShort(a,"")+"|^"+this.weekdaysMin(a,""),this._weekdaysParse[t]=new RegExp(i.replace(".",""),"i")),r&&n==="dddd"&&this._fullWeekdaysParse[t].test(e))return t;if(r&&n==="ddd"&&this._shortWeekdaysParse[t].test(e))return t;if(r&&n==="dd"&&this._minWeekdaysParse[t].test(e))return t;if(!r&&this._weekdaysParse[t].test(e))return t}}function PT(e){if(!this.isValid())return e!=null?this:NaN;var n=Wo(this,"Day");return e!=null?(e=yT(e,this.localeData()),this.add(e-n,"d")):n}function RT(e){if(!this.isValid())return e!=null?this:NaN;var n=(this.day()+7-this.localeData()._week.dow)%7;return e==null?n:this.add(e-n,"d")}function DT(e){if(!this.isValid())return e!=null?this:NaN;if(e!=null){var n=kT(e,this.localeData());return this.day(this.day()%7?n:n-7)}else return this.day()||7}function OT(e){return this._weekdaysParseExact?(fe(this,"_weekdaysRegex")||fg.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(fe(this,"_weekdaysRegex")||(this._weekdaysRegex=xT),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)}function LT(e){return this._weekdaysParseExact?(fe(this,"_weekdaysRegex")||fg.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(fe(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=jT),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)}function _T(e){return this._weekdaysParseExact?(fe(this,"_weekdaysRegex")||fg.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(fe(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=CT),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)}function fg(){function e(u,p){return p.length-u.length}var n=[],r=[],t=[],a=[],i,o,s,l,c;for(i=0;i<7;i++)o=Hr([2e3,1]).day(i),s=at(this.weekdaysMin(o,"")),l=at(this.weekdaysShort(o,"")),c=at(this.weekdays(o,"")),n.push(s),r.push(l),t.push(c),a.push(s),a.push(l),a.push(c);n.sort(e),r.sort(e),t.sort(e),a.sort(e),this._weekdaysRegex=new RegExp("^("+a.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+t.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+r.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+n.join("|")+")","i")}function hg(){return this.hours()%12||12}function NT(){return this.hours()||24}K("H",["HH",2],0,"hour");K("h",["hh",2],0,hg);K("k",["kk",2],0,NT);K("hmm",0,0,function(){return""+hg.apply(this)+Nr(this.minutes(),2)});K("hmmss",0,0,function(){return""+hg.apply(this)+Nr(this.minutes(),2)+Nr(this.seconds(),2)});K("Hmm",0,0,function(){return""+this.hours()+Nr(this.minutes(),2)});K("Hmmss",0,0,function(){return""+this.hours()+Nr(this.minutes(),2)+Nr(this.seconds(),2)});function U0(e,n){K(e,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),n)})}U0("a",!0);U0("A",!1);function W0(e,n){return n._meridiemParse}U("a",W0);U("A",W0);U("H",Ae,dg);U("h",Ae,Ai);U("k",Ae,Ai);U("HH",Ae,Un);U("hh",Ae,Un);U("kk",Ae,Un);U("hmm",D0);U("hmmss",O0);U("Hmm",D0);U("Hmmss",O0);Se(["H","HH"],$e);Se(["k","kk"],function(e,n,r){var t=le(e);n[$e]=t===24?0:t});Se(["a","A"],function(e,n,r){r._isPm=r._locale.isPM(e),r._meridiem=e});Se(["h","hh"],function(e,n,r){n[$e]=le(e),re(r).bigHour=!0});Se("hmm",function(e,n,r){var t=e.length-2;n[$e]=le(e.substr(0,t)),n[dr]=le(e.substr(t)),re(r).bigHour=!0});Se("hmmss",function(e,n,r){var t=e.length-4,a=e.length-2;n[$e]=le(e.substr(0,t)),n[dr]=le(e.substr(t,2)),n[nt]=le(e.substr(a)),re(r).bigHour=!0});Se("Hmm",function(e,n,r){var t=e.length-2;n[$e]=le(e.substr(0,t)),n[dr]=le(e.substr(t))});Se("Hmmss",function(e,n,r){var t=e.length-4,a=e.length-2;n[$e]=le(e.substr(0,t)),n[dr]=le(e.substr(t,2)),n[nt]=le(e.substr(a))});function BT(e){return(e+"").toLowerCase().charAt(0)==="p"}var HT=/[ap]\.?m?\.?/i,qT=Pi("Hours",!0);function FT(e,n,r){return e>11?r?"pm":"PM":r?"am":"AM"}var V0={calendar:ME,longDateFormat:DE,invalidDate:LE,ordinal:NE,dayOfMonthOrdinalParse:BE,relativeTime:qE,months:rT,monthsShort:N0,week:gT,weekdays:ST,weekdaysMin:wT,weekdaysShort:z0,meridiemParse:HT},Pe={},$i={},Go;function JT(e,n){var r,t=Math.min(e.length,n.length);for(r=0;r<t;r+=1)if(e[r]!==n[r])return r;return t}function Fh(e){return e&&e.toLowerCase().replace("_","-")}function zT(e){for(var n=0,r,t,a,i;n<e.length;){for(i=Fh(e[n]).split("-"),r=i.length,t=Fh(e[n+1]),t=t?t.split("-"):null;r>0;){if(a=$c(i.slice(0,r).join("-")),a)return a;if(t&&t.length>=r&&JT(i,t)>=r-1)break;r--}n++}return Go}function UT(e){return!!(e&&e.match("^[^/\\\\]*$"))}function $c(e){var n=null,r;if(Pe[e]===void 0&&typeof hl<"u"&&hl&&hl.exports&&UT(e))try{n=Go._abbr,r=require,r("./locale/"+e),zt(n)}catch{Pe[e]=null}return Pe[e]}function zt(e,n){var r;return e&&(wn(n)?r=ft(e):r=vg(e,n),r?Go=r:typeof console<"u"&&console.warn&&console.warn("Locale "+e+" not found. Did you forget to load it?")),Go._abbr}function vg(e,n){if(n!==null){var r,t=V0;if(n.abbr=e,Pe[e]!=null)M0("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),t=Pe[e]._config;else if(n.parentLocale!=null)if(Pe[n.parentLocale]!=null)t=Pe[n.parentLocale]._config;else if(r=$c(n.parentLocale),r!=null)t=r._config;else return $i[n.parentLocale]||($i[n.parentLocale]=[]),$i[n.parentLocale].push({name:e,config:n}),null;return Pe[e]=new sg(bd(t,n)),$i[e]&&$i[e].forEach(function(a){vg(a.name,a.config)}),zt(e),Pe[e]}else return delete Pe[e],null}function WT(e,n){if(n!=null){var r,t,a=V0;Pe[e]!=null&&Pe[e].parentLocale!=null?Pe[e].set(bd(Pe[e]._config,n)):(t=$c(e),t!=null&&(a=t._config),n=bd(a,n),t==null&&(n.abbr=e),r=new sg(n),r.parentLocale=Pe[e],Pe[e]=r),zt(e)}else Pe[e]!=null&&(Pe[e].parentLocale!=null?(Pe[e]=Pe[e].parentLocale,e===zt()&&zt(e)):Pe[e]!=null&&delete Pe[e]);return Pe[e]}function ft(e){var n;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return Go;if(!br(e)){if(n=$c(e),n)return n;e=[e]}return zT(e)}function VT(){return yd(Pe)}function bg(e){var n,r=e._a;return r&&re(e).overflow===-2&&(n=r[et]<0||r[et]>11?et:r[Ar]<1||r[Ar]>mg(r[pn],r[et])?Ar:r[$e]<0||r[$e]>24||r[$e]===24&&(r[dr]!==0||r[nt]!==0||r[ua]!==0)?$e:r[dr]<0||r[dr]>59?dr:r[nt]<0||r[nt]>59?nt:r[ua]<0||r[ua]>999?ua:-1,re(e)._overflowDayOfYear&&(n<pn||n>Ar)&&(n=Ar),re(e)._overflowWeeks&&n===-1&&(n=YE),re(e)._overflowWeekday&&n===-1&&(n=QE),re(e).overflow=n),e}var $T=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,GT=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,KT=/Z|[+-]\d\d(?::?\d\d)?/,Fs=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/],["YYYYMM",/\d{6}/,!1],["YYYY",/\d{4}/,!1]],zu=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],YT=/^\/?Date\((-?\d+)/i,QT=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,XT={UT:0,GMT:0,EDT:-4*60,EST:-5*60,CDT:-5*60,CST:-6*60,MDT:-6*60,MST:-7*60,PDT:-7*60,PST:-8*60};function $0(e){var n,r,t=e._i,a=$T.exec(t)||GT.exec(t),i,o,s,l,c=Fs.length,u=zu.length;if(a){for(re(e).iso=!0,n=0,r=c;n<r;n++)if(Fs[n][1].exec(a[1])){o=Fs[n][0],i=Fs[n][2]!==!1;break}if(o==null){e._isValid=!1;return}if(a[3]){for(n=0,r=u;n<r;n++)if(zu[n][1].exec(a[3])){s=(a[2]||" ")+zu[n][0];break}if(s==null){e._isValid=!1;return}}if(!i&&s!=null){e._isValid=!1;return}if(a[4])if(KT.exec(a[4]))l="Z";else{e._isValid=!1;return}e._f=o+(s||"")+(l||""),kg(e)}else e._isValid=!1}function ZT(e,n,r,t,a,i){var o=[eM(e),N0.indexOf(n),parseInt(r,10),parseInt(t,10),parseInt(a,10)];return i&&o.push(parseInt(i,10)),o}function eM(e){var n=parseInt(e,10);return n<=49?2e3+n:n<=999?1900+n:n}function nM(e){return e.replace(/\([^()]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,"")}function rM(e,n,r){if(e){var t=z0.indexOf(e),a=new Date(n[0],n[1],n[2]).getDay();if(t!==a)return re(r).weekdayMismatch=!0,r._isValid=!1,!1}return!0}function tM(e,n,r){if(e)return XT[e];if(n)return 0;var t=parseInt(r,10),a=t%100,i=(t-a)/100;return i*60+a}function G0(e){var n=QT.exec(nM(e._i)),r;if(n){if(r=ZT(n[4],n[3],n[2],n[5],n[6],n[7]),!rM(n[1],r,e))return;e._a=r,e._tzm=tM(n[8],n[9],n[10]),e._d=Vo.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),re(e).rfc2822=!0}else e._isValid=!1}function aM(e){var n=YT.exec(e._i);if(n!==null){e._d=new Date(+n[1]);return}if($0(e),e._isValid===!1)delete e._isValid;else return;if(G0(e),e._isValid===!1)delete e._isValid;else return;e._strict?e._isValid=!1:F.createFromInputFallback(e)}F.createFromInputFallback=tr("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""))});function Ba(e,n,r){return e??n??r}function iM(e){var n=new Date(F.now());return e._useUTC?[n.getUTCFullYear(),n.getUTCMonth(),n.getUTCDate()]:[n.getFullYear(),n.getMonth(),n.getDate()]}function yg(e){var n,r,t=[],a,i,o;if(!e._d){for(a=iM(e),e._w&&e._a[Ar]==null&&e._a[et]==null&&oM(e),e._dayOfYear!=null&&(o=Ba(e._a[pn],a[pn]),(e._dayOfYear>mo(o)||e._dayOfYear===0)&&(re(e)._overflowDayOfYear=!0),r=Vo(o,0,e._dayOfYear),e._a[et]=r.getUTCMonth(),e._a[Ar]=r.getUTCDate()),n=0;n<3&&e._a[n]==null;++n)e._a[n]=t[n]=a[n];for(;n<7;n++)e._a[n]=t[n]=e._a[n]==null?n===2?1:0:e._a[n];e._a[$e]===24&&e._a[dr]===0&&e._a[nt]===0&&e._a[ua]===0&&(e._nextDay=!0,e._a[$e]=0),e._d=(e._useUTC?Vo:dT).apply(null,t),i=e._useUTC?e._d.getUTCDay():e._d.getDay(),e._tzm!=null&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[$e]=24),e._w&&typeof e._w.d<"u"&&e._w.d!==i&&(re(e).weekdayMismatch=!0)}}function oM(e){var n,r,t,a,i,o,s,l,c;n=e._w,n.GG!=null||n.W!=null||n.E!=null?(i=1,o=4,r=Ba(n.GG,e._a[pn],$o(Me(),1,4).year),t=Ba(n.W,1),a=Ba(n.E,1),(a<1||a>7)&&(l=!0)):(i=e._locale._week.dow,o=e._locale._week.doy,c=$o(Me(),i,o),r=Ba(n.gg,e._a[pn],c.year),t=Ba(n.w,c.week),n.d!=null?(a=n.d,(a<0||a>6)&&(l=!0)):n.e!=null?(a=n.e+i,(n.e<0||n.e>6)&&(l=!0)):a=i),t<1||t>it(r,i,o)?re(e)._overflowWeeks=!0:l!=null?re(e)._overflowWeekday=!0:(s=J0(r,t,a,i,o),e._a[pn]=s.year,e._dayOfYear=s.dayOfYear)}F.ISO_8601=function(){};F.RFC_2822=function(){};function kg(e){if(e._f===F.ISO_8601){$0(e);return}if(e._f===F.RFC_2822){G0(e);return}e._a=[],re(e).empty=!0;var n=""+e._i,r,t,a,i,o,s=n.length,l=0,c,u;for(a=A0(e._f,e._locale).match(lg)||[],u=a.length,r=0;r<u;r++)i=a[r],t=(n.match($E(i,e))||[])[0],t&&(o=n.substr(0,n.indexOf(t)),o.length>0&&re(e).unusedInput.push(o),n=n.slice(n.indexOf(t)+t.length),l+=t.length),oi[i]?(t?re(e).empty=!1:re(e).unusedTokens.push(i),KE(i,t,e)):e._strict&&!t&&re(e).unusedTokens.push(i);re(e).charsLeftOver=s-l,n.length>0&&re(e).unusedInput.push(n),e._a[$e]<=12&&re(e).bigHour===!0&&e._a[$e]>0&&(re(e).bigHour=void 0),re(e).parsedDateParts=e._a.slice(0),re(e).meridiem=e._meridiem,e._a[$e]=sM(e._locale,e._a[$e],e._meridiem),c=re(e).era,c!==null&&(e._a[pn]=e._locale.erasConvertYear(c,e._a[pn])),yg(e),bg(e)}function sM(e,n,r){var t;return r==null?n:e.meridiemHour!=null?e.meridiemHour(n,r):(e.isPM!=null&&(t=e.isPM(r),t&&n<12&&(n+=12),!t&&n===12&&(n=0)),n)}function lM(e){var n,r,t,a,i,o,s=!1,l=e._f.length;if(l===0){re(e).invalidFormat=!0,e._d=new Date(NaN);return}for(a=0;a<l;a++)i=0,o=!1,n=og({},e),e._useUTC!=null&&(n._useUTC=e._useUTC),n._f=e._f[a],kg(n),ig(n)&&(o=!0),i+=re(n).charsLeftOver,i+=re(n).unusedTokens.length*10,re(n).score=i,s?i<t&&(t=i,r=n):(t==null||i<t||o)&&(t=i,r=n,o&&(s=!0));Pt(e,r||n)}function cM(e){if(!e._d){var n=cg(e._i),r=n.day===void 0?n.date:n.day;e._a=E0([n.year,n.month,r,n.hour,n.minute,n.second,n.millisecond],function(t){return t&&parseInt(t,10)}),yg(e)}}function uM(e){var n=new ls(bg(K0(e)));return n._nextDay&&(n.add(1,"d"),n._nextDay=void 0),n}function K0(e){var n=e._i,r=e._f;return e._locale=e._locale||ft(e._l),n===null||r===void 0&&n===""?qc({nullInput:!0}):(typeof n=="string"&&(e._i=n=e._locale.preparse(n)),yr(n)?new ls(bg(n)):(ss(n)?e._d=n:br(r)?lM(e):r?kg(e):pM(e),ig(e)||(e._d=null),e))}function pM(e){var n=e._i;wn(n)?e._d=new Date(F.now()):ss(n)?e._d=new Date(n.valueOf()):typeof n=="string"?aM(e):br(n)?(e._a=E0(n.slice(0),function(r){return parseInt(r,10)}),yg(e)):ma(n)?cM(e):ut(n)?e._d=new Date(n):F.createFromInputFallback(e)}function Y0(e,n,r,t,a){var i={};return(n===!0||n===!1)&&(t=n,n=void 0),(r===!0||r===!1)&&(t=r,r=void 0),(ma(e)&&ag(e)||br(e)&&e.length===0)&&(e=void 0),i._isAMomentObject=!0,i._useUTC=i._isUTC=a,i._l=r,i._i=e,i._f=n,i._strict=t,uM(i)}function Me(e,n,r,t){return Y0(e,n,r,t,!1)}var dM=tr("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=Me.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:qc()}),mM=tr("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var e=Me.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:qc()});function Q0(e,n){var r,t;if(n.length===1&&br(n[0])&&(n=n[0]),!n.length)return Me();for(r=n[0],t=1;t<n.length;++t)(!n[t].isValid()||n[t][e](r))&&(r=n[t]);return r}function gM(){var e=[].slice.call(arguments,0);return Q0("isBefore",e)}function fM(){var e=[].slice.call(arguments,0);return Q0("isAfter",e)}var hM=function(){return Date.now?Date.now():+new Date},Gi=["year","quarter","month","week","day","hour","minute","second","millisecond"];function vM(e){var n,r=!1,t,a=Gi.length;for(n in e)if(fe(e,n)&&!(Be.call(Gi,n)!==-1&&(e[n]==null||!isNaN(e[n]))))return!1;for(t=0;t<a;++t)if(e[Gi[t]]){if(r)return!1;parseFloat(e[Gi[t]])!==le(e[Gi[t]])&&(r=!0)}return!0}function bM(){return this._isValid}function yM(){return kr(NaN)}function Gc(e){var n=cg(e),r=n.year||0,t=n.quarter||0,a=n.month||0,i=n.week||n.isoWeek||0,o=n.day||0,s=n.hour||0,l=n.minute||0,c=n.second||0,u=n.millisecond||0;this._isValid=vM(n),this._milliseconds=+u+c*1e3+l*6e4+s*1e3*60*60,this._days=+o+i*7,this._months=+a+t*3+r*12,this._data={},this._locale=ft(),this._bubble()}function ul(e){return e instanceof Gc}function Sd(e){return e<0?Math.round(-1*e)*-1:Math.round(e)}function kM(e,n,r){var t=Math.min(e.length,n.length),a=Math.abs(e.length-n.length),i=0,o;for(o=0;o<t;o++)le(e[o])!==le(n[o])&&i++;return i+a}function X0(e,n){K(e,0,0,function(){var r=this.utcOffset(),t="+";return r<0&&(r=-r,t="-"),t+Nr(~~(r/60),2)+n+Nr(~~r%60,2)})}X0("Z",":");X0("ZZ","");U("Z",Wc);U("ZZ",Wc);Se(["Z","ZZ"],function(e,n,r){r._useUTC=!0,r._tzm=Sg(Wc,e)});var SM=/([\+\-]|\d\d)/gi;function Sg(e,n){var r=(n||"").match(e),t,a,i;return r===null?null:(t=r[r.length-1]||[],a=(t+"").match(SM)||["-",0,0],i=+(a[1]*60)+le(a[2]),i===0?0:a[0]==="+"?i:-i)}function wg(e,n){var r,t;return n._isUTC?(r=n.clone(),t=(yr(e)||ss(e)?e.valueOf():Me(e).valueOf())-r.valueOf(),r._d.setTime(r._d.valueOf()+t),F.updateOffset(r,!1),r):Me(e).local()}function wd(e){return-Math.round(e._d.getTimezoneOffset())}F.updateOffset=function(){};function wM(e,n,r){var t=this._offset||0,a;if(!this.isValid())return e!=null?this:NaN;if(e!=null){if(typeof e=="string"){if(e=Sg(Wc,e),e===null)return this}else Math.abs(e)<16&&!r&&(e=e*60);return!this._isUTC&&n&&(a=wd(this)),this._offset=e,this._isUTC=!0,a!=null&&this.add(a,"m"),t!==e&&(!n||this._changeInProgress?nk(this,kr(e-t,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,F.updateOffset(this,!0),this._changeInProgress=null)),this}else return this._isUTC?t:wd(this)}function xM(e,n){return e!=null?(typeof e!="string"&&(e=-e),this.utcOffset(e,n),this):-this.utcOffset()}function jM(e){return this.utcOffset(0,e)}function CM(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(wd(this),"m")),this}function IM(){if(this._tzm!=null)this.utcOffset(this._tzm,!1,!0);else if(typeof this._i=="string"){var e=Sg(WE,this._i);e!=null?this.utcOffset(e):this.utcOffset(0,!0)}return this}function EM(e){return this.isValid()?(e=e?Me(e).utcOffset():0,(this.utcOffset()-e)%60===0):!1}function TM(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}function MM(){if(!wn(this._isDSTShifted))return this._isDSTShifted;var e={},n;return og(e,this),e=K0(e),e._a?(n=e._isUTC?Hr(e._a):Me(e._a),this._isDSTShifted=this.isValid()&&kM(e._a,n.toArray())>0):this._isDSTShifted=!1,this._isDSTShifted}function AM(){return this.isValid()?!this._isUTC:!1}function PM(){return this.isValid()?this._isUTC:!1}function Z0(){return this.isValid()?this._isUTC&&this._offset===0:!1}var RM=/^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,DM=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function kr(e,n){var r=e,t=null,a,i,o;return ul(e)?r={ms:e._milliseconds,d:e._days,M:e._months}:ut(e)||!isNaN(+e)?(r={},n?r[n]=+e:r.milliseconds=+e):(t=RM.exec(e))?(a=t[1]==="-"?-1:1,r={y:0,d:le(t[Ar])*a,h:le(t[$e])*a,m:le(t[dr])*a,s:le(t[nt])*a,ms:le(Sd(t[ua]*1e3))*a}):(t=DM.exec(e))?(a=t[1]==="-"?-1:1,r={y:na(t[2],a),M:na(t[3],a),w:na(t[4],a),d:na(t[5],a),h:na(t[6],a),m:na(t[7],a),s:na(t[8],a)}):r==null?r={}:typeof r=="object"&&("from"in r||"to"in r)&&(o=OM(Me(r.from),Me(r.to)),r={},r.ms=o.milliseconds,r.M=o.months),i=new Gc(r),ul(e)&&fe(e,"_locale")&&(i._locale=e._locale),ul(e)&&fe(e,"_isValid")&&(i._isValid=e._isValid),i}kr.fn=Gc.prototype;kr.invalid=yM;function na(e,n){var r=e&&parseFloat(e.replace(",","."));return(isNaN(r)?0:r)*n}function Jh(e,n){var r={};return r.months=n.month()-e.month()+(n.year()-e.year())*12,e.clone().add(r.months,"M").isAfter(n)&&--r.months,r.milliseconds=+n-+e.clone().add(r.months,"M"),r}function OM(e,n){var r;return e.isValid()&&n.isValid()?(n=wg(n,e),e.isBefore(n)?r=Jh(e,n):(r=Jh(n,e),r.milliseconds=-r.milliseconds,r.months=-r.months),r):{milliseconds:0,months:0}}function ek(e,n){return function(r,t){var a,i;return t!==null&&!isNaN(+t)&&(M0(n,"moment()."+n+"(period, number) is deprecated. Please use moment()."+n+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),i=r,r=t,t=i),a=kr(r,t),nk(this,a,e),this}}function nk(e,n,r,t){var a=n._milliseconds,i=Sd(n._days),o=Sd(n._months);e.isValid()&&(t=t??!0,o&&H0(e,Wo(e,"Month")+o*r),i&&_0(e,"Date",Wo(e,"Date")+i*r),a&&e._d.setTime(e._d.valueOf()+a*r),t&&F.updateOffset(e,i||o))}var LM=ek(1,"add"),_M=ek(-1,"subtract");function rk(e){return typeof e=="string"||e instanceof String}function NM(e){return yr(e)||ss(e)||rk(e)||ut(e)||HM(e)||BM(e)||e===null||e===void 0}function BM(e){var n=ma(e)&&!ag(e),r=!1,t=["years","year","y","months","month","M","days","day","d","dates","date","D","hours","hour","h","minutes","minute","m","seconds","second","s","milliseconds","millisecond","ms"],a,i,o=t.length;for(a=0;a<o;a+=1)i=t[a],r=r||fe(e,i);return n&&r}function HM(e){var n=br(e),r=!1;return n&&(r=e.filter(function(t){return!ut(t)&&rk(e)}).length===0),n&&r}function qM(e){var n=ma(e)&&!ag(e),r=!1,t=["sameDay","nextDay","lastDay","nextWeek","lastWeek","sameElse"],a,i;for(a=0;a<t.length;a+=1)i=t[a],r=r||fe(e,i);return n&&r}function FM(e,n){var r=e.diff(n,"days",!0);return r<-6?"sameElse":r<-1?"lastWeek":r<0?"lastDay":r<1?"sameDay":r<2?"nextDay":r<7?"nextWeek":"sameElse"}function JM(e,n){arguments.length===1&&(arguments[0]?NM(arguments[0])?(e=arguments[0],n=void 0):qM(arguments[0])&&(n=arguments[0],e=void 0):(e=void 0,n=void 0));var r=e||Me(),t=wg(r,this).startOf("day"),a=F.calendarFormat(this,t)||"sameElse",i=n&&(qr(n[a])?n[a].call(this,r):n[a]);return this.format(i||this.localeData().calendar(a,this,Me(r)))}function zM(){return new ls(this)}function UM(e,n){var r=yr(e)?e:Me(e);return this.isValid()&&r.isValid()?(n=ar(n)||"millisecond",n==="millisecond"?this.valueOf()>r.valueOf():r.valueOf()<this.clone().startOf(n).valueOf()):!1}function WM(e,n){var r=yr(e)?e:Me(e);return this.isValid()&&r.isValid()?(n=ar(n)||"millisecond",n==="millisecond"?this.valueOf()<r.valueOf():this.clone().endOf(n).valueOf()<r.valueOf()):!1}function VM(e,n,r,t){var a=yr(e)?e:Me(e),i=yr(n)?n:Me(n);return this.isValid()&&a.isValid()&&i.isValid()?(t=t||"()",(t[0]==="("?this.isAfter(a,r):!this.isBefore(a,r))&&(t[1]===")"?this.isBefore(i,r):!this.isAfter(i,r))):!1}function $M(e,n){var r=yr(e)?e:Me(e),t;return this.isValid()&&r.isValid()?(n=ar(n)||"millisecond",n==="millisecond"?this.valueOf()===r.valueOf():(t=r.valueOf(),this.clone().startOf(n).valueOf()<=t&&t<=this.clone().endOf(n).valueOf())):!1}function GM(e,n){return this.isSame(e,n)||this.isAfter(e,n)}function KM(e,n){return this.isSame(e,n)||this.isBefore(e,n)}function YM(e,n,r){var t,a,i;if(!this.isValid())return NaN;if(t=wg(e,this),!t.isValid())return NaN;switch(a=(t.utcOffset()-this.utcOffset())*6e4,n=ar(n),n){case"year":i=pl(this,t)/12;break;case"month":i=pl(this,t);break;case"quarter":i=pl(this,t)/3;break;case"second":i=(this-t)/1e3;break;case"minute":i=(this-t)/6e4;break;case"hour":i=(this-t)/36e5;break;case"day":i=(this-t-a)/864e5;break;case"week":i=(this-t-a)/6048e5;break;default:i=this-t}return r?i:Gn(i)}function pl(e,n){if(e.date()<n.date())return-pl(n,e);var r=(n.year()-e.year())*12+(n.month()-e.month()),t=e.clone().add(r,"months"),a,i;return n-t<0?(a=e.clone().add(r-1,"months"),i=(n-t)/(t-a)):(a=e.clone().add(r+1,"months"),i=(n-t)/(a-t)),-(r+i)||0}F.defaultFormat="YYYY-MM-DDTHH:mm:ssZ";F.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";function QM(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")}function XM(e){if(!this.isValid())return null;var n=e!==!0,r=n?this.clone().utc():this;return r.year()<0||r.year()>9999?cl(r,n?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):qr(Date.prototype.toISOString)?n?this.toDate().toISOString():new Date(this.valueOf()+this.utcOffset()*60*1e3).toISOString().replace("Z",cl(r,"Z")):cl(r,n?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")}function ZM(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var e="moment",n="",r,t,a,i;return this.isLocal()||(e=this.utcOffset()===0?"moment.utc":"moment.parseZone",n="Z"),r="["+e+'("]',t=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY",a="-MM-DD[T]HH:mm:ss.SSS",i=n+'[")]',this.format(r+t+a+i)}function eA(e){e||(e=this.isUtc()?F.defaultFormatUtc:F.defaultFormat);var n=cl(this,e);return this.localeData().postformat(n)}function nA(e,n){return this.isValid()&&(yr(e)&&e.isValid()||Me(e).isValid())?kr({to:this,from:e}).locale(this.locale()).humanize(!n):this.localeData().invalidDate()}function rA(e){return this.from(Me(),e)}function tA(e,n){return this.isValid()&&(yr(e)&&e.isValid()||Me(e).isValid())?kr({from:this,to:e}).locale(this.locale()).humanize(!n):this.localeData().invalidDate()}function aA(e){return this.to(Me(),e)}function tk(e){var n;return e===void 0?this._locale._abbr:(n=ft(e),n!=null&&(this._locale=n),this)}var ak=tr("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(e){return e===void 0?this.localeData():this.locale(e)});function ik(){return this._locale}var Gl=1e3,si=60*Gl,Kl=60*si,ok=(365*400+97)*24*Kl;function li(e,n){return(e%n+n)%n}function sk(e,n,r){return e<100&&e>=0?new Date(e+400,n,r)-ok:new Date(e,n,r).valueOf()}function lk(e,n,r){return e<100&&e>=0?Date.UTC(e+400,n,r)-ok:Date.UTC(e,n,r)}function iA(e){var n,r;if(e=ar(e),e===void 0||e==="millisecond"||!this.isValid())return this;switch(r=this._isUTC?lk:sk,e){case"year":n=r(this.year(),0,1);break;case"quarter":n=r(this.year(),this.month()-this.month()%3,1);break;case"month":n=r(this.year(),this.month(),1);break;case"week":n=r(this.year(),this.month(),this.date()-this.weekday());break;case"isoWeek":n=r(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case"day":case"date":n=r(this.year(),this.month(),this.date());break;case"hour":n=this._d.valueOf(),n-=li(n+(this._isUTC?0:this.utcOffset()*si),Kl);break;case"minute":n=this._d.valueOf(),n-=li(n,si);break;case"second":n=this._d.valueOf(),n-=li(n,Gl);break}return this._d.setTime(n),F.updateOffset(this,!0),this}function oA(e){var n,r;if(e=ar(e),e===void 0||e==="millisecond"||!this.isValid())return this;switch(r=this._isUTC?lk:sk,e){case"year":n=r(this.year()+1,0,1)-1;break;case"quarter":n=r(this.year(),this.month()-this.month()%3+3,1)-1;break;case"month":n=r(this.year(),this.month()+1,1)-1;break;case"week":n=r(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case"isoWeek":n=r(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case"day":case"date":n=r(this.year(),this.month(),this.date()+1)-1;break;case"hour":n=this._d.valueOf(),n+=Kl-li(n+(this._isUTC?0:this.utcOffset()*si),Kl)-1;break;case"minute":n=this._d.valueOf(),n+=si-li(n,si)-1;break;case"second":n=this._d.valueOf(),n+=Gl-li(n,Gl)-1;break}return this._d.setTime(n),F.updateOffset(this,!0),this}function sA(){return this._d.valueOf()-(this._offset||0)*6e4}function lA(){return Math.floor(this.valueOf()/1e3)}function cA(){return new Date(this.valueOf())}function uA(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]}function pA(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}}function dA(){return this.isValid()?this.toISOString():null}function mA(){return ig(this)}function gA(){return Pt({},re(this))}function fA(){return re(this).overflow}function hA(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}K("N",0,0,"eraAbbr");K("NN",0,0,"eraAbbr");K("NNN",0,0,"eraAbbr");K("NNNN",0,0,"eraName");K("NNNNN",0,0,"eraNarrow");K("y",["y",1],"yo","eraYear");K("y",["yy",2],0,"eraYear");K("y",["yyy",3],0,"eraYear");K("y",["yyyy",4],0,"eraYear");U("N",xg);U("NN",xg);U("NNN",xg);U("NNNN",EA);U("NNNNN",TA);Se(["N","NN","NNN","NNNN","NNNNN"],function(e,n,r,t){var a=r._locale.erasParse(e,t,r._strict);a?re(r).era=a:re(r).invalidEra=e});U("y",Mi);U("yy",Mi);U("yyy",Mi);U("yyyy",Mi);U("yo",MA);Se(["y","yy","yyy","yyyy"],pn);Se(["yo"],function(e,n,r,t){var a;r._locale._eraYearOrdinalRegex&&(a=e.match(r._locale._eraYearOrdinalRegex)),r._locale.eraYearOrdinalParse?n[pn]=r._locale.eraYearOrdinalParse(e,a):n[pn]=parseInt(e,10)});function vA(e,n){var r,t,a,i=this._eras||ft("en")._eras;for(r=0,t=i.length;r<t;++r){switch(typeof i[r].since){case"string":a=F(i[r].since).startOf("day"),i[r].since=a.valueOf();break}switch(typeof i[r].until){case"undefined":i[r].until=1/0;break;case"string":a=F(i[r].until).startOf("day").valueOf(),i[r].until=a.valueOf();break}}return i}function bA(e,n,r){var t,a,i=this.eras(),o,s,l;for(e=e.toUpperCase(),t=0,a=i.length;t<a;++t)if(o=i[t].name.toUpperCase(),s=i[t].abbr.toUpperCase(),l=i[t].narrow.toUpperCase(),r)switch(n){case"N":case"NN":case"NNN":if(s===e)return i[t];break;case"NNNN":if(o===e)return i[t];break;case"NNNNN":if(l===e)return i[t];break}else if([o,s,l].indexOf(e)>=0)return i[t]}function yA(e,n){var r=e.since<=e.until?1:-1;return n===void 0?F(e.since).year():F(e.since).year()+(n-e.offset)*r}function kA(){var e,n,r,t=this.localeData().eras();for(e=0,n=t.length;e<n;++e)if(r=this.clone().startOf("day").valueOf(),t[e].since<=r&&r<=t[e].until||t[e].until<=r&&r<=t[e].since)return t[e].name;return""}function SA(){var e,n,r,t=this.localeData().eras();for(e=0,n=t.length;e<n;++e)if(r=this.clone().startOf("day").valueOf(),t[e].since<=r&&r<=t[e].until||t[e].until<=r&&r<=t[e].since)return t[e].narrow;return""}function wA(){var e,n,r,t=this.localeData().eras();for(e=0,n=t.length;e<n;++e)if(r=this.clone().startOf("day").valueOf(),t[e].since<=r&&r<=t[e].until||t[e].until<=r&&r<=t[e].since)return t[e].abbr;return""}function xA(){var e,n,r,t,a=this.localeData().eras();for(e=0,n=a.length;e<n;++e)if(r=a[e].since<=a[e].until?1:-1,t=this.clone().startOf("day").valueOf(),a[e].since<=t&&t<=a[e].until||a[e].until<=t&&t<=a[e].since)return(this.year()-F(a[e].since).year())*r+a[e].offset;return this.year()}function jA(e){return fe(this,"_erasNameRegex")||jg.call(this),e?this._erasNameRegex:this._erasRegex}function CA(e){return fe(this,"_erasAbbrRegex")||jg.call(this),e?this._erasAbbrRegex:this._erasRegex}function IA(e){return fe(this,"_erasNarrowRegex")||jg.call(this),e?this._erasNarrowRegex:this._erasRegex}function xg(e,n){return n.erasAbbrRegex(e)}function EA(e,n){return n.erasNameRegex(e)}function TA(e,n){return n.erasNarrowRegex(e)}function MA(e,n){return n._eraYearOrdinalRegex||Mi}function jg(){var e=[],n=[],r=[],t=[],a,i,o,s,l,c=this.eras();for(a=0,i=c.length;a<i;++a)o=at(c[a].name),s=at(c[a].abbr),l=at(c[a].narrow),n.push(o),e.push(s),r.push(l),t.push(o),t.push(s),t.push(l);this._erasRegex=new RegExp("^("+t.join("|")+")","i"),this._erasNameRegex=new RegExp("^("+n.join("|")+")","i"),this._erasAbbrRegex=new RegExp("^("+e.join("|")+")","i"),this._erasNarrowRegex=new RegExp("^("+r.join("|")+")","i")}K(0,["gg",2],0,function(){return this.weekYear()%100});K(0,["GG",2],0,function(){return this.isoWeekYear()%100});function Kc(e,n){K(0,[e,e.length],0,n)}Kc("gggg","weekYear");Kc("ggggg","weekYear");Kc("GGGG","isoWeekYear");Kc("GGGGG","isoWeekYear");U("G",Uc);U("g",Uc);U("GG",Ae,Un);U("gg",Ae,Un);U("GGGG",pg,ug);U("gggg",pg,ug);U("GGGGG",zc,Fc);U("ggggg",zc,Fc);us(["gggg","ggggg","GGGG","GGGGG"],function(e,n,r,t){n[t.substr(0,2)]=le(e)});us(["gg","GG"],function(e,n,r,t){n[t]=F.parseTwoDigitYear(e)});function AA(e){return ck.call(this,e,this.week(),this.weekday()+this.localeData()._week.dow,this.localeData()._week.dow,this.localeData()._week.doy)}function PA(e){return ck.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)}function RA(){return it(this.year(),1,4)}function DA(){return it(this.isoWeekYear(),1,4)}function OA(){var e=this.localeData()._week;return it(this.year(),e.dow,e.doy)}function LA(){var e=this.localeData()._week;return it(this.weekYear(),e.dow,e.doy)}function ck(e,n,r,t,a){var i;return e==null?$o(this,t,a).year:(i=it(e,t,a),n>i&&(n=i),_A.call(this,e,n,r,t,a))}function _A(e,n,r,t,a){var i=J0(e,n,r,t,a),o=Vo(i.year,0,i.dayOfYear);return this.year(o.getUTCFullYear()),this.month(o.getUTCMonth()),this.date(o.getUTCDate()),this}K("Q",0,"Qo","quarter");U("Q",P0);Se("Q",function(e,n){n[et]=(le(e)-1)*3});function NA(e){return e==null?Math.ceil((this.month()+1)/3):this.month((e-1)*3+this.month()%3)}K("D",["DD",2],"Do","date");U("D",Ae,Ai);U("DD",Ae,Un);U("Do",function(e,n){return e?n._dayOfMonthOrdinalParse||n._ordinalParse:n._dayOfMonthOrdinalParseLenient});Se(["D","DD"],Ar);Se("Do",function(e,n){n[Ar]=le(e.match(Ae)[0])});var uk=Pi("Date",!0);K("DDD",["DDDD",3],"DDDo","dayOfYear");U("DDD",Jc);U("DDDD",R0);Se(["DDD","DDDD"],function(e,n,r){r._dayOfYear=le(e)});function BA(e){var n=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return e==null?n:this.add(e-n,"d")}K("m",["mm",2],0,"minute");U("m",Ae,dg);U("mm",Ae,Un);Se(["m","mm"],dr);var HA=Pi("Minutes",!1);K("s",["ss",2],0,"second");U("s",Ae,dg);U("ss",Ae,Un);Se(["s","ss"],nt);var qA=Pi("Seconds",!1);K("S",0,0,function(){return~~(this.millisecond()/100)});K(0,["SS",2],0,function(){return~~(this.millisecond()/10)});K(0,["SSS",3],0,"millisecond");K(0,["SSSS",4],0,function(){return this.millisecond()*10});K(0,["SSSSS",5],0,function(){return this.millisecond()*100});K(0,["SSSSSS",6],0,function(){return this.millisecond()*1e3});K(0,["SSSSSSS",7],0,function(){return this.millisecond()*1e4});K(0,["SSSSSSSS",8],0,function(){return this.millisecond()*1e5});K(0,["SSSSSSSSS",9],0,function(){return this.millisecond()*1e6});U("S",Jc,P0);U("SS",Jc,Un);U("SSS",Jc,R0);var Rt,pk;for(Rt="SSSS";Rt.length<=9;Rt+="S")U(Rt,Mi);function FA(e,n){n[ua]=le(("0."+e)*1e3)}for(Rt="S";Rt.length<=9;Rt+="S")Se(Rt,FA);pk=Pi("Milliseconds",!1);K("z",0,0,"zoneAbbr");K("zz",0,0,"zoneName");function JA(){return this._isUTC?"UTC":""}function zA(){return this._isUTC?"Coordinated Universal Time":""}var _=ls.prototype;_.add=LM;_.calendar=JM;_.clone=zM;_.diff=YM;_.endOf=oA;_.format=eA;_.from=nA;_.fromNow=rA;_.to=tA;_.toNow=aA;_.get=ZE;_.invalidAt=fA;_.isAfter=UM;_.isBefore=WM;_.isBetween=VM;_.isSame=$M;_.isSameOrAfter=GM;_.isSameOrBefore=KM;_.isValid=mA;_.lang=ak;_.locale=tk;_.localeData=ik;_.max=mM;_.min=dM;_.parsingFlags=gA;_.set=eT;_.startOf=iA;_.subtract=_M;_.toArray=uA;_.toObject=pA;_.toDate=cA;_.toISOString=XM;_.inspect=ZM;typeof Symbol<"u"&&Symbol.for!=null&&(_[Symbol.for("nodejs.util.inspect.custom")]=function(){return"Moment<"+this.format()+">"});_.toJSON=dA;_.toString=QM;_.unix=lA;_.valueOf=sA;_.creationData=hA;_.eraName=kA;_.eraNarrow=SA;_.eraAbbr=wA;_.eraYear=xA;_.year=L0;_.isLeapYear=XE;_.weekYear=AA;_.isoWeekYear=PA;_.quarter=_.quarters=NA;_.month=q0;_.daysInMonth=cT;_.week=_.weeks=vT;_.isoWeek=_.isoWeeks=bT;_.weeksInYear=OA;_.weeksInWeekYear=LA;_.isoWeeksInYear=RA;_.isoWeeksInISOWeekYear=DA;_.date=uk;_.day=_.days=PT;_.weekday=RT;_.isoWeekday=DT;_.dayOfYear=BA;_.hour=_.hours=qT;_.minute=_.minutes=HA;_.second=_.seconds=qA;_.millisecond=_.milliseconds=pk;_.utcOffset=wM;_.utc=jM;_.local=CM;_.parseZone=IM;_.hasAlignedHourOffset=EM;_.isDST=TM;_.isLocal=AM;_.isUtcOffset=PM;_.isUtc=Z0;_.isUTC=Z0;_.zoneAbbr=JA;_.zoneName=zA;_.dates=tr("dates accessor is deprecated. Use date instead.",uk);_.months=tr("months accessor is deprecated. Use month instead",q0);_.years=tr("years accessor is deprecated. Use year instead",L0);_.zone=tr("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",xM);_.isDSTShifted=tr("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",MM);function UA(e){return Me(e*1e3)}function WA(){return Me.apply(null,arguments).parseZone()}function dk(e){return e}var he=sg.prototype;he.calendar=AE;he.longDateFormat=OE;he.invalidDate=_E;he.ordinal=HE;he.preparse=dk;he.postformat=dk;he.relativeTime=FE;he.pastFuture=JE;he.set=TE;he.eras=vA;he.erasParse=bA;he.erasConvertYear=yA;he.erasAbbrRegex=CA;he.erasNameRegex=jA;he.erasNarrowRegex=IA;he.months=iT;he.monthsShort=oT;he.monthsParse=lT;he.monthsRegex=pT;he.monthsShortRegex=uT;he.week=mT;he.firstDayOfYear=hT;he.firstDayOfWeek=fT;he.weekdays=IT;he.weekdaysMin=TT;he.weekdaysShort=ET;he.weekdaysParse=AT;he.weekdaysRegex=OT;he.weekdaysShortRegex=LT;he.weekdaysMinRegex=_T;he.isPM=BT;he.meridiem=FT;function Yl(e,n,r,t){var a=ft(),i=Hr().set(t,n);return a[r](i,e)}function mk(e,n,r){if(ut(e)&&(n=e,e=void 0),e=e||"",n!=null)return Yl(e,n,r,"month");var t,a=[];for(t=0;t<12;t++)a[t]=Yl(e,t,r,"month");return a}function Cg(e,n,r,t){typeof e=="boolean"?(ut(n)&&(r=n,n=void 0),n=n||""):(n=e,r=n,e=!1,ut(n)&&(r=n,n=void 0),n=n||"");var a=ft(),i=e?a._week.dow:0,o,s=[];if(r!=null)return Yl(n,(r+i)%7,t,"day");for(o=0;o<7;o++)s[o]=Yl(n,(o+i)%7,t,"day");return s}function VA(e,n){return mk(e,n,"months")}function $A(e,n){return mk(e,n,"monthsShort")}function GA(e,n,r){return Cg(e,n,r,"weekdays")}function KA(e,n,r){return Cg(e,n,r,"weekdaysShort")}function YA(e,n,r){return Cg(e,n,r,"weekdaysMin")}zt("en",{eras:[{since:"0001-01-01",until:1/0,offset:1,name:"Anno Domini",narrow:"AD",abbr:"AD"},{since:"0000-12-31",until:-1/0,offset:1,name:"Before Christ",narrow:"BC",abbr:"BC"}],dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var n=e%10,r=le(e%100/10)===1?"th":n===1?"st":n===2?"nd":n===3?"rd":"th";return e+r}});F.lang=tr("moment.lang is deprecated. Use moment.locale instead.",zt);F.langData=tr("moment.langData is deprecated. Use moment.localeData instead.",ft);var Wr=Math.abs;function QA(){var e=this._data;return this._milliseconds=Wr(this._milliseconds),this._days=Wr(this._days),this._months=Wr(this._months),e.milliseconds=Wr(e.milliseconds),e.seconds=Wr(e.seconds),e.minutes=Wr(e.minutes),e.hours=Wr(e.hours),e.months=Wr(e.months),e.years=Wr(e.years),this}function gk(e,n,r,t){var a=kr(n,r);return e._milliseconds+=t*a._milliseconds,e._days+=t*a._days,e._months+=t*a._months,e._bubble()}function XA(e,n){return gk(this,e,n,1)}function ZA(e,n){return gk(this,e,n,-1)}function zh(e){return e<0?Math.floor(e):Math.ceil(e)}function eP(){var e=this._milliseconds,n=this._days,r=this._months,t=this._data,a,i,o,s,l;return e>=0&&n>=0&&r>=0||e<=0&&n<=0&&r<=0||(e+=zh(xd(r)+n)*864e5,n=0,r=0),t.milliseconds=e%1e3,a=Gn(e/1e3),t.seconds=a%60,i=Gn(a/60),t.minutes=i%60,o=Gn(i/60),t.hours=o%24,n+=Gn(o/24),l=Gn(fk(n)),r+=l,n-=zh(xd(l)),s=Gn(r/12),r%=12,t.days=n,t.months=r,t.years=s,this}function fk(e){return e*4800/146097}function xd(e){return e*146097/4800}function nP(e){if(!this.isValid())return NaN;var n,r,t=this._milliseconds;if(e=ar(e),e==="month"||e==="quarter"||e==="year")switch(n=this._days+t/864e5,r=this._months+fk(n),e){case"month":return r;case"quarter":return r/3;case"year":return r/12}else switch(n=this._days+Math.round(xd(this._months)),e){case"week":return n/7+t/6048e5;case"day":return n+t/864e5;case"hour":return n*24+t/36e5;case"minute":return n*1440+t/6e4;case"second":return n*86400+t/1e3;case"millisecond":return Math.floor(n*864e5)+t;default:throw new Error("Unknown unit "+e)}}function ht(e){return function(){return this.as(e)}}var hk=ht("ms"),rP=ht("s"),tP=ht("m"),aP=ht("h"),iP=ht("d"),oP=ht("w"),sP=ht("M"),lP=ht("Q"),cP=ht("y"),uP=hk;function pP(){return kr(this)}function dP(e){return e=ar(e),this.isValid()?this[e+"s"]():NaN}function Ea(e){return function(){return this.isValid()?this._data[e]:NaN}}var mP=Ea("milliseconds"),gP=Ea("seconds"),fP=Ea("minutes"),hP=Ea("hours"),vP=Ea("days"),bP=Ea("months"),yP=Ea("years");function kP(){return Gn(this.days()/7)}var $r=Math.round,Xa={ss:44,s:45,m:45,h:22,d:26,w:null,M:11};function SP(e,n,r,t,a){return a.relativeTime(n||1,!!r,e,t)}function wP(e,n,r,t){var a=kr(e).abs(),i=$r(a.as("s")),o=$r(a.as("m")),s=$r(a.as("h")),l=$r(a.as("d")),c=$r(a.as("M")),u=$r(a.as("w")),p=$r(a.as("y")),d=i<=r.ss&&["s",i]||i<r.s&&["ss",i]||o<=1&&["m"]||o<r.m&&["mm",o]||s<=1&&["h"]||s<r.h&&["hh",s]||l<=1&&["d"]||l<r.d&&["dd",l];return r.w!=null&&(d=d||u<=1&&["w"]||u<r.w&&["ww",u]),d=d||c<=1&&["M"]||c<r.M&&["MM",c]||p<=1&&["y"]||["yy",p],d[2]=n,d[3]=+e>0,d[4]=t,SP.apply(null,d)}function xP(e){return e===void 0?$r:typeof e=="function"?($r=e,!0):!1}function jP(e,n){return Xa[e]===void 0?!1:n===void 0?Xa[e]:(Xa[e]=n,e==="s"&&(Xa.ss=n-1),!0)}function CP(e,n){if(!this.isValid())return this.localeData().invalidDate();var r=!1,t=Xa,a,i;return typeof e=="object"&&(n=e,e=!1),typeof e=="boolean"&&(r=e),typeof n=="object"&&(t=Object.assign({},Xa,n),n.s!=null&&n.ss==null&&(t.ss=n.s-1)),a=this.localeData(),i=wP(this,!r,t,a),r&&(i=a.pastFuture(+this,i)),a.postformat(i)}var Uu=Math.abs;function La(e){return(e>0)-(e<0)||+e}function Yc(){if(!this.isValid())return this.localeData().invalidDate();var e=Uu(this._milliseconds)/1e3,n=Uu(this._days),r=Uu(this._months),t,a,i,o,s=this.asSeconds(),l,c,u,p;return s?(t=Gn(e/60),a=Gn(t/60),e%=60,t%=60,i=Gn(r/12),r%=12,o=e?e.toFixed(3).replace(/\.?0+$/,""):"",l=s<0?"-":"",c=La(this._months)!==La(s)?"-":"",u=La(this._days)!==La(s)?"-":"",p=La(this._milliseconds)!==La(s)?"-":"",l+"P"+(i?c+i+"Y":"")+(r?c+r+"M":"")+(n?u+n+"D":"")+(a||t||e?"T":"")+(a?p+a+"H":"")+(t?p+t+"M":"")+(e?p+o+"S":"")):"P0D"}var de=Gc.prototype;de.isValid=bM;de.abs=QA;de.add=XA;de.subtract=ZA;de.as=nP;de.asMilliseconds=hk;de.asSeconds=rP;de.asMinutes=tP;de.asHours=aP;de.asDays=iP;de.asWeeks=oP;de.asMonths=sP;de.asQuarters=lP;de.asYears=cP;de.valueOf=uP;de._bubble=eP;de.clone=pP;de.get=dP;de.milliseconds=mP;de.seconds=gP;de.minutes=fP;de.hours=hP;de.days=vP;de.weeks=kP;de.months=bP;de.years=yP;de.humanize=CP;de.toISOString=Yc;de.toString=Yc;de.toJSON=Yc;de.locale=tk;de.localeData=ik;de.toIsoString=tr("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",Yc);de.lang=ak;K("X",0,0,"unix");K("x",0,0,"valueOf");U("x",Uc);U("X",VE);Se("X",function(e,n,r){r._d=new Date(parseFloat(e)*1e3)});Se("x",function(e,n,r){r._d=new Date(le(e))});//! moment.js
F.version="2.30.1";IE(Me);F.fn=_;F.min=gM;F.max=fM;F.now=hM;F.utc=Hr;F.unix=UA;F.months=VA;F.isDate=ss;F.locale=zt;F.invalid=qc;F.duration=kr;F.isMoment=yr;F.weekdays=GA;F.parseZone=WA;F.localeData=ft;F.isDuration=ul;F.monthsShort=$A;F.weekdaysMin=YA;F.defineLocale=vg;F.updateLocale=WT;F.locales=VT;F.weekdaysShort=KA;F.normalizeUnits=ar;F.relativeTimeRounding=xP;F.relativeTimeThreshold=jP;F.calendarFormat=FM;F.prototype=_;F.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"};function IP(){document.title="Home";const e=F().diff("1994-11-06","years");return M(rg,{children:ae(Qe,{children:[M(fr,{md:5,className:"text-center",children:M(tg,{src:"avatar.jpg",roundedCircle:!0,style:{maxWidth:"90%"},css:jn`
							padding: 0.5rem;
							background: radial-gradient(
									circle at 50% 0px,
									rgba(255, 0, 0, 0.376),
									rgba(255, 0, 0, 0) 70.71%
								),
								radial-gradient(circle at 6.7% 75%, rgba(0, 0, 255, 0.376), rgba(0, 0, 255, 0) 70.71%),
								radial-gradient(circle at 93.3% 75%, rgba(0, 255, 0, 0.376), rgba(0, 255, 0, 0) 70.71%)
									white;
						`})}),M(fr,{md:7,children:ae(Rn,{gap:5,className:"text-center",children:[M(Qe,{children:M("h1",{style:{marginBottom:"1rem"},children:"Welcome to my website! 👋"})}),ae(Qe,{xs:3,className:"g-4",children:[M(ll,{children:M(Jt,{variant:"danger",as:Or,to:"/workExp",css:jn`
										-webkit-box-reflect: below 0em -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgba(0, 0, 0, 0)), to(rgba(255, 255, 255, 0.1)));
									`,children:"Work"})}),M(ll,{children:M(Jt,{variant:"info",as:Or,to:"/hobbyProjects",css:jn`
										-webkit-box-reflect: below 0em -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgba(0, 0, 0, 0)), to(rgba(255, 255, 255, 0.1)));
									`,children:"Hobby projects"})}),M(ll,{children:M(Jt,{variant:"success",as:Or,to:"/blog",css:jn`
										-webkit-box-reflect: below 0em -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgba(0, 0, 0, 0)), to(rgba(255, 255, 255, 0.1)));
									`,children:"Blog"})})]}),ae(Qe,{className:"text-start",css:jn`
								color: purple;
								font-size: 1.1rem;
								padding-bottom: 1em;
								cursor: default;
								line-height: 1.5;

								@supports (display: grid) {
									background: linear-gradient(to bottom, #e91e63, #9c27b0);
									-webkit-background-clip: text;
									-webkit-text-fill-color: transparent;
								}
							`,children:[ae("p",{children:["I am a ",e,"-year-old engineer who is enthusiastic about building software that requires logical thinking, problem solving, creativity and design elements."]}),ae("p",{children:[M("br",{}),"I am a Java Spring Boot back-end developer for many years.",M("br",{}),"I can develop websites with React JS.",M("br",{}),"I use Docker, K8s, Git, Jenkins, Jira, Confluence.",M("br",{}),"I am practical and detail-oriented.",M("br",{}),"I am quite fluent in Cantonese, English and Mandarin.",M("br",{}),"I am a fast typer.",M("br",{}),"I like writing tech blogs.",M("br",{}),"Check it out!"]})]})]})})]})})}const EP=b.memo(IP,(e,n)=>!0),Ig=b.forwardRef(({className:e,bsPrefix:n,as:r="div",...t},a)=>(n=G(n,"card-body"),A.jsx(r,{ref:a,className:V(e,n),...t})));Ig.displayName="CardBody";const vk=b.forwardRef(({className:e,bsPrefix:n,as:r="div",...t},a)=>(n=G(n,"card-footer"),A.jsx(r,{ref:a,className:V(e,n),...t})));vk.displayName="CardFooter";const bk=b.forwardRef(({bsPrefix:e,className:n,as:r="div",...t},a)=>{const i=G(e,"card-header"),o=b.useMemo(()=>({cardHeaderBsPrefix:i}),[i]);return A.jsx(eg.Provider,{value:o,children:A.jsx(r,{ref:a,...t,className:V(n,i)})})});bk.displayName="CardHeader";const yk=b.forwardRef(({bsPrefix:e,className:n,variant:r,as:t="img",...a},i)=>{const o=G(e,"card-img");return A.jsx(t,{ref:i,className:V(r?`${o}-${r}`:o,n),...a})});yk.displayName="CardImg";const kk=b.forwardRef(({className:e,bsPrefix:n,as:r="div",...t},a)=>(n=G(n,"card-img-overlay"),A.jsx(r,{ref:a,className:V(e,n),...t})));kk.displayName="CardImgOverlay";const Sk=b.forwardRef(({className:e,bsPrefix:n,as:r="a",...t},a)=>(n=G(n,"card-link"),A.jsx(r,{ref:a,className:V(e,n),...t})));Sk.displayName="CardLink";const TP=Qm("h6"),wk=b.forwardRef(({className:e,bsPrefix:n,as:r=TP,...t},a)=>(n=G(n,"card-subtitle"),A.jsx(r,{ref:a,className:V(e,n),...t})));wk.displayName="CardSubtitle";const xk=b.forwardRef(({className:e,bsPrefix:n,as:r="p",...t},a)=>(n=G(n,"card-text"),A.jsx(r,{ref:a,className:V(e,n),...t})));xk.displayName="CardText";const MP=Qm("h5"),jk=b.forwardRef(({className:e,bsPrefix:n,as:r=MP,...t},a)=>(n=G(n,"card-title"),A.jsx(r,{ref:a,className:V(e,n),...t})));jk.displayName="CardTitle";const Ck=b.forwardRef(({bsPrefix:e,className:n,bg:r,text:t,border:a,body:i=!1,children:o,as:s="div",...l},c)=>{const u=G(e,"card");return A.jsx(s,{ref:c,...l,className:V(n,u,r&&`bg-${r}`,t&&`text-${t}`,a&&`border-${a}`),children:i?A.jsx(Ig,{children:o}):o})});Ck.displayName="Card";const We=Object.assign(Ck,{Img:yk,Title:jk,Subtitle:wk,Body:Ig,Link:Sk,Text:xk,Header:bk,Footer:vk,ImgOverlay:kk}),AP=[{title:"Work exp 1",path:"/workExp/1"},{title:"Work exp 2",path:"/workExp/2"},{title:"Work exp 3",path:"/workExp/3"},{title:"Work exp 4",path:"/workExp/4"},{title:"Work exp 5",path:"/workExp/5"},{title:"Work exp 6",path:"/workExp/6"},{title:"Work exp 7",path:"/workExp/7"},{title:"Work exp 8",path:"/workExp/8"}];function PP(){return document.title="Work experiences",ae(Rn,{gap:5,className:"text-center",children:[M(Qe,{children:M("h1",{style:{marginBottom:"1rem"},children:"Work experiences 👨‍💻"})}),M(Qe,{xs:1,className:"justify-content-center g-4",children:AP.map(({title:e,path:n},r)=>M(fr,{children:ae(We,{children:[M(We.Img,{src:"https://vitejs.dev/logo.svg"}),ae(We.Body,{children:[M(We.Title,{children:e}),M(We.Text,{children:"Some quick example text to build on the card title and make up the bulk of the card's content."}),M(Jt,{variant:"outline-danger",as:Or,to:n,children:M("strong",{children:"Learn more"})})]})]})},r))})]})}const RP=b.memo(PP,(e,n)=>!0);function DP(){const{workExpId:e}=Fm();return document.title=`Work experience - ${e}`,ae(Rn,{gap:5,children:[ae("h1",{className:"text-center",style:{marginBottom:"1rem"},children:["Work experience ",e]}),M("div",{children:"Nam semper consequat maximus. Donec eu felis quis lacus rhoncus rutrum eget at ligula. Fusce eu erat eu libero sollicitudin interdum. Curabitur imperdiet neque ex, et viverra dui auctor in. Curabitur et ex non risus suscipit euismod a sit amet eros. Praesent aliquam elit non justo ultrices scelerisque. In ut orci pharetra, maximus tortor sit amet, molestie massa. Donec at neque interdum, dapibus sem sed, convallis leo. In hac habitasse platea dictumst. Vestibulum non libero aliquet, posuere magna eu, fermentum ipsum. Suspendisse a justo ac ex vulputate dictum nec sed nisi. Nam ex nibh, efficitur eget luctus quis, pellentesque ut tortor. Nam sed augue sed lacus ullamcorper semper quis nec neque. Curabitur imperdiet tortor et auctor semper. Morbi laoreet eget tortor ac ultrices. Quisque eget magna fermentum, fringilla ipsum ut, iaculis urna. Nunc quam nibh, posuere quis aliquet vel, finibus id ex. Vestibulum sollicitudin purus enim, semper volutpat orci fermentum vel. Pellentesque at enim interdum, bibendum ipsum a, sodales risus. Etiam augue lectus, accumsan eu ornare vel, porttitor a nulla. Duis non fringilla tellus. Nunc id sapien ut lorem scelerisque accumsan tristique sit amet nunc. Sed elit velit, vestibulum sed nisi non, vehicula ornare nunc. Aenean vitae semper ipsum. Aliquam tempus quis purus et ultrices. Nunc ac suscipit orci, eu sollicitudin lorem. Sed sodales id lorem id accumsan. Sed eleifend tortor vitae pellentesque pellentesque. Vestibulum imperdiet, nunc eu tempor egestas, lorem erat tincidunt nisi, sed imperdiet massa leo sit amet risus. Nulla quis quam ac magna dignissim gravida. Etiam porttitor maximus nibh viverra scelerisque. Nulla pretium, tortor eget feugiat vehicula, justo urna tincidunt mauris, nec bibendum lacus quam non lorem. Quisque at semper dui. Curabitur vulputate nisi orci, et iaculis est consequat quis. Vivamus imperdiet, velit ut bibendum sodales, turpis arcu placerat lacus, at sagittis neque odio quis ante. Quisque non tincidunt enim. Aenean a massa lobortis, fermentum ante eu, imperdiet enim. Praesent vel tortor elit. Quisque at ipsum eros. Donec scelerisque consequat lacinia. Praesent ac faucibus quam. Sed et eros vel purus iaculis hendrerit sed a felis. Nunc tempus hendrerit consectetur. Maecenas vel mollis mauris, ac tempor eros. Aliquam tincidunt dui augue, id faucibus nisi gravida in. Donec pharetra felis non justo faucibus lacinia. Phasellus mollis tellus leo, et tempus ex feugiat quis. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed ac ex ut erat convallis lacinia eu a mi. Morbi euismod, mi sit amet porttitor tristique, eros nulla vestibulum risus, vel rhoncus magna risus quis turpis. Sed vitae convallis ligula. Integer molestie lacus eget orci congue, vitae rutrum turpis tincidunt. Etiam euismod iaculis sem. Etiam rutrum mauris lorem, blandit condimentum mauris malesuada a. Morbi pharetra auctor luctus. Nunc nunc est, suscipit eget mauris vitae, gravida molestie eros. Phasellus venenatis tortor finibus luctus fermentum. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nunc posuere leo id metus fringilla, nec semper magna varius. Morbi euismod scelerisque nibh, eu ullamcorper neque finibus in. Sed et viverra risus, sit amet placerat libero. Donec orci tortor, blandit quis lorem nec, congue volutpat leo. Curabitur suscipit ante ut risus semper ultricies. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. In ac pharetra erat, eget aliquam leo. Nulla facilisi. Curabitur pharetra interdum turpis eget ultricies. Pellentesque gravida magna vitae est tempor, quis luctus velit porta. Aliquam erat volutpat. Nunc egestas eget erat vitae semper. Nam ac tortor fringilla, commodo nisl non, molestie purus. Proin molestie nibh id neque euismod, non fermentum tellus rutrum. Nam elementum est cursus porta porttitor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris eget sagittis lectus, quis facilisis justo. Proin laoreet nisi consequat mauris ultrices maximus. Donec sed sollicitudin ligula. Nulla in laoreet ante, ut sodales nisl. In in nunc turpis. Praesent arcu erat, molestie ac tristique ac, efficitur a ipsum. Donec augue libero, molestie nec lorem a, ultrices posuere sem. Aliquam erat volutpat. Duis tincidunt pharetra enim vel semper. Duis nec porttitor lectus. Maecenas cursus dolor non posuere imperdiet. Cras dapibus, leo sed placerat interdum, mi quam fringilla nisl, ac euismod ex est et leo. Integer sed ante nulla. Nullam et nulla ac ipsum varius dapibus. Quisque vitae arcu id velit aliquet rhoncus eget a mauris. Maecenas dictum maximus venenatis. Phasellus nec suscipit libero, eu lobortis lectus. Praesent tincidunt, dolor sed varius luctus, sapien neque dictum orci, porttitor condimentum quam felis ac orci. Sed elit felis, ultrices cursus dui sed, semper consectetur turpis. Suspendisse sodales dolor at lectus congue interdum. Vestibulum pharetra odio enim, vel sagittis arcu laoreet luctus. Mauris lobortis lacinia augue, at tincidunt nisi feugiat vitae. Sed ligula metus, rhoncus lobortis turpis a, efficitur pulvinar sem. Aliquam nunc sem, molestie eu nisl in, mollis lobortis augue. Donec metus dolor, porta in nibh ac, vestibulum elementum lacus. Nullam magna quam, malesuada vitae dolor id, cursus molestie lectus. Proin vitae urna at lorem tempus efficitur at ac odio. Vivamus id leo ac augue ultricies interdum. Aliquam in sapien vulputate dui malesuada auctor. Sed mauris justo, malesuada nec facilisis a, vestibulum a tortor. Mauris sem nisi, dapibus id ullamcorper mollis, dictum varius felis. In eu sapien efficitur, tincidunt enim posuere, scelerisque sapien. Mauris porttitor pulvinar tincidunt. Cras vel interdum urna. Cras eleifend, nibh dapibus posuere fringilla, justo sem ultricies sem, semper rhoncus massa urna sed mauris. Praesent tincidunt ligula lacus, non semper arcu efficitur eget. Integer quis est in ipsum bibendum lacinia. Suspendisse cursus, enim in blandit convallis, elit nunc porttitor ipsum, in congue metus enim et turpis. Mauris purus ex, lobortis et gravida eu, feugiat sed urna. Pellentesque hendrerit pellentesque odio sit amet pulvinar. In hac habitasse platea dictumst. Duis orci elit, luctus eu massa ut, fermentum fermentum arcu. Sed vel nulla non enim tempus iaculis. Suspendisse potenti. Morbi nisl metus, pellentesque non euismod a, mollis sit amet leo. Vivamus nec nisl a velit mattis efficitur. Phasellus vitae lobortis ligula, id aliquam est. Vivamus blandit volutpat rhoncus. Aenean id malesuada metus. Proin sed mi est. Ut a consectetur tellus, non consequat ex. Pellentesque vel neque orci. Nullam eget sem risus. Praesent interdum, magna vitae placerat feugiat, nisl lectus mollis metus, eget feugiat elit justo eget nibh. Donec consectetur ipsum nunc, quis rutrum dolor eleifend sit amet. Aliquam in vestibulum nisl. Maecenas volutpat augue magna, quis interdum mauris aliquet eget. Vivamus quis turpis urna. Pellentesque aliquet tellus felis, vel vehicula purus consectetur sit amet. Pellentesque ultricies ipsum turpis, sit amet fermentum elit interdum vel. Pellentesque fermentum elit quis arcu imperdiet, sed porttitor elit facilisis. Morbi dapibus congue urna ut mollis. Ut venenatis in augue et fermentum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Pellentesque sed porta diam, non ullamcorper risus. Nulla facilisi. Pellentesque volutpat varius leo nec posuere. Integer in consectetur ante. Cras ac felis porta, vehicula mauris at, semper mauris. Proin placerat sapien lorem, in vehicula elit suscipit eget. Pellentesque euismod convallis nunc, eu volutpat lectus ultricies a. Suspendisse maximus libero dui, auctor rhoncus nibh blandit blandit. Aliquam cursus, enim in tincidunt auctor, dolor felis mollis justo, eget ultrices leo lacus nec quam. Nunc dolor nibh, placerat vitae hendrerit quis, pellentesque eget justo. Integer suscipit at sem a vestibulum. Nulla leo odio, lobortis et feugiat vel, fermentum at enim. Fusce in bibendum leo. Interdum et malesuada fames ac ante ipsum primis in faucibus. Ut consequat ac orci eu viverra. Maecenas a commodo arcu. In ac felis laoreet massa tincidunt pellentesque. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum molestie dictum lobortis. Sed eu ligula egestas, pretium sapien venenatis, viverra risus. Nulla ac pellentesque lorem, in viverra odio. Vestibulum eget viverra turpis, sed sodales eros. Etiam fermentum tempus consectetur. Vestibulum tempor faucibus metus, eget hendrerit arcu semper in. Maecenas non dignissim lacus. Vivamus et gravida ante. Nam rutrum et velit et vulputate. Ut sed congue lectus, vitae aliquam turpis. Duis ut congue neque. Curabitur nec nisi nec tortor ullamcorper porta. Phasellus scelerisque non leo a feugiat. Donec at lobortis tortor. Sed sagittis vel metus ut dictum. Duis luctus dolor nec velit cursus, eget maximus diam suscipit. Aliquam non vehicula libero. Quisque facilisis, mauris in euismod aliquam, est erat dictum mauris, vel sagittis nisi magna vestibulum ante. Fusce a tortor tortor. Etiam vitae leo vehicula, interdum arcu vitae, tristique odio. Suspendisse et urna ipsum. Nulla urna ante, fermentum et lacus quis, feugiat pretium tellus. Vivamus interdum massa at leo consequat vestibulum. Praesent ultricies tincidunt velit eu imperdiet. Etiam tempus est ut nunc tempus, quis imperdiet metus porttitor. Integer imperdiet tortor quis elit commodo, vestibulum accumsan neque fermentum. Phasellus sollicitudin ligula ante, at ultrices ante vulputate at. Duis ut volutpat sem, sed viverra lorem. Duis vel hendrerit libero. Quisque ut ex eu quam ultricies sagittis. Cras ac fermentum eros, eu aliquet dui. Vestibulum ornare efficitur venenatis. Mauris congue porttitor arcu nec tempus. Etiam lectus lectus, faucibus aliquet quam ac, aliquet condimentum justo. Phasellus rutrum nisl ligula, a porttitor dui bibendum id. Nunc vestibulum aliquam risus nec pretium. In non rutrum tellus. Aenean at orci congue, sagittis erat et, interdum lorem. Ut lobortis convallis diam, sit amet suscipit nunc rutrum in. Suspendisse sit amet nulla eget arcu blandit dignissim. Nunc porttitor nunc a ligula fringilla, sed lobortis ipsum ultrices. In ullamcorper at ipsum eget fermentum. Sed pulvinar sollicitudin magna ac vulputate. Donec mattis eget nisi vel iaculis. Nam fringilla erat tortor. Nulla mattis dictum risus, sit amet ullamcorper nisl. Morbi vitae cursus metus, nec aliquam nibh. Sed vel feugiat ex. Donec pharetra nisl urna, eget dignissim ex ullamcorper nec. Vivamus mattis at purus eget convallis. Curabitur commodo euismod orci, non laoreet erat aliquet eget. Sed pharetra nisl eget mauris varius, eget iaculis risus malesuada. Suspendisse tincidunt dolor fermentum vehicula dictum. In sit amet magna facilisis, pulvinar turpis eget, vehicula tellus. Pellentesque sollicitudin fermentum massa quis tincidunt. Mauris ac nisl nec nisl aliquet feugiat. Integer nisi ligula, iaculis ac mollis at, tincidunt vitae diam. Cras rutrum nisi sit amet orci blandit consequat. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Donec faucibus nunc a feugiat sollicitudin. Vivamus est purus, sollicitudin elementum ultricies quis, laoreet eget lacus. Vestibulum a neque a est egestas ultrices. In lobortis in justo et tincidunt. Nam imperdiet ligula lorem, eu posuere erat consequat eget."})]})}const OP=b.memo(DP,(e,n)=>!0),LP=[{title:"Hobby project 1",path:"/hobbyProject/1"},{title:"Hobby project 2",path:"/hobbyProject/2"},{title:"Hobby project 3",path:"/hobbyProject/3"},{title:"Hobby project 4",path:"/hobbyProject/4"},{title:"Hobby project 5",path:"/hobbyProject/5"},{title:"Hobby project 6",path:"/hobbyProject/6"},{title:"Hobby project 7",path:"/hobbyProject/7"},{title:"Hobby project 8",path:"/hobbyProject/8"}];function _P(){return document.title="Hobby projects",ae(Rn,{gap:5,className:"text-center",children:[M(Qe,{children:M("h1",{style:{marginBottom:"1rem"},children:"My hobby projects 🎮"})}),M(Qe,{xs:1,className:"justify-content-center g-4",children:LP.map(({title:e,path:n},r)=>M(fr,{children:ae(We,{children:[M(We.Img,{src:"https://vitejs.dev/logo.svg"}),ae(We.Body,{children:[M(We.Title,{children:e}),M(We.Text,{children:"Some quick example text to build on the card title and make up the bulk of the card's content."}),M(Jt,{variant:"outline-danger",as:Or,to:n,children:M("strong",{children:"Learn more"})})]})]})},r))})]})}const NP=b.memo(_P,(e,n)=>!0);function BP(){const{hobbyProjectId:e}=Fm();return document.title=`Hobby project - ${e}`,ae(Rn,{gap:5,children:[ae("h1",{className:"text-center",style:{marginBottom:"1rem"},children:["Hobby project ",e]}),M("div",{children:"Nam semper consequat maximus. Donec eu felis quis lacus rhoncus rutrum eget at ligula. Fusce eu erat eu libero sollicitudin interdum. Curabitur imperdiet neque ex, et viverra dui auctor in. Curabitur et ex non risus suscipit euismod a sit amet eros. Praesent aliquam elit non justo ultrices scelerisque. In ut orci pharetra, maximus tortor sit amet, molestie massa. Donec at neque interdum, dapibus sem sed, convallis leo. In hac habitasse platea dictumst. Vestibulum non libero aliquet, posuere magna eu, fermentum ipsum. Suspendisse a justo ac ex vulputate dictum nec sed nisi. Nam ex nibh, efficitur eget luctus quis, pellentesque ut tortor. Nam sed augue sed lacus ullamcorper semper quis nec neque. Curabitur imperdiet tortor et auctor semper. Morbi laoreet eget tortor ac ultrices. Quisque eget magna fermentum, fringilla ipsum ut, iaculis urna. Nunc quam nibh, posuere quis aliquet vel, finibus id ex. Vestibulum sollicitudin purus enim, semper volutpat orci fermentum vel. Pellentesque at enim interdum, bibendum ipsum a, sodales risus. Etiam augue lectus, accumsan eu ornare vel, porttitor a nulla. Duis non fringilla tellus. Nunc id sapien ut lorem scelerisque accumsan tristique sit amet nunc. Sed elit velit, vestibulum sed nisi non, vehicula ornare nunc. Aenean vitae semper ipsum. Aliquam tempus quis purus et ultrices. Nunc ac suscipit orci, eu sollicitudin lorem. Sed sodales id lorem id accumsan. Sed eleifend tortor vitae pellentesque pellentesque. Vestibulum imperdiet, nunc eu tempor egestas, lorem erat tincidunt nisi, sed imperdiet massa leo sit amet risus. Nulla quis quam ac magna dignissim gravida. Etiam porttitor maximus nibh viverra scelerisque. Nulla pretium, tortor eget feugiat vehicula, justo urna tincidunt mauris, nec bibendum lacus quam non lorem. Quisque at semper dui. Curabitur vulputate nisi orci, et iaculis est consequat quis. Vivamus imperdiet, velit ut bibendum sodales, turpis arcu placerat lacus, at sagittis neque odio quis ante. Quisque non tincidunt enim. Aenean a massa lobortis, fermentum ante eu, imperdiet enim. Praesent vel tortor elit. Quisque at ipsum eros. Donec scelerisque consequat lacinia. Praesent ac faucibus quam. Sed et eros vel purus iaculis hendrerit sed a felis. Nunc tempus hendrerit consectetur. Maecenas vel mollis mauris, ac tempor eros. Aliquam tincidunt dui augue, id faucibus nisi gravida in. Donec pharetra felis non justo faucibus lacinia. Phasellus mollis tellus leo, et tempus ex feugiat quis. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed ac ex ut erat convallis lacinia eu a mi. Morbi euismod, mi sit amet porttitor tristique, eros nulla vestibulum risus, vel rhoncus magna risus quis turpis. Sed vitae convallis ligula. Integer molestie lacus eget orci congue, vitae rutrum turpis tincidunt. Etiam euismod iaculis sem. Etiam rutrum mauris lorem, blandit condimentum mauris malesuada a. Morbi pharetra auctor luctus. Nunc nunc est, suscipit eget mauris vitae, gravida molestie eros. Phasellus venenatis tortor finibus luctus fermentum. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nunc posuere leo id metus fringilla, nec semper magna varius. Morbi euismod scelerisque nibh, eu ullamcorper neque finibus in. Sed et viverra risus, sit amet placerat libero. Donec orci tortor, blandit quis lorem nec, congue volutpat leo. Curabitur suscipit ante ut risus semper ultricies. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. In ac pharetra erat, eget aliquam leo. Nulla facilisi. Curabitur pharetra interdum turpis eget ultricies. Pellentesque gravida magna vitae est tempor, quis luctus velit porta. Aliquam erat volutpat. Nunc egestas eget erat vitae semper. Nam ac tortor fringilla, commodo nisl non, molestie purus. Proin molestie nibh id neque euismod, non fermentum tellus rutrum. Nam elementum est cursus porta porttitor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris eget sagittis lectus, quis facilisis justo. Proin laoreet nisi consequat mauris ultrices maximus. Donec sed sollicitudin ligula. Nulla in laoreet ante, ut sodales nisl. In in nunc turpis. Praesent arcu erat, molestie ac tristique ac, efficitur a ipsum. Donec augue libero, molestie nec lorem a, ultrices posuere sem. Aliquam erat volutpat. Duis tincidunt pharetra enim vel semper. Duis nec porttitor lectus. Maecenas cursus dolor non posuere imperdiet. Cras dapibus, leo sed placerat interdum, mi quam fringilla nisl, ac euismod ex est et leo. Integer sed ante nulla. Nullam et nulla ac ipsum varius dapibus. Quisque vitae arcu id velit aliquet rhoncus eget a mauris. Maecenas dictum maximus venenatis. Phasellus nec suscipit libero, eu lobortis lectus. Praesent tincidunt, dolor sed varius luctus, sapien neque dictum orci, porttitor condimentum quam felis ac orci. Sed elit felis, ultrices cursus dui sed, semper consectetur turpis. Suspendisse sodales dolor at lectus congue interdum. Vestibulum pharetra odio enim, vel sagittis arcu laoreet luctus. Mauris lobortis lacinia augue, at tincidunt nisi feugiat vitae. Sed ligula metus, rhoncus lobortis turpis a, efficitur pulvinar sem. Aliquam nunc sem, molestie eu nisl in, mollis lobortis augue. Donec metus dolor, porta in nibh ac, vestibulum elementum lacus. Nullam magna quam, malesuada vitae dolor id, cursus molestie lectus. Proin vitae urna at lorem tempus efficitur at ac odio. Vivamus id leo ac augue ultricies interdum. Aliquam in sapien vulputate dui malesuada auctor. Sed mauris justo, malesuada nec facilisis a, vestibulum a tortor. Mauris sem nisi, dapibus id ullamcorper mollis, dictum varius felis. In eu sapien efficitur, tincidunt enim posuere, scelerisque sapien. Mauris porttitor pulvinar tincidunt. Cras vel interdum urna. Cras eleifend, nibh dapibus posuere fringilla, justo sem ultricies sem, semper rhoncus massa urna sed mauris. Praesent tincidunt ligula lacus, non semper arcu efficitur eget. Integer quis est in ipsum bibendum lacinia. Suspendisse cursus, enim in blandit convallis, elit nunc porttitor ipsum, in congue metus enim et turpis. Mauris purus ex, lobortis et gravida eu, feugiat sed urna. Pellentesque hendrerit pellentesque odio sit amet pulvinar. In hac habitasse platea dictumst. Duis orci elit, luctus eu massa ut, fermentum fermentum arcu. Sed vel nulla non enim tempus iaculis. Suspendisse potenti. Morbi nisl metus, pellentesque non euismod a, mollis sit amet leo. Vivamus nec nisl a velit mattis efficitur. Phasellus vitae lobortis ligula, id aliquam est. Vivamus blandit volutpat rhoncus. Aenean id malesuada metus. Proin sed mi est. Ut a consectetur tellus, non consequat ex. Pellentesque vel neque orci. Nullam eget sem risus. Praesent interdum, magna vitae placerat feugiat, nisl lectus mollis metus, eget feugiat elit justo eget nibh. Donec consectetur ipsum nunc, quis rutrum dolor eleifend sit amet. Aliquam in vestibulum nisl. Maecenas volutpat augue magna, quis interdum mauris aliquet eget. Vivamus quis turpis urna. Pellentesque aliquet tellus felis, vel vehicula purus consectetur sit amet. Pellentesque ultricies ipsum turpis, sit amet fermentum elit interdum vel. Pellentesque fermentum elit quis arcu imperdiet, sed porttitor elit facilisis. Morbi dapibus congue urna ut mollis. Ut venenatis in augue et fermentum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Pellentesque sed porta diam, non ullamcorper risus. Nulla facilisi. Pellentesque volutpat varius leo nec posuere. Integer in consectetur ante. Cras ac felis porta, vehicula mauris at, semper mauris. Proin placerat sapien lorem, in vehicula elit suscipit eget. Pellentesque euismod convallis nunc, eu volutpat lectus ultricies a. Suspendisse maximus libero dui, auctor rhoncus nibh blandit blandit. Aliquam cursus, enim in tincidunt auctor, dolor felis mollis justo, eget ultrices leo lacus nec quam. Nunc dolor nibh, placerat vitae hendrerit quis, pellentesque eget justo. Integer suscipit at sem a vestibulum. Nulla leo odio, lobortis et feugiat vel, fermentum at enim. Fusce in bibendum leo. Interdum et malesuada fames ac ante ipsum primis in faucibus. Ut consequat ac orci eu viverra. Maecenas a commodo arcu. In ac felis laoreet massa tincidunt pellentesque. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum molestie dictum lobortis. Sed eu ligula egestas, pretium sapien venenatis, viverra risus. Nulla ac pellentesque lorem, in viverra odio. Vestibulum eget viverra turpis, sed sodales eros. Etiam fermentum tempus consectetur. Vestibulum tempor faucibus metus, eget hendrerit arcu semper in. Maecenas non dignissim lacus. Vivamus et gravida ante. Nam rutrum et velit et vulputate. Ut sed congue lectus, vitae aliquam turpis. Duis ut congue neque. Curabitur nec nisi nec tortor ullamcorper porta. Phasellus scelerisque non leo a feugiat. Donec at lobortis tortor. Sed sagittis vel metus ut dictum. Duis luctus dolor nec velit cursus, eget maximus diam suscipit. Aliquam non vehicula libero. Quisque facilisis, mauris in euismod aliquam, est erat dictum mauris, vel sagittis nisi magna vestibulum ante. Fusce a tortor tortor. Etiam vitae leo vehicula, interdum arcu vitae, tristique odio. Suspendisse et urna ipsum. Nulla urna ante, fermentum et lacus quis, feugiat pretium tellus. Vivamus interdum massa at leo consequat vestibulum. Praesent ultricies tincidunt velit eu imperdiet. Etiam tempus est ut nunc tempus, quis imperdiet metus porttitor. Integer imperdiet tortor quis elit commodo, vestibulum accumsan neque fermentum. Phasellus sollicitudin ligula ante, at ultrices ante vulputate at. Duis ut volutpat sem, sed viverra lorem. Duis vel hendrerit libero. Quisque ut ex eu quam ultricies sagittis. Cras ac fermentum eros, eu aliquet dui. Vestibulum ornare efficitur venenatis. Mauris congue porttitor arcu nec tempus. Etiam lectus lectus, faucibus aliquet quam ac, aliquet condimentum justo. Phasellus rutrum nisl ligula, a porttitor dui bibendum id. Nunc vestibulum aliquam risus nec pretium. In non rutrum tellus. Aenean at orci congue, sagittis erat et, interdum lorem. Ut lobortis convallis diam, sit amet suscipit nunc rutrum in. Suspendisse sit amet nulla eget arcu blandit dignissim. Nunc porttitor nunc a ligula fringilla, sed lobortis ipsum ultrices. In ullamcorper at ipsum eget fermentum. Sed pulvinar sollicitudin magna ac vulputate. Donec mattis eget nisi vel iaculis. Nam fringilla erat tortor. Nulla mattis dictum risus, sit amet ullamcorper nisl. Morbi vitae cursus metus, nec aliquam nibh. Sed vel feugiat ex. Donec pharetra nisl urna, eget dignissim ex ullamcorper nec. Vivamus mattis at purus eget convallis. Curabitur commodo euismod orci, non laoreet erat aliquet eget. Sed pharetra nisl eget mauris varius, eget iaculis risus malesuada. Suspendisse tincidunt dolor fermentum vehicula dictum. In sit amet magna facilisis, pulvinar turpis eget, vehicula tellus. Pellentesque sollicitudin fermentum massa quis tincidunt. Mauris ac nisl nec nisl aliquet feugiat. Integer nisi ligula, iaculis ac mollis at, tincidunt vitae diam. Cras rutrum nisi sit amet orci blandit consequat. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Donec faucibus nunc a feugiat sollicitudin. Vivamus est purus, sollicitudin elementum ultricies quis, laoreet eget lacus. Vestibulum a neque a est egestas ultrices. In lobortis in justo et tincidunt. Nam imperdiet ligula lorem, eu posuere erat consequat eget."})]})}const HP=b.memo(BP,(e,n)=>!0);function qP(e,n,r){const t=b.useRef(e!==void 0),[a,i]=b.useState(n),o=e!==void 0,s=t.current;return t.current=o,!o&&s&&a!==n&&i(n),[o?e:a,b.useCallback((...l)=>{const[c,...u]=l;let p=r==null?void 0:r(c,...u);return i(c),p},[r])]}const Qc=b.createContext(null);var Uh=Object.prototype.hasOwnProperty;function Wh(e,n,r){for(r of e.keys())if(go(r,n))return r}function go(e,n){var r,t,a;if(e===n)return!0;if(e&&n&&(r=e.constructor)===n.constructor){if(r===Date)return e.getTime()===n.getTime();if(r===RegExp)return e.toString()===n.toString();if(r===Array){if((t=e.length)===n.length)for(;t--&&go(e[t],n[t]););return t===-1}if(r===Set){if(e.size!==n.size)return!1;for(t of e)if(a=t,a&&typeof a=="object"&&(a=Wh(n,a),!a)||!n.has(a))return!1;return!0}if(r===Map){if(e.size!==n.size)return!1;for(t of e)if(a=t[0],a&&typeof a=="object"&&(a=Wh(n,a),!a)||!go(t[1],n.get(a)))return!1;return!0}if(r===ArrayBuffer)e=new Uint8Array(e),n=new Uint8Array(n);else if(r===DataView){if((t=e.byteLength)===n.byteLength)for(;t--&&e.getInt8(t)===n.getInt8(t););return t===-1}if(ArrayBuffer.isView(e)){if((t=e.byteLength)===n.byteLength)for(;t--&&e[t]===n[t];);return t===-1}if(!r||typeof e=="object"){t=0;for(r in e)if(Uh.call(e,r)&&++t&&!Uh.call(n,r)||!(r in n)||!go(e[r],n[r]))return!1;return Object.keys(n).length===t}}return e!==e&&n!==n}function FP(e){const n=Gm();return[e[0],b.useCallback(r=>{if(n())return e[1](r)},[n,e[1]])]}var Mn="top",nr="bottom",rr="right",An="left",Eg="auto",ps=[Mn,nr,rr,An],bi="start",Ko="end",JP="clippingParents",Ik="viewport",Ki="popper",zP="reference",Vh=ps.reduce(function(e,n){return e.concat([n+"-"+bi,n+"-"+Ko])},[]),Ek=[].concat(ps,[Eg]).reduce(function(e,n){return e.concat([n,n+"-"+bi,n+"-"+Ko])},[]),UP="beforeRead",WP="read",VP="afterRead",$P="beforeMain",GP="main",KP="afterMain",YP="beforeWrite",QP="write",XP="afterWrite",ZP=[UP,WP,VP,$P,GP,KP,YP,QP,XP];function Lr(e){return e.split("-")[0]}function qn(e){if(e==null)return window;if(e.toString()!=="[object Window]"){var n=e.ownerDocument;return n&&n.defaultView||window}return e}function Sa(e){var n=qn(e).Element;return e instanceof n||e instanceof Element}function _r(e){var n=qn(e).HTMLElement;return e instanceof n||e instanceof HTMLElement}function Tg(e){if(typeof ShadowRoot>"u")return!1;var n=qn(e).ShadowRoot;return e instanceof n||e instanceof ShadowRoot}var ga=Math.max,Ql=Math.min,yi=Math.round;function jd(){var e=navigator.userAgentData;return e!=null&&e.brands&&Array.isArray(e.brands)?e.brands.map(function(n){return n.brand+"/"+n.version}).join(" "):navigator.userAgent}function Tk(){return!/^((?!chrome|android).)*safari/i.test(jd())}function ki(e,n,r){n===void 0&&(n=!1),r===void 0&&(r=!1);var t=e.getBoundingClientRect(),a=1,i=1;n&&_r(e)&&(a=e.offsetWidth>0&&yi(t.width)/e.offsetWidth||1,i=e.offsetHeight>0&&yi(t.height)/e.offsetHeight||1);var o=Sa(e)?qn(e):window,s=o.visualViewport,l=!Tk()&&r,c=(t.left+(l&&s?s.offsetLeft:0))/a,u=(t.top+(l&&s?s.offsetTop:0))/i,p=t.width/a,d=t.height/i;return{width:p,height:d,top:u,right:c+p,bottom:u+d,left:c,x:c,y:u}}function Mg(e){var n=ki(e),r=e.offsetWidth,t=e.offsetHeight;return Math.abs(n.width-r)<=1&&(r=n.width),Math.abs(n.height-t)<=1&&(t=n.height),{x:e.offsetLeft,y:e.offsetTop,width:r,height:t}}function Mk(e,n){var r=n.getRootNode&&n.getRootNode();if(e.contains(n))return!0;if(r&&Tg(r)){var t=n;do{if(t&&e.isSameNode(t))return!0;t=t.parentNode||t.host}while(t)}return!1}function Vt(e){return e?(e.nodeName||"").toLowerCase():null}function pt(e){return qn(e).getComputedStyle(e)}function e3(e){return["table","td","th"].indexOf(Vt(e))>=0}function Xt(e){return((Sa(e)?e.ownerDocument:e.document)||window.document).documentElement}function Xc(e){return Vt(e)==="html"?e:e.assignedSlot||e.parentNode||(Tg(e)?e.host:null)||Xt(e)}function $h(e){return!_r(e)||pt(e).position==="fixed"?null:e.offsetParent}function n3(e){var n=/firefox/i.test(jd()),r=/Trident/i.test(jd());if(r&&_r(e)){var t=pt(e);if(t.position==="fixed")return null}var a=Xc(e);for(Tg(a)&&(a=a.host);_r(a)&&["html","body"].indexOf(Vt(a))<0;){var i=pt(a);if(i.transform!=="none"||i.perspective!=="none"||i.contain==="paint"||["transform","perspective"].indexOf(i.willChange)!==-1||n&&i.willChange==="filter"||n&&i.filter&&i.filter!=="none")return a;a=a.parentNode}return null}function ds(e){for(var n=qn(e),r=$h(e);r&&e3(r)&&pt(r).position==="static";)r=$h(r);return r&&(Vt(r)==="html"||Vt(r)==="body"&&pt(r).position==="static")?n:r||n3(e)||n}function Ag(e){return["top","bottom"].indexOf(e)>=0?"x":"y"}function fo(e,n,r){return ga(e,Ql(n,r))}function r3(e,n,r){var t=fo(e,n,r);return t>r?r:t}function Ak(){return{top:0,right:0,bottom:0,left:0}}function Pk(e){return Object.assign({},Ak(),e)}function Rk(e,n){return n.reduce(function(r,t){return r[t]=e,r},{})}var t3=function(n,r){return n=typeof n=="function"?n(Object.assign({},r.rects,{placement:r.placement})):n,Pk(typeof n!="number"?n:Rk(n,ps))};function a3(e){var n,r=e.state,t=e.name,a=e.options,i=r.elements.arrow,o=r.modifiersData.popperOffsets,s=Lr(r.placement),l=Ag(s),c=[An,rr].indexOf(s)>=0,u=c?"height":"width";if(!(!i||!o)){var p=t3(a.padding,r),d=Mg(i),m=l==="y"?Mn:An,g=l==="y"?nr:rr,y=r.rects.reference[u]+r.rects.reference[l]-o[l]-r.rects.popper[u],k=o[l]-r.rects.reference[l],f=ds(i),h=f?l==="y"?f.clientHeight||0:f.clientWidth||0:0,v=y/2-k/2,x=p[m],I=h-d[u]-p[g],S=h/2-d[u]/2+v,E=fo(x,S,I),T=l;r.modifiersData[t]=(n={},n[T]=E,n.centerOffset=E-S,n)}}function i3(e){var n=e.state,r=e.options,t=r.element,a=t===void 0?"[data-popper-arrow]":t;a!=null&&(typeof a=="string"&&(a=n.elements.popper.querySelector(a),!a)||Mk(n.elements.popper,a)&&(n.elements.arrow=a))}const o3={name:"arrow",enabled:!0,phase:"main",fn:a3,effect:i3,requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function Si(e){return e.split("-")[1]}var s3={top:"auto",right:"auto",bottom:"auto",left:"auto"};function l3(e,n){var r=e.x,t=e.y,a=n.devicePixelRatio||1;return{x:yi(r*a)/a||0,y:yi(t*a)/a||0}}function Gh(e){var n,r=e.popper,t=e.popperRect,a=e.placement,i=e.variation,o=e.offsets,s=e.position,l=e.gpuAcceleration,c=e.adaptive,u=e.roundOffsets,p=e.isFixed,d=o.x,m=d===void 0?0:d,g=o.y,y=g===void 0?0:g,k=typeof u=="function"?u({x:m,y}):{x:m,y};m=k.x,y=k.y;var f=o.hasOwnProperty("x"),h=o.hasOwnProperty("y"),v=An,x=Mn,I=window;if(c){var S=ds(r),E="clientHeight",T="clientWidth";if(S===qn(r)&&(S=Xt(r),pt(S).position!=="static"&&s==="absolute"&&(E="scrollHeight",T="scrollWidth")),S=S,a===Mn||(a===An||a===rr)&&i===Ko){x=nr;var B=p&&S===I&&I.visualViewport?I.visualViewport.height:S[E];y-=B-t.height,y*=l?1:-1}if(a===An||(a===Mn||a===nr)&&i===Ko){v=rr;var C=p&&S===I&&I.visualViewport?I.visualViewport.width:S[T];m-=C-t.width,m*=l?1:-1}}var R=Object.assign({position:s},c&&s3),O=u===!0?l3({x:m,y},qn(r)):{x:m,y};if(m=O.x,y=O.y,l){var q;return Object.assign({},R,(q={},q[x]=h?"0":"",q[v]=f?"0":"",q.transform=(I.devicePixelRatio||1)<=1?"translate("+m+"px, "+y+"px)":"translate3d("+m+"px, "+y+"px, 0)",q))}return Object.assign({},R,(n={},n[x]=h?y+"px":"",n[v]=f?m+"px":"",n.transform="",n))}function c3(e){var n=e.state,r=e.options,t=r.gpuAcceleration,a=t===void 0?!0:t,i=r.adaptive,o=i===void 0?!0:i,s=r.roundOffsets,l=s===void 0?!0:s,c={placement:Lr(n.placement),variation:Si(n.placement),popper:n.elements.popper,popperRect:n.rects.popper,gpuAcceleration:a,isFixed:n.options.strategy==="fixed"};n.modifiersData.popperOffsets!=null&&(n.styles.popper=Object.assign({},n.styles.popper,Gh(Object.assign({},c,{offsets:n.modifiersData.popperOffsets,position:n.options.strategy,adaptive:o,roundOffsets:l})))),n.modifiersData.arrow!=null&&(n.styles.arrow=Object.assign({},n.styles.arrow,Gh(Object.assign({},c,{offsets:n.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:l})))),n.attributes.popper=Object.assign({},n.attributes.popper,{"data-popper-placement":n.placement})}const u3={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:c3,data:{}};var Js={passive:!0};function p3(e){var n=e.state,r=e.instance,t=e.options,a=t.scroll,i=a===void 0?!0:a,o=t.resize,s=o===void 0?!0:o,l=qn(n.elements.popper),c=[].concat(n.scrollParents.reference,n.scrollParents.popper);return i&&c.forEach(function(u){u.addEventListener("scroll",r.update,Js)}),s&&l.addEventListener("resize",r.update,Js),function(){i&&c.forEach(function(u){u.removeEventListener("scroll",r.update,Js)}),s&&l.removeEventListener("resize",r.update,Js)}}const d3={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:p3,data:{}};var m3={left:"right",right:"left",bottom:"top",top:"bottom"};function dl(e){return e.replace(/left|right|bottom|top/g,function(n){return m3[n]})}var g3={start:"end",end:"start"};function Kh(e){return e.replace(/start|end/g,function(n){return g3[n]})}function Pg(e){var n=qn(e),r=n.pageXOffset,t=n.pageYOffset;return{scrollLeft:r,scrollTop:t}}function Rg(e){return ki(Xt(e)).left+Pg(e).scrollLeft}function f3(e,n){var r=qn(e),t=Xt(e),a=r.visualViewport,i=t.clientWidth,o=t.clientHeight,s=0,l=0;if(a){i=a.width,o=a.height;var c=Tk();(c||!c&&n==="fixed")&&(s=a.offsetLeft,l=a.offsetTop)}return{width:i,height:o,x:s+Rg(e),y:l}}function h3(e){var n,r=Xt(e),t=Pg(e),a=(n=e.ownerDocument)==null?void 0:n.body,i=ga(r.scrollWidth,r.clientWidth,a?a.scrollWidth:0,a?a.clientWidth:0),o=ga(r.scrollHeight,r.clientHeight,a?a.scrollHeight:0,a?a.clientHeight:0),s=-t.scrollLeft+Rg(e),l=-t.scrollTop;return pt(a||r).direction==="rtl"&&(s+=ga(r.clientWidth,a?a.clientWidth:0)-i),{width:i,height:o,x:s,y:l}}function Dg(e){var n=pt(e),r=n.overflow,t=n.overflowX,a=n.overflowY;return/auto|scroll|overlay|hidden/.test(r+a+t)}function Dk(e){return["html","body","#document"].indexOf(Vt(e))>=0?e.ownerDocument.body:_r(e)&&Dg(e)?e:Dk(Xc(e))}function ho(e,n){var r;n===void 0&&(n=[]);var t=Dk(e),a=t===((r=e.ownerDocument)==null?void 0:r.body),i=qn(t),o=a?[i].concat(i.visualViewport||[],Dg(t)?t:[]):t,s=n.concat(o);return a?s:s.concat(ho(Xc(o)))}function Cd(e){return Object.assign({},e,{left:e.x,top:e.y,right:e.x+e.width,bottom:e.y+e.height})}function v3(e,n){var r=ki(e,!1,n==="fixed");return r.top=r.top+e.clientTop,r.left=r.left+e.clientLeft,r.bottom=r.top+e.clientHeight,r.right=r.left+e.clientWidth,r.width=e.clientWidth,r.height=e.clientHeight,r.x=r.left,r.y=r.top,r}function Yh(e,n,r){return n===Ik?Cd(f3(e,r)):Sa(n)?v3(n,r):Cd(h3(Xt(e)))}function b3(e){var n=ho(Xc(e)),r=["absolute","fixed"].indexOf(pt(e).position)>=0,t=r&&_r(e)?ds(e):e;return Sa(t)?n.filter(function(a){return Sa(a)&&Mk(a,t)&&Vt(a)!=="body"}):[]}function y3(e,n,r,t){var a=n==="clippingParents"?b3(e):[].concat(n),i=[].concat(a,[r]),o=i[0],s=i.reduce(function(l,c){var u=Yh(e,c,t);return l.top=ga(u.top,l.top),l.right=Ql(u.right,l.right),l.bottom=Ql(u.bottom,l.bottom),l.left=ga(u.left,l.left),l},Yh(e,o,t));return s.width=s.right-s.left,s.height=s.bottom-s.top,s.x=s.left,s.y=s.top,s}function Ok(e){var n=e.reference,r=e.element,t=e.placement,a=t?Lr(t):null,i=t?Si(t):null,o=n.x+n.width/2-r.width/2,s=n.y+n.height/2-r.height/2,l;switch(a){case Mn:l={x:o,y:n.y-r.height};break;case nr:l={x:o,y:n.y+n.height};break;case rr:l={x:n.x+n.width,y:s};break;case An:l={x:n.x-r.width,y:s};break;default:l={x:n.x,y:n.y}}var c=a?Ag(a):null;if(c!=null){var u=c==="y"?"height":"width";switch(i){case bi:l[c]=l[c]-(n[u]/2-r[u]/2);break;case Ko:l[c]=l[c]+(n[u]/2-r[u]/2);break}}return l}function Yo(e,n){n===void 0&&(n={});var r=n,t=r.placement,a=t===void 0?e.placement:t,i=r.strategy,o=i===void 0?e.strategy:i,s=r.boundary,l=s===void 0?JP:s,c=r.rootBoundary,u=c===void 0?Ik:c,p=r.elementContext,d=p===void 0?Ki:p,m=r.altBoundary,g=m===void 0?!1:m,y=r.padding,k=y===void 0?0:y,f=Pk(typeof k!="number"?k:Rk(k,ps)),h=d===Ki?zP:Ki,v=e.rects.popper,x=e.elements[g?h:d],I=y3(Sa(x)?x:x.contextElement||Xt(e.elements.popper),l,u,o),S=ki(e.elements.reference),E=Ok({reference:S,element:v,strategy:"absolute",placement:a}),T=Cd(Object.assign({},v,E)),B=d===Ki?T:S,C={top:I.top-B.top+f.top,bottom:B.bottom-I.bottom+f.bottom,left:I.left-B.left+f.left,right:B.right-I.right+f.right},R=e.modifiersData.offset;if(d===Ki&&R){var O=R[a];Object.keys(C).forEach(function(q){var $=[rr,nr].indexOf(q)>=0?1:-1,J=[Mn,nr].indexOf(q)>=0?"y":"x";C[q]+=O[J]*$})}return C}function k3(e,n){n===void 0&&(n={});var r=n,t=r.placement,a=r.boundary,i=r.rootBoundary,o=r.padding,s=r.flipVariations,l=r.allowedAutoPlacements,c=l===void 0?Ek:l,u=Si(t),p=u?s?Vh:Vh.filter(function(g){return Si(g)===u}):ps,d=p.filter(function(g){return c.indexOf(g)>=0});d.length===0&&(d=p);var m=d.reduce(function(g,y){return g[y]=Yo(e,{placement:y,boundary:a,rootBoundary:i,padding:o})[Lr(y)],g},{});return Object.keys(m).sort(function(g,y){return m[g]-m[y]})}function S3(e){if(Lr(e)===Eg)return[];var n=dl(e);return[Kh(e),n,Kh(n)]}function w3(e){var n=e.state,r=e.options,t=e.name;if(!n.modifiersData[t]._skip){for(var a=r.mainAxis,i=a===void 0?!0:a,o=r.altAxis,s=o===void 0?!0:o,l=r.fallbackPlacements,c=r.padding,u=r.boundary,p=r.rootBoundary,d=r.altBoundary,m=r.flipVariations,g=m===void 0?!0:m,y=r.allowedAutoPlacements,k=n.options.placement,f=Lr(k),h=f===k,v=l||(h||!g?[dl(k)]:S3(k)),x=[k].concat(v).reduce(function(ge,ce){return ge.concat(Lr(ce)===Eg?k3(n,{placement:ce,boundary:u,rootBoundary:p,padding:c,flipVariations:g,allowedAutoPlacements:y}):ce)},[]),I=n.rects.reference,S=n.rects.popper,E=new Map,T=!0,B=x[0],C=0;C<x.length;C++){var R=x[C],O=Lr(R),q=Si(R)===bi,$=[Mn,nr].indexOf(O)>=0,J=$?"width":"height",Q=Yo(n,{placement:R,boundary:u,rootBoundary:p,altBoundary:d,padding:c}),ee=$?q?rr:An:q?nr:Mn;I[J]>S[J]&&(ee=dl(ee));var D=dl(ee),z=[];if(i&&z.push(Q[O]<=0),s&&z.push(Q[ee]<=0,Q[D]<=0),z.every(function(ge){return ge})){B=R,T=!1;break}E.set(R,z)}if(T)for(var w=g?3:1,X=function(ce){var ie=x.find(function(en){var Ge=E.get(en);if(Ge)return Ge.slice(0,ce).every(function(kn){return kn})});if(ie)return B=ie,"break"},te=w;te>0;te--){var j=X(te);if(j==="break")break}n.placement!==B&&(n.modifiersData[t]._skip=!0,n.placement=B,n.reset=!0)}}const x3={name:"flip",enabled:!0,phase:"main",fn:w3,requiresIfExists:["offset"],data:{_skip:!1}};function Qh(e,n,r){return r===void 0&&(r={x:0,y:0}),{top:e.top-n.height-r.y,right:e.right-n.width+r.x,bottom:e.bottom-n.height+r.y,left:e.left-n.width-r.x}}function Xh(e){return[Mn,rr,nr,An].some(function(n){return e[n]>=0})}function j3(e){var n=e.state,r=e.name,t=n.rects.reference,a=n.rects.popper,i=n.modifiersData.preventOverflow,o=Yo(n,{elementContext:"reference"}),s=Yo(n,{altBoundary:!0}),l=Qh(o,t),c=Qh(s,a,i),u=Xh(l),p=Xh(c);n.modifiersData[r]={referenceClippingOffsets:l,popperEscapeOffsets:c,isReferenceHidden:u,hasPopperEscaped:p},n.attributes.popper=Object.assign({},n.attributes.popper,{"data-popper-reference-hidden":u,"data-popper-escaped":p})}const C3={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:j3};function I3(e,n,r){var t=Lr(e),a=[An,Mn].indexOf(t)>=0?-1:1,i=typeof r=="function"?r(Object.assign({},n,{placement:e})):r,o=i[0],s=i[1];return o=o||0,s=(s||0)*a,[An,rr].indexOf(t)>=0?{x:s,y:o}:{x:o,y:s}}function E3(e){var n=e.state,r=e.options,t=e.name,a=r.offset,i=a===void 0?[0,0]:a,o=Ek.reduce(function(u,p){return u[p]=I3(p,n.rects,i),u},{}),s=o[n.placement],l=s.x,c=s.y;n.modifiersData.popperOffsets!=null&&(n.modifiersData.popperOffsets.x+=l,n.modifiersData.popperOffsets.y+=c),n.modifiersData[t]=o}const T3={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:E3};function M3(e){var n=e.state,r=e.name;n.modifiersData[r]=Ok({reference:n.rects.reference,element:n.rects.popper,strategy:"absolute",placement:n.placement})}const A3={name:"popperOffsets",enabled:!0,phase:"read",fn:M3,data:{}};function P3(e){return e==="x"?"y":"x"}function R3(e){var n=e.state,r=e.options,t=e.name,a=r.mainAxis,i=a===void 0?!0:a,o=r.altAxis,s=o===void 0?!1:o,l=r.boundary,c=r.rootBoundary,u=r.altBoundary,p=r.padding,d=r.tether,m=d===void 0?!0:d,g=r.tetherOffset,y=g===void 0?0:g,k=Yo(n,{boundary:l,rootBoundary:c,padding:p,altBoundary:u}),f=Lr(n.placement),h=Si(n.placement),v=!h,x=Ag(f),I=P3(x),S=n.modifiersData.popperOffsets,E=n.rects.reference,T=n.rects.popper,B=typeof y=="function"?y(Object.assign({},n.rects,{placement:n.placement})):y,C=typeof B=="number"?{mainAxis:B,altAxis:B}:Object.assign({mainAxis:0,altAxis:0},B),R=n.modifiersData.offset?n.modifiersData.offset[n.placement]:null,O={x:0,y:0};if(S){if(i){var q,$=x==="y"?Mn:An,J=x==="y"?nr:rr,Q=x==="y"?"height":"width",ee=S[x],D=ee+k[$],z=ee-k[J],w=m?-T[Q]/2:0,X=h===bi?E[Q]:T[Q],te=h===bi?-T[Q]:-E[Q],j=n.elements.arrow,ge=m&&j?Mg(j):{width:0,height:0},ce=n.modifiersData["arrow#persistent"]?n.modifiersData["arrow#persistent"].padding:Ak(),ie=ce[$],en=ce[J],Ge=fo(0,E[Q],ge[Q]),kn=v?E[Q]/2-w-Ge-ie-C.mainAxis:X-Ge-ie-C.mainAxis,Wn=v?-E[Q]/2+w+Ge+en+C.mainAxis:te+Ge+en+C.mainAxis,Sr=n.elements.arrow&&ds(n.elements.arrow),Ma=Sr?x==="y"?Sr.clientTop||0:Sr.clientLeft||0:0,bt=(q=R==null?void 0:R[x])!=null?q:0,yt=ee+kn-bt-Ma,je=ee+Wn-bt,kt=fo(m?Ql(D,yt):D,ee,m?ga(z,je):z);S[x]=kt,O[x]=kt-ee}if(s){var Jr,iu=x==="x"?Mn:An,vs=x==="x"?nr:rr,wr=S[I],Aa=I==="y"?"height":"width",bs=wr+k[iu],ys=wr-k[vs],Oi=[Mn,An].indexOf(f)!==-1,ks=(Jr=R==null?void 0:R[I])!=null?Jr:0,P=Oi?bs:wr-E[Aa]-T[Aa]-ks+C.altAxis,H=Oi?wr+E[Aa]+T[Aa]-ks-C.altAxis:ys,Z=m&&Oi?r3(P,wr,H):fo(m?P:bs,wr,m?H:ys);S[I]=Z,O[I]=Z-wr}n.modifiersData[t]=O}}const D3={name:"preventOverflow",enabled:!0,phase:"main",fn:R3,requiresIfExists:["offset"]};function O3(e){return{scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}}function L3(e){return e===qn(e)||!_r(e)?Pg(e):O3(e)}function _3(e){var n=e.getBoundingClientRect(),r=yi(n.width)/e.offsetWidth||1,t=yi(n.height)/e.offsetHeight||1;return r!==1||t!==1}function N3(e,n,r){r===void 0&&(r=!1);var t=_r(n),a=_r(n)&&_3(n),i=Xt(n),o=ki(e,a,r),s={scrollLeft:0,scrollTop:0},l={x:0,y:0};return(t||!t&&!r)&&((Vt(n)!=="body"||Dg(i))&&(s=L3(n)),_r(n)?(l=ki(n,!0),l.x+=n.clientLeft,l.y+=n.clientTop):i&&(l.x=Rg(i))),{x:o.left+s.scrollLeft-l.x,y:o.top+s.scrollTop-l.y,width:o.width,height:o.height}}function B3(e){var n=new Map,r=new Set,t=[];e.forEach(function(i){n.set(i.name,i)});function a(i){r.add(i.name);var o=[].concat(i.requires||[],i.requiresIfExists||[]);o.forEach(function(s){if(!r.has(s)){var l=n.get(s);l&&a(l)}}),t.push(i)}return e.forEach(function(i){r.has(i.name)||a(i)}),t}function H3(e){var n=B3(e);return ZP.reduce(function(r,t){return r.concat(n.filter(function(a){return a.phase===t}))},[])}function q3(e){var n;return function(){return n||(n=new Promise(function(r){Promise.resolve().then(function(){n=void 0,r(e())})})),n}}function F3(e){var n=e.reduce(function(r,t){var a=r[t.name];return r[t.name]=a?Object.assign({},a,t,{options:Object.assign({},a.options,t.options),data:Object.assign({},a.data,t.data)}):t,r},{});return Object.keys(n).map(function(r){return n[r]})}var Zh={placement:"bottom",modifiers:[],strategy:"absolute"};function ev(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return!n.some(function(t){return!(t&&typeof t.getBoundingClientRect=="function")})}function J3(e){e===void 0&&(e={});var n=e,r=n.defaultModifiers,t=r===void 0?[]:r,a=n.defaultOptions,i=a===void 0?Zh:a;return function(s,l,c){c===void 0&&(c=i);var u={placement:"bottom",orderedModifiers:[],options:Object.assign({},Zh,i),modifiersData:{},elements:{reference:s,popper:l},attributes:{},styles:{}},p=[],d=!1,m={state:u,setOptions:function(f){var h=typeof f=="function"?f(u.options):f;y(),u.options=Object.assign({},i,u.options,h),u.scrollParents={reference:Sa(s)?ho(s):s.contextElement?ho(s.contextElement):[],popper:ho(l)};var v=H3(F3([].concat(t,u.options.modifiers)));return u.orderedModifiers=v.filter(function(x){return x.enabled}),g(),m.update()},forceUpdate:function(){if(!d){var f=u.elements,h=f.reference,v=f.popper;if(ev(h,v)){u.rects={reference:N3(h,ds(v),u.options.strategy==="fixed"),popper:Mg(v)},u.reset=!1,u.placement=u.options.placement,u.orderedModifiers.forEach(function(C){return u.modifiersData[C.name]=Object.assign({},C.data)});for(var x=0;x<u.orderedModifiers.length;x++){if(u.reset===!0){u.reset=!1,x=-1;continue}var I=u.orderedModifiers[x],S=I.fn,E=I.options,T=E===void 0?{}:E,B=I.name;typeof S=="function"&&(u=S({state:u,options:T,name:B,instance:m})||u)}}}},update:q3(function(){return new Promise(function(k){m.forceUpdate(),k(u)})}),destroy:function(){y(),d=!0}};if(!ev(s,l))return m;m.setOptions(c).then(function(k){!d&&c.onFirstUpdate&&c.onFirstUpdate(k)});function g(){u.orderedModifiers.forEach(function(k){var f=k.name,h=k.options,v=h===void 0?{}:h,x=k.effect;if(typeof x=="function"){var I=x({state:u,name:f,instance:m,options:v}),S=function(){};p.push(I||S)}})}function y(){p.forEach(function(k){return k()}),p=[]}return m}}const z3=J3({defaultModifiers:[C3,A3,u3,d3,T3,x3,D3,o3]}),U3=["enabled","placement","strategy","modifiers"];function W3(e,n){if(e==null)return{};var r={},t=Object.keys(e),a,i;for(i=0;i<t.length;i++)a=t[i],!(n.indexOf(a)>=0)&&(r[a]=e[a]);return r}const V3={name:"applyStyles",enabled:!1,phase:"afterWrite",fn:()=>{}},$3={name:"ariaDescribedBy",enabled:!0,phase:"afterWrite",effect:({state:e})=>()=>{const{reference:n,popper:r}=e.elements;if("removeAttribute"in n){const t=(n.getAttribute("aria-describedby")||"").split(",").filter(a=>a.trim()!==r.id);t.length?n.setAttribute("aria-describedby",t.join(",")):n.removeAttribute("aria-describedby")}},fn:({state:e})=>{var n;const{popper:r,reference:t}=e.elements,a=(n=r.getAttribute("role"))==null?void 0:n.toLowerCase();if(r.id&&a==="tooltip"&&"setAttribute"in t){const i=t.getAttribute("aria-describedby");if(i&&i.split(",").indexOf(r.id)!==-1)return;t.setAttribute("aria-describedby",i?`${i},${r.id}`:r.id)}}},G3=[];function Lk(e,n,r={}){let{enabled:t=!0,placement:a="bottom",strategy:i="absolute",modifiers:o=G3}=r,s=W3(r,U3);const l=b.useRef(o),c=b.useRef(),u=b.useCallback(()=>{var k;(k=c.current)==null||k.update()},[]),p=b.useCallback(()=>{var k;(k=c.current)==null||k.forceUpdate()},[]),[d,m]=FP(b.useState({placement:a,update:u,forceUpdate:p,attributes:{},styles:{popper:{},arrow:{}}})),g=b.useMemo(()=>({name:"updateStateModifier",enabled:!0,phase:"write",requires:["computeStyles"],fn:({state:k})=>{const f={},h={};Object.keys(k.elements).forEach(v=>{f[v]=k.styles[v],h[v]=k.attributes[v]}),m({state:k,styles:f,attributes:h,update:u,forceUpdate:p,placement:k.placement})}}),[u,p,m]),y=b.useMemo(()=>(go(l.current,o)||(l.current=o),l.current),[o]);return b.useEffect(()=>{!c.current||!t||c.current.setOptions({placement:a,strategy:i,modifiers:[...y,g,V3]})},[i,a,g,t,y]),b.useEffect(()=>{if(!(!t||e==null||n==null))return c.current=z3(e,n,Object.assign({},s,{placement:a,strategy:i,modifiers:[...y,$3,g]})),()=>{c.current!=null&&(c.current.destroy(),c.current=void 0,m(k=>Object.assign({},k,{attributes:{},styles:{popper:{}}})))}},[t,e,n]),d}var K3=function(){},Y3=K3;const Q3=wi(Y3),nv=()=>{};function X3(e){return e.button===0}function Z3(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}const ml=e=>e&&("current"in e?e.current:e),rv={click:"mousedown",mouseup:"mousedown",pointerup:"pointerdown"};function _k(e,n=nv,{disabled:r,clickTrigger:t="click"}={}){const a=b.useRef(!1),i=b.useRef(!1),o=b.useCallback(c=>{const u=ml(e);Q3(!!u,"ClickOutside captured a close event but does not have a ref to compare it to. useClickOutside(), should be passed a ref that resolves to a DOM node"),a.current=!u||Z3(c)||!X3(c)||!!Uo(u,c.target)||i.current,i.current=!1},[e]),s=Ne(c=>{const u=ml(e);u&&Uo(u,c.target)&&(i.current=!0)}),l=Ne(c=>{a.current||n(c)});b.useEffect(()=>{var c,u;if(r||e==null)return;const p=os(ml(e)),d=p.defaultView||window;let m=(c=d.event)!=null?c:(u=d.parent)==null?void 0:u.event,g=null;rv[t]&&(g=Zr(p,rv[t],s,!0));const y=Zr(p,t,o,!0),k=Zr(p,t,h=>{if(h===m){m=void 0;return}l(h)});let f=[];return"ontouchstart"in p.documentElement&&(f=[].slice.call(p.body.children).map(h=>Zr(h,"mousemove",nv))),()=>{g==null||g(),y(),k(),f.forEach(h=>h())}},[e,r,t,o,s,l])}function eR(e){const n={};return Array.isArray(e)?(e==null||e.forEach(r=>{n[r.name]=r}),n):e||n}function nR(e={}){return Array.isArray(e)?e:Object.keys(e).map(n=>(e[n].name=n,e[n]))}function Nk({enabled:e,enableEvents:n,placement:r,flip:t,offset:a,fixed:i,containerPadding:o,arrowElement:s,popperConfig:l={}}){var c,u,p,d,m;const g=eR(l.modifiers);return Object.assign({},l,{placement:r,enabled:e,strategy:i?"fixed":l.strategy,modifiers:nR(Object.assign({},g,{eventListeners:{enabled:n,options:(c=g.eventListeners)==null?void 0:c.options},preventOverflow:Object.assign({},g.preventOverflow,{options:o?Object.assign({padding:o},(u=g.preventOverflow)==null?void 0:u.options):(p=g.preventOverflow)==null?void 0:p.options}),offset:{options:Object.assign({offset:a},(d=g.offset)==null?void 0:d.options)},arrow:Object.assign({},g.arrow,{enabled:!!s,options:Object.assign({},(m=g.arrow)==null?void 0:m.options,{element:s})}),flip:Object.assign({enabled:!!t},g.flip)}))})}const rR=["children","usePopper"];function tR(e,n){if(e==null)return{};var r={},t=Object.keys(e),a,i;for(i=0;i<t.length;i++)a=t[i],!(n.indexOf(a)>=0)&&(r[a]=e[a]);return r}const aR=()=>{};function Bk(e={}){const n=b.useContext(Qc),[r,t]=hd(),a=b.useRef(!1),{flip:i,offset:o,rootCloseEvent:s,fixed:l=!1,placement:c,popperConfig:u={},enableEventListeners:p=!0,usePopper:d=!!n}=e,m=(n==null?void 0:n.show)==null?!!e.show:n.show;m&&!a.current&&(a.current=!0);const g=S=>{n==null||n.toggle(!1,S)},{placement:y,setMenu:k,menuElement:f,toggleElement:h}=n||{},v=Lk(h,f,Nk({placement:c||y||"bottom-start",enabled:d,enableEvents:p??m,offset:o,flip:i,fixed:l,arrowElement:r,popperConfig:u})),x=Object.assign({ref:k||aR,"aria-labelledby":h==null?void 0:h.id},v.attributes.popper,{style:v.styles.popper}),I={show:m,placement:y,hasShown:a.current,toggle:n==null?void 0:n.toggle,popper:d?v:null,arrowProps:d?Object.assign({ref:t},v.attributes.arrow,{style:v.styles.arrow}):{}};return _k(f,g,{clickTrigger:s,disabled:!m}),[x,I]}function Hk(e){let{children:n,usePopper:r=!0}=e,t=tR(e,rR);const[a,i]=Bk(Object.assign({},t,{usePopper:r}));return A.jsx(A.Fragment,{children:n(a,i)})}Hk.displayName="DropdownMenu";const Xl={prefix:String(Math.round(Math.random()*1e10)),current:0},qk=Ye.createContext(Xl),iR=Ye.createContext(!1);let oR=!!(typeof window<"u"&&window.document&&window.document.createElement),Wu=new WeakMap;function sR(e=!1){let n=b.useContext(qk),r=b.useRef(null);if(r.current===null&&!e){var t,a;let i=(a=Ye.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED)===null||a===void 0||(t=a.ReactCurrentOwner)===null||t===void 0?void 0:t.current;if(i){let o=Wu.get(i);o==null?Wu.set(i,{id:n.current,state:i.memoizedState}):i.memoizedState!==o.state&&(n.current=o.id,Wu.delete(i))}r.current=++n.current}return r.current}function lR(e){let n=b.useContext(qk);n===Xl&&!oR&&console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");let r=sR(!!e),t=`react-aria${n.prefix}`;return e||`${t}-${r}`}function cR(e){let n=Ye.useId(),[r]=b.useState(gR()),t=r?"react-aria":`react-aria${Xl.prefix}`;return e||`${t}-${n}`}const uR=typeof Ye.useId=="function"?cR:lR;function pR(){return!1}function dR(){return!0}function mR(e){return()=>{}}function gR(){return typeof Ye.useSyncExternalStore=="function"?Ye.useSyncExternalStore(mR,pR,dR):b.useContext(iR)}const Fk=e=>{var n;return((n=e.getAttribute("role"))==null?void 0:n.toLowerCase())==="menu"},tv=()=>{};function Jk(){const e=uR(),{show:n=!1,toggle:r=tv,setToggle:t,menuElement:a}=b.useContext(Qc)||{},i=b.useCallback(s=>{r(!n,s)},[n,r]),o={id:e,ref:t||tv,onClick:i,"aria-expanded":!!n};return a&&Fk(a)&&(o["aria-haspopup"]=!0),[o,{show:n,toggle:r}]}function zk({children:e}){const[n,r]=Jk();return A.jsx(A.Fragment,{children:e(n,r)})}zk.displayName="DropdownToggle";const fR=["eventKey","disabled","onClick","active","as"];function hR(e,n){if(e==null)return{};var r={},t=Object.keys(e),a,i;for(i=0;i<t.length;i++)a=t[i],!(n.indexOf(a)>=0)&&(r[a]=e[a]);return r}function Uk({key:e,href:n,active:r,disabled:t,onClick:a}){const i=b.useContext(ka),o=b.useContext(Hc),{activeKey:s}=o||{},l=Fo(e,n),c=r==null&&e!=null?Fo(s)===l:r;return[{onClick:Ne(p=>{t||(a==null||a(p),i&&!p.isPropagationStopped()&&i(l,p))}),"aria-disabled":t||void 0,"aria-selected":c,[Ti("dropdown-item")]:""},{isActive:c}]}const Wk=b.forwardRef((e,n)=>{let{eventKey:r,disabled:t,onClick:a,active:i,as:o=Zm}=e,s=hR(e,fR);const[l]=Uk({key:r,href:s.href,disabled:t,onClick:a,active:i});return A.jsx(o,Object.assign({},s,{ref:n},l))});Wk.displayName="DropdownItem";function av(){const e=b0(),n=b.useRef(null),r=b.useCallback(t=>{n.current=t,e()},[e]);return[n,r]}function ms({defaultShow:e,show:n,onSelect:r,onToggle:t,itemSelector:a=`* [${Ti("dropdown-item")}]`,focusFirstItemOnShow:i,placement:o="bottom-start",children:s}){const l=Bc(),[c,u]=qP(n,e,t),[p,d]=av(),m=p.current,[g,y]=av(),k=g.current,f=a0(c),h=b.useRef(null),v=b.useRef(!1),x=b.useContext(ka),I=b.useCallback((R,O,q=O==null?void 0:O.type)=>{u(R,{originalEvent:O,source:q})},[u]),S=Ne((R,O)=>{r==null||r(R,O),I(!1,O,"select"),O.isPropagationStopped()||x==null||x(R,O)}),E=b.useMemo(()=>({toggle:I,placement:o,show:c,menuElement:m,toggleElement:k,setMenu:d,setToggle:y}),[I,o,c,m,k,d,y]);m&&f&&!c&&(v.current=m.contains(m.ownerDocument.activeElement));const T=Ne(()=>{k&&k.focus&&k.focus()}),B=Ne(()=>{const R=h.current;let O=i;if(O==null&&(O=p.current&&Fk(p.current)?"keyboard":!1),O===!1||O==="keyboard"&&!/^key.+$/.test(R))return;const q=Kr(p.current,a)[0];q&&q.focus&&q.focus()});b.useEffect(()=>{c?B():v.current&&(v.current=!1,T())},[c,v,T,B]),b.useEffect(()=>{h.current=null});const C=(R,O)=>{if(!p.current)return null;const q=Kr(p.current,a);let $=q.indexOf(R)+O;return $=Math.max(0,Math.min($,q.length)),q[$]};return SE(b.useCallback(()=>l.document,[l]),"keydown",R=>{var O,q;const{key:$}=R,J=R.target,Q=(O=p.current)==null?void 0:O.contains(J),ee=(q=g.current)==null?void 0:q.contains(J);if(/input|textarea/i.test(J.tagName)&&($===" "||$!=="Escape"&&Q||$==="Escape"&&J.type==="search")||!Q&&!ee||$==="Tab"&&(!p.current||!c))return;h.current=R.type;const z={originalEvent:R,source:R.type};switch($){case"ArrowUp":{const w=C(J,-1);w&&w.focus&&w.focus(),R.preventDefault();return}case"ArrowDown":if(R.preventDefault(),!c)u(!0,z);else{const w=C(J,1);w&&w.focus&&w.focus()}return;case"Tab":Z1(J.ownerDocument,"keyup",w=>{var X;(w.key==="Tab"&&!w.target||!((X=p.current)!=null&&X.contains(w.target)))&&u(!1,z)},{once:!0});break;case"Escape":$==="Escape"&&(R.preventDefault(),R.stopPropagation()),u(!1,z);break}}),A.jsx(ka.Provider,{value:S,children:A.jsx(Qc.Provider,{value:E,children:s})})}ms.displayName="Dropdown";ms.Menu=Hk;ms.Toggle=zk;ms.Item=Wk;const Og=b.createContext({});Og.displayName="DropdownContext";const Vk=b.forwardRef(({className:e,bsPrefix:n,as:r="hr",role:t="separator",...a},i)=>(n=G(n,"dropdown-divider"),A.jsx(r,{ref:i,className:V(e,n),role:t,...a})));Vk.displayName="DropdownDivider";const $k=b.forwardRef(({className:e,bsPrefix:n,as:r="div",role:t="heading",...a},i)=>(n=G(n,"dropdown-header"),A.jsx(r,{ref:i,className:V(e,n),role:t,...a})));$k.displayName="DropdownHeader";const Gk=b.forwardRef(({bsPrefix:e,className:n,eventKey:r,disabled:t=!1,onClick:a,active:i,as:o=ng,...s},l)=>{const c=G(e,"dropdown-item"),[u,p]=Uk({key:r,href:s.href,disabled:t,onClick:a,active:i});return A.jsx(o,{...s,...u,ref:l,className:V(n,c,p.isActive&&"active",t&&"disabled")})});Gk.displayName="DropdownItem";const Kk=b.forwardRef(({className:e,bsPrefix:n,as:r="span",...t},a)=>(n=G(n,"dropdown-item-text"),A.jsx(r,{ref:a,className:V(e,n),...t})));Kk.displayName="DropdownItemText";const Lg=b.createContext(null);Lg.displayName="InputGroupContext";function Yk(e,n){return e}function Qk(e,n,r){const t=r?"top-end":"top-start",a=r?"top-start":"top-end",i=r?"bottom-end":"bottom-start",o=r?"bottom-start":"bottom-end",s=r?"right-start":"left-start",l=r?"right-end":"left-end",c=r?"left-start":"right-start",u=r?"left-end":"right-end";let p=e?o:i;return n==="up"?p=e?a:t:n==="end"?p=e?u:c:n==="start"?p=e?l:s:n==="down-centered"?p="bottom":n==="up-centered"&&(p="top"),p}const Xk=b.forwardRef(({bsPrefix:e,className:n,align:r,rootCloseEvent:t,flip:a=!0,show:i,renderOnMount:o,as:s="div",popperConfig:l,variant:c,...u},p)=>{let d=!1;const m=b.useContext(Qt),g=G(e,"dropdown-menu"),{align:y,drop:k,isRTL:f}=b.useContext(Og);r=r||y;const h=b.useContext(Lg),v=[];if(r)if(typeof r=="object"){const R=Object.keys(r);if(R.length){const O=R[0],q=r[O];d=q==="start",v.push(`${g}-${O}-${q}`)}}else r==="end"&&(d=!0);const x=Qk(d,k,f),[I,{hasShown:S,popper:E,show:T,toggle:B}]=Bk({flip:a,rootCloseEvent:t,show:i,usePopper:!m&&v.length===0,offset:[0,2],popperConfig:l,placement:x});if(I.ref=Br(Yk(p),I.ref),zo(()=>{T&&(E==null||E.update())},[T]),!S&&!o&&!h)return null;typeof s!="string"&&(I.show=T,I.close=()=>B==null?void 0:B(!1),I.align=r);let C=u.style;return E!=null&&E.placement&&(C={...u.style,...I.style},u["x-placement"]=E.placement),A.jsx(s,{...u,...I,style:C,...(v.length||m)&&{"data-bs-popper":"static"},className:V(n,g,T&&"show",d&&`${g}-end`,c&&`${g}-${c}`,...v)})});Xk.displayName="DropdownMenu";const Zk=b.forwardRef(({bsPrefix:e,split:n,className:r,childBsPrefix:t,as:a=Jt,...i},o)=>{const s=G(e,"dropdown-toggle"),l=b.useContext(Qc);t!==void 0&&(i.bsPrefix=t);const[c]=Jk();return c.ref=Br(c.ref,Yk(o)),A.jsx(a,{className:V(r,s,n&&`${s}-split`,(l==null?void 0:l.show)&&"show"),...c,...i})});Zk.displayName="DropdownToggle";const eS=b.forwardRef((e,n)=>{const{bsPrefix:r,drop:t="down",show:a,className:i,align:o="start",onSelect:s,onToggle:l,focusFirstItemOnShow:c,as:u="div",navbar:p,autoClose:d=!0,...m}=Wm(e,{show:"onToggle"}),g=b.useContext(Lg),y=G(r,"dropdown"),k=Um(),f=E=>d===!1?E==="click":d==="inside"?E!=="rootClose":d==="outside"?E!=="select":!0,h=Ne((E,T)=>{var B,C;!((B=T.originalEvent)==null||(C=B.target)==null)&&C.classList.contains("dropdown-toggle")&&T.source==="mousedown"||(T.originalEvent.currentTarget===document&&(T.source!=="keydown"||T.originalEvent.key==="Escape")&&(T.source="rootClose"),f(T.source)&&(l==null||l(E,T)))}),x=Qk(o==="end",t,k),I=b.useMemo(()=>({align:o,drop:t,isRTL:k}),[o,t,k]),S={down:y,"down-centered":`${y}-center`,up:"dropup","up-centered":"dropup-center dropup",end:"dropend",start:"dropstart"};return A.jsx(Og.Provider,{value:I,children:A.jsx(ms,{placement:x,show:a,onSelect:s,onToggle:h,focusFirstItemOnShow:c,itemSelector:`.${y}-item:not(.disabled):not(:disabled)`,children:g?m.children:A.jsx(u,{...m,ref:n,className:V(i,a&&"show",S[t])})})})});eS.displayName="Dropdown";const _a=Object.assign(eS,{Toggle:Zk,Menu:Xk,Item:Gk,ItemText:Kk,Divider:Vk,Header:$k});function vR(){return document.title="Personality",ae(Rn,{gap:4,children:[M("h1",{className:"text-center",style:{marginBottom:"1rem"},children:"My personality 😎"}),ae(_a,{children:[M(_a.Toggle,{variant:"success",id:"dropdown-basic",children:"Dropdown Button"}),ae(_a.Menu,{children:[M(_a.Item,{href:"#/action-1",children:"Action"}),M(_a.Item,{href:"#/action-2",children:"Another action"}),M(_a.Item,{href:"#/action-3",children:"Something else"})]})]}),M("div",{children:"Nam semper consequat maximus. Donec eu felis quis lacus rhoncus rutrum eget at ligula. Fusce eu erat eu libero sollicitudin interdum. Curabitur imperdiet neque ex, et viverra dui auctor in. Curabitur et ex non risus suscipit euismod a sit amet eros. Praesent aliquam elit non justo ultrices scelerisque. In ut orci pharetra, maximus tortor sit amet, molestie massa. Donec at neque interdum, dapibus sem sed, convallis leo. In hac habitasse platea dictumst. Vestibulum non libero aliquet, posuere magna eu, fermentum ipsum. Suspendisse a justo ac ex vulputate dictum nec sed nisi. Nam ex nibh, efficitur eget luctus quis, pellentesque ut tortor. Nam sed augue sed lacus ullamcorper semper quis nec neque. Curabitur imperdiet tortor et auctor semper. Morbi laoreet eget tortor ac ultrices. Quisque eget magna fermentum, fringilla ipsum ut, iaculis urna. Nunc quam nibh, posuere quis aliquet vel, finibus id ex. Vestibulum sollicitudin purus enim, semper volutpat orci fermentum vel. Pellentesque at enim interdum, bibendum ipsum a, sodales risus. Etiam augue lectus, accumsan eu ornare vel, porttitor a nulla. Duis non fringilla tellus. Nunc id sapien ut lorem scelerisque accumsan tristique sit amet nunc. Sed elit velit, vestibulum sed nisi non, vehicula ornare nunc. Aenean vitae semper ipsum. Aliquam tempus quis purus et ultrices. Nunc ac suscipit orci, eu sollicitudin lorem. Sed sodales id lorem id accumsan. Sed eleifend tortor vitae pellentesque pellentesque. Vestibulum imperdiet, nunc eu tempor egestas, lorem erat tincidunt nisi, sed imperdiet massa leo sit amet risus. Nulla quis quam ac magna dignissim gravida. Etiam porttitor maximus nibh viverra scelerisque. Nulla pretium, tortor eget feugiat vehicula, justo urna tincidunt mauris, nec bibendum lacus quam non lorem. Quisque at semper dui. Curabitur vulputate nisi orci, et iaculis est consequat quis. Vivamus imperdiet, velit ut bibendum sodales, turpis arcu placerat lacus, at sagittis neque odio quis ante. Quisque non tincidunt enim. Aenean a massa lobortis, fermentum ante eu, imperdiet enim. Praesent vel tortor elit. Quisque at ipsum eros. Donec scelerisque consequat lacinia. Praesent ac faucibus quam. Sed et eros vel purus iaculis hendrerit sed a felis. Nunc tempus hendrerit consectetur. Maecenas vel mollis mauris, ac tempor eros. Aliquam tincidunt dui augue, id faucibus nisi gravida in. Donec pharetra felis non justo faucibus lacinia. Phasellus mollis tellus leo, et tempus ex feugiat quis. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed ac ex ut erat convallis lacinia eu a mi. Morbi euismod, mi sit amet porttitor tristique, eros nulla vestibulum risus, vel rhoncus magna risus quis turpis. Sed vitae convallis ligula. Integer molestie lacus eget orci congue, vitae rutrum turpis tincidunt. Etiam euismod iaculis sem. Etiam rutrum mauris lorem, blandit condimentum mauris malesuada a. Morbi pharetra auctor luctus. Nunc nunc est, suscipit eget mauris vitae, gravida molestie eros. Phasellus venenatis tortor finibus luctus fermentum. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nunc posuere leo id metus fringilla, nec semper magna varius. Morbi euismod scelerisque nibh, eu ullamcorper neque finibus in. Sed et viverra risus, sit amet placerat libero. Donec orci tortor, blandit quis lorem nec, congue volutpat leo. Curabitur suscipit ante ut risus semper ultricies. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. In ac pharetra erat, eget aliquam leo. Nulla facilisi. Curabitur pharetra interdum turpis eget ultricies. Pellentesque gravida magna vitae est tempor, quis luctus velit porta. Aliquam erat volutpat. Nunc egestas eget erat vitae semper. Nam ac tortor fringilla, commodo nisl non, molestie purus. Proin molestie nibh id neque euismod, non fermentum tellus rutrum. Nam elementum est cursus porta porttitor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris eget sagittis lectus, quis facilisis justo. Proin laoreet nisi consequat mauris ultrices maximus. Donec sed sollicitudin ligula. Nulla in laoreet ante, ut sodales nisl. In in nunc turpis. Praesent arcu erat, molestie ac tristique ac, efficitur a ipsum. Donec augue libero, molestie nec lorem a, ultrices posuere sem. Aliquam erat volutpat. Duis tincidunt pharetra enim vel semper. Duis nec porttitor lectus. Maecenas cursus dolor non posuere imperdiet. Cras dapibus, leo sed placerat interdum, mi quam fringilla nisl, ac euismod ex est et leo. Integer sed ante nulla. Nullam et nulla ac ipsum varius dapibus. Quisque vitae arcu id velit aliquet rhoncus eget a mauris. Maecenas dictum maximus venenatis. Phasellus nec suscipit libero, eu lobortis lectus. Praesent tincidunt, dolor sed varius luctus, sapien neque dictum orci, porttitor condimentum quam felis ac orci. Sed elit felis, ultrices cursus dui sed, semper consectetur turpis. Suspendisse sodales dolor at lectus congue interdum. Vestibulum pharetra odio enim, vel sagittis arcu laoreet luctus. Mauris lobortis lacinia augue, at tincidunt nisi feugiat vitae. Sed ligula metus, rhoncus lobortis turpis a, efficitur pulvinar sem. Aliquam nunc sem, molestie eu nisl in, mollis lobortis augue. Donec metus dolor, porta in nibh ac, vestibulum elementum lacus. Nullam magna quam, malesuada vitae dolor id, cursus molestie lectus. Proin vitae urna at lorem tempus efficitur at ac odio. Vivamus id leo ac augue ultricies interdum. Aliquam in sapien vulputate dui malesuada auctor. Sed mauris justo, malesuada nec facilisis a, vestibulum a tortor. Mauris sem nisi, dapibus id ullamcorper mollis, dictum varius felis. In eu sapien efficitur, tincidunt enim posuere, scelerisque sapien. Mauris porttitor pulvinar tincidunt. Cras vel interdum urna. Cras eleifend, nibh dapibus posuere fringilla, justo sem ultricies sem, semper rhoncus massa urna sed mauris. Praesent tincidunt ligula lacus, non semper arcu efficitur eget. Integer quis est in ipsum bibendum lacinia. Suspendisse cursus, enim in blandit convallis, elit nunc porttitor ipsum, in congue metus enim et turpis. Mauris purus ex, lobortis et gravida eu, feugiat sed urna. Pellentesque hendrerit pellentesque odio sit amet pulvinar. In hac habitasse platea dictumst. Duis orci elit, luctus eu massa ut, fermentum fermentum arcu. Sed vel nulla non enim tempus iaculis. Suspendisse potenti. Morbi nisl metus, pellentesque non euismod a, mollis sit amet leo. Vivamus nec nisl a velit mattis efficitur. Phasellus vitae lobortis ligula, id aliquam est. Vivamus blandit volutpat rhoncus. Aenean id malesuada metus. Proin sed mi est. Ut a consectetur tellus, non consequat ex. Pellentesque vel neque orci. Nullam eget sem risus. Praesent interdum, magna vitae placerat feugiat, nisl lectus mollis metus, eget feugiat elit justo eget nibh. Donec consectetur ipsum nunc, quis rutrum dolor eleifend sit amet. Aliquam in vestibulum nisl. Maecenas volutpat augue magna, quis interdum mauris aliquet eget. Vivamus quis turpis urna. Pellentesque aliquet tellus felis, vel vehicula purus consectetur sit amet. Pellentesque ultricies ipsum turpis, sit amet fermentum elit interdum vel. Pellentesque fermentum elit quis arcu imperdiet, sed porttitor elit facilisis. Morbi dapibus congue urna ut mollis. Ut venenatis in augue et fermentum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Pellentesque sed porta diam, non ullamcorper risus. Nulla facilisi. Pellentesque volutpat varius leo nec posuere. Integer in consectetur ante. Cras ac felis porta, vehicula mauris at, semper mauris. Proin placerat sapien lorem, in vehicula elit suscipit eget. Pellentesque euismod convallis nunc, eu volutpat lectus ultricies a. Suspendisse maximus libero dui, auctor rhoncus nibh blandit blandit. Aliquam cursus, enim in tincidunt auctor, dolor felis mollis justo, eget ultrices leo lacus nec quam. Nunc dolor nibh, placerat vitae hendrerit quis, pellentesque eget justo. Integer suscipit at sem a vestibulum. Nulla leo odio, lobortis et feugiat vel, fermentum at enim. Fusce in bibendum leo. Interdum et malesuada fames ac ante ipsum primis in faucibus. Ut consequat ac orci eu viverra. Maecenas a commodo arcu. In ac felis laoreet massa tincidunt pellentesque. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum molestie dictum lobortis. Sed eu ligula egestas, pretium sapien venenatis, viverra risus. Nulla ac pellentesque lorem, in viverra odio. Vestibulum eget viverra turpis, sed sodales eros. Etiam fermentum tempus consectetur. Vestibulum tempor faucibus metus, eget hendrerit arcu semper in. Maecenas non dignissim lacus. Vivamus et gravida ante. Nam rutrum et velit et vulputate. Ut sed congue lectus, vitae aliquam turpis. Duis ut congue neque. Curabitur nec nisi nec tortor ullamcorper porta. Phasellus scelerisque non leo a feugiat. Donec at lobortis tortor. Sed sagittis vel metus ut dictum. Duis luctus dolor nec velit cursus, eget maximus diam suscipit. Aliquam non vehicula libero. Quisque facilisis, mauris in euismod aliquam, est erat dictum mauris, vel sagittis nisi magna vestibulum ante. Fusce a tortor tortor. Etiam vitae leo vehicula, interdum arcu vitae, tristique odio. Suspendisse et urna ipsum. Nulla urna ante, fermentum et lacus quis, feugiat pretium tellus. Vivamus interdum massa at leo consequat vestibulum. Praesent ultricies tincidunt velit eu imperdiet. Etiam tempus est ut nunc tempus, quis imperdiet metus porttitor. Integer imperdiet tortor quis elit commodo, vestibulum accumsan neque fermentum. Phasellus sollicitudin ligula ante, at ultrices ante vulputate at. Duis ut volutpat sem, sed viverra lorem. Duis vel hendrerit libero. Quisque ut ex eu quam ultricies sagittis. Cras ac fermentum eros, eu aliquet dui. Vestibulum ornare efficitur venenatis. Mauris congue porttitor arcu nec tempus. Etiam lectus lectus, faucibus aliquet quam ac, aliquet condimentum justo. Phasellus rutrum nisl ligula, a porttitor dui bibendum id. Nunc vestibulum aliquam risus nec pretium. In non rutrum tellus. Aenean at orci congue, sagittis erat et, interdum lorem. Ut lobortis convallis diam, sit amet suscipit nunc rutrum in. Suspendisse sit amet nulla eget arcu blandit dignissim. Nunc porttitor nunc a ligula fringilla, sed lobortis ipsum ultrices. In ullamcorper at ipsum eget fermentum. Sed pulvinar sollicitudin magna ac vulputate. Donec mattis eget nisi vel iaculis. Nam fringilla erat tortor. Nulla mattis dictum risus, sit amet ullamcorper nisl. Morbi vitae cursus metus, nec aliquam nibh. Sed vel feugiat ex. Donec pharetra nisl urna, eget dignissim ex ullamcorper nec. Vivamus mattis at purus eget convallis. Curabitur commodo euismod orci, non laoreet erat aliquet eget. Sed pharetra nisl eget mauris varius, eget iaculis risus malesuada. Suspendisse tincidunt dolor fermentum vehicula dictum. In sit amet magna facilisis, pulvinar turpis eget, vehicula tellus. Pellentesque sollicitudin fermentum massa quis tincidunt. Mauris ac nisl nec nisl aliquet feugiat. Integer nisi ligula, iaculis ac mollis at, tincidunt vitae diam. Cras rutrum nisi sit amet orci blandit consequat. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Donec faucibus nunc a feugiat sollicitudin. Vivamus est purus, sollicitudin elementum ultricies quis, laoreet eget lacus. Vestibulum a neque a est egestas ultrices. In lobortis in justo et tincidunt. Nam imperdiet ligula lorem, eu posuere erat consequat eget."})]})}const bR=b.memo(vR,(e,n)=>!0),nS=b.forwardRef(({bsPrefix:e,bg:n="primary",pill:r=!1,text:t,className:a,as:i="span",...o},s)=>{const l=G(e,"badge");return A.jsx(i,{ref:s,...o,className:V(a,l,r&&"rounded-pill",t&&`text-${t}`,n&&`bg-${n}`)})});nS.displayName="Badge";const rS=[{postId:"coding-java-1",src:"config/blog/2020-09/coding-java-1.md",title:"Java 開發筆記（一）",description:"Java 開發筆記 - 安裝所需程式",date:160015806e4,thumbnail:"blog/2020-09/coding-java-1/thumbnail.svg",tags:["Java","Tools"]},{postId:"coding-java-2",src:"config/blog/2020-09/coding-java-2.md",title:"Java 開發筆記（二）",description:"Java 開發筆記 - 建立 project",date:160015806e4,thumbnail:"blog/2020-09/coding-java-2/thumbnail.svg",tags:["Java","Maven","Tools"],previousPostId:"coding-java-1"},{postId:"coding-java-3",src:"config/blog/2020-09/coding-java-3.md",title:"Java 開發筆記（三）",description:"Java 開發筆記 - Java 基礎知識",date:160015806e4,thumbnail:"blog/2020-09/coding-java-3/thumbnail.svg",tags:["Java"],previousPostId:"coding-java-2"},{postId:"coding-java-4",src:"config/blog/2020-09/coding-java-4.md",title:"Java 開發筆記（四）",description:"Java 開發筆記 - Spring 基礎知識",date:160015806e4,thumbnail:"blog/2020-09/coding-java-4/thumbnail.svg",tags:["Java","Spring"],previousPostId:"coding-java-3"},{postId:"coding-java-5",src:"config/blog/2020-09/coding-java-5.md",title:"Java 開發筆記（五）",description:"Java 開發筆記 - 幾款超有用必學 3rd party libraries",date:160015806e4,thumbnail:"blog/2020-09/coding-java-5/thumbnail.svg",tags:["Java"],previousPostId:"coding-java-4"},{postId:"coding-java-6",src:"config/blog/2020-09/coding-java-6.md",title:"Java 開發筆記（六）",description:"Java 開發筆記 - Dependency Management",date:160015806e4,thumbnail:"blog/2020-09/coding-java-6/thumbnail.svg",tags:["Java","Maven","Tools"],previousPostId:"coding-java-5"},{postId:"spring-mapstruct",src:"config/blog/2020-09/spring-mapstruct.md",title:"在 Spring Boot + JPA 項目中使用 MapStruct",description:"如何喺 Spring Boot + JPA 項目對 entities 使用 MapStruct、object copy，並同時學習 JPA／Hibernate 既 entity class best practices",date:16008444e5,thumbnail:"blog/2020-09/spring-mapstruct/thumbnail.png",tags:["Java","Spring"]},{postId:"web-scraping-with-jsoup",src:"config/blog/2020-09/web-scraping-with-jsoup.md",title:"網頁抓取（一） - jsoup",description:"如何使用 jsoup 抓取網頁，喺網頁獲取有用資訊",date:1601106158420,thumbnail:"blog/2020-09/web-scraping-with-jsoup/thumbnail.svg",tags:["Java","HTML"]},{postId:"git-basics",src:"config/blog/2020-09/git-basics.md",title:"Git 基本操作",description:"如何使用 Git 既基本 commands 進行版本控制",date:1601209992512,thumbnail:"blog/2020-09/git-basics/thumbnail.png",tags:["Git"]},{postId:"web-scraping-with-selenide",src:"config/blog/2020-10/web-scraping-with-selenide.md",title:"網頁抓取（二） - Selenium/Selenide",description:"如何使用 Selenium/Selenide 抓取網頁，喺網頁獲取有用資訊",date:1602282648516,thumbnail:"blog/2020-10/web-scraping-with-selenide/thumbnail.png",tags:["Java","HTML"],previousPostId:"web-scraping-with-jsoup"},{postId:"writing-chrome-extensions",src:"config/blog/2020-10/writing-chrome-extensions.md",title:"寫第一個 Chrome Extension",description:"教你寫 Chrome extensions 方便自己瀏覽某啲網站",date:1602321277331,thumbnail:"blog/2020-10/writing-chrome-extensions/thumbnail.png",tags:["HTML","JavaScript"]},{postId:"using-lombok",src:"config/blog/2020-10/using-lombok.md",title:"在 Java 項目中使用 Lombok",description:"如何利用 Lombok annotations 簡化部分 Java class 代碼",date:1602606188503,thumbnail:"blog/2020-10/using-lombok/thumbnail.png",tags:["Java"],previousPostId:"coding-java-5"},{postId:"new-jdk-features-after-8",src:"config/blog/2020-10/new-jdk-features-after-8.md",title:"Java 8 之後既新功能",description:"介紹 JDK 8 之後——JDK 9 至 17 既重要新功能",date:1602745960926,thumbnail:"blog/2020-10/new-jdk-features-after-8/thumbnail.png",tags:["Java"],previousPostId:"coding-java-3"},{postId:"react-web-1",src:"config/blog/2020-10/react-web-1.md",title:"React JS 網頁開發筆記（一）",description:"React JS 網頁開發筆記 - 安裝所需程式",date:1603721666940,thumbnail:"blog/2020-10/react-web-1/thumbnail.svg",tags:["HTML","JavaScript","React"]},{postId:"pull-data-with-retrofit",src:"config/blog/2021-04/pull-data-with-retrofit.md",title:"Retrofit HTTP Client",description:"使用 Retrofit 發起 HTTP 請求，下載 Jumbo Computer 硬件報價資訊",date:1618335185389,thumbnail:"blog/2021-04/pull-data-with-retrofit/thumbnail.svg",tags:["Java"]},{postId:"web-security",src:"config/blog/2021-05/web-security.md",title:"網頁安全",description:"Microlearning：網頁安全學習筆記 - 比較 cookie 同 local storage、session ID 同 access token",date:1620943103004,thumbnail:"blog/2021-05/web-security/thumbnail.svg",tags:["Web"]},{postId:"react-calculator",src:"config/blog/2021-05/react-calculator.md",title:"用 React 寫 calculator",description:"React JS 網頁開發筆記 - 由零用 HTML、JavaScript、CSS 寫 calculator",date:1621208270609,thumbnail:"blog/2021-05/react-calculator/thumbnail.svg",tags:["HTML","JavaScript","React"],previousPostId:"react-web-1"},{postId:"ffmpeg-basics",src:"config/blog/2021-05/ffmpeg-basics.md",title:"FFmpeg 基本功能",description:"用 FFmpeg 處理 MKV、MP4 影片",date:1621680521007,thumbnail:"blog/2021-05/ffmpeg-basics/thumbnail.svg",tags:["Tools"]},{postId:"js-advanced-syntax",src:"config/blog/2021-05/js-advanced-syntax.md",title:"進階 JavaScript",description:"JavaScript 進階語法、功能一覽",date:1622097654576,thumbnail:"blog/2021-05/js-advanced-syntax/thumbnail.svg",tags:["JavaScript"]},{postId:"task-scheduling-issue",src:"config/blog/2021-06/task-scheduling-issue.md",title:"低級 task scheduling 錯誤",description:"從錯誤中學習 - Production 場上面遇到既低級 task scheduling 錯誤",date:1622834317140,thumbnail:"blog/2021-06/task-scheduling-issue/thumbnail.svg",tags:["Problem solving"]},{postId:"java-collections-generic-type-covariance",src:"config/blog/2021-06/java-collections-generic-type-covariance.md",title:"Java collections 進階 - generic type 同 covariance",description:"Java 支持繼承（extends/implements），但如果作為 collections（例如 List）既 generic type，用法又係咪一樣？",date:1623238901298,thumbnail:"blog/2021-06/java-collections-generic-type-covariance/thumbnail.svg",tags:["Java"]},{postId:"sql-basics-sql-server",src:"config/blog/2021-08/sql-basics-sql-server.md",title:"SQL 基礎 - SQL Server",description:"SQL Server 既基本 SQL 語法",date:1628525244290,thumbnail:"blog/2021-08/sql-basics-sql-server/thumbnail.svg",tags:["SQL"]},{postId:"charles-proxy",src:"config/blog/2021-08/charles-proxy.md",title:"Charles 代理伺服器",description:"如何使用 Charles 代理伺服器截取 HTTP／HTTPS（SSL）通訊內容",date:1629015445943,thumbnail:"blog/2021-08/charles-proxy/thumbnail.png",tags:["Web","Tools"]},{postId:"java-8-group-list-items",src:"config/blog/2021-09/java-8-group-list-items.md",title:"Java 8：Group 起一個 List<Item>",description:"應該用咩方法去 group 起一個 List<Item> 變成 Map<String, List<Item>>？小心因為 null key 而出錯！",date:1630571718451,thumbnail:"blog/2021-09/java-8-group-list-items/thumbnail.svg",tags:["Java"]},{postId:"spring-aop",src:"config/blog/2021-09/spring-aop.md",title:"Spring 基礎功能：AOP",description:"利用 Spring 底層 AOP 技術截取 method call 資訊或者取締原有返回結果",date:1631169562982,thumbnail:"blog/2021-09/spring-aop/thumbnail.svg",tags:["Java","Spring"],previousPostId:"coding-java-4"},{postId:"java-test-overview",src:"config/blog/2021-09/java-test-overview.md",title:"Java 測試（一）：簡介",description:"簡單介紹一下 Java 既 testing 種類同埋 libraries",date:1631246726719,thumbnail:"blog/2021-09/java-test-overview/thumbnail.svg",tags:["Java","Testing"]},{postId:"java-test-junit",src:"config/blog/2021-09/java-test-junit.md",title:"Java 測試（二）：JUnit",description:"動手用 JUnit 寫 unit test cases",date:1631246726719,thumbnail:"blog/2021-09/java-test-junit/thumbnail.svg",tags:["Java","Testing"],previousPostId:"java-test-overview"},{postId:"java-test-mockito",src:"config/blog/2021-09/java-test-mockito.md",title:"Java 測試（三）：Mockito",description:"動手用 Mockito 寫 unit test cases",date:1631246726719,thumbnail:"blog/2021-09/java-test-mockito/thumbnail.svg",tags:["Java","Testing"],previousPostId:"java-test-overview"},{postId:"java-logging",src:"config/blog/2021-09/java-logging.md",title:"Java Logging",description:"如何用 Slf4j 以及 Logback 為普通 Java 程式以及 Spring Boot 項目做 logging",date:1631501446037,thumbnail:"blog/2021-09/java-logging/thumbnail.svg",tags:["Java"]},{postId:"markdown-basics",src:"config/blog/2021-09/markdown-basics.md",title:"用 Markdown 寫 doc",description:"Markdown 係一種純文字既檔案，可以用簡單符號表達文字格式，用黎寫 doc 就岩曬！",date:1631526176065,thumbnail:"blog/2021-09/markdown-basics/thumbnail.svg",tags:["Tools"]},{postId:"nodejs-cryptojs",src:"config/blog/2021-09/nodejs-cryptojs.md",title:"NodeJS + CryptoJS 加密解密",description:"寫一個簡單既 NodeJS 加密解密小工具",date:1631601768706,thumbnail:"blog/2021-09/nodejs-cryptojs/thumbnail.svg",tags:["JavaScript"]},{postId:"html-webp",src:"config/blog/2021-09/html-webp.md",title:"HTML 網頁顯示 WebP 圖片",description:"Google 既 WebP 圖片格式比起最廣泛使用既圖片格式，可以大大縮減檔案大小而又唔太影響質素，亦適合用喺 HTML 網頁上面",date:1631635463271,thumbnail:"blog/2021-09/html-webp/thumbnail.svg",tags:["HTML","Tools"]},{postId:"kafka-cli",src:"config/blog/2021-09/kafka-cli.md",title:"透過 CLI 學習 Kafka",description:"用 Kafka CLI 學習同埋測試 Kafka 既基本 publish-subscribe、MQ 功能",date:1631736004796,thumbnail:"blog/2021-09/kafka-cli/thumbnail.svg",tags:["Tools"]},{postId:"jpa-usage",src:"config/blog/2021-09/jpa-usage.md",title:"JPA／Hibernate 使用方式",description:"一篇文章展示喺 Spring Boot 項目裡面 JPA／Hibernate 既各種使用方式",date:1631784392508,thumbnail:"blog/2021-09/jpa-usage/thumbnail.svg",tags:["Java","Spring"],previousPostId:"coding-java-4"},{postId:"spring-caching-redis",src:"config/blog/2021-09/spring-caching-redis.md",title:"Spring 項目使用 Redis 做 caching",description:"如何喺 Spring Boot + JPA 項目裡面使用 Redis 做 caching，減少訪問 RDMS database",date:1631910922979,thumbnail:"blog/2021-09/spring-caching-redis/thumbnail.svg",tags:["Java","Spring","Tools"],previousPostId:"jpa-usage"},{postId:"spring-graphql-api",src:"config/blog/2021-09/spring-graphql-api.md",title:"Spring 項目暴露 GraphQL API",description:"如何喺 Spring Boot + JPA 項目暴露 GraphQL API，允許將多個 API calls 包裝成 1 個",date:1632203409896,thumbnail:"blog/2021-09/spring-graphql-api/thumbnail.svg",tags:["Java","Spring"]},{postId:"java-8-hashmap",src:"config/blog/2021-09/java-8-hashmap.md",title:"Java 8 HashMap 原理",description:"拆解 Java 8 既 HashMap 點運作，同時了解 Object class 既 hashCode、equals methods",date:1632633327505,thumbnail:"blog/2021-09/java-8-hashmap/thumbnail.svg",tags:["Java"],previousPostId:"coding-java-3"},{postId:"spring-boot-elk-logging",src:"config/blog/2021-10/spring-boot-elk-logging.md",title:"Spring 項目使用 ELK 做 logging",description:"如何喺 Spring Boot 項目連接 ELK stack（即 Elasticsearch、Logstash、Kibana），方便我地睇 log 同搵 log",date:1635678086168,thumbnail:"blog/2021-10/spring-boot-elk-logging/thumbnail.svg",tags:["Java","Spring","Tools"],previousPostId:"java-logging"},{postId:"spring-resttemplate-trap",src:"config/blog/2021-10/spring-resttemplate-trap.md",title:"Spring JSON 變 XML response 問題",description:"經一事長一智！Spring Boot 項目使用 RestTemplate 令 HTTP response 變左 XML 格式",date:1635967874570,thumbnail:"blog/2021-10/spring-resttemplate-trap/thumbnail.svg",tags:["Java","Spring","Problem solving"]},{postId:"java-remote-debug",src:"config/blog/2021-11/java-remote-debug.md",title:"Remote debug Java 程式",description:"如何 debug 遠端既 Java 程式",date:1637509836764,thumbnail:"blog/2021-11/java-remote-debug/thumbnail.svg",tags:["Java"]},{postId:"spring-cloud-config-git",src:"config/blog/2022-06/spring-cloud-config-git.md",title:"Spring Cloud Config——使用獨立既 Git 配置 repo",description:"如何利用 Spring Cloud Config Server、Spring Cloud Config Client 架構，將 Spring 配置放到另一個獨立既 Git repo，集中配置",date:1654429047701,thumbnail:"blog/2022-06/spring-cloud-config-git/thumbnail.svg",tags:["Java","Spring","Git"]},{postId:"curl-basics",src:"config/blog/2022-07/curl-basics.md",title:"cURL 基本操作",description:"如何使用 cURL 既基本 commands 黎發出 HTTP 請求",date:1656662996874,thumbnail:"blog/2022-07/curl-basics/thumbnail.svg",tags:["Web","Tools"]},{postId:"redis-basics",src:"config/blog/2022-07/redis-basics.md",title:"透過 Redis CLI 學習 Redis",description:"用 Redis CLI 學習 Redis 既基本 CRUD 讀寫功能",date:1657410017667,thumbnail:"blog/2022-07/redis-basics/thumbnail.svg",tags:["Tools"],previousPostId:"spring-caching-redis"},{postId:"java-test-powermock",src:"config/blog/2022-07/java-test-powermock.md",title:"Java 測試（四）：PowerMock",description:"動手用 PowerMock 寫 unit test cases",date:1657656508560,thumbnail:"blog/2022-07/java-test-powermock/thumbnail.svg",tags:["Java","Testing"],previousPostId:"java-test-overview"},{postId:"java-test-wiremock",src:"config/blog/2022-07/java-test-wiremock.md",title:"Java 測試（五）：WireMock",description:"動手用 WireMock 寫 integration test cases",date:1657984014406,thumbnail:"blog/2022-07/java-test-powermock/thumbnail.svg",tags:["Java","Testing"],previousPostId:"java-test-overview"},{postId:"docker-basics",src:"config/blog/2022-07/docker-basics.md",title:"Docker 基本操作",description:"如何使用 Docker 既基本 commands 喺本地部署 infrastructure 工具，方便開發",date:1658562960514,thumbnail:"blog/2022-07/docker-basics/thumbnail.svg",tags:["Tools"]},{postId:"spring-webflux-1",src:"config/blog/2022-07/spring-webflux-1.md",title:"Spring Webflux（一）",description:"開始嘗試用 Spring Webflux 實現 reactive programming",date:1658781595516,thumbnail:"blog/2022-07/spring-webflux-1/thumbnail.svg",tags:["Java","Spring"]},{postId:"batch-download-files",src:"config/blog/2022-08/batch-download-files.md",title:"批量下載檔案",description:"用 cURL、wget、Java 自動下載過百個檔案",date:1661884151313,thumbnail:"blog/2022-08/batch-download-files/thumbnail.svg",tags:["Java","HTML","Tools"]},{postId:"spring-cloud-config-jdbc",src:"config/blog/2023-01/spring-cloud-config-jdbc.md",title:"Spring Cloud Config——使用 RDBMS（JDBC）存放配置",description:"如何利用 Spring Cloud Config Server、Spring Cloud Config Client 架構，將 Spring 配置放到 RDBMS（JDBC），集中配置。另外仲有 Spring Cloud Config Server 既 bug 發現！",date:1673810149233,thumbnail:"blog/2023-01/spring-cloud-config-jdbc/thumbnail.svg",tags:["Java","Spring"],previousPostId:"spring-cloud-config-git"},{postId:"spring-azure-service-bus",src:"config/blog/2023-04/spring-azure-service-bus.md",title:"Spring 項目中訂閱 Azure Service Bus",description:"如何喺 Spring Boot 項目利用 Microsoft 既 Azure Service Bus 發送、接收訊息。另外仲有 Spring Cloud Stream 既 bug 發現！",date:1681141701231,thumbnail:"blog/2023-04/spring-azure-service-bus/thumbnail.svg",tags:["Java","Spring","Tools","Cloud"]},{postId:"kubectl-basics",src:"config/blog/2023-04/kubectl-basics.md",title:"kubectl 基本操作",description:"如何使用 kubectl 既基本 commands 管理 K8s 資源",date:1682658340478,thumbnail:"blog/2023-04/kubectl-basics/thumbnail.svg",tags:["Tools","Cloud"]},{postId:"jmh-benchmark",src:"config/blog/2023-05/jmh-benchmark.md",title:"使用 JMH benchmark Java／Spring Boot app",description:"如何使用 JMH 黎 benchmark 一個 Spring Boot app",date:1683227033286,thumbnail:"blog/2023-05/jmh-benchmark/thumbnail.svg",tags:["Java","Spring","Testing"]},{postId:"picocli",src:"config/blog/2023-05/picocli.md",title:"Picocli：開發 Java CLI 工具",description:"如何使用 Picocli 黎開發基於 Java 既 CLI 工具",date:1686469806475,thumbnail:"blog/2023-05/picocli/thumbnail.svg",tags:["Java","Tools"]},{postId:"custom-jre",src:"config/blog/2023-06/custom-jre.md",title:"客製化 JRE",description:"利用 JDK 所提供既 jlink 指令黎客製化 Java Runtime Environment（JRE）裡面既 modules 以及執行檔",date:1687014046432,thumbnail:"blog/2023-06/custom-jre/thumbnail.svg",tags:["Java","Tools"]},{postId:"cve-2023-20860",src:"config/blog/2023-07/cve-2023-20860.md",title:"Spring Security 漏洞 CVE-2023-20860",description:"重現 Spring Security 既嚴重安全漏洞 CVE-2023-20860，並且解決呢個漏洞",date:1688916002668,thumbnail:"blog/2023-07/cve-2023-20860/thumbnail.svg",tags:["Java","Spring","Problem solving"]},{postId:"cve-2023-34034",src:"config/blog/2023-08/cve-2023-34034.md",title:"Spring Security 漏洞 CVE-2023-34034",description:"重現 Spring Security 既嚴重安全漏洞 CVE-2023-34034，並且解決呢個漏洞",date:1691309443822,thumbnail:"blog/2023-08/cve-2023-34034/thumbnail.svg",tags:["Java","Spring","Problem solving"],previousPostId:"cve-2023-20860"},{postId:"java-spring-http-clients",src:"config/blog/2023-11/java-spring-http-clients.md",title:"Java Spring Boot／Cloud HTTP clients",description:"Java Spring 項目既 HTTP clients，例如 Java HttpClient、Spring RestTemplate、WebClient、Spring 6.1 最新既 RestClient，以及 Spring Cloud OpenFeign",date:1700297156100,thumbnail:"blog/2023-11/java-spring-http-clients/thumbnail.svg",tags:["Java","Spring"]},{postId:"support-101",src:"config/blog/2023-11/support-101.md",title:"Support 指引",description:"當 users 搵我地 troubleshoot 問題或者提出新需求，我地可以點樣引導佢地提供資料？",date:1700396330543,thumbnail:"blog/2023-11/support-101/thumbnail.svg",tags:["Problem solving"]},{postId:"google-lens-sort",src:"config/blog/2024-01/google-lens-sort.md",title:"寫 Chrome extension 排序 Google Lens 搜尋結果",description:"因為而家 Google 以圖搜尋既搜尋結果並冇排序，我地會學下用 JavaScript 寫一個 Chrome extension 去自動排序結果",date:1704313791083,thumbnail:"blog/2024-01/google-lens-sort/thumbnail.svg",tags:["HTML","JavaScript","Tools"],previousPostId:"writing-chrome-extensions"},{postId:"spring-cloud-stream-rabbitmq",src:"config/blog/2024-01/spring-cloud-stream-rabbitmq.md",title:"Spring 項目中訂閱 RabbitMQ",description:"如何喺 Spring Boot 項目利用 Spring Cloud Stream + RabbitMQ 發送、接收訊息",date:1706355463848,thumbnail:"blog/2024-01/spring-cloud-stream-rabbitmq/thumbnail.svg",tags:["Java","Spring","Tools"],previousPostId:"spring-azure-service-bus"},{postId:"railway-free-db-paas",src:"config/blog/2024-02/railway-free-db-paas.md",title:"Railway 免費 DB PaaS",description:"Railway 提供免登入既免費 MySQL、PostgreSQL、MongoDB、Redis database PaaS 雲服務，我地就連 Docker Desktop 都唔洗裝！",date:1707818306181,thumbnail:"blog/2024-02/railway-free-db-paas/thumbnail.svg",tags:["Tools"]},{postId:"jira-101",src:"config/blog/2024-02/jira-101.md",title:"Jira 使用指引",description:"如何使用 Jira 管理 IT 項目問題，以及應用喺 agile sprints",date:1707999255869,thumbnail:"blog/2024-02/jira-101/thumbnail.svg",tags:["Tools"]},{postId:"java-test-cucumber",src:"config/blog/2024-02/java-test-cucumber.md",title:"Java 測試（六）：Cucumber",description:"動手用 Cucumber 幫 Spring JPA 項目寫 BDD test cases",date:1708858534561,thumbnail:"blog/2024-02/java-test-cucumber/thumbnail.svg",tags:["Java","Spring","Testing"],previousPostId:"java-test-overview"},{postId:"maven-advanced",src:"config/blog/2024-02/maven-advanced.md",title:"進階 Maven",description:"Maven 進階知識、功能",date:1708884371673,thumbnail:"blog/2024-02/maven-advanced/thumbnail.svg",tags:["Java","Maven","Tools"],previousPostId:"coding-java-6"},{postId:"linux-basic-commands",src:"config/blog/2024-03/linux-basic-commands.md",title:"Linux 基本指令",description:"Linux OS 既實用基本指令",date:1709256793768,thumbnail:"blog/2024-03/linux-basic-commands/thumbnail.svg",tags:["Tools"]},{postId:"spring-boot-micrometer-tracing",src:"config/blog/2024-03/spring-boot-micrometer-tracing.md",title:"Spring Boot 3 micrometer tracing",description:"實測 Spring Boot 3 既 micrometer tracing，應用喺 Spring RestTemplate、WebClient、Spring 6.1 最新既 RestClient，以及 Spring Cloud OpenFeign",date:1709405891844,thumbnail:"blog/2024-03/spring-boot-micrometer-tracing/thumbnail.svg",tags:["Java","Spring"],previousPostId:"java-spring-http-clients"},{postId:"outbox-inbox-patterns",src:"config/blog/2024-03/outbox-inbox-patterns.md",title:"可靠訊息傳遞：Outbox & inbox patterns",description:"關於達至可靠訊息傳遞既 transactional outbox & inbox pattern 既筆記",date:1710671909880,thumbnail:"blog/2024-03/outbox-inbox-patterns/thumbnail.svg",tags:["Design","Problem solving"]},{postId:"bruno-http-api-test",src:"config/blog/2024-03/bruno-http-api-test.md",title:"Bruno HTTP API 測試工具",description:"用 Bruno 取代 Postman 測試 HTTP APIs",date:1711266217210,thumbnail:"blog/2024-03/bruno-http-api-test/thumbnail.svg",tags:["Web","Tools"],previousPostId:"curl-basics"},{postId:"spring-boot-dockerfile",src:"config/blog/2024-03/spring-boot-dockerfile.md",title:"Dockerfile：Spring Boot 項目",description:"幫 Spring Boot 項目寫 Dockerfile，再喺 Docker Desktop 既 Kubernetes 用基本既 K8s Deployment 啟動",date:1711884805995,thumbnail:"blog/2024-03/spring-boot-dockerfile/thumbnail.svg",tags:["Java","Spring","Tools","Cloud"]},{postId:"spring-boot-external-config",src:"config/blog/2024-04/spring-boot-external-config.md",title:"Spring Boot 配置方式",description:"搞清楚 Java Spring Boot 項目既幾種配置方式",date:1712407135718,thumbnail:"blog/2024-04/spring-boot-external-config/thumbnail.svg",tags:["Java","Spring"]},{postId:"java-snyk-scan",src:"config/blog/2024-04/java-snyk-scan.md",title:"用 Snyk 掃瞄 Java 項目",description:"用 Snyk 搵出 Java 項目潛在既資訊安全漏洞（CVE）",date:1713715293704,thumbnail:"blog/2024-04/java-snyk-scan/thumbnail.svg",tags:["Java","Tools"]},{postId:"rabbitmq-basics",src:"config/blog/2024-04/rabbitmq-basics.md",title:"RabbitMQ 基礎",description:"透過 RabbitMQ management UI 學習 RabbitMQ 既 queue、各種 exchanges，以及 dead letter exchange",date:1714320040890,thumbnail:"blog/2024-04/rabbitmq-basics/thumbnail.svg",tags:["Tools"]},{postId:"spring-boot-openapi",src:"config/blog/2024-05/spring-boot-openapi.md",title:"Spring Boot 項目使用 Swagger/OpenAPI",description:"如何喺 Spring Boot 項目利用 API-first 既方式開發 REST APIs，並且使用 Swagger UI 頁面測試 REST APIs",date:1714738956465,thumbnail:"blog/2024-05/spring-boot-openapi/thumbnail.svg",tags:["Java","Spring"]},{postId:"nexus-maven-repo",src:"config/blog/2024-05/nexus-maven-repo.md",title:"自建 Nexus Maven repo",description:"自己搭建 Sonatype Nexus Maven private repository，用黎儲存自己既 Maven artifacts，亦作為 Maven Central 既 proxy/cache server",date:1715526076367,thumbnail:"blog/2024-05/nexus-maven-repo/thumbnail.svg",tags:["Java","Maven","Tools"]},{postId:"jmeter-perf-test",src:"config/blog/2024-05/jmeter-perf-test.md",title:"JMeter performance testing",description:"動手用 JMeter 做 API performance testing",date:1715607922155,thumbnail:"blog/2024-05/jmeter-perf-test/thumbnail.svg",tags:["Testing","Tools"]},{postId:"write-maven-shared-lib",src:"config/blog/2024-05/write-maven-shared-lib.md",title:"寫一個 Maven Java shared library",description:"由零寫一個 Maven Java shared library，由 coding、unit testing、code coverage report 以至喺另一個項目使用佢",date:1715790569766,thumbnail:"blog/2024-05/write-maven-shared-lib/thumbnail.svg",tags:["Java","Maven"]},{postId:"react-with-vite",src:"config/blog/2024-05/react-with-vite.md",title:"用 Vite 建立 React 項目",description:"用 Vite 取代 Create-React-App 建立 React 項目，然後部署到 GitHub Pages",date:1716736581773,thumbnail:"blog/2024-05/react-with-vite/thumbnail.svg",tags:["JavaScript","React"],previousPostId:"react-web-1"}].map(e=>({...e,path:"/blog/"+e.postId})).reverse();function yR(){return document.title="Blog",ae(Rn,{gap:4,className:"text-center",children:[M(Qe,{children:M("h1",{style:{marginBottom:"1rem"},children:"Blog posts 🐧"})}),M(Qe,{xs:1,sm:2,md:3,className:"justify-content-center g-4",children:rS.map(({title:e,description:n,thumbnail:r,tags:t,path:a},i)=>M(fr,{children:ae(We,{as:Or,to:a,css:jn`
								height: 100%;
								text-decoration: none;
								transition: 250ms;
								transform: translate(
										${Math.random()>.5?"":"-"}0.35rem,
										${Math.random()>.5?"":"-"}0.35rem
									)
									rotate(${i%2==0?"":"-"}${Math.random()*1.25}deg);

								&:hover {
									transform: scale(1.075);
									background: rgba(255, 255, 255, 0.4) !important;
									box-shadow: 0 0 15px rgba(0, 0, 0, 0.25) !important;

									img {
										opacity: 1 !important;
									}
								}
							`,children:[M(We.Img,{src:r,className:"object-fit-scale",style:{padding:"1rem",opacity:.75,transition:"250ms"}}),ae(We.Body,{children:[M(We.Title,{className:"text-center",children:M("strong",{children:e})}),M(We.Text,{className:"text-start text-muted",children:n})]}),M(Rn,{direction:"horizontal",gap:1,className:"p-3",children:t.map(o=>M(nS,{bg:"secondary",children:o}))})]})},i))})]})}const kR=b.memo(yR,(e,n)=>!0),SR=`# 1 安裝所需程式\r
\r
## 1.1 Java Development Kit（JDK）（必須）\r
\r
Programming language + JVM（用黎執行 Java bytecode）。\r
\r
去 [Oracle JDK 官網](https://www.oracle.com/java/technologies/downloads/#java8) 下載，需要 Oracle 帳號。\r
\r
或者直接去 [Michael 既 Google Drive](https://drive.google.com/file/d/1vo73oJDDQSX2CDMjy6nqoTYClZ-ZWXwo/view?usp=sharing)。\r
\r
亦可以用 Azul 推出既 OpenJDK 既 Zulu builds：\r
\r
-   [Azul OpenJDK Zulu builds](https://www.azul.com/downloads/?version=java-8-lts&os=windows&architecture=x86-64-bit&package=jdk)\r
-   [Azul OpenJDK 8u322 Zulu build（ZIP 檔）](https://cdn.azul.com/zulu/bin/zulu8.60.0.21-ca-jdk8.0.322-win_x64.zip)\r
\r
需要執行 + 安裝。\r
\r
建議至少安裝 Java 8 或 11。新版 Eclipse 可能需要 Java 11 先用到（但可以用 JDK 8 黎 compile code）。\r
\r
### 1.1.1 Double-click 執行 JAR 檔\r
\r
如果安裝左唔同版本既 JDKs，又想 double-click JAR 檔（\`.jar\`）可以用自己揀既 JDK 黎開，可以用下面既 registry 檔案黎直接改。\r
\r
1. 先指定用 JDK 裡面既 \`bin/javaw.exe\` 檔作為開啟 \`.jar\` 檔既默認程式。\r
1. 根據 JDK 安裝路徑修改下面既內容，然後儲存做一個 \`.reg\` 檔。\r
1. Double-click 呢個檔案。\r
\r
如果你既 JDK 係用 \`.exe\` 檔安裝既（適用於 Oracle JDK，其他唔清楚）：\r
\r
\`\`\`plaintext\r
Windows Registry Editor Version 5.00\r
\r
[HKEY_CLASSES_ROOT\\jarfile\\shell\\open\\command]\r
@="\\"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_333\\\\bin\\\\javaw.exe\\" -jar \\"%1\\" %*"\r
\`\`\`\r
\r
如果你既 JDK 係 portable 安裝（解壓縮 \`.zip\` 檔），未必會有上面既 registry，咁就建議改以下既 registry：\r
\r
\`\`\`plaintext\r
Windows Registry Editor Version 5.00\r
\r
[HKEY_CLASSES_ROOT\\Applications\\javaw.exe\\shell\\open\\command]\r
@="\\"C:\\\\Users\\\\Michael\\\\Desktop\\\\Apps\\\\zulu11\\\\bin\\\\javaw.exe\\" -jar \\"%1\\" %*"\r
\`\`\`\r
\r
完成之後我地以後 double-click 黎開 JAR 檔既時候就會用到我地指定既 JDK。\r
\r
參考資料：\r
\r
-   [StackOverflow - How to run .jar file by double click on Windows 7 64-bit?](https://stackoverflow.com/questions/8511063/how-to-run-jar-file-by-double-click-on-windows-7-64-bit)\r
-   [Difference between Java.exe and Javaw.exe](https://howtodoinjava.com/java/basics/difference-between-java-exe-and-javaw-exe/)\r
\r
---\r
\r
## 1.2 Eclipse IDE（必須）\r
\r
強大既 Java 專用 editor，用黎方便開發，可以 highlight syntax、compile 以及 debug with breakpoints。\r
\r
[Eclipse IDE for Enterprise Java and Web Developers 官方下載](https://www.eclipse.org/downloads/packages/release/2022-06/r/eclipse-ide-enterprise-java-and-web-developers)\r
\r
喺 Download Links 下面選擇返相應平台下載，然後解壓縮就得，執行之前必須先安裝 JRE 或 JDK，否則會開唔到。\r
\r
### 1.2.1 選擇 JDK\r
\r
去 menu bar > Window > Preferences > 左邊 filter text 打 \`jre\` > 揀 Installed JREs > Add... > Standard VM > JRE home 揀返 JDK 既 folder > 再揀返 default 既 JDK。\r
\r
---\r
\r
### 1.2.2 關於 perspective\r
\r
Perspective 都算係 Eclipse 既獨有設置，用黎畀我地根據唔同情境而快速改變 IDE 顯示緊既資訊排版。\r
\r
常用 perspectives：\r
\r
| Perspective | 幾時用                      |\r
| ----------- | --------------------------- |\r
| Java        | 改 code 既時候用            |\r
| Debug       | Debug program 既時候用      |\r
| Git         | 搞 version control 既時候用 |\r
\r
一個 perspective 由多個 views 組成。\r
\r
比如喺 Java perspective 之下，左手邊就係 Package Explorer，中間就係 source code，右邊就有 Outline 等等；\r
喺 Debug perspective 之下，見到既野就會唔同，例如右邊會顯示 breakpoints。\r
\r
Java perspective：\r
\r
![](blog/2020-09/coding-java-1/eclipse-java-perspective.png)\r
\r
Debug perspective：\r
\r
![](blog/2020-09/coding-java-1/eclipse-debug-perspective.png)\r
\r
Git perspective：\r
\r
![](blog/2020-09/coding-java-1/eclipse-git-perspective.png)\r
\r
#### 1.2.2.1 Perspective 建議配置\r
\r
Menu bar 下面，打橫既果條滿曬 icons 既 tool bar 既最右邊，有兩三個 icons，用黎 control perspectives，right click 落去，撳 Show Text。\r
如果顯示緊 Java EE，咁就切換成 Java。如果冇顯示 Java 而只有 Java EE，咁就去 menu bar > Window > Perspective > Open Perspective > Other... > Java。\r
\r
---\r
\r
### 1.2.3 關於 view\r
\r
View 係組成整個 Eclipse UI perspective 既組件。\r
\r
如果 mess up 左啲 views，搞到錯位，或者唔見左，可以去 menu bar > Window > Perspective > Reset Perspective...。\r
\r
#### 1.2.3.1 View 建議配置\r
\r
針對 Java perspective，建議採用以下配置（其實同默認配置相近）：\r
\r
左方：\r
\r
-   Package Explorer\r
-   JUnit（行 test 會自動 show 出黎）\r
\r
下方：\r
\r
-   Problems\r
-   Javadoc\r
-   Search\r
-   Coverage\r
-   Console\r
\r
右方（建議長期縮小，有需要時先開返出黎）：\r
\r
-   Outline\r
\r
如果冇顯示 Console，去 menu bar > Window > Show View > Console。Console 係用黎睇 program 既 log（用 \`System.out.println()\` 或 \`System.err.println()\`）。\r
\r
---\r
\r
### 1.2.4 Shortcuts 快捷鍵\r
\r
以下 shortcuts 都係喺 Java class 度打。\r
輸入法要英文。\r
\r
| 用途                 | Shortcut keys / 步驟                                                   | 解釋                                                                                                                                                                                                                                                                                                                                           |\r
| -------------------- | ---------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| Content assist       | Ctrl+Space                                                             | 針對而家 caret 左邊既 code 給予提示同幫助。喺 class 名度打既話（caret 可以喺 class 名中間或尾端），會顯示 caret 前既 class 名開頭既 classes（範圍係 JDK 內建 classes + 呢個 project 既 3rd party libraries 既 classes）；喺 method 開括號 \`(\` 後打的話，會顯示該 method 既 Javadoc。撳左之後可以用 left arrow 或 right arrow 黎調校 caret 位置 |\r
| 一般 log             | 喺 method 裡面打 \`syso\`，然後打 Ctrl+Space                             | \`System.out.println()\` 既簡寫                                                                                                                                                                                                                                                                                                                  |\r
| Error log            | 喺 method 裡面打 \`syse\`，然後打 Ctrl+Space                             | \`System.err.println()\` 既簡寫                                                                                                                                                                                                                                                                                                                  |\r
| \`main\` method        | 喺 class 裡面打 \`main\`，然後打 Ctrl+Space，見到 main method 再打 Enter | 最快生成 \`public static void main(String[] args) {}\` 既方法                                                                                                                                                                                                                                                                                    |\r
| 刪行                 | Ctrl+D                                                                 | 刪除 caret 果行 code，下面既 code 往上移動一行                                                                                                                                                                                                                                                                                                 |\r
| 複製本行至上一行     | Ctrl+Alt+Up                                                            | 將 caret 果行複製到本行之上                                                                                                                                                                                                                                                                                                                    |\r
| 複製行在至下一行     | Ctrl+Alt+Down                                                          | 將 caret 果行複製到本行之下                                                                                                                                                                                                                                                                                                                    |\r
| Organize imports     | Ctrl+Shift+O                                                           | 如果有 classes 未 import，佢會 resolve（如果有撞名，佢會畀你揀）；如果有多餘既 imports，佢會移除                                                                                                                                                                                                                                               |\r
| Comment out code     | Ctrl+/                                                                 | 將 caret 果行前面加 \`//\` 或拎走 \`//\`（toggle comment）                                                                                                                                                                                                                                                                                         |\r
| Format code          | Ctrl+Shift+F                                                           | 將整個 class 既 code 以 Eclipse 既設定黎 format（結果出黎未必好睇）                                                                                                                                                                                                                                                                            |\r
| Text search/replace  | Ctrl+F                                                                 | Search 而家個 file 或 replace 文字                                                                                                                                                                                                                                                                                                             |\r
| Select 括號內既 code | Double click \`{\`、\`}\`、\`(\` 或 \`)\`                                      | Select 一個 class 既 class body，或者一個 method 既 method body，或者一個 method call 既 arguments，或者一個 method signature 既 parameters                                                                                                                                                                                                    |\r
| 改名                 | Ctrl+1 > Rename in file 或 Rename in workspace                         | 對 variable、method 或 class 名進行改名操作                                                                                                                                                                                                                                                                                                    |\r
| Open type            | Ctrl+Shift+T                                                           | 搵成個 workspace 有既 types，包括 JDK 內建既、你喺 workspace 既 projects 裡面寫既，以及 workspace 所有 projects 用到既 3rd party libraries 裡面有既                                                                                                                                                                                            |\r
| Open resource        | Ctrl+Shift+R                                                           | 搵成個 workspace 有既檔案（如 text files，亦包括 types）                                                                                                                                                                                                                                                                                       |\r
\r
註：[Caret 既意思](https://en.wikipedia.org/wiki/Caret_navigation)\r
\r
如果 shortcuts 打左但冇效，可去 menu bar > Window > Preferences > 左邊 filter text 打 \`keys\` > 揀 Keys > 右邊 search 返，睇下而家 set 左啲咩 shortcut key combination。\r
\r
---\r
\r
### 1.2.5 Compiler errors/warnings 建議配置\r
\r
IDE 可以幫我地寫出好 code，所以要用盡佢啲功能，例如 compiler errors/warnings。\r
\r
去 menu bar > Window > Preferences > 左邊 filter text 打 \`warning\` > 揀 Errors/Warnings > 右邊 search \`null\` > Null analysis > 將三項都改成 \`Warning\`：\r
\r
-   Null pointer access\r
-   Potential null pointer access\r
-   Redundant null check\r
\r
咁可以解決一部分因為冇處理 null 情況而導致既 \`NullPointerException\`，或者多餘既 null check。\r
\r
---\r
\r
### 1.2.6 Hierarchical package presentation 建議配置\r
\r
去 Package Explorer > 三點 > Package Presentation > Hierarchical\r
\r
![](blog/2020-09/coding-java-1/eclipse-hierarchical-package-presentation.png)\r
\r
---\r
\r
### 1.2.7 Content assist 建議配置\r
\r
我地可以用 content assist shortcut 去快速生成 Java code。但如果 caret 右邊已經有啲 Java code，我地唔希望生成既 Java code 會覆蓋 caret 右邊既 Java code。\r
\r
去 menu bar > Window > Preferences > 左邊 Java > Editor > Content Assist > Insertion section 揀 Completion inserts。\r
\r
---\r
\r
### 1.2.8 Code coverage 建議配置\r
\r
去 menu bar > Window > Preferences > 左邊 Java > Code Coverage > Default Scope section 既 Only path entries matching 輸入 \`src/main/java\`。\r
\r
---\r
\r
## 1.3 Postman（必須）\r
\r
用黎測試 backend server 既 endpoints（主要係 HTTP APIs）。\r
\r
[官方下載](https://www.postman.com/downloads/)，揀 64-bit。\r
\r
![](blog/2020-09/coding-java-1/postman-layout.jpg)\r
`,wR=`# 2 建立 project\r
\r
## 2.1 全新 project（基本）\r
\r
喺 Eclipse 左手邊 Package Explorer 度 right click > New > Java Project，輸入 project 名，撳 Finish。\r
\r
基本既 project 就完成。注意呢個 setup 係冇 dependency management（雖然都可以照用到 3rd party libraries），\r
因為係一個好 pure 既 Java project。\r
\r
![](blog/2020-09/coding-java-2/eclipse-create-java-project.png)\r
\r
---\r
\r
## 2.2 Import 現有 Maven project\r
\r
喺 Eclipse 左手邊 Package Explorer 度 right click > Import... > Maven > Existing Maven Projects，選取 project root path，\r
會見到中間顯示 \`pom.xml\`，隔籬有個 tick 左既 checkbox，撳 Finish。\r
\r
前提係個 project 必須有 \`pom.xml\`，而裡面係 Maven 理解既格式。\r
\r
註：Eclipse 所用既 Maven 版本係內建既，如有需要，去 menu bar > Window > Preferences > 左邊 filter text 打 \`maven\` > 揀 Maven 下面既 Installations > 右邊 Add... 加入本地某個 Maven 安裝 folder > 選擇新加入既 Maven installation。\r
\r
![](blog/2020-09/coding-java-2/eclipse-import-maven-project.png)\r
\r
![](blog/2020-09/coding-java-2/eclipse-import-maven-project-finish.png)\r
`,xR=`# 3 Java 基礎知識\r
\r
## 3.1 關於 Java\r
\r
### 3.1.1 Compiled language\r
\r
Java 係一隻 object-oriented programming (OOP) 程式語言，需要 JVM 黎運行。\r
\r
Java 需要 compilation 過程，由 Java code（\`.java\` 檔） compile 成 bytecode（\`.class\` 檔），\r
然後選擇性地用 JAR 或 WAR 黎再 zip 起多個 \`.class\` 檔以及 project resources。\r
\r
當 Java code compile 左成 bytecode，係可以反向 decompile 返做 Java code，但唔會原汁原味，因為 compiler 有時會優化代碼，\r
所以 decompilers（非官方既工具）好難估到本身係點寫。另外，如果我地係寫 Java API 畀其他人用（通常係高手先會寫），\r
可以打包埋 sources 同 Javadoc，方便其他 developers 理解我地寫左既 code。\r
\r
比較之下，JavaScript 就係一隻 scripting language，不需要 compile，如果冇 IDE，要到運行果一刻先知有冇寫錯。\r
JS 需要一個 enable 左 JS 既瀏覽器，或者 JS runtime environment（如 NodeJS）。\r
\r
IDE 會幫我地做呢個 compilation 過程，當我地改左 code 但錯 syntax，IDE 會「鬧」我地寫錯野。\r
當我地 Ctrl+S 去 save 一個 Java type，IDE 都會 trigger compilation。\r
\r
如果我地用 Maven 做 dependency management（方便我地用 3rd party libraries 同做版本管理）既話，當我地改左 \`pom.xml\` 然後 save，\r
IDE 都會幫我地 build 過個 project，包括 compile code。\r
\r
當我地用部分 JDK 內建既 classes，或者所有 3rd party libraries，都需要 import 先可以用到，否則連 compile 都唔成功。\r
\r
---\r
\r
### 3.1.2 特殊既 \`main\` method\r
\r
\`public static void main(String[] args) {}\` 係一個特殊既 method，係用黎做程底既入口。\r
每個 class 都可以有一個 \`main\` method，所以每個 Java project 都可以有 N 個入口。\r
但係一般都唔會寫多過一個。除非需要唔同既入口，否則只需要一個 \`main\` method。\r
當我地 build 個 project 成一個 JAR（\`.jar\` 檔），我地需要提供 \`Main-Class\` 資訊。\r
\r
[詳情](https://docs.oracle.com/javase/tutorial/deployment/jar/appman.html)\r
\r
如果用 Maven，可以喺 Maven project 既 \`pom.xml\` 裡面設置。如果用左 Spring 既 build plugin，\`Main-Class\` 既 config 係可以省略。\r
\r
![](blog/2020-09/coding-java-3/java-main-method.png)\r
\r
---\r
\r
### 3.1.3 Compile time 及 runtime\r
\r
Java 有 compile time 同 runtime。\r
\r
-   Compile time：你寫緊 code，compiler compile 你啲 code 既時候\r
-   Runtime：個程式 deploy 左，run 緊既時候\r
\r
![](blog/2020-09/coding-java-3/compile-time-vs-runtime.jpg)\r
\r
---\r
\r
### 3.1.4 如何 deploy Java apps\r
\r
一般而言，Java apps 可以分為以下幾類：\r
\r
| 類別                         | 格式          | \`main\` | 描述                                                                                                                                                                                                             |\r
| ---------------------------- | ------------- | ------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| Java API                     | \`.jar\`        | 冇     | 畀其他相關既 projects 去 import，為左重用代碼或者高級 developers 提供 API 畀世人享用，如 Apache Commons Lang3                                                                                                    |\r
| 於 background 直接執行       | \`.jar\`        | 有     | 可以 Command Prompt、Task Scheduler、cron 等 callers 去 call 個 Java app 去做啲 background tasks，只能通過 console 或 log files 見到個程式做左啲咩（前提係要 developers 有 code 到個 app 會 print log messages） |\r
| 可直接執行既 GUI             | \`.jar\`        | 有     | 會顯示 GUI（圖形使用者介面），Java GUI 技術有 Swing、SWT、JavaFX                                                                                                                                                 |\r
| Web application              | \`.jar\` \`.war\` | 冇     | 需要 deploy 去一個 web container，如 Apache Tomcat、 Eclipse Jetty、JBoss WildFly、IBM WebSphere Application Server。呢個做法較舊派                                                                              |\r
| 可直接執行既 web application | \`.jar\`        | 有     | 如 Spring Boot，因為已經內嵌左一個 Tomcat container，係一個可以直接用 Java Runtime Environment（JRE）運行既 web app。呢個做法係新主流                                                                            |\r
\r
我地唔會拎住成抽 bytecode \`.class\` 檔去 deploy，但會將佢地連埋 manifest（一啲 metadata）打包成 \`.jar\` 或 \`.war\` 檔。其實本質上都係一個 \`.zip\` 格式。\r
\r
如果用緊 Eclipse，我地可以喺 Eclipse 度行。直接撳個 launch 掣去 run as Java application 就得。\r
\r
如果係可執行既 Java apps，唔想喺 Eclipse 度面行，可以 build/export 左做 JAR 先，然後打 command 黎執行：\r
\r
\`\`\`bash\r
java -jar My-Application-1.0.jar\r
\`\`\`\r
\r
如果係 Spring Boot app 而且用左 Maven，可以打 command 等 Maven 幫我地 call JDK 去 compile 然後執行：\r
\r
\`\`\`bash\r
mvn spring-boot:run\r
\`\`\`\r
\r
註：當我地個 \`pom.xml\` 用左 \`spring-boot-maven-plugin\` 呢個 Maven build plugin 既時候，個 Maven project 就會多左一個 \`run\` goal。\r
\r
[詳情](https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/html/#goals-run)\r
\r
JAR 檔其實都係 ZIP：\r
\r
![](blog/2020-09/coding-java-3/jar-file-content.png)\r
\r
---\r
\r
## 3.2 Modifiers 修飾符\r
\r
用於：\r
\r
-   Type\r
-   Class/instance variable\r
-   Constructor\r
-   Method\r
-   Local variable\r
-   Constructor/method parameter\r
\r
註：如果用錯左 modifiers，compiler 會話你知。\r
\r
### 3.2.1 Access modifiers\r
\r
| Modifier                               | 常用程度 | 作用                                                                                               |\r
| -------------------------------------- | -------- | -------------------------------------------------------------------------------------------------- |\r
| \`public\`                               | 高       | 所有 classes 都用得呢樣野                                                                          |\r
| \`protected\`                            | 中       | 只有 exactly 同一個 package 既所有 classes（但唔包括 subpackages）或者所有 subclasses 先用得呢樣野 |\r
| 乜都唔打，即係 default access modifier | 低       | 只有 exactly 同一個 package 既所有 classes 先用得呢樣野（但唔包括 subpackages）                    |\r
| \`private\`                              | 高       | 只有呢個 class 先用得呢樣野                                                                        |\r
\r
註：\r
\r
-   將所有野用曬 \`public\` 係一定 work，但係會令 access 太濫，影響 code maintenance，因為你唔知邊啲野係要 expose 畀其他 classes 用，所以最好係 limit access，最有限既 access 夠做就用果個。\r
\r
---\r
\r
### 3.2.2 Non-access modifiers\r
\r
| Modifier       | 常用程度 | 作用                                                                                                                                    |\r
| -------------- | -------- | --------------------------------------------------------------------------------------------------------------------------------------- |\r
| \`static\`       | 高       | 當呢樣野屬於 class（所有 object copies 都 share 一樣既）而唔係 instance（唔同既 object copies 會有唔同）                                |\r
| \`final\`        | 高       | 當一個 class 唔可以被 subclass；當一個 method 唔可以被 override；當一個 variable 只可以並且必須 assign 一次 value（assign \`null\` 都算） |\r
| \`abstract\`     | 中       | 當一個 class 既 methods 唔齊全；當一個 method 冇 method body                                                                            |\r
| \`default\`      | 低       | 喺 interface 裡面可以 declare 一啲有 method body（implementation）既 methods                                                            |\r
| \`synchronized\` | 低       | 多線程編程會用到                                                                                                                        |\r
| \`transient\`    | 低       | JDK 自帶既 serialization 功能會用到，但不影響 3rd party library 如 Jackson Databind 既 serialization                                    |\r
| \`volatile\`     | 低       | 多線程編程會用到                                                                                                                        |\r
| \`native\`       | 低       | 當一個 method 係以 Java Native Interface（JNI）呼叫底層 code                                                                            |\r
\r
---\r
\r
### 3.2.3 Modifiers 既例子\r
\r
\`\`\`java\r
public class Foo { // type: public\r
    private static final String MESSAGE = "Hello World"; // class variable: private static final\r
\r
    private final String name; // instance variable: private final\r
\r
    public Foo(final String name) { // constructor: public; constructor parameter: final\r
        this.name = name;\r
    }\r
\r
    public String sayHi() { // method: public\r
        final String message = MESSAGE; // local variable: final\r
        return toLowerCase(message);\r
    }\r
\r
    public String sayHi(final String message) { // method: public; method parameter: final\r
        return toLowerCase(message);\r
    }\r
\r
    private String toLowerCase(String str) { // method: private\r
        return str==null ? "" : str.toLowerCase();\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
## 3.3 Classes / types\r
\r
Java 有 primitive types 同 object types（classes）。所有 primitive types 都有對應既 wrapper object types。\r
\r
### 3.3.1 Primitive data types 原始數據類型\r
\r
Primitive types：\r
\r
-   \`boolean\` (\`true\` / \`false\`)\r
-   \`int\`（自然數）\r
-   \`long\`（自然數，正負數範圍比 \`int\` 大）\r
-   \`float\`（有小數點）\r
-   \`double\`（有小數點，，正負數範圍比 \`float\` 大）\r
-   \`byte\`（較少用）\r
-   \`char\`（單字/符號，幾乎唔需要用到）\r
\r
以上都唔係 object。\r
\r
---\r
\r
### 3.3.2 Primitive data type conversion/casting\r
\r
Primitive data types 之間可以轉換（conversion/casting），但要注意每隻 data type 既 value 上下限，同埋留意轉換過程可唔可以保留精確度。\r
\r
喺需要處理金額之類需要百分百精確度既情境，一律建議使用 \`BigDecimal\`。另外仲有 \`BigInteger\`，都一樣係 _arbitrary-precision_。\r
\r
![](blog/2020-09/coding-java-3/primitive-data-type-conversion.png)\r
\r
| 箭嘴 | 解釋                                                                                                            |\r
| ---- | --------------------------------------------------------------------------------------------------------------- |\r
| 實線 | Automatic/implicit type conversion 自動轉換/隱式轉換（如要反方向轉換，必須進行 explicit type casting 顯式轉換） |\r
| 虛線 | 轉換後有可能會失去精確度                                                                                        |\r
\r
#### 3.3.2.1 Automatic type conversion 示範\r
\r
以下為示範：\r
\r
\`\`\`java\r
byte b = 1;\r
\r
short s = b; // implicit type conversion\r
byte b2 = s; // compilation error, Type mismatch: cannot convert from short to byte\r
byte b3 = (byte) s; // explicit type casting\r
\r
int i = s; // implicit type conversion\r
short s2 = i; // compilation error, Type mismatch: cannot convert from int to short\r
short s3 = (short) i; // explicit type casting\r
\r
char c = 1;\r
int i2 = c; // implicit type conversion\r
char c2 = i2; // compilation error, Type mismatch: cannot convert from int to char\r
char c3 = (char) i2; // explicit type casting\r
\r
long l = i2; // implicit type conversion\r
int i3 = l; // compilation error, Type mismatch: cannot convert from long to int\r
int i4 = (int) l; // explicit type casting\r
\r
float f = i2; // implicit type conversion\r
int i5 = f; // compilation error, Type mismatch: cannot convert from float to int\r
int i6 = (int) f; // explicit type casting\r
\r
double d = l; // implicit type conversion\r
long l2 = d; // compilation error, Type mismatch: cannot convert from double to long\r
long l3 = (long) d; // explicit type casting\r
\`\`\`\r
\r
---\r
\r
### 3.3.3 Primitive data types 既 wrapper classes\r
\r
Primitive data types 唔容許 \`null\`，所以一定有一個明確既 value。但如果我地唔想咁，我地可以用 wrapper classes。\r
\r
Primitive types 對應既 wrapper classes（大部分都係將第一隻字轉大草）：\r
\r
-   \`Boolean\` (\`true\` / \`false\`)\r
-   \`Integer\`\r
-   \`Long\`\r
-   \`Float\`\r
-   \`Double\`\r
-   \`Byte\`\r
-   \`Character\`\r
\r
以上 wrapper classes 通常用喺 DTO（data transfer objects），因為容許 \`null\`。\r
\r
文字既 data type 係 \`String\`，呢個就冇 primitive type，一定係 object。\r
\r
---\r
\r
### 3.3.4 Autoboxing 及 unboxing\r
\r
為左方便使用 primitive types 同 primitives 既 wrapper classes，Java 原生支持 autoboxing 同 unboxing（autoboxing 既反方向）。\r
\r
Autoboxing，即係由 primitive 自動 box/wrap 成 wrapper class，會喺以下情況下發生：\r
\r
\`\`\`java\r
Integer num = 1;\r
\`\`\`\r
\r
\`\`\`java\r
public static void main(String[] args) {\r
\r
    // autobox int 1 成 Integer 1\r
\r
    foo(1);\r
}\r
\r
private static void foo(Integer num) {\r
    // do sth\r
}\r
\`\`\`\r
\r
Unboxing，即係由 wrapper class 自動 unbox/unwrap 成 primitive，會喺以下情況下發生：\r
\r
\`\`\`java\r
int num = new Integer(1);\r
\`\`\`\r
\r
\`\`\`java\r
public static void main(String[] args) {\r
\r
    // unbox Integer 1 成 int 1\r
\r
    foo(new Integer(1));\r
}\r
\r
private static void foo(int num) {\r
    // do sth\r
}\r
\`\`\`\r
\r
Autoboxing 同 unboxing 同時發生：\r
\r
\`\`\`java\r
// 先 unbox Integer 3 成 int 3\r
// 再計 int 3 + int 2\r
// 再將 int 5 autobox 成 Integer 5\r
Integer num = new Integer(3) + 2;\r
\r
// 先 unbox Integer num 成 int 5 同 unbox Integer 4 成 int 4\r
// 再計 int 5 + int 4\r
// 再將 int 9 autobox 成 Integer 9\r
num += new Integer(4);\r
\`\`\`\r
\r
注意如果 unbox 既時候 object value 係 \`null\`，咁喺 runtime 就會出現 \`NullPointerException\`。\r
\r
---\r
\r
### 3.3.5 Array / \`Collection\` / \`Map\`\r
\r
當我地想將好幾個同一個 type 既 data 放埋一齊成為一個組合，我地可以用 array、\`Collection\` 或者 \`Map\`。不過 array 基本上好少機會會用到，因為功能唔及得上 \`Collection\` 咁多，例如 \`add\`、\`remove\` 之類能夠改變長度既操作；或者 \`TreeSet\` 咁既會自己排序既 implementation；又可以喺 getter 度 return \`Collections.unmodifiableList(list)\`，防止修改 DTO object 既 property value，達到 immutability。喺 web application 裡面更加可以話係冇人會用 array。\r
\r
Array 既長度係固定既：\r
\r
\`\`\`java\r
String[] arr = new String[4];\r
\`\`\`\r
\r
\`\`\`java\r
int[] arr = new int[] { 3, 6 };\r
arr[0] = 7;\r
arr[2] = 3; // 因為只有 0 同 1 兩個 index，呢行會爆 ArrayIndexOutOfBoundsException\r
\`\`\`\r
\r
\`Collection\`（\`List\`、\`Set\`）及 \`Map\` 既長度係 dynamic 既，任得你加（上限非常大）。\r
\r
\`Collection\` 既 \`List\` subinterface：\r
\r
\`\`\`java\r
List<String> list = new ArrayList<>();\r
\`\`\`\r
\r
\`\`\`java\r
List<String> list = new LinkedList<>();\r
\`\`\`\r
\r
\`\`\`java\r
List<String> list = new Vector<>();\r
\`\`\`\r
\r
\`\`\`java\r
list.add("Michael");\r
list.add("Ben");\r
// 可以繼續 add 落去\r
\`\`\`\r
\r
註：\`List\` 係會保留插入順序。\r
\r
\`Collection\` 既 \`Set\` subinterface（唔容許重複）：\r
\r
\`\`\`java\r
Set<String> set = new HashSet<>(); // 不保留插入順序\r
\`\`\`\r
\r
\`\`\`java\r
Set<String> set = new LinkedHashSet<>(); // 保留插入順序\r
\`\`\`\r
\r
\`\`\`java\r
Set<String> set = new TreeSet<>(); // 自然順序\r
\`\`\`\r
\r
\`\`\`java\r
set.add("Michael");\r
set.add("Michael"); // 因為已經存在，add 完唔會有分別\r
// 可以繼續 add 落去\r
\`\`\`\r
\r
至於 \`Map\`，就可以放 key-value pairs（唔容許重複既 key，否則新既 entry 會 overwrite 舊既 entry）：\r
\r
\`\`\`java\r
Map<String, Object> map = new HashMap<>(); // 不保留插入順序\r
\`\`\`\r
\r
\`\`\`java\r
Map<String, Object> map = new LinkedHashMap<>(); // 保留插入順序\r
\`\`\`\r
\r
\`\`\`java\r
Map<String, Object> map = new TreeMap<>(); // 自然順序\r
\`\`\`\r
\r
\`\`\`java\r
map.put("Michael", 25);\r
map.put("Michael", 30); // overwrite 左 Michael=25\r
// 可以繼續 put 落去\r
\`\`\`\r
\r
以上既 \`list\`、\`set\` 同 \`map\` 都用左 polymorphism，即係 assign subclass 或 implementation class 去一個用 superclass 或 interface 既 type 去 declare 既 variable（\`List<String> list\`）度。\r
\r
-   \`List\` 係 interface，而 \`ArrayList\`、\`LinkedList\`、\`Vector\` 都係 \`implements\` 左 \`List\`\r
-   \`Set\` 係 interface，而 \`HashSet\`、\`LinkedHashSet\` 都係 \`implements\` 左 \`Set\`\r
-   \`Map\` 係 interface，而 \`HashMap\`、\`LinkedHashMap\` 都係 \`implements\` 左 \`Map\`\r
\r
---\r
\r
### 3.3.6 自定義 types\r
\r
當我地自定義 types，要知道有以下幾種叫法（或者形容關係）：\r
\r
| Java type 既款式     | 解釋                                                                                                                                                                                                                                                                                                                                                         |\r
| -------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r
| Concrete class       | 只要所有 methods 都有 method body（implementation）就可被視為 concrete class，可以直接 \`new\`，如 \`new Foo()\`                                                                                                                                                                                                                                                 |\r
| Implementation class | 一個 \`implements\` 左某個 interface 既 class                                                                                                                                                                                                                                                                                                                  |\r
| Abstract class       | 抽象層，當一個 class 有至少一個 method 缺少 method body（即係 abstract 左，原因可以係因為寫明左係 \`abstract\`，或者 \`implements\` 左個 interface 而繼承左佢既 abstract methods），呢個 class 就必須加上 \`abstract\`。Abstract class 可以成為 superclass 畀 subclass 去 \`extends\`。唔可以直接 \`new\`，除非你「就地」建立 anonymous class                          |\r
| Subclass             | 一個 \`extends\` 左某個 superclass（可以係 concrete class，亦可以係 abstract class）                                                                                                                                                                                                                                                                           |\r
| Superclass           | 當一個 class（無論係 concrete class 抑或係 abstract class）被 \`extends\`，就可以被視為係 superclass                                                                                                                                                                                                                                                           |\r
| Anonymous class      | 匿名 class，其實冇必要用，因為寫 concret class 會更好，亦有助於 unit testing。有兩個情況會用到 anonymous class，一係想用一個 abstract class 或 interface 但又唔想寫 concrete implementation class，一係想就地 override 一個 concrete class 既某啲 methods。寫 anonymous class 既時候要加 \`{}\`，即 \`new Foo() { /* 為 abstract methods 提供 method body */ }\` |\r
| Interface            | 所有非 \`default\` 既 methods 都冇 method body（冇 implementation，亦係 abstract），亦冇 property。等於一份 contract，迫啲 \`implements\` 左呢個 interface 既 concrete class 一定要實現曬呢個 interface 有既 methods。唔可以直接 \`new\`，除非你「就地」建立 anonymous class                                                                                       |\r
| Superinterface       | 就好似 superclass 咁，當一個 interface 被一個 interface \`extends\` 時，就可以被視為係 superinterface                                                                                                                                                                                                                                                          |\r
| Subinterface         | 就好似 subclass 咁，係一個 \`extends\` 左一個或多個 interfaces 既 interface                                                                                                                                                                                                                                                                                    |\r
| Enum                 | 一舊野，主要用黎對比（\`if\`-\`else\` 或者 \`switch\`）。用於 ORM 時可以對應 MySQL 既 \`ENUM\` type                                                                                                                                                                                                                                                                  |\r
| Annotation           | 用黎標籤 type、method、property 或 parameter（不包括 local variable），要透過 reflection 先可以用到                                                                                                                                                                                                                                                          |\r
\r
#### 3.3.6.1 Concrete class 既例子\r
\r
\`\`\`java\r
public class Foo {\r
\r
    // 只要所有 methods 都有 method body，就係 concrete class\r
\r
    public void play() {\r
        // do sth\r
    }\r
}\r
\`\`\`\r
\r
#### 3.3.6.2 Abstract class 既例子\r
\r
例子一：\r
\r
\`\`\`java\r
public abstract class AbstractFoo {\r
\r
    // 因為有至少一個 abstract method，所以呢個 class 要係 abstract\r
\r
    protected abstract void play();\r
}\r
\`\`\`\r
\r
例子二：\r
\r
\`\`\`java\r
public abstract class AbstractFoo extends Bar {\r
\r
    // 繼承左 abstract 既 play()\r
}\r
\r
abstract class Bar {\r
\r
    // 下面有一個 abstract method\r
\r
    protected abstract void play();\r
}\r
\`\`\`\r
\r
例子三：\r
\r
\`\`\`java\r
public abstract class AbstractFoo implements Bar {\r
\r
    // 繼承左 abstract 既 play()\r
}\r
\r
interface Bar {\r
\r
    // interface 既所有 methods 都係 abstract\r
\r
    void play();\r
}\r
\`\`\`\r
\r
#### 3.3.6.3 Subclass 及 superclass 既例子\r
\r
\`\`\`java\r
public class Foo extends Bar {\r
\r
    // extends 左 Bar，所以係一個 subclass（methods 有齊 method body，所以亦係 concrete class）\r
\r
    @Override\r
    protected void play() {\r
        // do sth\r
    }\r
}\r
\r
abstract class Bar {\r
\r
    // 被 Foo extends，所以算係 Foo 既 superclass\r
\r
    protected abstract void play();\r
}\r
\`\`\`\r
\r
#### 3.3.6.4 Implementation class 及 interface 既例子\r
\r
\`\`\`java\r
public class Foo implements Bar {\r
\r
    // implements 左 Bar，所以係一個 implementation class（methods 有齊 method body，所以亦係 concrete class）\r
\r
    @Override\r
    public void doSth() {\r
        // do sth\r
    }\r
}\r
\r
interface Bar {\r
\r
    // interface 裡面既 methods 一定係 public 同 abstract\r
\r
    void doSth();\r
}\r
\`\`\`\r
\r
#### 3.3.6.5 Anonymous class 既例子\r
\r
\`\`\`java\r
public class Example {\r
    public static void main(String[] args) {\r
\r
        new Thread(new Runnable() {\r
            @Override\r
            public void run() {\r
                // do sth\r
            }\r
        }).start();\r
    }\r
}\r
\`\`\`\r
\r
解釋：\r
\r
上面段 code 既 \`new Runnable() {}\` 就係 anonymous class。\r
\r
由於 \`Runnable\` 係一個 interface，我地唔可以直接 \`new\` 佢，除非以 anonymous class 既做法，即係加 \`{}\`，同埋為所有 abstract methods 提供 method body。\r
當然我地可以寫一個 class 去 \`implements Runnable\`，然後 \`new\` 呢個自定義 class。\r
\r
參考：[Runnable (JDK 8)](https://docs.oracle.com/javase/8/docs/api/java/lang/Runnable.html)\r
\r
---\r
\r
### 3.3.7 以 lambda 取代 anonymous class\r
\r
以下呢個例子既 anonymous class 可以被新式 lambda 寫法取代：\r
\r
\`\`\`java\r
public class Example {\r
    public static void main(String[] args) {\r
\r
        // new Runnable() {} 係 anonymous class\r
\r
        new Thread(new Runnable() {\r
            @Override\r
            public void run() {\r
                // do sth\r
            }\r
        }).start();\r
    }\r
}\r
\`\`\`\r
\r
以 Java 8 既新 lambda 功能黎簡化：\r
\r
\`\`\`java\r
public class Example {\r
\r
    public static void main(String[] args) {\r
\r
        new Thread(() -> { /* do sth */ }).start();\r
    }\r
}\r
\`\`\`\r
\r
解釋：\r
\r
\`() -> {}\` 係 lambda 語法。上面兩段 code call 緊既都係 \`Thread(Runnable)\` 既 constructor，只係自從 JDK 8 開始，\r
我地有一個方便簡潔啲既方法去寫，避免 anonymous class 要寫咁多行 code。\r
\r
因為 JDK 既 \`Runnable\` 只有一個叫 \`run\` 既 method，所以我地先可以用 lambda。\r
亦因為咁，所以 \`Runnable\` 可以 annotate \`@FunctionalInterface\`。\r
\r
參考：[Runnable (JDK 8)](https://docs.oracle.com/javase/8/docs/api/java/lang/Runnable.html)\r
\r
註：C# 同 JavaScript 都有 lambda syntax。\r
\r
---\r
\r
### 3.3.8 Naming convention 命名原則/慣例\r
\r
Java 既命名慣例係：\r
\r
-   \`UpperCamelCase\`：type 名\r
-   \`lowerCamelCase\`：property、local variable、method 名、parameter\r
-   \`UPPER_UNDERSCORE_CASE\`：constant 名（不變值）\r
\r
---\r
\r
## 3.4 如何設計 class\r
\r
一般我地會有以下幾種 class 設計：\r
\r
| 設計                                                                                | 描述                                                                                                                                                                                                                                                     | 例子                                                                         |\r
| ----------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------- |\r
| Service class                                                                       | 擁有 business logic 既 class                                                                                                                                                                                                                             | 自定義，冇例子                                                               |\r
| Data Access Object (DAO) class                                                      | 用黎 access DB，每個 method 可以被視為一句 SQL                                                                                                                                                                                                           | 任何 \`implements JpaRepository\` 既 class                                     |\r
| Plain old Java object（POJO）、Value Object（VO）、Data transfer object（DTO）class | 用黎儲住 data，喺不同既 class 之間使用                                                                                                                                                                                                                   | 自定義，以 properties、getters、setters 為主既 class，可以有啲自定義 methods |\r
| Utility class                                                                       | 工具類，與 helper class 相似，stateless（唔會有 non-static properties），而且全部都係 static methods（有啲情況下會令到某啲 test 較難寫）                                                                                                                 | Apache Commons Lang3 既 \`StringUtils\`                                        |\r
| Helper class                                                                        | 工具類，與 utility class 相似，可以係 stateful（可以有 non-static properties），未必有 static methods，呢個 class 可以係需要 construct（e.g. \`new MyHelper()\`）或者用 singleton pattern（runtime 只有一個 object copy）（e.g. \`MyHelper.getInstance()\`） | JDK 既 \`Calendar\`                                                            |\r
\r
註：如果我地 apply 唔同既 design patterns，亦可以有更多不同種類既 class。\r
\r
---\r
\r
## 3.5 如何寫 method\r
\r
一個 method 有以下部分：\r
\r
| 部分        | 描述                                                                        |\r
| ----------- | --------------------------------------------------------------------------- |\r
| Modifiers   | Access modifier、\`static\`、\`abstract\`、\`final\` 及 \`synchronized\`            |\r
| Return type | 冇野 return 就 \`void\`，有就畀個 type 佢                                     |\r
| Method 名   | 應以 \`lowerCamelCase\` 命名                                                  |\r
| Parameters  | 冇就留空，有就加上去，最後一個 parameter 可以係 \`...\` varargs（等同 array） |\r
| Method body | Implementation，如果 method 係 \`abstract\`，就唔需要 \`{}\`，直接 \`;\` 就得     |\r
\r
冇 return type 既例子：\r
\r
\`\`\`java\r
public void foo(String message) {\r
\r
    // do sth\r
\r
    if (new Random().nextInt()==0) {\r
        System.out.println("Lucky!");\r
        return; // 用黎控制 flow，提早返回\r
    }\r
\r
    System.out.println("No luck!");\r
\r
    return; // 如果寫喺最後一行，就可以省略，否則用黎控制 flow\r
}\r
\`\`\`\r
\r
有 return type 既例子：\r
\r
\`\`\`java\r
public String fullCapitalLetters(String message) {\r
    return message==null ? null : message.toUpperCase();\r
}\r
\`\`\`\r
\r
### 3.5.1 Overload 一個 method\r
\r
Method overloading 即係同一個 method 名，但 method parameters 唔同。\r
\r
以下例子中，\`sayHi\` method 有三個，當中運用左 method overloading。\r
\r
喺 Java 裡面 call methods，一定要中曬 delcare 左既 parameters 既數量、argument type 適合（subclass 或 implementation 都可以）先得。\r
\r
\`\`\`java\r
public class Foo {\r
\r
    public static void main(String[] args) {\r
        sayHi(); // Hi\r
        sayHi("Michael"); // Hi, Michael\r
        sayHi("Michael", true); // Hi, MCIHAEL\r
    }\r
\r
    private static void sayHi() {\r
        sayHi(null, false);\r
    }\r
\r
    private static void sayHi(String message) {\r
        sayHi(message, false);\r
    }\r
\r
    private static void sayHi(String message, boolean isUpperCase) {\r
        if (message==null) {\r
            System.out.println("Hi");\r
        } else {\r
            System.out.println("Hi, " + (isUpperCase ? message.toUpperCase() : message));\r
        }\r
    }\r
}\r
\`\`\`\r
\r
JavaScript 就冇需要咁寫，因為 JavaScript 可以用同一個 function 名，但落曬有可能畀既 parameters 去個 function 度，\r
然後 call function 既時候畀少啲 arguments 都係可以既，甚至畀多過個 function 接受既都得。除此之外，JavaScript 既 non-arrow function 仲可以用一個叫 \`arguments\` 既 array 黎拎到 caller pass 入去既 arguments，換言之 JavaScript 既 function 係可以唔 declare parameters 但都拎到 arguments，自由度完勝 Java。\r
\r
\`\`\`javascript\r
// 所有可能出現或需要用到既 parameters\r
function sayHi(message, isUpperCase) {\r
	if (message) {\r
		console.log("Hi, " + (isUpperCase ? message.toUpperCase() : message));\r
	} else {\r
		console.log("Hi, who are you?");\r
	}\r
}\r
\r
// 喺 arguments 裡面攞需要用到既 arguments\r
function sayHello() {\r
	const message = arguments && arguments.length >= 1 ? arguments[0] : undefined;\r
	const isUpperCase = arguments && arguments.length >= 2 ? arguments[1] : undefined;\r
\r
	sayHi(message, isUpperCase);\r
}\r
\r
// ----- 任意 arguments -----\r
\r
sayHi(); // Hi, who are you?\r
sayHi("Michael"); // Hi, Michael\r
sayHi("Michael", true); // Hi, MICHAEL\r
\r
// ----- 畀多過個 method 接受既都得 -----\r
\r
sayHi("Michael", true, "extra"); // Hi, MICHAEL\r
\r
// ----- 個 function 用左 arguments 而唔係 declare parameters -----\r
\r
sayHello(); // Hi, who are you?\r
sayHello("Michael"); // Hi, Michael\r
sayHello("Michael", true); // Hi, MICHAEL\r
\`\`\`\r
\r
---\r
\r
### 3.5.2 Override 一個 method\r
\r
喺一個 subclass 或者 implementation class 裡面，我地可以 override methods，即係將繼承左既 method 重新定義 implementation。\r
\r
\`\`\`java\r
abstract class AbstractFoo {\r
\r
    protected abstract void sayHi();\r
}\r
\r
interface Playable {\r
\r
    void play();\r
\r
    default void playTogether() {\r
        // do sth\r
    }\r
}\r
\r
public class Foo extends AbstractFoo implements Playable {\r
\r
    @Override\r
    protected void sayHi() {\r
        // do sth\r
    }\r
\r
    @Override\r
    public void play() {\r
        // do sth\r
    }\r
\r
    @Override\r
    public void playTogether() {\r
        // do sth\r
    }\r
}\r
\`\`\`\r
\r
Eclipse 中間個版面既左手邊既 line number 旁邊會顯示邊啲 methods 有被 overridden，如下圖既白色、綠色箭嘴：\r
\r
![](blog/2020-09/coding-java-3/eclipse-method-overriding.png)\r
\r
---\r
\r
## 3.6 睇 libraries 既 Javadoc 以及實際 source code\r
\r
### 3.6.1 喺 Eclipse 裡面睇\r
\r
無論你想睇既係 JDK 內建既 class 或 method 既定義抑或係 3rd party library 既定義，都可以喺 IDE 度做到。\r
\r
1. 將 cursor 放喺 class 或 method 上面，等一兩秒，佢會顯示一個帶有 Javadoc 既 popup，除非 API developer 冇寫，否則都會有文字描述。\r
   呢個時候可以撳 F2，或將 cursor 放喺呢個 popup 上面，等一秒，mouse 撳一撳個 popup 既文字，呢個時候就可以有多啲操作。\r
1. 你亦可以按住 Ctrl 鍵，然後 mouse 撳落個 class 或 method 上，就可以直接踩入 API developer 寫既 code 裡面。\r
\r
![](blog/2020-09/coding-java-3/hover-cursor-javadoc.png)\r
\r
![](blog/2020-09/coding-java-3/ctrl-hover-open-implementation.png)\r
\r
#### 3.6.1.1 安裝 Enhanced Class Decompiler plugin\r
\r
[Enhanced Class Decompiler - Eclipse Marketplace 地址](https://marketplace.eclipse.org/content/enhanced-class-decompiler)\r
\r
1. Drag 個 Install 掣去 Eclipse 度安裝。\r
1. 安裝最基本既 Core component 就夠。\r
1. 去 menu bar > Window > Preferences > 左邊 filter text 打 \`file asso\` > 揀 File Associations > 右邊 File types 揀 \`.class without source\` > 下面 set Class Decompiler Viewer 做 default。\r
\r
參考資料：\r
\r
-   [Java decompiler plugin for Eclipse IDE](https://mkyong.com/java/java-decompiler-plugin-for-eclipse)\r
-   [Eclipse 中安裝反編譯工具 Fernflower（Enhanced Class Decompiler）](https://www.gushiciku.cn/pl/gkXy/zh-tw)\r
\r
---\r
\r
### 3.6.2 上官網睇 Javadoc\r
\r
Google search：class 名 + \`8\` 即可，通常都會搵到，唔得就 + \`java 8\`。\r
\r
如 \`inputstream 8\`，就會搵到 \`InputStream (Java Platform SE 8 ) - Oracle Help Center\`。\r
\r
![](blog/2020-09/coding-java-3/oracle-online-javadoc.png)\r
\r
---\r
\r
## 3.7 JDK 內建實用 classes\r
\r
下面係一啲基本既 JDK 內建 classes。如果唔夠用，我地可以利用 Maven repository 上面既其他 libraries。\r
\r
| Classes                                                                 | 描述                                                                                                                                                                                                  |\r
| ----------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| \`System\`                                                                | 用黎簡單咁 print 下 log（開發用）、攞 environment variable 或者 system properties。                                                                                                                   |\r
| \`File\`                                                                  | 同本地檔案、資料夾有關既操作都要用到。                                                                                                                                                                |\r
| \`Date\`（舊）、\`Calendar\`（舊）、\`LocalDate\`、\`LocalDateTime\`、\`Instant\` | 日期、時間相關。                                                                                                                                                                                      |\r
| \`BigDecimal\`                                                            | 當我地處理含有小數點金額既時候，要小心小數點因為數學運算而失去精確度。我地應該用 JDK 既 \`BigDecimal\`（major unit）或者 Joda-Money library 裡面含貨幣訊息既 \`Money\`（支持 major unit 及 minor unit）。 |\r
| \`Pattern\` 及 \`Matcher\`                                                  | 用黎做 regular expression（RegEx）運算。                                                                                                                                                              |\r
| \`Thread\`                                                                | 令程式可以 multithreading，畀多個線程同時運作，同時執行唔同既 \`Runnable\`。                                                                                                                            |\r
`,jR=`# 4 Spring 基礎知識\r
\r
## 4.1 簡介 - 認識 Spring 框架\r
\r
最熱門、最強大既 Java framework，沒有「之一」。任何一份 Java developer report 都會見到 Spring framework 係 dominate 左個 market。\r
\r
佢最重要既功能為：\r
\r
-   用 container 管理 application 既 beans（尤其是 singleton beans，即係有啲 class 喺成個 application 裡面只有一個 instance）\r
-   Dependency injection 依賴注入（透過使用 annotations 或 XML config）\r
-   Aspect-oriented programming (AOP)，即係以不同切面去介入，簡單講就係當我地想監控某特定 packages 既 Spring beans 既 public methods，\r
    當佢地一被 call 就落 log，log 低 parameter values 同 return values，方便日後 debug/troubleshoot 用，就可以用 AOP 實現。\r
    好處係咁樣做就唔需要任何 inheritance 或者 每個 class 每個 target method 都要 自己寫一堆 code 去做 logging。\r
    AOP 亦都被 Spring framework 自身好多功能所使用。\r
-   寫 backend web server 用（Maven 既 \`spring-boot-starter-web\` dependency）\r
-   整合 container（i.e. Tomcat），不必再拎住個 JAR 或 WAR file，再額外下載 container program 黎 deploy 個 web app。\r
\r
用曬 annotation（如 \`@Component\`），好多野用曬 declarative programming 而唔係 imperative programming。\r
\r
---\r
\r
## 4.2 Spring 既項目\r
\r
Spring 既項目眾多，包括：\r
\r
-   Spring core framework（包括 Spring Web MVC）\r
-   Spring Boot\r
-   Spring Data\r
-   Spring Cloud\r
-   Spring Security\r
-   Spring Session\r
-   Spring Integration\r
-   Spring HATEOAS\r
-   Spring REST Docs\r
-   Spring Batch\r
-   Spring AMQP\r
-   Spring for Apache Kafka\r
-   Spring LDAP\r
\r
---\r
\r
## 4.3 Spring Boot 與 microservice 微服務背景\r
\r
作為一個 back-end application，我地想以最快最簡單既方法去設計 HTTP APIs 畀 client 去使用。\r
\r
有別於舊派做法，which is 將 front-end 同 Spring Web MVC 既 back-end 結合埋一齊，同時喺同一個 code base 裡面，\r
亦作為一個整體 couple 埋一齊去 deploy，我地而家用 Spring Boot 會想做到前後端分離（separating front-end and back-end），\r
back-end 只負責提供 HTTP APIs 畀 front-end 去使用，而 front-end 將會係另一個獨立既 project，放喺唔同既 Git 或 SVN repository。\r
\r
我地更可以做到將一個大既 back-end 以 business domain 去拆分，每一個 Spring Boot microservice 交由一個獨立既 development team 負責。\r
而上游 microservice development team 可以用 API contract 去話畀下游 microservice development team 知道點樣用佢既 HTTP APIs（endpoints）。\r
\r
至於 DB，最好係每個 microservice application 各自有一個獨立既 DB，table schema 都係只有該 domain 既野。\r
\r
Clients 可以包括：\r
\r
-   另一個 domain 既 back-end microservice application\r
-   Front-end web application（如 Angular、React、Vue 等 web projects）\r
\r
HTTP APIs 一般都以 JSON 格式去交換資訊。以下為一個典型例子：\r
\r
\`\`\`json\r
{\r
	"departments": [\r
		{\r
			"name": "dev",\r
			"staff": [\r
				{\r
					"name": "Ben",\r
					"salary": 50000.0\r
				},\r
				{\r
					"name": "Ivan",\r
					"salary": 45000.0\r
				}\r
			]\r
		}\r
	]\r
}\r
\`\`\`\r
\r
---\r
\r
## 4.4 Spring Boot 開發簡介\r
\r
### 4.4.1 基本 project structure\r
\r
一般至少會有以下 packages（或類似名）：\r
\r
-   \`<root package>\`\r
    -   \`controller\`\r
    -   \`entity\`\r
    -   \`repository\`\r
    -   \`service\`\r
\r
---\r
\r
### 4.4.2 基本 class 種類\r
\r
以下主要幾類 classes，佢地幾時 construct（\`new\`）、被 dependency inject 到第啲 beans，都係交由 Spring 負責，所以又可以叫做 Spring beans。\r
\r
-   Controller layer\r
    -   啲 classes 會被 annotate \`@Controller\` 或 \`@RestController\`\r
    -   用黎 expose HTTP APIs（endpoints）\r
    -   增減 classes/methods 可以增減 HTTP APIs\r
    -   一般為 singleton\r
-   Service layer\r
    -   啲 classes 會被 annotate \`@Service\`，甚或 \`@Transactional\` 黎增添事務處理去確保 DB 既 ACID\r
    -   用黎放置 business logic\r
    -   會 depends on 各個 repositories\r
    -   增減 classes/methods 可以增減 business 情境\r
    -   一般為 singleton\r
-   Repository layer\r
    -   啲 classes 會被 annotate \`@Repository\`\r
    -   用黎同 DB 溝通\r
    -   增減 classes 可以增減 tables 既 CRUD，一般黎講至少每個 entity 都會有對應既一個 repository\r
    -   增減 methods 可以增減對應 table 既 CRUD SQLs（[參考](https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#jpa.query-methods.query-creation)）\r
    -   一般為 singleton\r
-   Entity\r
    -   啲 classes 會被 annotate \`@Entity\` 同 \`@Table\`\r
    -   用黎做同 DB 之間既 Object-Relational Mapping (ORM)，class 就對應返 DB 既 table，property 就對應返該 table 既 columns\r
    -   增減 classes 可以增減 table 既 ORM\r
    -   增減 properties 可以增減 table 既 column mappings\r
\r
![](blog/2020-09/coding-java-4/controller-service-repository.png)\r
\r
---\r
\r
### 4.4.3 基本 Spring Boot classes 既例子\r
\r
#### 4.4.3.1 Controller 既例子\r
\r
\`\`\`java\r
@RestController\r
@RequestMapping("sales")\r
public void SalesController {\r
\r
    @Autowired\r
    SalesService salesService;\r
\r
    /**\r
     * <p>Endpoint：/sales/total</p>\r
     * <p>將返回 JSON 格式：{ "salesTotal": 1000.00 }</p>\r
     */\r
    @GetMapping("total")\r
    public Map<String, Object> getTotal() {\r
        final Map<String, Object> result = new HashMap<>();\r
        result.put("salesTotal", salesService.calculateTotal());\r
        return result;\r
    }\r
}\r
\`\`\`\r
\r
#### 4.4.3.2 Service 既例子\r
\r
\`\`\`java\r
@Service\r
public class SalesService {\r
\r
    @Autowired\r
    SalesRepository salesRepository;\r
\r
    public BigDecimal calculateTotal() {\r
        return salesRepository.findAll()\r
                              .stream()\r
                              .map(Sales::getAmount)\r
                              .reduce(BigDecimal.ZERO, BigDecimal::add);\r
    }\r
}\r
\`\`\`\r
\r
#### 4.4.3.3 Repository 既例子\r
\r
\`\`\`java\r
@Repository\r
public interface SalesRepository extends JpaRepository<Sales, Long> {\r
\r
    List<Sales> findAll();\r
}\r
\`\`\`\r
\r
#### 4.4.3.4 Entity 既例子\r
\r
\`\`\`java\r
@Entity\r
@Table(name = "sales")\r
public class Sales {\r
\r
    @Id\r
    @GeneratedValue(strategy = IDENTITY)\r
    @Column(name = "id")\r
    private Long id;\r
\r
    @Column(name = "amount")\r
    private BigDecimal amount;\r
\r
    public Long getId() {\r
        return id;\r
    }\r
\r
    public void setId(Long id) {\r
        this.id = id;\r
    }\r
\r
    public BigDecimal getAmount() {\r
        return amount;\r
    }\r
\r
    public void setAmount(BigDecimal amount) {\r
        this.amount = amount;\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
## 4.5 Application 配置\r
\r
Spring Boot 啟動既時候，會讀取特定既配置檔，如 \`application.properties\`、\`application.yml\` 或包含環境名既 \`application-dev.yml\`。\r
\r
由於 Spring Boot 已經整合左 Tomcat container，所有 Tomcat 相關既配置都需要放喺上述檔案。\r
呢個 application 行喺咩 port 位都一樣。\r
\r
另外，如果需要連接 DB，相關既配置如 JDBC connection URL、username、password 以及用既 driver class 都需要喺上述檔案列出。\r
\r
\`application.yml\` 例子：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
server:\r
  port: 8080\r
\r
# MySQL\r
spring:\r
  datasource:\r
    url: jdbc:mysql://localhost:3306/learnjpa?useSSL=false\r
    username: root\r
    password: \r
    driver-class-name: com.mysql.cj.jdbc.Driver\r
    tomcat: # Spring Boot 1\r
      test-while-idle: true\r
      validation-query: SELECT 1\r
      time-between-eviction-runs-millis: 360000\r
    hikari: # Spring Boot 2、3\r
      max-lifetime: 30000\r
  jpa:\r
    show-sql: true\r
    open-in-view: false\r
    hibernate:\r
      ddl-auto: update\r
    properties:\r
      hibernate:\r
        dialect: org.hibernate.dialect.MySQLDialect\r
  jackson:\r
    default-property-inclusion: non_null\r
    serialization:\r
      indent-output: true\r
      fail-on-empty-beans: false\r
      write-dates-as-timestamps: true\r
    visibility.field: any\r
    visibility.getter: none\r
    visibility.setter: none\r
    visibility.is-getter: none\r
\r
# SQL Server\r
spring:\r
  datasource:\r
    url: jdbc:sqlserver://localhost:1433;databaseName=learnjpa\r
    username: michael\r
    password: \r
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver\r
  jpa:\r
    show-sql: true\r
    open-in-view: false\r
    hibernate:\r
      ddl-auto: update\r
    properties:\r
      hibernate:\r
        dialect: org.hibernate.dialect.SQLServer2012Dialect\r
  jackson:\r
    default-property-inclusion: non_null\r
    serialization:\r
      indent-output: true\r
      fail-on-empty-beans: false\r
      write-dates-as-timestamps: true\r
    visibility.field: any\r
    visibility.getter: none\r
    visibility.setter: none\r
    visibility.is-getter: none\r
\r
# H2\r
spring:\r
  datasource:\r
    url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=4\r
    username: sa\r
    password: \r
    driver-class-name: org.h2.Driver\r
  h2:\r
    console:\r
      enabled: true\r
      path: /h2-console\r
  jpa:\r
    show-sql: true\r
    open-in-view: false\r
    hibernate:\r
      ddl-auto: update\r
    properties:\r
      hibernate:\r
        dialect: org.hibernate.dialect.H2Dialect\r
  jackson:\r
    default-property-inclusion: non_null\r
    serialization:\r
      indent-output: true\r
      fail-on-empty-beans: false\r
      write-dates-as-timestamps: true\r
    visibility.field: any\r
    visibility.getter: none\r
    visibility.setter: none\r
    visibility.is-getter: none\r
\`\`\`\r
\r
註：實際情況下不應重覆配置，除非需要連接多過一個 database（需要特別處理）。\r
\r
\`application.properties\` 例子：\r
\r
\`\`\`properties\r
server.port=8080\r
\r
# MySQL\r
spring.datasource.url=jdbc:mysql://localhost:3306/learnjpa?useSSL=false\r
spring.datasource.username=root\r
spring.datasource.password=\r
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\r
# Spring Boot 1\r
spring.datasource.tomcat.test-while-idle=true\r
spring.datasource.tomcat.validation-query=SELECT 1\r
spring.datasource.tomcat.time-between-eviction-runs-millis=360000\r
# Spring Boot 2、3\r
spring.datasource.hikari.max-lifetime=30000\r
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect\r
\r
# SQL Server\r
spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=learnjpa\r
spring.datasource.username=michael\r
spring.datasource.password=\r
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver\r
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect\r
\r
# H2\r
spring.datasource.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=4\r
spring.datasource.username=sa\r
spring.datasource.password=\r
spring.datasource.driver-class-name=org.h2.Driver\r
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect\r
spring.h2.console.enabled=true\r
spring.h2.console.path=/h2-console\r
\r
# Common\r
spring.jpa.show-sql=true\r
spring.jpa.open-in-view=false\r
spring.jpa.hibernate.ddl-auto=update\r
spring.jpa.properties.hibernate.show_sql=true\r
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl\r
\r
# Jackson\r
spring.jackson.default-property-inclusion=non_null\r
spring.jackson.serialization.indent-output=true\r
spring.jackson.serialization.fail-on-empty-beans=false\r
spring.jackson.serialization.write-dates-as-timestamps=true\r
spring.jackson.visibility.field=any\r
spring.jackson.visibility.getter=none\r
spring.jackson.visibility.setter=none\r
spring.jackson.visibility.is-getter=none\r
\`\`\`\r
`,CR=`# 5 幾款超有用必學 3rd party libraries\r
\r
今時今日以下幾款 3rd party libraries 已經被廣泛使用，亦係好成熟：\r
\r
| Library 名          | 用途                                                                                                                                                  |\r
| ------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| Lombok              | 可以生成 Java code，令我地寫少啲重複既 boilerplate code。                                                                                             |\r
| Apache Commons Lang | 處理 string。                                                                                                                                         |\r
| Apache Commons IO   | 處理檔案。                                                                                                                                            |\r
| Google Guava        | 多功能，可以處理 string、collection、thread pool 等等。                                                                                               |\r
| Jackson Databind    | Serialization / deserialization（object-to-string / string-to-object），喺 web programming 通常用黎處理 JSON 格式既 request body 或者 response body。 |\r
| JUnit               | Unit testing 單元測試用。                                                                                                                             |\r
| Mockito             | Unit testing 單元測試用（輔助）。                                                                                                                     |\r
\r
仲有好幾隻 Apache libraries 都有特長，例如：\r
\r
-   要進行基本既文件操作，如寫入純文字檔、讀取純文字檔、遞歸列出目錄文件等等，可以用 Apache Commons IO\r
-   要處理 Base64 既 encoding 可以用 Apache Commons Codec\r
-   要發起 HTTP call 可以用 Apache HttpClient Fluent API\r
\r
註：\`spring-boot-starter-parent\` 有對以上部分 libraries 提供 dependency 版本管理，\r
所以某啲 dependency 寫左落 \`pom.xml\` 可以省卻 \`<version>\` tag。\r
\r
Spring 係 framework（較大）而唔算 library（較細小），佢直頭改變左成個 application 既寫法。\r
\r
## 5.1 Lombok\r
\r
由於 Java VO/DTO/entity classes 既 getters、setters 太 boilerplate，而絕大多數情況下，佢地全部都由 IDE 根據 properties 黎 gen 出黎，\r
根本自己寫黎多舊魚，亦對 version control 係多左一丁點負擔（要用肉眼對啲 code）。\r
\r
所以就有左 Lombok 呢個 annotation-based 既 compile-time processor。佢會喺 compile time 階段 gen code。\r
Gen 左出黎既 bytecode，可以用 IDE 或者 decompiler 去睇下有冇 gen 錯 access modifiers、methods 既數量同名稱等等。\r
\r
唔用 Lombok：\r
\r
\`\`\`java\r
public class Foo {\r
    private String name;\r
    private Date dateOfBirth;\r
\r
    public String getName() {\r
        return name;\r
    }\r
\r
    public void setName(String name) {\r
        this.name = name;\r
    }\r
\r
    public Date getDateOfBirth() {\r
        return dateOfBirth;\r
    }\r
\r
    public void setDateOfBirth(Date dateOfBirth) {\r
        this.dateOfBirth = dateOfBirth;\r
    }\r
}\r
\`\`\`\r
\r
用左 Lombok：\r
\r
\`\`\`java\r
@Getter\r
@Setter\r
@FieldDefaults(level = PRIVATE)\r
public class Foo {\r
    String name;\r
    Date dateOfBirth;\r
}\r
\`\`\`\r
\r
### 5.1.1 喺 Eclipse 使用 Lombok\r
\r
想喺 Eclipse 用 Lombok annotations 而 compile 到無問題既話，必須額外安裝 Lombok plugin。\r
\r
1. 去 [Project Lombok](https://projectlombok.org/download) 度下載 Lombok 既 plugin JAR file\r
1. Double click 個 JAR，會顯示一個介面\r
1. 揀返你個 Eclipse 既 directory\r
1. Restart Eclipse\r
\r
---\r
\r
## 5.2 Jackson Databind\r
\r
用黎將某個 class 既 object 轉成 string（默認為 JSON format），呢個過程叫 serialization；調返轉就係 deserialization。\r
\r
Spring Boot 都有用 Jackson Databind 黎做 serialization 同 deserialization。\r
\r
1. 先係 deserialization，就係當我地用 POST HTTP API request 去訪問 Spring Boot 既 back-end 時，POST request body 係 JSON 格式，\r
   當 Spring Boot 收到既時候就會將個 JSON 轉成 Java objects，然後進入 controller\r
1. 之後係 serialization，就係 Spring Boot 做完曬啲 business logic，controller 返回結果之後，\r
   會轉成 JSON 格式去作為 response body（不限於 POST request）\r
\r
### 5.2.1 用 ObjectMapper 黎做 serialization\r
\r
\`\`\`java\r
public class ObjectMapperSerializationExample {\r
\r
    public static void main(String[] args) throws Exception {\r
        final Foo foo = new Foo("Michael");\r
        System.out.println(convertToString(foo)); // 出 {"name":"Michael"}\r
    }\r
\r
    private static String convertToString(Foo foo) throws Exception {\r
        return new ObjectMapper().writeValueAsString(foo);\r
    }\r
}\r
\r
class Foo {\r
    private String name;\r
\r
    public Foo(String name) {\r
        setName(name);\r
    }\r
\r
    public String getName() {\r
        return name;\r
    }\r
\r
    public void setName(String name) {\r
        this.name = name;\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
### 5.2.2 用 ObjectMapper 黎做 deserialization\r
\r
\`\`\`java\r
public class ObjectMapperDeserializationExample {\r
\r
    public static void main(String[] args) throws Exception {\r
        final String json = "{ \\"name\\": \\"Michael\\"}";\r
        System.out.println(convertToBar(json).getName()); // 出 Michael\r
    }\r
\r
    private static Bar convertToBar(String barJson) throws Exception {\r
        return new ObjectMapper().readValue(barJson, Bar.class);\r
    }\r
}\r
\r
class Bar {\r
    private String name;\r
\r
    public String getName() {\r
        return name;\r
    }\r
\r
    public void setName(String name) {\r
        this.name = name;\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
## 5.3 Apache Commons Lang\r
\r
呢個 library 提供左 JDK 非常缺乏既 string manipulation methods。用呢啲 methods 我地可以寫少好多 code。\r
個 API 設計初衷係想消滅 \`NullPointerException\`，所以佢既一個好大既賣點就係接受 \`null\` arguments。\r
亦因為係 static methods，佢地唔會好似 instance methods 咁，因為個 string variable \`null\` 左而當你一 call method 就 \`NullPointerException\`。\r
\r
JDK 既 \`str.toLowerCase()\` vs Commons Lang3 既 \`StringUtils.lowerCase(str)\`，\r
前者有可能因為 \`str\` 係 \`null\` 而爆 \`NullPointerException\`；相反，後者容錯。\r
\r
要輕鬆處理 string 可以用 \`StringUtils\`，要處理數字可以用 \`NumberUtils\`。\r
呢啲 utility classes 不需要 \`new\`，只需要直接 call 佢地既 static methods 就可以用。\r
\r
其中較有用既 \`StringUtils\` 有以下功能：\r
\r
| Method                              | 用途                                                                                  |\r
| ----------------------------------- | ------------------------------------------------------------------------------------- |\r
| \`trim(str)\`                         | 將 \`str\` 既頭同尾空白字元刪走                                                         |\r
| \`strip(str)\`                        | 將 \`str\` 既頭同尾空白字元刪走                                                         |\r
| \`stripToNull(str)\`                  | 如果 \`str\` 係 \`null\`、empty 或 blank，返回 \`null\`                                     |\r
| \`leftPad(str, size, padStr)\`        | 喺 \`str\` 既頭部填充 \`padStr\` 直至 \`str\` 既長度達到 \`size\`                             |\r
| \`rightPad(str, size, padStr)\`       | 喺 \`str\` 既尾部填充 \`padStr\` 直至 \`str\` 既長度達到 \`size\`                             |\r
| \`isEmpty(str)\` / \`isNotEmpty(str)\`  | check \`str\` 係 \`null\` 或 empty                                                        |\r
| \`isBlank(str)\` / \`isNotBlank(str)\`  | check \`str\` 係 \`null\` 或 blank                                                        |\r
| \`isAnyEmpty(str1, str2, ...)\`       | check 下有冇任何一個 string 係 \`null\` 或 empty                                        |\r
| \`isAnyBlank(str1, str2, ...)\`       | check 下有冇任何一個 string 係 \`null\` 或 blank                                        |\r
| \`defaultIfBlank(str, defaultValue)\` | 如果 \`str\` 係 \`null\` 或 blank，返回 \`defaultValue\`                                    |\r
| \`join(collection, separator)\`       | 將 \`collection\` 既 elements 串連起成一個 string，每個 element 之間用 \`separator\` 分隔 |\r
\r
---\r
\r
## 5.4 Google Guava\r
\r
功能非常豐富，參考：[官方 GitHub](https://github.com/google/guava/wiki)\r
\r
有針對 collection data type 既 utility classes：\r
\r
-   \`Lists\`\r
-   \`Sets\`\r
-   \`Maps\`\r
-   \`ImmutableList\`\r
-   \`ImmutableSet\`\r
-   \`ImmutableMap\`\r
\r
---\r
\r
## 5.5 JUnit 4 或 5\r
\r
JUnit 係最多人用既 Java unit testing library。\r
\r
使用：\r
\r
-   喺 \`src/test/java\` 度 create 一個 package，裡面再 create 一個 class\r
-   加一個 \`public void test() {}\` 既 method，annotate with \`@Test\`\r
-   Method body 打啲 production code，例如你 test 一個 utility class，就用佢既某個 method（你要 test 既果個 method）\r
-   之後 call \`Assert.assertEquals\`、\`Assert.assertTrue\`、\`Assert.assertFalse\`、\`Assert.assertNull\`、\r
    \`Assert.assertNotNull\` 黎 compare expected value（你預期既結果）同 actual value（你要 test 既果個 method 實際返回既結果）\r
\r
例子：\r
\r
\`\`\`java\r
public class ConfigUtilsTest {\r
\r
    @Test\r
    public void testConfig() {\r
        final Config config = ConfigUtils.getConfigData();\r
        Assert.assertNotNull(config);\r
        Assert.assertEquals("1.0.0", config.getVersion());\r
    }\r
}\r
\`\`\`\r
\r
只需要喺 IDE 用 JUnit 4 或 5 黎運行呢個 class 就可以見到 JUnit 既 view。綠燈代表 pass；紅燈代表有 test fail 左。\r
\r
如果係 Maven project 既話，當你行部分 Maven 既 commands，佢會默認咁同我地行 test，而 Maven 係根據 Java class 個名黎睇邊啲係 test class。\r
所以我地命名所有 test classes 時，都要 \`Test\` 字尾。\r
\r
---\r
\r
## 5.6 Mockito\r
\r
幻想一個情境，我地寫左一個 service class，呢個 class 充滿 business logic，而啲 business logic 都係都係基於佢既 dependencies 所返回既結果。\r
我地個 service class 同呢啲 dependencies 係（[has-a/composition 關係](https://en.wikipedia.org/wiki/Has-a)）。\r
呢啲 dependencies 最後係會連接 DB 行 SQL 去拎 data，再返回畀個 service class 去通過一連串 business logic 運算而得出結果。\r
\r
我地想寫一個 unit test 去淨係 test 呢個 class 既 business logic，但如果要連接 DB 先行得到個 test 就變左係 integration test，壞處係時間會長。\r
\r
為左簡化 dependencies 背後會做既野，我地就用直接假設呢啲 dependencies 會返回我地想佢地返回既結果，從而去單獨地測試呢個 service class。\r
\r
### 5.6.1 Mockito 例子\r
\r
\`\`\`java\r
/**\r
 * src/main/java/code/repo/SalesRepository.java\r
 */\r
@Repository\r
public interface SalesRepository extends JpaRepository<Sales, Long> {\r
\r
    List<Sales> findAll();\r
}\r
\r
/**\r
 * src/main/java/code/service/SalesService.java\r
 */\r
@Service\r
public class SalesService {\r
\r
    @Autowired\r
    SalesRepository salesRepository;\r
\r
    public BigDecimal calculateTotal() {\r
        return salesRepository.findAll()\r
                              .stream()\r
                              .map(Sales::getAmount)\r
                              .reduce(BigDecimal.ZERO, BigDecimal::add);\r
    }\r
}\r
\r
/**\r
 * src/test/java/code/SalesServiceTest.java\r
 */\r
public class SalesServiceTest {\r
\r
    @InjectMocks\r
    SalesService salesService;\r
\r
    @Mock\r
    SalesRepository salesRepository;\r
\r
    @Before\r
    public void setUp() {\r
\r
        // Mockito 會將 @Mock 既值植入去 @InjectMocks 既 object 裡面\r
\r
//        MockitoAnnotations.initMocks(this); // 舊式寫法\r
        MockitoAnnotations.openMocks(this).close(); // 新式寫法\r
    }\r
\r
    @Test\r
    public void testSalesTotal() {\r
\r
        final Sales sales1 = new Sales();\r
        sales1.setAmount(new BigDecimal("400"));\r
\r
        final Sales sales2 = new Sales();\r
        sales2.setAmount(new BigDecimal("600"));\r
\r
        Mockito.when(salesRepository.findAll()).thenReturn(Arrays.asList(sales1, sales2));\r
\r
        final BigDecimal salesTotal = salesService.calculateTotal();\r
\r
        Assert.assertEquals(new BigDecimal("1000"), salesTotal);\r
    }\r
}\r
\`\`\`\r
`,IR=`# 6 Dependency Management\r
\r
Dependency management tool 可以幫我地下載同管理我地呢一個 project 需要用到既 3rd party libraries，同埋 build project 時既相關設定。\r
\r
當第個 developer 要開發呢個 project，佢只需要用個 Maven command 就可以自動下載返所需既 dependency JAR files，\r
唔洗你 copy 啲 IDE 特定 format 既 settings 畀果個 developer。\r
\r
最熱門既 dependency management tool 係 Maven，而第二多人用既係 Gradle。\r
\r
## 6.1 冇 dependency management 之下點做\r
\r
就算冇用 dependency management tool，喺 Eclipse 都可以加到 3rd party libraries。\r
\r
1. 喺 Eclipse 左邊 Package Explorer 度 right click 個 non-Maven/Gradle Java project\r
1. Context menu > Properties\r
1. Java build path\r
1. Add External JAR...\r
1. 揀個係 API 既 JAR file\r
1. Apply and close\r
1. 喺 Package Explorer 你個 Java project 底下，expand Referenced Libraries\r
1. 你會見到有你 add 左既 JAR file\r
\r
但當我地將 source code 交畀第個 developer 開發既時候，要 keep 住 \`.classpath\` 呢個檔案，否則會冇曬啲 Referenced Libraries。\r
\r
![](blog/2020-09/coding-java-6/eclipse-java-build-path.png)\r
\r
---\r
\r
## 6.2 喺 Eclipse 用 Maven\r
\r
如果要 import 一個 Maven project，可以睇返呢篇：[Java 開發筆記（二） - Import 現有 Maven project](/blog/coding-java-2#22-import-現有-maven-project)。\r
\r
一般黎講，當我地喺 Eclipse 改左 Maven project 既 \`pom.xml\` 檔案之後，Eclipse 會自動更新 project。\r
\r
但如果冇發生到，我地可以 right-click 個 project > Maven > Update project...。\r
\r
---\r
\r
## 6.3 取得 Maven library\r
\r
無論係 Maven 定係 Gradle，用既都係 Maven public repository \`https://repo1.maven.org/maven2/\`。\r
\r
可以 google search library 名 + \`maven\`，例如 \`jsoup maven\`，就會搵到 \`org.jsoup » jsoup - Maven Repository\`。\r
\r
揀左特定版本之後，copy Maven 配置：\r
\r
\`\`\`xml\r
<!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->\r
<dependency>\r
    <groupId>org.jsoup</groupId>\r
    <artifactId>jsoup</artifactId>\r
    <version>1.13.1</version>\r
</dependency>\r
\`\`\`\r
\r
然後喺 \`pom.xml\` 裡面呢個位 paste 上面既 XML code：\r
\r
\`\`\`xml\r
<dependencies>\r
    <!-- paste here -->\r
</dependencies>\r
\`\`\`\r
\r
如果用 Gradle：\r
\r
\`\`\`\r
// https://mvnrepository.com/artifact/org.jsoup/jsoup\r
compile group: 'org.jsoup', name: 'jsoup', version: '1.13.1'\r
\`\`\`\r
\r
去 \`build.gradle\`：\r
\r
\`\`\`\r
dependencies {\r
    // paste here\r
}\r
\`\`\`\r
\r
喺 Eclipse 度 save 左個 \`pom.xml\` 檔（或 \`build.gradle\` 檔，如果係 Gradle）之後，Eclipse 就會自動 refresh 同 resolve，\r
下載 library 既 JAR 檔，再幫你重新 build 過個 project。\r
\r
![](blog/2020-09/coding-java-6/maven-jsoup.png)\r
\r
---\r
\r
## 6.4 使用 Maven commands\r
\r
如果要用 \`mvn\` command 既話，就要去系統設定修改 environment variables，加入 \`JAVA_HOME\`（例如 \`C:\\Program Files\\Java\\jdk1.8.0_333\`）。\r
\r
註：一定要用 JDK，而唔係 JRE。\r
\r
以下係常用既 Maven commands。\r
\r
生成 project artifact（如 JAR 檔）：\r
\r
\`\`\`bash\r
mvn clean package\r
\`\`\`\r
\r
生成 project artifact（如 JAR 檔），跳過所有 unit tests：\r
\r
\`\`\`shell\r
mvn clean package -Dmaven.test.skip=true\r
\`\`\`\r
\r
生成 project artifact（如 JAR 檔）並安裝到自己既 \`.m2\` folder，跳過所有 unit tests：\r
\r
\`\`\`shell\r
mvn clean install -Dmaven.test.skip=true\r
\`\`\`\r
\r
Compile Maven project：\r
\r
\`\`\`bash\r
mvn compile\r
\`\`\`\r
\r
Check Maven 以及 JDK 版本：\r
\r
\`\`\`bash\r
mvn -v\r
\`\`\`\r
\r
參考資料：\r
\r
-   [StackOverflow - Should JAVA_HOME point to JDK or JRE?](https://stackoverflow.com/questions/17601827/should-java-home-point-to-jdk-or-jre)\r
\r
---\r
\r
## 6.5 本地 \`.m2\` folder\r
\r
如果需要重新由線上既 Maven repository 下載返啲 3rd party libraries，或者之前做 project 既時候經 \`mvn install\` 安裝過舊版既 project artifact，\r
而令到 Maven 一直用左本地 \`.m2\` folder 裡面既 JAR 檔而唔係重新 compile + install，咁我地可以清空本地 Maven repository 既某啲 folders，\r
甚或成個本地 Maven repository（重新下載可能比較需時）。\r
\r
| OS      | 位置                                     |\r
| ------- | ---------------------------------------- |\r
| Windows | \`%HOMEDRIVE%/%HOMEPATH%/.m2/repository/\` |\r
| macOS   | \`~/.m2/repository/\`                      |\r
\r
裡面既資料夾係以 Maven \`pom.xml\` 既 \`<groupId>\` 黎開既，所以 Spring framework 果啲 \`<groupId>\` 以 \`org.springframework\` 開頭，\r
就會出現喺 \`org/springframework/\` 資料夾裡面。\r
\r
![](blog/2020-09/coding-java-6/m2-repository-spring.png)\r
`,ER=`# 1 Git 簡介\r
\r
Git 係一個分佈式既檔案版本管理工具，可以畀多個人非實時協作並且管理文本檔案。佢既用途同舊時既 SVN 相似，但係 Git 既做法更有系統，功能亦都比 SVN 強大同方便得多。今時今日 Git 已經係最普遍既檔案版本管理工具。而因為有啲 Git 服務提供者（例如 GitHub）有提供免費既網上個人 Git 服務，所以令到 Git 有時可以被用作個人既 cloud storage（當然都有容量甚或文件大小既限制）。以下係最出名既幾個 Git 服務提供者：\r
\r
-   GitHub（已被 Microsoft 收購）\r
-   GitLab\r
-   Bitbucket（Atlassian 既產品）\r
-   Gitee（國內）\r
\r
## 1.1 Git 概念\r
\r
-   一個 Git 既 repository 可以有 \`2\` 種形式。\r
    -   Offline／local\r
        -   完全 offline，冇對應既 remote repository。\r
        -   以 \`git init\` 形式產生 \`.git\` folder。\r
    -   Remote repository\r
        -   如果要修改，就要將成個 repository clone 落 local 度，之後作出變更，然後提交變更到 remote repository 既某個 branch。\r
        -   有啲 Git 服務提供者（例如 GitHub）簡化左新增或者刪除檔案既步驟，畀我地喺網頁都做到。\r
        -   當需要將 local branch 同 remote branch 同步或者更新 branch 資訊，就需要連網絡。\r
        -   一般既個人既業餘項目，或者多人同時協作既私人公司項目、open source 項目都會咁做。\r
-   每一個 Git 既 repository 既結構都係類似一個 directed graph，而如果從 branch 既角度睇就會係類似 singly linked list，而每一個 node 就叫做 commit（喺呢篇文裡面，我地會叫佢做打包左既變更）。\r
-   較新既 commit 會有 pointer 指向前一個 commit。\r
-   Git 既 branch 其實就係一個 pointer（叫 \`HEAD\`），一個 branch 名只係某一個 commit 既自定義名稱既 label／tag。\r
    -   通常都會從一個現有既 branch 既 \`HEAD\` 去開一個新既 branch，喺果度分叉出新既支節。\r
-   當某個 branch 有新 commit，Git 就自動將 branch 既 \`HEAD\` pointer 指向新 commit。\r
-   Branches 再多都好，到左開發階段既中後期，唔同 branches 既 commits 最終都會 merge 埋一齊——深層既支節會 merge 埋一齊，之後到淺層既支節 merge 返落主幹既 branch（通常係用返默認既 branch）。\r
    -   個別 developers 既 branches 會 merge 落 integration branch。\r
    -   Integration branches 會 merge 落主幹既 branch（e.g. \`master\`）。\r
-   正因為結構係 directed graph／linked list，所以支持毀滅性既操作。\r
    -   例如刪除已打包既變更，Git 只需要將 \`HEAD\` pointer 指返去上一個 commit 就得。\r
-   除非個 repository 係新既（冇 source code），否則至少會有一個 branch。\r
-   多 branches 既作用係畀我地應付開發項目既時候需要多個 deployment environments。\r
    -   可以開 dev、SIT、UAT、pre-production、production 等等 environments 對應既 branches，而 commits 可以因應測試進度一層一層往後既 branches 推。\r
\r
關於 Git 默認 branch 名：\r
\r
-   以前無論係 Git 服務提供者或者係 Git 既 CLI 工具，默認既 branch 名都係 \`master\`。\r
-   但因為近年 IT 界著重反歧視，避免使用 master 或者 slave 既字眼，所以有啲 Git 服務提供者開始改左默認既 branch 既名，例如 GitHub 就改左新既 repositories 既默認 branch 會叫 \`main\`。\r
\r
---\r
\r
# 2 下載 remote repository\r
\r
無論係公司既 project，亦可以係個人、私人既 project，只要有條 Git URL（公司通常會用 SSH protocol），就可以下載整個 project 既 source。呢條 Git URL 通常喺 GitHub、Bitbucket、GitLab 等既 project 網頁都會顯示出黎。\r
\r
\`\`\`bash\r
git clone "https://github.com/user/project.git"\r
\`\`\`\r
\r
如果我地想直接下載某個 branch，而唔係默認既 branch（一般為 \`master\`），咁我地可以用：\r
\r
\`\`\`bash\r
git clone -b "master" "https://github.com/user/project.git"\r
\`\`\`\r
\r
以上都會建立一個同我地 project 名一樣既 folder。如果想指定新 folder 名，可以用：\r
\r
\`\`\`bash\r
git clone "https://github.com/user/project.git" "specific-folder-name"\r
git clone -b "master" "https://github.com/user/project.git" "specific-folder-name"\r
\`\`\`\r
\r
如果個 Git repo 啟用左 SSH key（[Deploy keys](https://docs.github.com/en/developers/overview/managing-deploy-keys#deploy-keys)），我地可以用：\r
\r
\`\`\`bat\r
:: Windows Command Prompt\r
SET "GIT_SSH_COMMAND=ssh -i my-key.rsa -o IdentitiesOnly=yes"\r
git clone ssh://git@github.com/my-username/my-repo.git\r
\`\`\`\r
\r
## 2.1 獲取源 Git URL\r
\r
當我地已經 clone 左個 project 落黎，呢個時候想搵返條 Git URL 出黎，其實唔需要下下都去返 GitHub、Bitbucket、GitLab 等既 project 網頁度抄，有個簡單既方法：\r
\r
\`\`\`bash\r
git remote -v\r
\`\`\`\r
\r
---\r
\r
# 3 更新 branch 資訊\r
\r
有時我地喺 web 上 create 左 branch（如 JIRA ticket 上），咁我地喺切換去新 branch 之前需要更新一下 branch 資訊：\r
\r
\`\`\`bash\r
git fetch\r
\`\`\`\r
\r
如果唔介意下載埋變更／同 remote branch 同步埋：\r
\r
\`\`\`bash\r
git pull\r
\`\`\`\r
\r
---\r
\r
# 4 切換去另一個 branch\r
\r
當我地有左需要既 branch 資訊，就可以切換去果個指定既 branch：\r
\r
\`\`\`bash\r
git checkout "feature/some_feature"\r
\`\`\`\r
\r
## 4.1 查看身處既 branch\r
\r
有時自己唔記得左自己喺邊個 branch，想知道返就用：\r
\r
\`\`\`bash\r
git branch\r
\`\`\`\r
\r
曾經用過既 branches 都會出現喺結果清單上，打星（\`*\`）果個就係而家個 branch。\r
\r
---\r
\r
## 4.2 搵 remote branch\r
\r
當我地想知道 remote repository 上面有冇存在住某個 branch，我地可以列曬 remote branches 出黎先，再用 keyword 去 filter 出我地想要既結果。\r
\r
macOS：\r
\r
\`\`\`bash\r
git branch -r | grep "master"\r
\`\`\`\r
\r
Windows：\r
\r
\`\`\`bash\r
git branch -r | findstr "master"\r
\`\`\`\r
\r
---\r
\r
# 5 下載變更／同 remote branch 同步\r
\r
隨時間過去，其他同事可能會對我地既 branch 有代碼變更，咁我地想更新自己 local branch 既 source，同步一下，以免唔好令自己 local branch 落後太多，\r
搞到自己 based on 啲舊既 source code 去做改動，增加之後 integrate 完唔 work 既風險，我地可以間中下載變更：\r
\r
\`\`\`bash\r
git pull\r
\`\`\`\r
\r
行完句 command 之後，以下係常見既結果：\r
\r
-   冇變更\r
-   有變更，自動更新 local branch 成功\r
-   有變更，自動更新 local branch 過程中發現 conflicts，需要手動 merge 去解決 merge conflicts\r
\r
呢個 command 亦會更新埋 branch 資訊。\r
\r
---\r
\r
# 6 了解 local branch 現時情況\r
\r
有時想知道而家個 local branch 咩情況，下一步有咩可以做，我地可以用：\r
\r
\`\`\`bash\r
git status\r
\`\`\`\r
\r
---\r
\r
# 7 提交變更\r
\r
呢度指既變更（commit）可以係一次修改（一個全新既變更），亦可以係針對 remote repository 上既變更作二次修改（覆寫已經喺雲端既資料）。\r
\r
一般黎講，如果冇野需要中途返轉頭改，提交變更既流程係：\r
\r
1. 檢視變更\r
1. 揀需要既檔案，將佢地提交至暫存區\r
1. 將暫存區打包，同時提供修改內容概要\r
1. 提交已打包既變更\r
\r
如果有野需要中途返轉頭改，提交變更既流程就會係：\r
\r
1. 檢視變更\r
1. 揀需要既檔案，將佢地提交至暫存區\r
1. 重覆步驟 \`1\` 至 \`2\`\r
1. 將暫存區打包，同時提供修改內容概要\r
1. 重覆步驟 \`3\` 至 \`4\`\r
1. 提交已打包既變更\r
\r
註：\r
\r
-   提交至暫存區既唔單止係檔案清單，仲包括埋實際修改既內容，所以喺提交至暫存區之後仲有野要改，係需要重覆返提交至暫存區既步驟，先可以改到暫存區既內容，暫存區唔會因為檔案內容有後續既修改而自動同步。\r
-   無論上左 remote repository 未，已打包既變更都唔會再因為暫存區既內容有後續既修改而自動同步，所以將暫存區打包之後仲有野要由暫存區同步到之前已打包既變更，係需要喺上次既變更上作二次修改。\r
\r
## 7.1 檢視變更\r
\r
檢視有改動既檔案既文本變更：\r
\r
\`\`\`bash\r
git diff\r
\`\`\`\r
\r
檢視指定檔案既變更：\r
\r
\`\`\`bash\r
git diff "pom.xml"\r
\`\`\`\r
\r
如果有太多行既文字或者太多個檔案有改動，咁我地可以用 \`up arrow\` 或 \`down arrow\` 黎喺 CLI navigate，會有類似網頁既 scroll 效果。想退出可以撳 \`q\`。\r
\r
---\r
\r
## 7.2 揀需要提交既檔案\r
\r
如果所有變更都需要提交，就先將佢地加曬入暫存區（stage）：\r
\r
\`\`\`bash\r
git add .\r
\`\`\`\r
\r
如果想將指定檔案加入暫存區（stage）：\r
\r
\`\`\`bash\r
git add "pom.xml"\r
\`\`\`\r
\r
之後，如果喺變更推上 remote repository 之前仲有野改又想包括埋，都要行呢一步。\r
\r
### 7.2.1 檢視暫存區內檔案既變更\r
\r
如果檔案已經暫存（staged），呢個時候我地仲想檢視返變更，可以咁做：\r
\r
\`\`\`bash\r
git diff --staged\r
\`\`\`\r
\r
---\r
\r
### 7.2.2 取消暫存已經暫存既檔案\r
\r
如果檔案已經暫存（staged），呢個時候我地想將佢地回復至未暫存既狀態（unstaged），可以咁做：\r
\r
\`\`\`bash\r
git reset\r
\`\`\`\r
\r
如果想將指定既檔案回復至未暫存既狀態（unstaged）：\r
\r
\`\`\`bash\r
git reset "pom.xml"\r
\`\`\`\r
\r
---\r
\r
## 7.3 打包變更、加概要\r
\r
如果要打包成一個新既變更，應提供修改內容概要：\r
\r
\`\`\`bash\r
git commit -m "Fixed some bugs."\r
\`\`\`\r
\r
如果想喺上次既變更（無論上左 remote repository 未）上作二次修改，然後更改修改內容概要：\r
\r
\`\`\`bash\r
git commit --amend\r
\`\`\`\r
\r
如果想更改文本編輯器第一行顯示既修改內容概要，可以撳 \`a\`，然後更改，完成之後撳 \`Esc\`，否則跳過呢步。\r
\r
然後喺 CLI 既文字編輯器裡面打 \`:wq\`，再拍 \`Enter\`。\r
\r
如果唔需要更改修改內容概要，可以用：\r
\r
\`\`\`bash\r
git commit --amend --no-edit\r
\`\`\`\r
\r
### 7.3.1 取消打包已打包既變更\r
\r
如果想將一個打包左既變更回復至暫存既狀態（staged）：\r
\r
\`\`\`bash\r
git reset --soft HEAD~1\r
\`\`\`\r
\r
註：\r
\r
-   \`~\` 後面既數字係想刪除既變更數目。\r
    -   如果個變更係黎自 \`--no-ff\` 既 merge，咁我地要刪既只係一個 merge commit。\r
    -   如果係 fast forward 既 merge，因為所有打包左既變更都喺曬度，所以全部 merge 過黎既已打包既變更都要刪除。\r
-   如果涉及既變更本身存在喺 remote repository，咁呢個就係一個毀滅性既操作，因為需要刪除左 remote repository 既變更，所以需要 force push。\r
\r
---\r
\r
### 7.3.2 刪除已打包既變更\r
\r
如果想刪除打包左既一個變更：\r
\r
\`\`\`bash\r
git reset --hard HEAD~1\r
git push --force-with-lease\r
\`\`\`\r
\r
註：\r
\r
-   \`~\` 後面既數字係想刪除既變更數目。\r
    -   如果個變更係黎自 \`--no-ff\` 既 merge，咁我地要刪既只係一個 merge commit。\r
    -   如果係 fast forward 既 merge，因為所有打包左既變更都喺曬度，所以全部 merge 過黎既已打包既變更都要刪除。\r
-   如果有任何已經存在喺 remote repository 既變更喺 local 被刪除左，咁呢個就係一個毀滅性既操作，因為需要刪除 remote repository 既變更，所以需要 force push。\r
\r
![](blog/2020-09/git-basics/ff-vs-noff-merge.png)\r
\r
---\r
\r
### 7.3.3 將多個變更合併成一個\r
\r
如果唔想個變更紀錄存在太多個變更，但又想保留所有變更內容，有好幾個方法可以將幾個變更合併成 \`1\` 個。\r
\r
方法一：將多個已打包既變更回復至暫存既狀態（staged），再打包成 \`1\` 個變更。\r
\r
假如我地想合併 \`2\` 個變更：\r
\r
\`\`\`bash\r
git reset --soft HEAD~2\r
\`\`\`\r
\r
方法二：刪除多個已打包既變更，再用合併變更既方式將後來既所有變更喺暫存區（stage）合併。\r
\r
假如我地想合併 \`2\` 個變更：\r
\r
\`\`\`bash\r
git reset --hard HEAD~2\r
git merge --squash HEAD@{1}\r
git commit -m "Combined commit message."\r
\`\`\`\r
\r
方法三：用比較強大既 rebase 功能。\r
\r
假如我地想合併 \`2\` 個變更：\r
\r
\`\`\`bash\r
git rebase -i HEAD~2\r
\`\`\`\r
\r
1. Interactive rebase 會開啟文字編輯器，將 commits（\`HEAD~2\` 就會係 \`2\` 個）依時間順序由上至下咁列出黎，而每個 commit ID 既左邊都會寫住 \`pick\`。\r
1. 除左最頂果 \`1\` 個 commit 留返係 \`pick\`，其餘改成 \`s\`（意思係 squash），完成之後撳 \`Esc\`，然後打 \`:wq\`，再拍 \`Enter\`。\r
1. 之後會進入變更概要既文字編輯器，我地可以喺裡面修改變更概要，完成之後撳 \`Esc\`，然後打 \`:wq\`，再拍 \`Enter\`。\r
\r
註：\r
\r
-   \`~\` 後面既數字係想處理既變更數目，如果要合併 \`3\` 個變更，就要用 \`HEAD~3\`。\r
    -   如果個變更係黎自 \`--no-ff\` 既 merge，咁我地要刪既只係一個 merge commit。\r
    -   如果係 fast forward 既 merge，因為所有打包左既變更都喺曬度，所以全部 merge 過黎既已打包既變更都要刪除。\r
-   如果有任何已經存在喺 remote repository 既變更喺 local 被刪除左，咁呢個就係一個毀滅性既操作，因為需要刪除 remote repository 既變更，所以需要 force push。\r
\r
參考資料：\r
\r
-   [StackOverflow - Squash my last X commits together using Git](https://stackoverflow.com/questions/5189560/squash-my-last-x-commits-together-using-git)\r
\r
---\r
\r
### 7.3.4 還原毀滅性既操作\r
\r
如果做錯左刪除既操作，除左搵有保留到相關 commits 既同事幫手之外，仲有一個補救既方法。\r
\r
\`\`\`bash\r
git reset --hard ORIG_HEAD\r
\`\`\`\r
\r
註：\r
\r
-   進行毀滅性既操作既時候，Git 會將之前既 \`HEAD\` pointer 覆蓋一個叫 \`ORIG_HEAD\` 既 pointer。\r
-   如果有任何已經存在喺 remote repository 既變更喺 local 被刪除左，咁呢個就係一個毀滅性既操作，因為需要刪除 remote repository 既變更，所以需要 force push。\r
\r
---\r
\r
## 7.4 將變更推上 remote repository\r
\r
如果係新既變更，可以直接行：\r
\r
\`\`\`bash\r
git push\r
\`\`\`\r
\r
行完句 command 之後，以下係常見既結果：\r
\r
-   成功推上 remote repository\r
-   因為 remote repository 有變更，我地個變更唔可以推上去住，需要先下載變更落黎，有可能需要解決 merge conflicts\r
\r
但如果係喺上次既變更上作二次修改，就必須 force push：\r
\r
\`\`\`bash\r
git push --force-with-lease\r
\`\`\`\r
\r
要注意既係 force push 唔係一個好既習慣，除非你係果個 branch 既唯一作者，因為呢個動作有可能會覆寫其他作者喺你最後更新 local branch 至 force push 既呢段時間做過既修改（例如另一個作者基於你上次提交既變更去做修改）。Force push 呢個動作係冇紀錄冇痕跡（Git 本身冇做紀錄，CLI 睇唔出，但 GitHub、Bitbucket 喺某啲情況或者配置下可能會有）。\r
\r
一個好啲既做法係用 force with lease：\r
\r
\`\`\`bash\r
git push --force-with-lease\r
\`\`\`\r
\r
解釋：如果有其他人搶先一步改左野，令到個 branch 既 remote ref 唔同左，咁就同我 local branch 既 ref 唔同，咁 Git 就會 reject 我個 push，而原因就係 \`stale info\`（陳舊資訊）。\r
\r
另外，force push 都會令 commit ID 隨著修改內容甚或相關 metadata 而改變。\r
\r
---\r
\r
## 7.5 重設 local branch\r
\r
如果想 reset local branch，刪曬所有新增過既檔案、復原返刪左既檔案，及還原所有檔案既文本變更，我地可以用：\r
\r
\`\`\`bash\r
git clean -f -d -x && git reset --hard\r
\`\`\`\r
\r
當然最好都係重新 clone 過。\r
\r
---\r
\r
# 8 查看 branch 最近既變更\r
\r
使用以下 commands，我地可以睇到變更概要，但唔會顯示檔案清單或者文本既實際改動內容。\r
\r
基本（顯示既 layout 難睇，亦冇火車軌，唔推薦）：\r
\r
\`\`\`bash\r
git log\r
\`\`\`\r
\r
連埋改左既檔案名：\r
\r
\`\`\`bash\r
git log --stat\r
\`\`\`\r
\r
一行過、連火車軌：\r
\r
\`\`\`bash\r
git log --graph --oneline\r
\`\`\`\r
\r
一行過（包含火車軌、作者、提交日期時間、修改內容概要，最推薦，可以自定義 alias 黎簡化）：\r
\r
\`\`\`bash\r
git log --graph --pretty=format:"%C(cyan)%h%d   %C(green)%ai   %C(white)%<(15)%an%C(yellow)%s"\r
\`\`\`\r
\r
如果有太多行既文字，咁我地可以用 \`up arrow\` 或 \`down arrow\` 黎喺 CLI navigate，會有類似網頁既 scroll 效果。想退出可以撳 \`q\`。\r
\r
---\r
\r
# 9 合併另一個 branch 既變更\r
\r
假如我地有兩個 branches，\`master\` 及 \`feature_branch\`，而 \`feature_branch\` 係由 \`master\` 開出黎，之後我地喺 \`feature_branch\` 有一個或以上既打包左既變更，咁我地就可以將我地喺開 \`feature_branch\` 之後所打包既變更合併到 \`master\` branch。\r
\r
\`\`\`bash\r
git merge --no-ff feature_branch\r
git push\r
\`\`\`\r
\r
|         Merge 方式         | 解釋|\r
| :------------------------: ||\r
|    Fast forward \`--ff\`     | \`git merge\` 既默認策略。FF merge 會直接將 source branch 既 \`HEAD\` pointer 指去 feature branch 既 \`HEAD\` pointer。呢個方法比起 non fast forward 既壞處係我地睇 log 唔會知道邊啲 commits 係關連，因為 merge 左去 target branch 上面既變更同我地喺 target branch 度直接打包變更係一樣。另外，萬一喺開 branch 之後、merge 之前，有人喺 target branch（上面例子既 \`master\`）度加左變更，咁 Git 就冇辦法就咁搬個 pointer 去 source branch（上面例子既 \`feature_branch\`）既 \`HEAD\`，因為咁做會令到 target branch 上面新既 commits 唔見左，咁 Git 就會自動轉用 non fast forward merge，command line 會見到寫住 \`Merge made by the 'recursive' strategy.\`，睇返 log 會見到多左一個 merge commit，因為 Git 幫我地既變更再打包放喺 target branch。 |\r
| Non fast forward \`--no-ff\` | Non FF 既 merge 會將 source branch（上面例子既 \`feature_branch\`）既所有需要 merge 既變更打包成一個 merge commit 放喺 target branch（上面例子既 \`master\`）。|\r
|     Squash \`--squash\`      | Squash 既 merge 可以畀我地將多個變更合併打包成一個變更，呢個變更裡面包括曬本來屬於多個已打包既變更既所有修改內容。|\r
\r
![](blog/2020-09/git-basics/ff-vs-noff-merge.png)\r
\r
合併完成之後，我地可以刪除 \`feature_branch\`，因為我地既變更已經喺 \`master\` branch；亦可以繼續保留 \`feature_branch\`，如果日後再有變更要 merge 可以再行上面既 commands。\r
\r
參考資料：\r
\r
-   [Pull Request Merge Strategies: The Great Debate](https://blog.developer.atlassian.com/pull-request-merge-strategies-the-great-debate/)\r
-   [Merging vs. Rebasing](https://www.atlassian.com/git/tutorials/merging-vs-rebasing)\r
\r
## 9.1 Rebase\r
\r
我地一般都會從 base branch 開新 feature branch，然後加入變更，最後合併 feature branch 到 base branch。\r
\r
基於呢個 workflow，如果我地身處多人既開發環境，當我地埋頭喺自己既 feature branch 加入左好多變更之後，其他開發者都可能搶先一步，已經喺 base branch 上面加入左佢地既變更。如果我地想將變更可以重新基於最新既 base branch，喺最新既變更上面堆疊，咁我地可以用 Git 既 rebase 功能。\r
\r
Rebase 既好處係 merge 既時候唔會產生 merge commit，可以畀我地用 fast forward merge。\r
\r
\`\`\`bash\r
git rebase <base branch>\r
\`\`\`\r
\r
之後有可能因為 base branch 同 feature branch 都修改過同一個檔案而出現 merge conflicts。\r
\r
---\r
\r
## 9.2 解決 merge conflicts\r
\r
如果 \`master\` branch 有啲變更改既檔案同我地既變更改既檔案相同，而 Git 又冇辦法幫我地自動 merge，咁就會有 merge conflicts，只能自行解決。我地要話畀 Git 知我地想用邊個版本，或者開個檔案黎自行修正返：\r
\r
\`\`\`plaintext\r
...\r
<<<<<<< HEAD\r
Hello!\r
=======\r
Hello World\r
>>>>>>> 09f8da31045621b1c2d26d4130763e8f9253db81\r
...\r
\`\`\`\r
\r
我地可以自己修正返個檔案，而另一個方法係用：\r
\r
\`\`\`bash\r
git mergetool\r
\`\`\`\r
\r
默認係用 vimdiff，但如果想方便啲既話，我地可以用一個內建 merge Git conflicts 功能既 IDE，例如 IntelliJ IDEA，又或者用一個支援 merge Git conflicts 既 file diff/merge tool，例如 Beyond Compare。\r
\r
參考資料：\r
\r
-   [Using Beyond Compare with Version Control Systems](https://www.scootersoftware.com/support.php?zz=kb_vcs#gitwindows)\r
-   [Using Beyond Compare with Version Control Systems (macOS)\r
    ](https://www.scootersoftware.com/support.php?zz=kb_vcs_osx#git)\r
\r
---\r
\r
# 10 隱藏變更\r
\r
## 10.1 暫時收埋目前既變更\r
\r
如果我地做做下改動既時候，想做一啲冇關係既 Git 操作，例如將一個 branch merge 去另一個 branch，但又唔想搵個新 folder 重新 clone 過啲 source code，咁呢個 command 就好有用：\r
\r
\`\`\`bash\r
git stash\r
\`\`\`\r
\r
又或者：\r
\r
\`\`\`bash\r
git stash push\r
\`\`\`\r
\r
Git 會將我地目前既變更放到去一個臨時既儲存空間裡面。\r
\r
註：如果變更包括新建立既檔案而我地又想包括埋佢地，咁就要打包入暫存區（stage）先。\r
\r
之後我地行呢句 command 就會見到我地既變更唔見左：\r
\r
\`\`\`bash\r
git status\r
\`\`\`\r
\r
---\r
\r
## 10.2 攞返變更出黎\r
\r
當我地完成冇關係既操作之後，想回復返之前工作既狀態，咁我地行呢句 command 就可以攞返啲變更出黎：\r
\r
\`\`\`bash\r
git stash pop\r
\`\`\`\r
\r
之後我地行呢句 command 就會見到我地先前既變更喺返曬度：\r
\r
\`\`\`bash\r
git status\r
\`\`\`\r
\r
---\r
\r
# 11 將單一檔案換成其他版本\r
\r
將修改左既檔案還原：\r
\r
\`\`\`bash\r
git checkout HEAD path/to/file\r
\`\`\`\r
\r
將檔案換成其他 branch 既版本：\r
\r
\`\`\`bash\r
git checkout <branch> path/to/file\r
\`\`\`\r
\r
---\r
\r
# 12 加入單一已存在既變更\r
\r
如果我地想將某一個 branch 既一個變更加落呢個 branch 度，我地可以用：\r
\r
\`\`\`bash\r
git cherry-pick <commit ID>\r
\`\`\`\r
\r
註：行完之後，會多左一個帶有新 commit ID 既變更。\r
\r
---\r
\r
# 13 修改過往變更概要\r
\r
我地要用 rebase 功能，而因為呢個係一個毀滅性既操作，所以 rebase 完之後要 force push。\r
\r
假如最近既 \`2\` 個有個變更既概要輸入錯左，我地想修改，\r
\r
\`\`\`bash\r
git rebase -i HEAD~2\r
\`\`\`\r
\r
1. Interactive rebase 會開啟文字編輯器，將 commits（\`HEAD~2\` 就會係 \`2\` 個）依時間順序由上至下咁列出黎，而每個 commit ID 既左邊都會寫住 \`pick\`。\r
1. 將需要修改既變更由 \`pick\` 改成 \`reword\`，完成之後撳 \`Esc\`，然後打 \`:wq\`，再拍 \`Enter\`。\r
1. 之後會進入變更概要既文字編輯器，我地可以喺裡面修改變更概要，完成之後撳 \`Esc\`，然後打 \`:wq\`，再拍 \`Enter\`。\r
\r
註：\r
\r
-   \`~\` 後面既數字係想處理既變更數目，如果要合併 \`3\` 個變更，就要用 \`HEAD~3\`。\r
\r
---\r
\r
# 14 本地 Git command 執行紀錄（reflog）\r
\r
Reflog 係一個本地既 Git command 執行紀錄列表，而每個 command 執行紀錄都有對應既 commit ID。呢個功能可以方便我地恢復本地既 repository 去某個時間點既 commit ID。\r
\r
例子：執行左 \`git reset --hard HEAD~5\` 之後 force push 左上 remote repository，但之後想還原返。呢個時候可以用：\r
\r
\`\`\`bash\r
git reflog\r
\`\`\`\r
\r
我地會見到一堆 commit IDs，然後可以根據紀錄還原返 \`git reset --hard\` 之前既狀態。\r
\r
\`\`\`bash\r
git reset --hard <commit ID>\r
\`\`\`\r
\r
註：\r
\r
-   Reflog 既紀錄係有增無減，有別於 \`git log\` 既變更紀錄。\r
-   利用 \`git reset --hard\`，我地可以隨意喺唔同既變更紀錄之間跳黎跳去。\r
\r
---\r
\r
# 15 自定義指令別名\r
\r
用 \`git b\` 執行 \`git branch\`：\r
\r
\`\`\`bash\r
git config --global --replace-all alias.b "branch"\r
\`\`\`\r
\r
\`\`\`bash\r
git b\r
\`\`\`\r
\r
用 \`git co\` 執行 \`git checkout\`：\r
\r
\`\`\`bash\r
git config --global --replace-all alias.co "checkout"\r
\`\`\`\r
\r
\`\`\`bash\r
git co master\r
\`\`\`\r
\r
用 \`git amend\` 執行 \`git commit --amend --no-edit\`：\r
\r
\`\`\`bash\r
git config --global --replace-all alias.amend "commit --amend --no-edit"\r
\`\`\`\r
\r
\`\`\`bash\r
git amend\r
\`\`\`\r
\r
用 \`git pushf\` 執行 \`git push --force-with-lease\`：\r
\r
\`\`\`bash\r
git config --global --replace-all alias.pushf "push --force-with-lease"\r
\`\`\`\r
\r
\`\`\`bash\r
git pushf\r
\`\`\`\r
\r
用 \`git lg\` 執行 \`git log\` 連自定義顯示格式：\r
\r
\`\`\`bash\r
git config --global --replace-all alias.lg "log --pretty=format:'%C(cyan)%h%d   %C(green)%ai   %C(white)%<(15)%an%C(yellow)%s'"\r
\`\`\`\r
\r
\`\`\`bash\r
git lg\r
git lg --all\r
\`\`\`\r
\r
自定義 diff tool 用 Beyond Compare 4：\r
\r
\`\`\`bash\r
git config --global diff.tool bc\r
git config --global difftool.bc.path "/path/to/Beyond Compare 4/BComp.exe"\r
\`\`\`\r
\r
自定義 merge tool 用 Beyond Compare 4：\r
\r
\`\`\`bash\r
git config --global merge.tool bc\r
git config --global mergetool.bc.path "/path/to/Beyond Compare 4/BComp.exe"\r
\`\`\`\r
\r
話畀 Git 知 merge 完唔需要 backup 原檔做 \`.orig\`：\r
\r
\`\`\`bash\r
git config --global mergetool.keepBackup false\r
\`\`\`\r
`,TR=`# 1 背景\r
\r
當我地做一個大型既 Spring project，我地有唔少 entity／DO／DTO／VO／POJO classes，而呢啲 classes 一般只有 instance fields、getters 以及 setters。我地好多時候都需要將啲不同 types 但擁有部分相同 fields 既 objects 既 field values 抄黎抄去，令到啲 service classes 有好多將 type \`XxxEntity\` 轉換成 type \`XxxDto\` 既 boilerplate code。\r
\r
如果 \`2\` 個 types 既 fields 係一樣名，我地可以用以下既 libraries 去做 shallow object copy／clone：\r
\r
-   Apache Commons BeanUtils\r
    -   \`BeanUtils.copyProperties(dest, orig)\`\r
    -   \`PropertyUtils.copyProperties(dest, orig)\`\r
-   cglib（code generation library）\r
    -   \`BeanCopier.create(clazz, clazz, false).copy(from, to, null)\`\r
-   Spring Core / Spring Beans\r
    -   \`BeanUtils.copyProperties(source, target)\`（Spring Beans 引入左 Apache Commons BeanUtils 既 source code）\r
    -   \`BeanCopier.create(source, target)\`（Spring Core 引入左 cglib 既 source code）\r
\r
要 deep copy／clone 既話：\r
\r
-   Jackson Databind\r
    -   \`new ObjectMapper().convertValue(fromValue, toValueType)\`\r
    -   \`new ObjectMapper().readValue(new ObjectMapper().writeValueAsString(value), valueType)\`\r
\r
| Object copy／clone 既類別 | 解釋                                                                                            |\r
| :-----------------------: | ----------------------------------------------------------------------------------------------- |\r
|          Shallow          | 只會 copy values。如果有 custom types，佢地既 memory references 會係一樣。                      |\r
|           Deep            | 成個 object 既表層到最深果層都會 copy。如果有 custom types，佢地既 memory references 會唔一樣。 |\r
\r
另外，非常值得注意既係我地仲要 handle one-to-one、one-to-many、many-to-many 既 has-a relationship，必須避免 circular reference 導致 serialization 既過程中出現無限既 recursion。\r
\r
---\r
\r
# 2 MapStruct 簡介\r
\r
-   MapStruct 有啲似 Lombok，係一個 compile time 既 annotation processor library，利用 annotations 黎 generate code。\r
-   有別於其他 object copy 既 libraries，MapStruct 用既係 declarative programming 既方式，所以我地只需要寫 interfaces，而 MapStruct 會自動 generate implementation classes。\r
-   MapStruct 可以做到唔同 field 名之間既 mapping，亦可以 copy 不同層既 fields。\r
-   MapStruct 可以 reuse mapper methods，或者 mapper annotations 既 rules。\r
-   MapStruct 所 generate 出黎既 mapper classes 可以帶有 \`@Component\`，用於 Spring projects。\r
\r
---\r
\r
# 3 MapStruct 例子\r
\r
假如我地而家有以下既 DTO classes：\r
\r
-   \`Author\` entity（ORM 用）\r
-   \`AuthorDto\` DTO（API 用）\r
-   \`Book\` entity（ORM 用）\r
-   \`BookDto\` DTO（API 用）\r
\r
而 \`Author\` 裡面 has-a \`List<Book>\`，而 \`Book\` 裡面 has-a \`Author\`。\r
\r
相同地，\`AuthorDto\` 裡面 has-a \`List<BookDto>\`，而 \`BookDto\` 裡面 has-a \`AuthorDto\`。\r
\r
---\r
\r
# 4 Eclipse 安裝 m2e-apt\r
\r
首先，Eclipse 要安裝 \`m2e-apt\` plugin，否則唔會 generate 到 code 去 \`target/generated-sources/annotations\`。\r
\r
---\r
\r
# 5 動手寫\r
\r
Project structure：\r
\r
-   \`src/main/java\`\r
    -   \`/code\`\r
        -   \`/dto\`\r
            -   \`AuthorDto.java\`\r
            -   \`BookDto.java\`\r
        -   \`/entity\`\r
            -   \`Author.java\`\r
            -   \`Book.java\`\r
\r
## 5.1 Maven dependencies\r
\r
\`\`\`xml\r
<properties>\r
    <org.mapstruct.version>1.4.2.Final</org.mapstruct.version>\r
    <lombok.version>1.18.24</lombok.version>\r
\r
    <m2e.apt.activation>jdt_apt</m2e.apt.activation>\r
</properties>\r
\r
<dependency>\r
    <groupId>org.mapstruct</groupId>\r
    <artifactId>mapstruct</artifactId>\r
    <version>\${org.mapstruct.version}</version>\r
</dependency>\r
\r
<plugin>\r
    <groupId>org.apache.maven.plugins</groupId>\r
    <artifactId>maven-compiler-plugin</artifactId>\r
    <version>3.8.1</version>\r
    <configuration>\r
        <source>1.8</source>\r
        <target>1.8</target>\r
        <annotationProcessorPaths>\r
            <path>\r
                <groupId>org.projectlombok</groupId>\r
                <artifactId>lombok</artifactId>\r
                <version>\${lombok.version}</version>\r
            </path>\r
            <path>\r
                <groupId>org.mapstruct</groupId>\r
                <artifactId>mapstruct-processor</artifactId>\r
                <version>\${org.mapstruct.version}</version>\r
            </path>\r
        </annotationProcessorPaths>\r
        <compilerArgs>\r
            <compilerArg>\r
                -Amapstruct.defaultComponentModel=spring\r
            </compilerArg>\r
            <compilerArg>\r
                -Amapstruct.suppressGeneratorTimestamp=true\r
            </compilerArg>\r
            <compilerArg>\r
                -Amapstruct.suppressGeneratorVersionInfoComment=true\r
            </compilerArg>\r
        </compilerArgs>\r
    </configuration>\r
</plugin>\r
\`\`\`\r
\r
---\r
\r
## 5.2 寫 Java code\r
\r
### 5.2.1 Entity\r
\r
\`Author.java\`：\r
\r
\`\`\`java\r
@Getter\r
@Setter\r
@ToString\r
@FieldDefaults(level = PRIVATE)\r
@Entity(name = "author_1toM")\r
@Table(name = "\`author_1toM\`")\r
public class Author {\r
\r
    @Id\r
    @GeneratedValue(strategy = IDENTITY)\r
    @Column(name = "\`id\`")\r
    Long id;\r
\r
    @Column(name = "\`first_name\`", nullable = false)\r
    String firstName;\r
\r
    @Column(name = "\`last_name\`", nullable = false)\r
    String lastName;\r
\r
    @ToString.Exclude\r
    @OneToMany(mappedBy = "author", cascade = ALL, orphanRemoval = true)\r
    List<Book> books = new ArrayList<>();\r
\r
    public void addBook(Book book) {\r
        books.add(book);\r
        book.setAuthor(this);\r
    }\r
\r
    public void removeBook(Book book) {\r
        books.remove(book);\r
        book.setAuthor(null);\r
    }\r
\r
    public void removeAllBooks() {\r
        books.forEach(e -> e.setAuthor(null));\r
        books.clear();\r
    }\r
\r
    @Override\r
    public boolean equals(Object obj) {\r
        if (this == obj)\r
            return true;\r
        if (!(obj instanceof Author))\r
            return false;\r
        Author other = (Author) obj;\r
        return Objects.equals(id, other.id);\r
    }\r
\r
    @Override\r
    public int hashCode() {\r
        return 2021;\r
    }\r
}\r
\`\`\`\r
\r
\`Book.java\`：\r
\r
\`\`\`java\r
@Data\r
@FieldDefaults(level = PRIVATE)\r
@EqualsAndHashCode(onlyExplicitlyIncluded = true)\r
@Entity(name = "book_1toM")\r
@Table(name = "\`book_1toM\`")\r
public class Book {\r
\r
    @Id\r
    @GeneratedValue(strategy = IDENTITY)\r
    @Column(name = "\`id\`")\r
    Long id;\r
\r
    @Column(name = "\`title\`", nullable = false)\r
    String title;\r
\r
    @EqualsAndHashCode.Include\r
    @NaturalId\r
    @Column(name = "\`isbn\`", nullable = false)\r
    String isbn;\r
\r
    @ToString.Exclude\r
    @ManyToOne(fetch = LAZY)\r
    Author author;\r
}\r
\`\`\`\r
\r
---\r
\r
### 5.2.2 DTO\r
\r
\`AuthorDto.java\`：\r
\r
\`\`\`java\r
@Getter\r
@Setter\r
@FieldDefaults(level = PRIVATE)\r
public class AuthorDto {\r
    Long authorId;\r
    String firstName;\r
    String lastName;\r
\r
    @JsonManagedReference\r
    List<BookDto> books;\r
}\r
\`\`\`\r
\r
\`BookDto.java\`：\r
\r
\`\`\`java\r
@Getter\r
@Setter\r
@FieldDefaults(level = PRIVATE)\r
public class BookDto {\r
    Long bookId;\r
    String title;\r
    String isbn;\r
\r
    @JsonBackReference\r
    AuthorDto author;\r
}\r
\`\`\`\r
\r
---\r
\r
### 5.2.3 Mapper\r
\r
我地想喺 \`Author\` entity 同 \`AuthorDto\` DTO，以及 \`Book\` entity 同 \`BookDto\` DTO 之間做 bean mapping，以便之後需要將 ORM 用既 beans 轉成我地 API 需要既樣。\r
\r
\`MyMapper.java\`：\r
\r
\`\`\`java\r
@Mapper(nullValuePropertyMappingStrategy = IGNORE)\r
public interface OneToManyAuthorViewMapper {\r
\r
    @Mapping(source = "id", target = "authorId")\r
    AuthorDto toDto(Author author, @Context BidirectionalMappingContext context);\r
\r
    @InheritInverseConfiguration\r
    Author toEntity(AuthorDto author, @Context BidirectionalMappingContext context);\r
\r
    @Mapping(source = "id", target = "bookId")\r
    BookDto toDto(Book book, @Context BidirectionalMappingContext context);\r
\r
    @InheritInverseConfiguration\r
    Book toEntity(BookDto book, @Context BidirectionalMappingContext context);\r
}\r
\`\`\`\r
\r
\`BidirectionalMappingContext.java\`：\r
\r
\`\`\`java\r
/**\r
 * This mapping context can help mapping DTO objects with bidirectional relationship to entity objects\r
 * without losing the bidirectional relationship.<br>\r
 * To be used with MapStruct's {@link Context} annotation in mappers.\r
 *\r
 * @see <a href="https://github.com/jannis-baratheon/stackoverflow--mapstruct-mapping-graph-with-cycles">MapStruct bidirectional mapping</a>\r
 * @see <a href="https://github.com/mapstruct/mapstruct/issues/1347">ClassCastException for CycleAvoidingMappingContext when hierarchy is not exactly the same</a>\r
 */\r
public final class BidirectionalMappingContext {\r
    private final Map<Object, Object> knownInstances = new IdentityHashMap<>();\r
\r
    @BeforeMapping\r
    public <T> T getMappedInstance(Object source, @TargetType Class<T> targetType) {\r
        final Object knownInstance = knownInstances.get(source);\r
        return targetType.isInstance(knownInstance) ? targetType.cast(knownInstance) : null;\r
    }\r
\r
    @BeforeMapping\r
    public void storeMappedInstance(Object source, @MappingTarget Object target) {\r
        knownInstances.put(source, target);\r
    }\r
}\r
\`\`\`\r
\r
#### 5.2.3.1 MapStruct 生成既 implementation class\r
\r
以上既 code 可以令 MapStruct annotation processor generate 出以下既 implementation class：\r
\r
\`\`\`java\r
@Generated(\r
    value = "org.mapstruct.ap.MappingProcessor"\r
)\r
@Component\r
public class OneToManyAuthorViewMapperImpl implements OneToManyAuthorViewMapper {\r
\r
    @Override\r
    public AuthorDto toDto(Author author, BidirectionalMappingContext context) {\r
        AuthorDto target = context.getMappedInstance( author, AuthorDto.class );\r
        if ( target != null ) {\r
            return target;\r
        }\r
\r
        if ( author == null ) {\r
            return null;\r
        }\r
\r
        AuthorDto authorDto = new AuthorDto();\r
\r
        context.storeMappedInstance( author, authorDto );\r
\r
        authorDto.setAuthorId( author.getId() );\r
        authorDto.setBooks( bookListToBookDtoList( author.getBooks(), context ) );\r
        authorDto.setFirstName( author.getFirstName() );\r
        authorDto.setLastName( author.getLastName() );\r
\r
        return authorDto;\r
    }\r
\r
    @Override\r
    public Author toEntity(AuthorDto author, BidirectionalMappingContext context) {\r
        Author target = context.getMappedInstance( author, Author.class );\r
        if ( target != null ) {\r
            return target;\r
        }\r
\r
        if ( author == null ) {\r
            return null;\r
        }\r
\r
        Author author1 = new Author();\r
\r
        context.storeMappedInstance( author, author1 );\r
\r
        author1.setId( author.getAuthorId() );\r
        author1.setBooks( bookDtoListToBookList( author.getBooks(), context ) );\r
        author1.setFirstName( author.getFirstName() );\r
        author1.setLastName( author.getLastName() );\r
\r
        return author1;\r
    }\r
\r
    @Override\r
    public BookDto toDto(Book book, BidirectionalMappingContext context) {\r
        BookDto target = context.getMappedInstance( book, BookDto.class );\r
        if ( target != null ) {\r
            return target;\r
        }\r
\r
        if ( book == null ) {\r
            return null;\r
        }\r
\r
        BookDto bookDto = new BookDto();\r
\r
        context.storeMappedInstance( book, bookDto );\r
\r
        bookDto.setBookId( book.getId() );\r
        bookDto.setAuthor( toDto( book.getAuthor(), context ) );\r
        bookDto.setIsbn( book.getIsbn() );\r
        bookDto.setTitle( book.getTitle() );\r
\r
        return bookDto;\r
    }\r
\r
    @Override\r
    public Book toEntity(BookDto book, BidirectionalMappingContext context) {\r
        Book target = context.getMappedInstance( book, Book.class );\r
        if ( target != null ) {\r
            return target;\r
        }\r
\r
        if ( book == null ) {\r
            return null;\r
        }\r
\r
        Book book1 = new Book();\r
\r
        context.storeMappedInstance( book, book1 );\r
\r
        book1.setId( book.getBookId() );\r
        book1.setAuthor( toEntity( book.getAuthor(), context ) );\r
        book1.setIsbn( book.getIsbn() );\r
        book1.setTitle( book.getTitle() );\r
\r
        return book1;\r
    }\r
\r
    protected List<BookDto> bookListToBookDtoList(List<Book> list, BidirectionalMappingContext context) {\r
        List<BookDto> target = context.getMappedInstance( list, List.class );\r
        if ( target != null ) {\r
            return target;\r
        }\r
\r
        if ( list == null ) {\r
            return null;\r
        }\r
\r
        List<BookDto> list1 = new ArrayList<BookDto>( list.size() );\r
        context.storeMappedInstance( list, list1 );\r
\r
        for ( Book book : list ) {\r
            list1.add( toDto( book, context ) );\r
        }\r
\r
        return list1;\r
    }\r
\r
    protected List<Book> bookDtoListToBookList(List<BookDto> list, BidirectionalMappingContext context) {\r
        List<Book> target = context.getMappedInstance( list, List.class );\r
        if ( target != null ) {\r
            return target;\r
        }\r
\r
        if ( list == null ) {\r
            return null;\r
        }\r
\r
        List<Book> list1 = new ArrayList<Book>( list.size() );\r
        context.storeMappedInstance( list, list1 );\r
\r
        for ( BookDto bookDto : list ) {\r
            list1.add( toEntity( bookDto, context ) );\r
        }\r
\r
        return list1;\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
### 5.2.4 Mapper 使用方法\r
\r
我地只需要喺一個 Spring manage 緊既 component 裡面 inject mapper 既 dependency 就得：\r
\r
\`\`\`java\r
import org.springframework.transaction.annotation.Transactional;\r
\r
@Service("oneToManyAuthorService")\r
@Transactional(rollbackFor = Throwable.class)\r
public class AuthorService {\r
\r
    @Autowired AuthorRepository authorRepository;\r
    @Autowired OneToManyAuthorViewMapper authorMapper;\r
\r
    @GetMapping\r
    public List<AuthorDto> getAuthors() {\r
        return authorRepository.findAll().stream()\r
                 .map(e -> authorMapper.toDto(e, new BidirectionalMappingContext()))\r
                 .collect(toList());\r
    }\r
\r
    @PostMapping\r
    public AuthorDto upsertAuthor(AuthorDto author) {\r
        Author authorEntity = authorMapper.toEntity(author, new BidirectionalMappingContext());\r
        authorEntity = authorRepository.save(authorEntity);\r
\r
        return authorMapper.toDto(authorEntity, new BidirectionalMappingContext());\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
# 6 筆記\r
\r
## 6.1 MapStruct annotations\r
\r
| Annotation                                                                                  | 解釋                                                                                                                                                                                                                                                                                                                                             |\r
| ------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r
| \`@Mapping(source = "id", target = "authorId", qualifiedByName = "customMappingMethodName")\` | 如果有 property 名不相同就需要用呢個 annotation，將 \`source.id\` map 去 \`target.authroId\`。而 \`qualifiedByName\` 可以畀我地用自己寫既 static method 黎做客製化 mapping，例如轉換 data type 或者做一啲特別既處理。                                                                                                                                  |\r
| \`@InheritInverseConfiguration\`                                                              | 示意 MapStruct 用相反方向既 mapper method 配置黎作為而家呢個 mapping 既配置。                                                                                                                                                                                                                                                                    |\r
| \`@InheritConfiguration\`                                                                     | 用喺 update/patch method 上，將第一個 parameter 既 object 既 fields 抄去第二個 parameter 既 object 度，規則跟返現有既 return type 係 parameter 2 既 type 而 parameter type 係 parameter 1 既 type 既 mapper method。                                                                                                                             |\r
| \`@Named("customMappingMethodName")\`                                                         | 如果需要做一啲特別既處理，可以寫一個 static method，例如 \`public static TargetType customMappingMethodName(SourceType source) { return convertSourceToTarget(source); }\` 可以轉換 data type，亦可以同時做啲特別既邏輯處理；夾埋 \`@Mapping(source = "sourceField", target = "targetField", qualifiedByName = "customMappingMethodName")\` 一齊用。 |\r
\r
---\r
\r
## 6.2 Lombok、\`equals\`、\`hashCode\`\r
\r
-   \`@ToString.Exclude\`\r
    -   因為 Lombok 既 \`@Data\` 包括左 \`@ToString\`，默認情況下 generate 出黎既 \`toString\` method 會包括曬所有 instance fields。\r
    -   我地唔可以畀 \`toString\` method 包括有 relationship 既 fields，因為當 call \`toString\` 果陣就會不知不覺間令 entity 既 proxy object 背後 trigger JPA／Hibernate 去自動執行 SQL 去 fetch 有 relationship 既 table records。\r
    -   呢個 annotation 可以令 Lombok generate \`toString\` method 果陣唔包括呢個 field。\r
-   \`@EqualsAndHashCode(onlyExplicitlyIncluded = true)\`、\`@EqualsAndHashCode.Include\`\r
    -   因為 Lombok 既 \`@Data\` 包括左 \`@EqualsAndHashCode\`，默認情況下 generate 出黎既 \`equals\` 以及 \`hashCode\` methods 會包括曬所有 instance fields。\r
    -   如果係 \`@OneToMany\` 既 relationship，我地會用 \`List\`（容許重複）或者 \`Set\`（唔容許重複）。\r
        -   因為我地既 entity objects 係 mutable，如果用左 \`Set\`，而 \`equals\` 以及 \`hashCode\` methods 用左會變既 fields，咁就有可能會出問題，因為 \`HashSet\` 內部係用 \`HashMap\` 黎實現。\r
    -   我地喺 JPA／Hibernate project 裡面寫既 \`equals\` 以及 \`hashCode\` methods 應該要喺唔同既 Hibernate states 都返回一致既結果。\r
        -   Hibernate states\r
            -   Transient／new\r
            -   Managed／persistent\r
            -   Detached\r
            -   Removed\r
        -   Database auto-increment 既 primary key（surrogate key）column 唔適合用喺 \`equals\` 以及 \`hashCode\` methods。\r
            -   當個 entity object 處於 transient／new state 既時候呢個 field 既 value 係 \`null\`。\r
            -   當個 entity object 變成 managed／persistent state 既時候 database 會賦予呢個 field 一個 auto-increment 出黎既 value。\r
            -   如果咁做，我地會放唔到 \`2\` 個未 persist 既 entity objects 喺一個 \`Set\` 入面，因為單靠呢個 field 而佢地又係 \`null\` 既情況下根本分唔到佢地係咪一樣。\r
            -   如果咁做，當我地放個新既 entity object 喺一個 \`Set\` 入面，然後 persist 佢，佢既呢個 field value 會由 \`null\` 變成 non-null，當我地用 \`Set#contains\` 就會搵唔返佢出黎，咁係因為 \`hashCode\` 唔同左，佢搵既 bucket 就唔同左，自然就會搵唔到。\r
        -   \`equals\` 以及 \`hashCode\` methods 應該要用 \`1\` 個業務層面上 value 唔會重複既 column（business key）。\r
            -   例子\r
                -   \`tbl_user\` table 可以用 \`email\` column。\r
                -   \`tbl_book\` table 可以用 \`isbn\` column。\r
            -   如果冇既話，\`equals\` method 可以用 surrogate key（必須 check \`null\`），而 \`hashCode\` method 可以用一個不變值（例如 \`2021\`）。\r
                -   用不變值既話，如果 entity objects 放喺 \`Set\` 或者 \`Map\` 裡面，而 \`Set\` 或者 \`Map\` 好大既話，有可能會會影響性能。\r
                    -   其實點都好，用得 JPA／Hibernate，我地都唔應該一次過喺 database 查詢太多紀錄。\r
    -   呢 \`2\` 個 annotations 一齊用可以令 Lombok generate \`equals\` 以及 \`hashCode\` methods 果陣只包括 \`@EqualsAndHashCode.Include\` 既 fields。\r
\r
---\r
\r
## 6.3 其他 object copy 方法\r
\r
\`RootLayer.java\`：\r
\r
\`\`\`java\r
@Data\r
@NoArgsConstructor\r
@AllArgsConstructor\r
@FieldDefaults(level = PRIVATE)\r
public class RootLayer {\r
    SecondLayer second;\r
}\r
\`\`\`\r
\r
\`SecondLayer.java\`：\r
\r
\`\`\`java\r
@Data\r
@NoArgsConstructor\r
@AllArgsConstructor\r
@FieldDefaults(level = PRIVATE)\r
public class SecondLayer {\r
    ThirdLayer third;\r
}\r
\`\`\`\r
\r
\`ThirdLayer.java\`：\r
\r
\`\`\`java\r
@Data\r
@NoArgsConstructor\r
@AllArgsConstructor\r
@FieldDefaults(level = PRIVATE)\r
public class ThirdLayer {\r
    String data;\r
}\r
\`\`\`\r
\r
\`ObjectCopyTest.java\`：\r
\r
\`\`\`java\r
import org.apache.commons.beanutils.BeanUtils;\r
import net.sf.cglib.beans.BeanCopier;\r
\r
public class ObjectCopyTest {\r
    private static final RootLayer SOURCE = new RootLayer(new SecondLayer(new ThirdLayer("abc")));\r
\r
    @Test\r
    public void test_ApacheCommonsBeanUtils() throws Exception {\r
        final RootLayer result = new RootLayer();\r
        BeanUtils.copyProperties(result, SOURCE);\r
\r
        System.out.println("BeanUtils: " + result);\r
\r
        Assert.assertNotNull(result);\r
        Assert.assertNotNull(result.getSecond());\r
        Assert.assertNotNull(result.getSecond().getThird());\r
        Assert.assertEquals("abc", result.getSecond().getThird().getData());\r
\r
        // shallow copy\r
        Assert.assertTrue(result.getSecond()==SOURCE.getSecond());\r
        Assert.assertTrue(result.getSecond().getThird()==SOURCE.getSecond().getThird());\r
    }\r
\r
    @Test\r
    public void test_cglib() {\r
        final RootLayer result = new RootLayer();\r
        BeanCopier.create(SOURCE.getClass(), result.getClass(), false).copy(SOURCE, result, null);\r
\r
        System.out.println("cglib: " + result);\r
\r
        Assert.assertNotNull(result);\r
        Assert.assertNotNull(result.getSecond());\r
        Assert.assertNotNull(result.getSecond().getThird());\r
        Assert.assertEquals("abc", result.getSecond().getThird().getData());\r
\r
        // shallow copy\r
        Assert.assertTrue(result.getSecond()==SOURCE.getSecond());\r
        Assert.assertTrue(result.getSecond().getThird()==SOURCE.getSecond().getThird());\r
    }\r
\r
    @Test\r
    public void test_jacksonDatabind_convertValue() {\r
        final RootLayer result = new ObjectMapper().convertValue(SOURCE, RootLayer.class);\r
\r
        System.out.println("Jackson (convertValue): " + result);\r
\r
        Assert.assertNotNull(result);\r
        Assert.assertNotNull(result.getSecond());\r
        Assert.assertNotNull(result.getSecond().getThird());\r
        Assert.assertEquals("abc", result.getSecond().getThird().getData());\r
\r
        // deep copy\r
        Assert.assertFalse(result.getSecond()==SOURCE.getSecond());\r
        Assert.assertFalse(result.getSecond().getThird()==SOURCE.getSecond().getThird());\r
    }\r
\r
    @Test\r
    public void test_jacksonDatabind_serializeAndDeserialize() throws Exception {\r
        final ObjectMapper mapper = new ObjectMapper();\r
        final RootLayer result = mapper.readValue(mapper.writeValueAsString(SOURCE), RootLayer.class);\r
\r
        System.out.println("Jackson (serialize and deserialize): " + result);\r
\r
        Assert.assertNotNull(result);\r
        Assert.assertNotNull(result.getSecond());\r
        Assert.assertNotNull(result.getSecond().getThird());\r
        Assert.assertEquals("abc", result.getSecond().getThird().getData());\r
\r
        // deep copy\r
        Assert.assertFalse(result.getSecond()==SOURCE.getSecond());\r
        Assert.assertFalse(result.getSecond().getThird()==SOURCE.getSecond().getThird());\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
# 7 參考資料\r
\r
-   [MapStruct 官網 - Reference Guide](https://mapstruct.org/documentation/stable/reference/html/)\r
-   [七種對象複製工具類，阿粉該 Pick 誰？](https://www.51cto.com/article/624593.html)（[備份一](https://web.archive.org/web/20230521190621/https://www.51cto.com/article/624593.html)／[備份二](https://archive.ph/Sfa2R)）\r
-   [Spring Boot Persistence Best Practices（e-book）](https://www.apress.com/gp/book/9781484256251)\r
-   [Lombok & Hibernate: How to Avoid Common Pitfalls](https://thorben-janssen.com/lombok-hibernate-how-to-avoid-common-pitfalls/)\r
    -   Don’t Use \`@EqualsAndHashCode\`\r
    -   Be Careful with \`@ToString\`\r
    -   Avoid \`@Data\`\r
-   [Lombok and JPA: What may go wrong?](https://jpa-buddy.com/blog/lombok-and-jpa-what-may-go-wrong/)\r
-   [StackOverflow - The JPA hashCode() / equals() dilemma](https://stackoverflow.com/questions/5031614/the-jpa-hashcode-equals-dilemma)\r
-   [Don't Let Hibernate Steal Your Identity](https://web.archive.org/web/20171211235806/http://www.onjava.com/pub/a/onjava/2006/09/13/dont-let-hibernate-steal-your-identity.html)\r
`,MR=`# 1 關於 web scraping\r
\r
Web scraping 即係網頁抓取，相關既技術更可以用黎做自動化。只要對象係網頁，我地都可以用呢篇文章教既 3rd party Java libraries 黎處理。\r
\r
## 1.1 技術簡介\r
\r
Web scrapers 既技術可以簡單分為以下兩種：\r
\r
| 種類                                       | 描述                                                                                                                                                                                                                                                                                                                           | 例子     |\r
| ------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | -------- |\r
| HTML parser                                | 目標網頁既目標資訊必須係以 static 網頁方式黎呈現，唔支援抓取個網頁以運行 JavaScript 黎獲取既資訊                                                                                                                                                                                                                               | jsoup    |\r
| HTML parser (支援以 JavaScript 生成既元素) | 支援 static 網頁之餘，亦支援抓取個網頁以運行 JavaScript 黎獲取既資訊。因為背後其實係用左瀏覽器既 API 黎駁去瀏覽器，所以運行既時候係需要運行埋一個真既瀏覽器（可以係 under automated testing mode），然後配合一個瀏覽器既 driver（瀏覽器既相關官網都會提供埋，如 Chrome/Chromium 既 for developer 既網站有提供埋 chromedriver） | Selenium |\r
\r
註：個網頁以運行 JavaScript 黎獲取既資訊——意思即係目標網頁既目標資訊係透過 HTTP request，又稱 AJAX 既方式，動態咁改個網頁 HTML DOM，\r
而唔係成版 HTML source 同一時間、一炮過，以一個 HTTP GET request（下載網頁）咁下載。例子有某啲實時股價報價網頁，佢地可以係用 JavaScript（如 jQuery）去處理 DOM。\r
\r
## 1.2 注意事項\r
\r
### 1.2.1 可行性\r
\r
基本上一般網頁都可以成為 web scraping 既目標，因為佢地就算有措施防範 DDoS，都好可能會疏於防範 web scraping。\r
\r
不過最重視資訊安全既網站，例如 Google（Google Search 等）以及需要用 captcha、reCAPTCHA 登入或進行其他操作既時候證明唔係機械人既網站，就未必畀我地無限量咁去做 web scraping，因為佢地有完善既防 web scraping 安全措施，例如以 JavaScript 黎判斷 cursor 既移動路徑、撳按鈕既時候撳既位置等等。另外都有部分網站應用左 Cloudflare 既 anti-DDoS solution，所以呢啲網站都未必可以畀我地進行 web scraping。\r
\r
只要目標網頁既 HTML DOM 結構冇點樣大改，我地個程式都仍然可以正常運作。\r
\r
---\r
\r
### 1.2.2 法律風險\r
\r
網頁上既資訊有各式各樣既版權，如果獲取既資訊係要商用，必須先了解清楚法律條文。另外就係如果自動化既 web scraper 運行得太密，以致被定性為 DDoS，\r
咁都有可能帶黎法律風險。\r
\r
---\r
\r
# 2 動手使用 jsoup 抓取靜態網頁\r
\r
## 2.1 幾時用 jsoup\r
\r
jsoup 係一個 HTML parser，擁有強大既 API 畀我地根據 HTML source 既 tags 同各種 attributes 去定位 DOM nodes。\r
\r
佢只係適用於 static 網頁，如果網頁上既資訊黎自於 HTTP request（Chrome developer tools 既 Network 分頁下屬於 XHR 既分類），如果唔係一啲簡單到我地可以用 Postman 試都試到出黎既 HTTP request，咁就唔應該用 jsoup，而係要用更強大、可以行到 JavaScript（擁有 JavaScript engine）既工具先得。咁既情況就要用 Selenium/Selenide，而唔係單純既 HTML parser。\r
\r
---\r
\r
## 2.2 需求情境\r
\r
試想像我地而家想寫一個程式，可以幫我地喺不同既軟件網站獲取軟件版本資訊，以便我地知道我地手上既軟件清單上面邊啲軟件有更新（基本上就係我寫過既 Software Version Checker 工具）。\r
\r
其中一個通用得黎又簡單直接既方法就係用 jsoup 呢一個 HTML parser library 去將成個網頁既 HTML 下載落黎，然後 parse 個 HTML，定位我地想要既資訊。\r
\r
![](blog/2020-09/web-scraping-with-jsoup/software-version-checker.png)\r
\r
---\r
\r
## 2.3 分析\r
\r
Notepad++ 包含版本資訊既官方網站網址係 [https://notepad-plus-plus.org/downloads/](https://notepad-plus-plus.org/downloads/)。\r
\r
從頁面可以睇到，有兩個位置都提供最新版本既資訊：\r
\r
-   左手邊既 \`Current Version\`\r
-   中間 Downloads 既第一個 item\r
\r
咁既然佢都已經寫到明 \`Current Version\`，我地就信佢呢個 value 啦。\r
\r
![](blog/2020-09/web-scraping-with-jsoup/notepadplusplus-downloads.png)\r
\r
---\r
\r
## 2.4 添加 Maven dependencies\r
\r
\`pom.xml\` 裡面需要以下 dependency：\r
\r
\`\`\`xml\r
<dependency>\r
    <groupId>org.jsoup</groupId>\r
    <artifactId>jsoup</artifactId>\r
    <version>1.13.1</version>\r
</dependency>\r
\`\`\`\r
\r
如果想 build 一個 JAR 出黎運行，可以加上 Maven build plugin：\r
\r
\`\`\`xml\r
<build>\r
    <plugins>\r
        <plugin>\r
            <groupId>org.apache.maven.plugins</groupId>\r
            <artifactId>maven-shade-plugin</artifactId>\r
            <version>3.2.4</version>\r
            <executions>\r
                <execution>\r
                    <phase>package</phase>\r
                    <goals>\r
                        <goal>shade</goal>\r
                    </goals>\r
                    <configuration>\r
                        <transformers>\r
                            <transformer\r
                                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">\r
                                <mainClass>code.Main</mainClass> <!-- 改成你既 main class -->\r
                            </transformer>\r
                        </transformers>\r
                    </configuration>\r
                </execution>\r
            </executions>\r
        </plugin>\r
    </plugins>\r
</build>\r
\`\`\`\r
\r
---\r
\r
## 2.5 寫 Java code\r
\r
### 2.5.1 下載網頁 HTML\r
\r
我地先寫到佢可以下載到 Notepad++ 下載頁既 HTML：\r
\r
\`\`\`java\r
public class Main {\r
\r
    public static void main(String[] args) throws Exception {\r
\r
        final Document doc = Jsoup.connect("https://notepad-plus-plus.org/downloads/").get();\r
        final String html = doc.body().html();\r
\r
        System.out.println(html);\r
    }\r
}\r
\`\`\`\r
\r
運行程式，我地可以得到：\r
\r
\`\`\`xml\r
<a href="#main">skip to content</a>\r
<svg style="display: none"> <symbol id="bookmark" viewbox="0 0 40 50">\r
  <g transform="translate(2266 3206.2)">\r
   <path style="stroke:currentColor;stroke-width:3.2637;fill:none" d="m-2262.2-3203.4-.2331 42.195 16.319-16.318 16.318 16.318.2331-42.428z" />\r
  </g>\r
 </symbol> <symbol id="w3c" viewbox="0 0 127.09899 67.763">\r
  <text font-size="83" style="font-size:83px;font-family:Trebuchet;letter-spacing:-12;fill-opacity:0" letter-spacing="-12" y="67.609352" x="-26.782778">\r
   W3C\r
  </text>\r
  <text font-size="83" style="font-size:83px;font-weight:bold;font-family:Trebuchet;fill-opacity:0" y="67.609352" x="153.21722" font-weight="bold">\r
   SVG\r
  </text>\r
  <path style="fill:currentColor;image-rendering:optimizeQuality;shape-rendering:geometricPrecision" d="m33.695.377 12.062 41.016 12.067-41.016h8.731l-19.968 67.386h-.831l-12.48-41.759-12.479 41.759h-.832l-19.965-67.386h8.736l12.061 41.016 8.154-27.618-3.993-13.397h8.737z" />\r
  <path style="fill:currentColor;image-rendering:optimizeQuality;shape-rendering:geometricPrecision" d="m91.355 46.132c0 6.104-1.624 11.234-4.862 15.394-3.248 4.158-7.45 6.237-12.607 6.237-3.882 0-7.263-1.238-10.148-3.702-2.885-2.47-5.02-5.812-6.406-10.022l6.82-2.829c1.001 2.552 2.317 4.562 3.953 6.028 1.636 1.469 3.56 2.207 5.781 2.207 2.329 0 4.3-1.306 5.909-3.911 1.609-2.606 2.411-5.738 2.411-9.401 0-4.049-.861-7.179-2.582-9.399-1.995-2.604-5.129-3.912-9.397-3.912h-3.327v-3.991l11.646-20.133h-14.062l-3.911 6.655h-2.493v-14.976h32.441v4.075l-12.31 21.217c4.324 1.385 7.596 3.911 9.815 7.571 2.22 3.659 3.329 7.953 3.329 12.892z" />\r
  <path style="fill:currentColor;image-rendering:optimizeQuality;shape-rendering:geometricPrecision" d="m125.21 0 1.414 8.6-5.008 9.583s-1.924-4.064-5.117-6.314c-2.693-1.899-4.447-2.309-7.186-1.746-3.527.73-7.516 4.938-9.258 10.13-2.084 6.21-2.104 9.218-2.178 11.978-.115 4.428.58 7.043.58 7.043s-3.04-5.626-3.011-13.866c.018-5.882.947-11.218 3.666-16.479 2.404-4.627 5.954-7.404 9.114-7.728 3.264-.343 5.848 1.229 7.841 2.938 2.089 1.788 4.213 5.698 4.213 5.698l4.94-9.837z" />\r
  <path style="fill:currentColor;image-rendering:optimizeQuality;shape-rendering:geometricPrecision" d="m125.82 48.674s-2.208 3.957-3.589 5.48c-1.379 1.524-3.849 4.209-6.896 5.555-3.049 1.343-4.646 1.598-7.661 1.306-3.01-.29-5.807-2.032-6.786-2.764-.979-.722-3.486-2.864-4.897-4.854-1.42-2-3.634-5.995-3.634-5.995s1.233 4.001 2.007 5.699c.442.977 1.81 3.965 3.749 6.572 1.805 2.425 5.315 6.604 10.652 7.545 5.336.945 9.002-1.449 9.907-2.031.907-.578 2.819-2.178 4.032-3.475 1.264-1.351 2.459-3.079 3.116-4.108.487-.758 1.276-2.286 1.276-2.286l-1.276-6.644z" />\r
 </symbol> <symbol id="tag" viewbox="0 0 177.16535 177.16535">\r
  <g transform="translate(0 -875.2)">\r
   <path style="fill-rule:evenodd;stroke-width:0;fill:currentColor" d="m159.9 894.3-68.79 8.5872-75.42 77.336 61.931 60.397 75.429-76.565 6.8495-69.755zm-31.412 31.835a10.813 10.813 0 0 1 1.8443 2.247 10.813 10.813 0 0 1 -3.5174 14.872l-.0445.0275a10.813 10.813 0 0 1 -14.86 -3.5714 10.813 10.813 0 0 1 3.5563 -14.863 10.813 10.813 0 0 1 13.022 1.2884z" />\r
  </g>\r
 </symbol> <symbol id="balloon" viewbox="0 0 141.73228 177.16535">\r
  <g transform="translate(0 -875.2)">\r
   <g>\r
    <path style="fill:currentColor" d="m68.156 882.83-.88753 1.4269c-4.9564 7.9666-6.3764 17.321-5.6731 37.378.36584 10.437 1.1246 23.51 1.6874 29.062.38895 3.8372 3.8278 32.454 4.6105 38.459 4.6694-.24176 9.2946.2879 14.377 1.481 1.2359-3.2937 5.2496-13.088 8.886-21.623 6.249-14.668 8.4128-21.264 10.253-31.252 1.2464-6.7626 1.6341-12.156 1.4204-19.764-.36325-12.93-2.1234-19.487-6.9377-25.843-2.0833-2.7507-6.9865-7.6112-7.9127-7.8436-.79716-.20019-6.6946-1.0922-6.7755-1.0248-.02213.0182-5.0006-.41858-7.5248-.22808l-2.149-.22808h-3.3738z" />\r
    <path style="fill:currentColor" d="m61.915 883.28-3.2484.4497c-1.7863.24724-3.5182.53481-3.8494.63994-2.4751.33811-4.7267.86957-6.7777 1.5696-.28598 0-1.0254.20146-2.3695.58589-5.0418 1.4418-6.6374 2.2604-8.2567 4.2364-6.281 7.6657-11.457 18.43-12.932 26.891-1.4667 8.4111.71353 22.583 5.0764 32.996 3.8064 9.0852 13.569 25.149 22.801 37.517 1.3741 1.841 2.1708 2.9286 2.4712 3.5792 3.5437-1.1699 6.8496-1.9336 10.082-2.3263-1.3569-5.7831-4.6968-21.86-6.8361-33.002-.92884-4.8368-2.4692-14.322-3.2452-19.991-.68557-5.0083-.77707-6.9534-.74159-15.791.04316-10.803.41822-16.162 1.5026-21.503 1.4593-5.9026 3.3494-11.077 6.3247-15.852z" />\r
    <path style="fill:currentColor" d="m94.499 885.78c-.10214-.0109-.13691 0-.0907.0409.16033.13489 1.329 1.0675 2.5976 2.0723 6.7003 5.307 11.273 14.568 12.658 25.638.52519 4.1949.24765 14.361-.5059 18.523-2.4775 13.684-9.7807 32.345-20.944 53.519l-3.0559 5.7971c2.8082.76579 5.7915 1.727 8.9926 2.8441 11.562-11.691 18.349-19.678 24.129-28.394 7.8992-11.913 11.132-20.234 12.24-31.518.98442-10.02-1.5579-20.876-6.7799-28.959-.2758-.4269-.57803-.86856-.89617-1.3166-3.247-6.13-9.752-12.053-21.264-16.131-2.3687-.86369-6.3657-2.0433-7.0802-2.1166z" />\r
    <path style="fill:currentColor" d="m32.52 892.22c-.20090-.13016-1.4606.81389-3.9132 2.7457-11.486 9.0476-17.632 24.186-16.078 39.61.79699 7.9138 2.4066 13.505 5.9184 20.562 5.8577 11.77 14.749 23.219 30.087 38.74.05838.059.12188.1244.18052.1838 1.3166-.5556 2.5965-1.0618 3.8429-1.5199-.66408-.32448-1.4608-1.3297-3.8116-4.4602-5.0951-6.785-8.7512-11.962-13.051-18.486-5.1379-7.7948-5.0097-7.5894-8.0586-13.054-6.2097-11.13-8.2674-17.725-8.6014-27.563-.21552-6.3494.13041-9.2733 1.775-14.987 2.1832-7.5849 3.9273-10.986 9.2693-18.07 1.7839-2.3656 2.6418-3.57 2.4409-3.7003z" />\r
    <path style="fill:currentColor" d="m69.133 992.37c-6.2405.0309-12.635.76718-19.554 2.5706 4.6956 4.7759 9.935 10.258 12.05 12.625l4.1272 4.6202h11.493l3.964-4.4516c2.0962-2.3541 7.4804-7.9845 12.201-12.768-8.378-1.4975-16.207-2.6353-24.281-2.5955z" />\r
    <rect style="stroke-width:0;fill:currentColor" ry="2.0328" height="27.746" width="22.766" y="1017.7" x="60.201" />\r
   </g>\r
  </g>\r
 </symbol> <symbol id="info" viewbox="0 0 41.667 41.667">\r
  <g transform="translate(-37.035 -1004.6)">\r
   <path style="stroke-linejoin:round;stroke:currentColor;stroke-linecap:round;stroke-width:3.728;fill:none" d="m76.25 1030.2a18.968 18.968 0 0 1 -23.037 13.709 18.968 18.968 0 0 1 -13.738 -23.019 18.968 18.968 0 0 1 23.001 -13.768 18.968 18.968 0 0 1 13.798 22.984" />\r
   <g transform="matrix(1.1146 0 0 1.1146 -26.276 -124.92)">\r
    <path style="stroke:currentColor;stroke-linecap:round;stroke-width:3.728;fill:none" d="m75.491 1039.5v-8.7472" />\r
    <path style="stroke-width:0;fill:currentColor" transform="scale(-1)" d="m-73.193-1024.5a2.3719 2.3719 0 0 1 -2.8807 1.7142 2.3719 2.3719 0 0 1 -1.718 -2.8785 2.3719 2.3719 0 0 1 2.8763 -1.7217 2.3719 2.3719 0 0 1 1.7254 2.8741" />\r
   </g>\r
  </g>\r
 </symbol> <symbol id="warning" viewbox="0 0 48.430474 41.646302">\r
  <g transform="translate(-1.1273 -1010.2)">\r
   <path style="stroke-linejoin:round;stroke:currentColor;stroke-linecap:round;stroke-width:4.151;fill:none" d="m25.343 1012.3-22.14 37.496h44.28z" />\r
   <path style="stroke:currentColor;stroke-linecap:round;stroke-width:4.1512;fill:none" d="m25.54 1027.7v8.7472" />\r
   <path style="stroke-width:0;fill:currentColor" d="m27.839 1042.8a2.3719 2.3719 0 0 1 -2.8807 1.7143 2.3719 2.3719 0 0 1 -1.718 -2.8785 2.3719 2.3719 0 0 1 2.8763 -1.7217 2.3719 2.3719 0 0 1 1.7254 2.8741" />\r
  </g>\r
 </symbol> <symbol id="menu" viewbox="0 0 50 50">\r
  <rect style="stroke-width:0;fill:currentColor" height="10" width="50" y="0" x="0" />\r
  <rect style="stroke-width:0;fill:currentColor" height="10" width="50" y="20" x="0" />\r
  <rect style="stroke-width:0;fill:currentColor" height="10" width="50" y="40" x="0" />\r
 </symbol> <symbol id="link" viewbox="0 0 50 50">\r
  <g transform="translate(0 -1002.4)">\r
   <g transform="matrix(.095670 0 0 .095670 2.3233 1004.9)">\r
    <g>\r
     <path style="stroke-width:0;fill:currentColor" d="m452.84 192.9-128.65 128.65c-35.535 35.54-93.108 35.54-128.65 0l-42.881-42.886 42.881-42.876 42.884 42.876c11.845 11.822 31.064 11.846 42.886 0l128.64-128.64c11.816-11.831 11.816-31.066 0-42.9l-42.881-42.881c-11.822-11.814-31.064-11.814-42.887 0l-45.928 45.936c-21.292-12.531-45.491-17.905-69.449-16.291l72.501-72.526c35.535-35.521 93.136-35.521 128.64 0l42.886 42.881c35.535 35.523 35.535 93.141-.001 128.66zm-254.28 168.51-45.903 45.9c-11.845 11.846-31.064 11.817-42.881 0l-42.884-42.881c-11.845-11.821-11.845-31.041 0-42.886l128.65-128.65c11.819-11.814 31.069-11.814 42.884 0l42.886 42.886 42.876-42.886-42.876-42.881c-35.54-35.521-93.113-35.521-128.65 0l-128.65 128.64c-35.538 35.545-35.538 93.146 0 128.65l42.883 42.882c35.51 35.54 93.11 35.54 128.65 0l72.496-72.499c-23.956 1.597-48.092-3.784-69.474-16.283z" />\r
    </g>\r
   </g>\r
  </g>\r
 </symbol> <symbol id="doc" viewbox="0 0 35 45">\r
  <g transform="translate(-147.53 -539.83)">\r
   <path style="stroke:currentColor;stroke-width:2.4501;fill:none" d="m149.38 542.67v39.194h31.354v-39.194z" />\r
   <g style="stroke-width:25" transform="matrix(.098003 0 0 .098003 133.69 525.96)">\r
    <path d="m220 252.36h200" style="stroke:currentColor;stroke-width:25;fill:none" />\r
    <path style="stroke:currentColor;stroke-width:25;fill:none" d="m220 409.95h200" />\r
    <path d="m220 488.74h200" style="stroke:currentColor;stroke-width:25;fill:none" />\r
    <path d="m220 331.15h200" style="stroke:currentColor;stroke-width:25;fill:none" />\r
   </g>\r
  </g>\r
 </symbol> <symbol id="tick" viewbox="0 0 177.16535 177.16535">\r
  <g transform="translate(0 -875.2)">\r
   <rect style="stroke-width:0;fill:currentColor" transform="rotate(30)" height="155" width="40" y="702.99" x="556.82" />\r
   <rect style="stroke-width:0;fill:currentColor" transform="rotate(30)" height="40" width="90.404" y="817.99" x="506.42" />\r
  </g>\r
 </symbol>\r
</svg>\r
<div class="wrapper">\r
 <header class="intro-and-nav" role="banner">\r
  <div>\r
   <div class="intro"> <a class="logo" href="/" aria-label="Notepad++ home page"> <img src="https://notepad-plus-plus.org/images/logo.svg" alt=""> </a>\r
    <p class="library-desc"> <a href="/downloads/v7.9/"><strong>Current Version 7.9</strong></a> </p>\r
   </div>\r
   <nav id="patterns-nav" class="patterns" role="navigation">\r
    <h2 class="vh">Main navigation</h2> <button id="menu-button" aria-expanded="false">\r
     <svg viewbox="0 0 50 50" aria-hidden="true" focusable="false"> <use xlink:href="#menu"></use>\r
     </svg> Menu </button>\r
    <ul id="patterns-list">\r
     <li class="pattern"> <a href="/">\r
       <svg class="bookmark-icon" aria-hidden="true" focusable="false" viewbox="0 0 40 50"> <use xlink:href="#bookmark"></use>\r
       </svg> <span class="text">Home</span> </a> </li>\r
     <li class="pattern"> <a href="/downloads/" aria-current="page">\r
       <svg class="bookmark-icon" aria-hidden="true" focusable="false" viewbox="0 0 40 50"> <use xlink:href="#bookmark"></use>\r
       </svg> <span class="text">Download</span> </a> </li>\r
     <li class="pattern"> <a href="/news/">\r
       <svg class="bookmark-icon" aria-hidden="true" focusable="false" viewbox="0 0 40 50"> <use xlink:href="#bookmark"></use>\r
       </svg> <span class="text">News</span> </a> </li>\r
     <li class="pattern"> <a href="/online-help/">\r
       <svg class="bookmark-icon" aria-hidden="true" focusable="false" viewbox="0 0 40 50"> <use xlink:href="#bookmark"></use>\r
       </svg> <span class="text">Online Help</span> </a> </li>\r
     <li class="pattern"> <a href="/resources/">\r
       <svg class="bookmark-icon" aria-hidden="true" focusable="false" viewbox="0 0 40 50"> <use xlink:href="#bookmark"></use>\r
       </svg> <span class="text">Resources</span> </a> </li>\r
     <li class="pattern"> <a href="/index.xml">\r
       <svg class="bookmark-icon" aria-hidden="true" focusable="false" viewbox="0 0 40 50"> <use xlink:href="#bookmark"></use>\r
       </svg> <span class="text">RSS</span> </a> </li>\r
     <li class="pattern"> <a href="/donate/">\r
       <svg class="bookmark-icon" aria-hidden="true" focusable="false" viewbox="0 0 40 50"> <use xlink:href="#bookmark"></use>\r
       </svg> <span class="text">Donate</span> </a> </li>\r
     <li class="pattern"> <a href="/author/">\r
       <svg class="bookmark-icon" aria-hidden="true" focusable="false" viewbox="0 0 40 50"> <use xlink:href="#bookmark"></use>\r
       </svg> <span class="text">Author</span> </a> </li>\r
    </ul>\r
   </nav>\r
   <div id="carbon-block"></div>\r
   <script>\r
\r
\r
if (window.location.href === "https://notepad-plus-plus.org/downloads/" || window.location.href.indexOf('/downloads/') === -1){\r
    var carbonScript = document.createElement("script");\r
    carbonScript.src = "//cdn.carbonads.com/carbon.js?serve=CKYIE53I&placement=notepad-plus-plusorg";\r
    carbonScript.id = "_carbonads_js";\r
    document.getElementById("carbon-block").appendChild(carbonScript);\r
}\r
else {\r
    try {\r
      fetch(new Request("https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js", { method: 'HEAD', mode: 'no-cors' })).then(function(response) {\r
        return true;\r
      }).catch(function(e) {\r
        var carbonScript = document.createElement("script");\r
        carbonScript.src = "//cdn.carbonads.com/carbon.js?serve=CE7DVKJM&placement=notepad-plus-plusorg";\r
        carbonScript.id = "_carbonads_js";\r
        document.getElementById("carbon-block").appendChild(carbonScript);\r
      });\r
    } catch (error) {\r
      console.log(error);\r
    }\r
}\r
\r
<\/script>\r
  </div>\r
 </header>\r
 <div class="main-and-footer">\r
  <div>\r
   <main id="main">\r
    <h1>Downloads</h1>\r
    <ul class="patterns-list">\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.9/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.9: Stand with Hong Kong </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.8.9/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.8.9: Stand with Hong Kong </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.8.8/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.8.8 release </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.8.7/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.8.7 release </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.8.6/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.8.6 release </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.8.5/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.8.5 release </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.8.4/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.8.4 release </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.8.3/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.8.3: Free Uyghur </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.8.2/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.8.2: Free Uyghur </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.8.1/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.8.1: Free Uyghur </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.8/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.8 release </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.7.1/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.7.1 release </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.7/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.7 release </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.6.6/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.6.6 release </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.6.4/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.6.4 release </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.6.3/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.6.3 release </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.6.2/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.6.2 Gilet Jaune Edition </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.5.6/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.5.6 release </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.5.4/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.5.4 release </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.3.3/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7.3.3 - CIA Hack fixed </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v7.0/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 7 - 64 bits </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v6.9/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 6.9 </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v6.8.7/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 6.8.7 Black Friday Discount </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v6.7.4/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 6.7.4 - Je suis Charlie edition </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v6.6.6/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 666 </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v6.6.4/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 6.6.4 - Tiananmen June Fourth Incident Edition </a> </h2> </li>\r
     <li> <h2> <a href="https://notepad-plus-plus.org/downloads/v6.2.3/">\r
        <svg class="bookmark" aria-hidden="true" viewbox="0 0 40 50" focusable="false"> <use xlink:href="#bookmark"></use>\r
        </svg> Notepad++ 6.2.3 release </a> </h2> </li>\r
    </ul>\r
   </main>\r
   <footer role="contentinfo">\r
    <div> <label for="themer"> dark theme: <input type="checkbox" id="themer" class="vh"> <span aria-hidden="true"></span> </label>\r
    </div>\r
   </footer>\r
  </div>\r
 </div>\r
</div>\r
<script src="https://notepad-plus-plus.org/js/prism.js"><\/script>\r
<script src="https://notepad-plus-plus.org/js/dom-scripts.js"><\/script>\r
\`\`\`\r
\r
---\r
\r
### 2.5.2 取得定點資訊\r
\r
拎到 HTML source 之後，我地可以根據 \`Current Version\` 既 DOM 定位，定點咁取得版本 value。\r
\r
以下係 \`Current Version\` 果段既節錄：\r
\r
\`\`\`xml\r
<p class="library-desc"> <a href="/downloads/v7.9/"><strong>Current Version 7.9</strong></a> </p>\r
\`\`\`\r
\r
其實用 \`Current Version\` 呢隻字都已經夠。\r
\r
\`\`\`java\r
public class Main {\r
\r
    public static void main(String[] args) throws Exception {\r
\r
        final Document doc = Jsoup.connect("https://notepad-plus-plus.org/downloads/").get();\r
//        final String html = doc.body().html();\r
\r
//        System.out.println(html);\r
\r
        final Element currentVersionElement = doc.body().getElementsMatchingOwnText("Current Version").first();\r
        final String currentVersion = currentVersionElement.ownText();\r
\r
        System.out.println(currentVersion);\r
    }\r
}\r
\`\`\`\r
\r
結果如下：\r
\r
\`\`\`plaintext\r
Current Version 7.9\r
\`\`\`\r
\r
之後攞淨個 version number 就 ok，點樣 manipulate string 唔詳細講了。\r
\r
---\r
\r
## 2.6 DOM node 定位方法\r
\r
喺例子裡面，我地用左 \`Element#getElementsMatchingOwnText(regex)\` 去定位 \`Current Version\` 字眼既 DOM node，但其實有好幾個方法。\r
\r
唯一美中不足既無 jsoup 唔支援 XPath 格式既 selector，which is 一個比 CSS selector 更強大既方法。\r
\r
### 2.6.1 根據字眼定位\r
\r
呢個係最簡單直接既方法，有時可能連 Chrome developer tools 都唔需要用到。\r
\r
Methods 有：\r
\r
-   \`getElementsContainingText(searchText)\`\r
-   \`getElementsContainingOwnText(searchText)\`\r
-   \`getElementsMatchingText(regex)\`\r
-   \`getElementsMatchingOwnText(regex)\`\r
\r
---\r
\r
### 2.6.2 用 id 定位\r
\r
另一個準確既定位方法係用 Chrome developer tools 裡面見到既 \`id\` 或者 \`name\` attribute 黎定位 DOM node。\r
\r
Method 有：\r
\r
-   \`getElementById(id)\`\r
\r
---\r
\r
### 2.6.3 用 class 定位\r
\r
我地可以喺 Chrome developer tools 裡面見到個 tag 既 \`class\` attribute 就用佢黎定位 DOM node，如 \`class="btn"\`。\r
\r
Method 有：\r
\r
-   \`getElementsByClass(className)\`\r
\r
---\r
\r
### 2.6.4 用 attribute 定位\r
\r
我地可以喺 Chrome developer tools 裡面見到 \`id\`、\`class\` 以外既 attributes 就用佢地黎定位 DOM node，例如 \`name\`、\`style\`、\`href\` 等等。\r
\r
Methods 有：\r
\r
-   \`getElementsByAttribute(key)\`\r
-   \`getElementsByAttributeValueMatching(key, regex)\`\r
\r
---\r
\r
### 2.6.5 用 tag 定位\r
\r
我地可以喺 Chrome developer tools 裡面見到個 tag 名就用佢黎定位 DOM node，例如 \`<div>\`、\`<h3>\`、\`<ul>\`。\r
但一般都係先用左比較準確咁 narrow down 到 HTML DOM node 去好接近既兩三層先再用呢個方法黎定位 child node 或者 sibling node。\r
\r
Method 有：\r
\r
-   \`getElementsByTag(tagName)\`\r
\r
---\r
\r
### 2.6.6 用 CSS selector 定位\r
\r
有寫過網頁既人都應該會識寫 CSS selector。比起其他方法有時候要我地串連多個 methods，用 CSS selector 係一個相對簡潔既選擇。\r
\r
Methods 有：\r
\r
-   \`select(cssQuery)\`\r
-   \`selectFirst(cssQuery)\`\r
\r
例子——以下係用 jsoup 既 DSL methods 既寫法：\r
\r
\`\`\`java\r
final String smallestVersionOnDownloadsPage = Jsoup.connect("https://notepad-plus-plus.org/downloads/").get()\r
    .getElementsByClass("patterns-list").first()\r
    .getElementsByTag("li").last()\r
    .getElementsByTag("h2").first()\r
    .getElementsByTag("a").first()\r
    .ownText();\r
\`\`\`\r
\r
而以下就係用 CSS selector 既寫法：\r
\r
\`\`\`java\r
final String smallestVersionOnDownloadsPage = Jsoup.connect("https://notepad-plus-plus.org/downloads/").get()\r
    .selectFirst(".patterns-list li:last-child h2 a")\r
    .ownText();\r
\`\`\`\r
\r
結果都一樣係：\r
\r
\`\`\`plaintext\r
Notepad++ 6.2.3 release\r
\`\`\`\r
`,AR=`## 1 Java 9 帶黎既改變\r
\r
### 1.1 模組化 - Java Platform Module System (JPMS)\r
\r
Java 9 提供左 module system，呢個功能亦叫做 Project Jigsaw。\r
\r
模組化功能主要係想解決：\r
\r
-   JAR 檔定義喺類別路徑中既順序，經常會有同名類別遮蓋既問題\r
-   JAR 對包裝既類別沒有封裝機制，即使開發中既程式庫想隱藏底層使用到既實作品，但只要係 \`public\` 既類型，API 開發者就見得到、用得到\r
-   JAR 檔案充其量只係個方便傳送既器皿，佢冇辦法表示彼此之間既依賴關係，當發生 \`ClassNotFoundException\` 既時候，我地好難知道到底缺少左邊個 JAR 檔\r
-   JDK 1.1 由 10MB 以下到而家 JDK 8+ 既 200+ MB，越黎越大，模組化亦可以令到需要既 JRE 細啲\r
\r
參考資料：\r
\r
-   [Java 9 模組化概觀](https://www.ithome.com.tw/voice/112345)\r
-   [理解 Java 9 的模組](https://medium.com/java-magazine-translation/%E7%90%86%E8%A7%A3-java-9-%E7%9A%84%E6%A8%A1%E7%B5%84-4aa30e1c7df9)\r
-   [【JDK 11】關於 Java 模組系統，看這一篇就夠了](https://www.mdeditor.tw/pl/pZVS/zh-tw)\r
\r
---\r
\r
### 1.2 \`interface\` 支援 \`private\` methods\r
\r
Java 9 既 \`interface\` 既 methods 可以有 \`private\` access modifier，令到 interface 更加似 class。\r
\r
呢啲 \`private\` methods 唔可以係 \`abstract\`。\r
\r
\`\`\`java\r
public interface Foo {\r
\r
    private void sayHi() {\r
        // do sth\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
### 1.3 Anonymous class 可以用 \`<>\`\r
\r
\`<>\` 又叫 diamond operator，係用黎表示 generic type(s) 重複。\r
\r
Java 9 之前，anonymous class 要我地寫清楚 generic type(s) 或重複前面定義變數既 generic type(s)，但 Java 9 既 anonymous class 就唔需要再重複 \`<>\` 裡面既 generic type(s)，留空就可以。\r
\r
---\r
\r
### 1.4 Try-with-resources 支援 \`try\` 前定義既變數\r
\r
只要變數係 final 或 effectively final，就可以用喺 \`try\` block。\r
\r
Java 9 之前既 try-with-resources：\r
\r
\`\`\`java\r
try (Scanner scanner = new Scanner(new File("testRead.txt"));\r
     PrintWriter writer = new PrintWriter(new File("testWrite.txt"))) {\r
    // ...\r
}\r
\`\`\`\r
\r
Java 9 既 try-with-resources：\r
\r
\`\`\`java\r
final Scanner scanner = new Scanner(new File("testRead.txt"));\r
PrintWriter writer = new PrintWriter(new File("testWrite.txt"));\r
\r
try (scanner; writer) {\r
    // ...\r
}\r
\`\`\`\r
\r
---\r
\r
### 1.5 Collections API 新增 \`of\` 既 method\r
\r
就好似 \`Arrays.asList\` 咁，Java 9 既 collection classes 新增左 \`of\` static method：\r
\r
\`\`\`java\r
List<Integer> myList = List.of(1, 2, 3);\r
Set<Integer> mySet = Set.of(1, 2, 3);\r
Map<String, Integer> myMap = Map.of("one", 1, "two", 2);\r
\`\`\`\r
\r
以上既 \`of\` methods 都會返回一個 immutable 既 collection object。\r
\r
---\r
\r
### 1.6 Reactive streams publisher/subscriber framework（反應式流發布/訂閱框架）\r
\r
Java 9 新增左 reactive streams publish-subscribe framework for asynchronous stream processing with non-blocking backpressure（支援異步非阻塞背壓流式處理既反應式流發布/訂閱框架）。\r
\r
參考資料：\r
\r
-   [Java 9 Reactive Streams](https://www.baeldung.com/java-9-reactive-streams)\r
-   [The Reactive Manifesto](https://www.reactivemanifesto.org/)\r
\r
---\r
\r
### 1.7 \`Stream\` 新增 methods\r
\r
Java 9 既 \`Stream\` 新增左以下 methods：\r
\r
-   \`dropWhile\`\r
-   \`takeWhile\`\r
-   \`ofnullable\`\r
-   \`iterate​(T seed, Predicate<? super T> hasNext, UnaryOperator<T> next)\`\r
\r
---\r
\r
### 1.8 \`Arrays\` 新增 \`mismatch\` method\r
\r
Java 9 既 \`Arrays\` 新增左 \`mismatch\` static method，可以搵出兩個 arrays 既第一個唔同既元素。\r
\r
---\r
\r
### 1.9 StackWalker API\r
\r
Java 9 新增既 StackWalker API 可以畀我地遊歷、流處理 method call 既整個 stack。\r
\r
參考資料：\r
\r
-   [Introduction to Java 9 StackWalking API](https://www.baeldung.com/java-9-stackwalking-api)\r
\r
---\r
\r
### 1.10 Process API 改良\r
\r
Java 9 改良左 Process API 既 \`ProcessHandle\`，而家我地可以攞到：\r
\r
-   Process ID（PID）\r
-   User\r
-   開始時間\r
-   用左幾多 CPU 時間\r
-   幾多個本地 processes 運行緊\r
\r
---\r
\r
## 2 Java 10 帶黎既改變\r
\r
### 2.1 新增 \`var\` keyword\r
\r
Java 10 新增左 \`var\` keyword 用於簡化定義 local 變數。Java compiler 會根據 value 去推斷變量既 type。\r
\r
\`\`\`java\r
var greeting = "Hello World!";\r
\`\`\`\r
\r
---\r
\r
## 3 Java 11 帶黎既改變\r
\r
### 3.1 \`String\` 新增 methods\r
\r
-   \`isBlank\`\r
-   \`lines\`\r
-   \`repeat\`\r
-   \`strip\`\r
\r
---\r
\r
### 3.2 \`HttpClient\` API 支援 HTTP/2\r
\r
Java 11 之前，\`HttpClient\` 只係支援 HTTP/1.1，Java 11 既 \`HttpClient\` 就支援 HTTP/1.1 同 HTTP/2（默認）。\r
\r
---\r
\r
### 3.3 移除 Java EE\r
\r
Java 11 移除左 Java EE––包括 JAX-WS、JAXB、JSR-250 既 annotations（如 \`@PostConstruct\`、\`@PreDestroy\` 等），但我地仲可以透過加入如 \`javax.annotation\` 既 \`javax.annotation-api\` 等 Maven dependencies 黎重新取得相關 Java EE 功能。\r
\r
---\r
\r
### 3.4 移除 JavaFX\r
\r
為左更好咁發展 JavaFX，Oracle 認為應該將 JavaFX 獨立出黎，所以 Java 11 移除左 JavaFX，以後想以最新既 Java graphical user interface（GUI）rich client 技術開發 desktop apps 就要自行將 OpenJFX 既 JavaFX 加入 project 既 classpath。\r
\r
參考資料：\r
\r
-   [Oracle - JavaFX 2 Downloads](https://www.oracle.com/java/technologies/javafx2-archive-downloads.html)\r
-   [OpenJFX 官網](https://openjfx.io/)\r
\r
---\r
\r
## 4 Java 12 帶黎既改變\r
\r
### 4.1 \`Collectors\` 新增 \`teeing\` method\r
\r
Java 12 既 \`Collectors\` 新增左 \`teeing\` 既 method，可以將兩個 \`Collector\` 既結果合併，放落一個 object 裡面，例如 \`Map\`。\r
\r
參考資料：\r
\r
-   [Collectors teeing() method examples](https://howtodoinjava.com/java12/collectors-teeing-example/)\r
\r
---\r
\r
### 4.2 \`Files\` 新增 \`mismatch\` method\r
\r
Java 12 既 \`Files\` 新增左 \`mismatch\` static method，可以比較兩個 \`Path\` 既檔案內容，並且搵出第一個唔同既 byte。\r
\r
---\r
\r
## 5 Java 13 帶黎既改變\r
\r
### 5.1 重寫 Socket API\r
\r
Java 13 將好舊既 Socket API 底層 Java + C code 重寫左。\r
\r
---\r
\r
## 6 Java 14 帶黎既改變\r
\r
### 6.1 \`switch\` 語句改良\r
\r
Java 14 既 \`switch\` 語句可以直接返回一樣野。\r
\r
\`\`\`java\r
int numLetters = switch (day) {\r
    case MONDAY, FRIDAY, SUNDAY -> 6;\r
    case TUESDAY                -> 7;\r
    default      -> {\r
      String s = day.toString();\r
      int result = s.length();\r
      yield result;\r
    }\r
};\r
\`\`\`\r
\r
---\r
\r
## 7 Java 15 帶黎既改變\r
\r
### 7.1 Text block（文本塊）、\`String\` 新增 \`formatted\` method\r
\r
Java 15 畀我地將多行既 string 直接放喺 source code 度，唔需要用 newline（\`\\n\`）甚或自己分開幾行然後用 \`+\` 號。\r
\r
\`\`\`java\r
String html = """\r
<html>\r
    <body>\r
        <p>Hello, world</p>\r
    </body>\r
</html>\r
""";\r
\`\`\`\r
\r
Java compiler 會根據咁多行而搵出最大既共同縮排距離，然後將全部行移除相同既縮排距離。如果唔想出到黎既 string 有縮排，但又想寫出黎既 code 有縮排，formatting 好睇一啲，可以將最後一行加多啲空格增加縮排距離。\r
\r
Java 15 既 \`String\` 亦新增左 \`formatted\` 既 instance method，作用同 \`String\` 既 \`format\` static method 無異。\r
\r
參考資料：\r
\r
-   [Java Text Blocks](https://www.baeldung.com/java-text-blocks)\r
\r
---\r
\r
### 7.2 詳細既 \`NullPointerException\` error message\r
\r
Java 15 既 \`NullPointerException\` 帶黎既 error message 會提供詳細既資訊畀我地知道邊個變數 \`null\` 左。\r
\r
\`\`\`plaintext\r
Exception in thread "main" java.lang.NullPointerException:\r
      Cannot read field "c" because "a.b" is null\r
\`\`\`\r
\r
---\r
\r
### 7.3 移除 Nashorn JavaScript engine\r
\r
Java 15 移除左 Nashorn JavaScript engine。\r
\r
---\r
\r
## 8 Java 16 帶黎既改變\r
\r
### 8.1 \`record\` type\r
\r
Java 16 既 \`record\` type 可以實現 Lombok 既部分功能，減少寫 boilerplate code。\r
\r
\`\`\`\r
record Point(int x, int y) { }\r
\`\`\`\r
\r
伴隨呢個新功能，Java 16 亦都改變左 non-static inner class 既一啲規則，而家我地係可以 declare static fields 以及 static methods。\r
\r
Java 16 之前（將 \`MyInnerClass\` 改成 static 先 compile 到）：\r
\r
\`\`\`java\r
public class MyOuterClass {\r
\r
    // 注意：non-static inner class\r
    public class MyInnerClass {\r
\r
        // JDK 16 之前既版本會有 compilation error：\r
        // The field myField cannot be declared static in a non-static inner type,\r
        // unless initialized with a constant expression\r
        static String myField = "foo";\r
\r
        // JDK 16 之前既版本會有 compilation error：\r
        // The method myMethod cannot be declared static;\r
        // static methods can only be declared in a static or top level type\r
        static String myMethod() {\r
            return "foo";\r
        }\r
    }\r
\r
    public static void main(String[] args) {\r
        System.out.println(MyInnerClass.myField);\r
        System.out.println(MyInnerClass.myMethod());\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
### 8.2 \`instanceof\` 既 pattern matching\r
\r
Java 16 既 \`instanceof\` 可以直接 cast 成某個 type 再拎黎用。\r
\r
\`\`\`java\r
if (obj instanceof String str) {\r
    String value = str;\r
}\r
\`\`\`\r
\r
---\r
\r
### 8.3 \`Stream\` 新增 \`mapMulti\` method\r
\r
寫法一：\r
\r
\`\`\`java\r
final List<String> result = input.stream().mapMulti((Object element, Consumer<String> consumer) -> {\r
	consumer.accept(element + "-1");\r
	consumer.accept(element + "-2");\r
}).collect(toList());\r
\r
System.out.println(result); // [a-1, a-2, b-1, b-2, c-1, c-2]\r
\`\`\`\r
\r
寫法二：\r
\r
\`\`\`java\r
final List<String> result2 = input.stream().<String>mapMulti((element, consumer) -> {\r
	consumer.accept(element + "-1");\r
	consumer.accept(element + "-2");\r
}).collect(toList());\r
\r
System.out.println(result2); // [a-1, a-2, b-1, b-2, c-1, c-2]\r
\`\`\`\r
\r
參考：\r
\r
-   [A Complete Guide to Java Stream mapMulti](https://javadevcentral.com/a-complete-guide-to-java-stream-mapmulti)\r
\r
---\r
\r
## 9 Java 17 帶黎既改變\r
\r
### 9.1 新增 \`sealed\` modifier、\`permits\` keyword\r
\r
Java 17 新增左 \`sealed\` type-level modifier 及 \`permits\` keyword，只有 \`permits\` 後面既 type(s) 先可以 \`extends\` 或者 \`implements\` 呢個 class 或者 interface，畀我地更好咁控制 inheritance。Java 17 之前只有加上 \`final\` 或者唔加 \`final\` 既選擇，冇辦法揀某啲 subtype(s) 黎開放 inheritance。\r
\r
\`permits\` 後面既 type(s) 必須要有 \`final\`、\`sealed\` 或 \`non-sealed\` 既 modifier。\r
\r
例子：\r
\r
\`Shape.java\`：\r
\r
\`\`\`java\r
public sealed class Shape permits Circle, Square, Rectangle {\r
    // ...\r
}\r
\`\`\`\r
\r
\`Circle.java\`：\r
\r
\`\`\`java\r
public final class Circle extends Shape {\r
    // ...\r
}\r
\`\`\`\r
\r
\`Square.java\`：\r
\r
\`\`\`java\r
public non-sealed class Square extends Shape {\r
    // ...\r
}\r
\`\`\`\r
\r
\`Rectangle.java\`：\r
\r
\`\`\`java\r
public sealed class Rectangle extends Shape permits FilledRectangle {\r
    // ...\r
}\r
\`\`\`\r
\r
\`FilledRectangle.java\`：\r
\r
\`\`\`java\r
public final class FilledRectangle extends Rectangle {\r
    // ...\r
}\r
\`\`\`\r
\r
如果 subclass 或者 subinterface 係喺同一個 Java class file 裡面定義，就可以唔洗打 \`permits\`，自動賦予 inheritance 權利畀呢啲 subclass 或者 subinterface。\r
\r
參考資料：\r
\r
-   [StackOverflow - What is the difference between a final and a non-sealed class in Java 15's sealed-classes feature?](https://stackoverflow.com/questions/63972130/what-is-the-difference-between-a-final-and-a-non-sealed-class-in-java-15s-seale)\r
\r
---\r
\r
## 10 【預覽功能】\r
\r
預覽既功能已經喺 JDK 裡面，只要啟動某啲配置就可以用到，只係未被定為最終完成版，之後可能仲會有改動，應該會喺後續既新版推出。\r
\r
### 10.1 Vector API\r
\r
Java 16（預覽）新增左 Vector API，其作用係使用 CPU 既 SIMD（Single Instruction Multiple Data）指令黎提升 CPU 處理 int、float、long、double、short、byte 既 array 既運算效率，有別於現時既 for loop 對每一個 array element 逐一單獨處理。\r
\r
![](blog/2020-10/new-jdk-features-after-8/vector-processing.png)\r
\r
參考資料：\r
\r
-   [Looking into the JDK 16 vector API](https://www.javacodegeeks.com/2021/04/looking-into-the-jdk-16-vector-api.html)\r
-   [Vectorized Algorithms in Java](https://dzone.com/articles/vectorised-algorithms-in-java)\r
-   [為什麼向量化計算（Vectorization）會這麼快？](https://zhuanlan.zhihu.com/p/72953129)\r
-   [官方 Javadoc - Class Vector<E>](https://docs.oracle.com/en/java/javase/16/docs/api/jdk.incubator.vector/jdk/incubator/vector/Vector.html)\r
-   [Intel 官方 - Vector API Developer Program for Java Software](https://software.intel.com/content/www/us/en/develop/articles/vector-api-developer-program-for-java.html)\r
\r
---\r
\r
### 10.2 \`switch\` 既 pattern matching\r
\r
\`\`\`java\r
switch (o) {\r
    case null        -> System.out.println("null");\r
    case String s    -> System.out.println("String");\r
    case int[] arr   -> System.out.println("Array length" + arr.length);\r
    case MyClass obj -> System.out.println(obj.toString());\r
    default          -> System.out.println("Something else");\r
}\r
\`\`\`\r
\r
---\r
\r
### 10.3 Virtual threads\r
\r
參考：\r
\r
-   [Java 19 虛擬線程都來了，我正在寫的線程代碼會被淘汰掉嗎？](https://www.itzhai.com/articles/virtual-thread-in-java19.html)（[備用一](http://web.archive.org/web/20230503012235/https://www.itzhai.com/articles/virtual-thread-in-java19.html)／[備用二](https://archive.ph/wU491)）\r
-   [Java 19 正式 GA！看虛擬線程如何大幅提高系統吞吐量](https://my.oschina.net/u/3883669/blog/5579537)\r
\r
---\r
\r
## 11 參考資料\r
\r
-   [A categorized list of all Java and JVM features since JDK 8 to 21](https://advancedweb.hu/a-categorized-list-of-all-java-and-jvm-features-since-jdk-8-to-21/)\r
-   [What is new in Java 11](https://mkyong.com/java/what-is-new-in-java-11/)\r
-   [What is new in Java 12](https://mkyong.com/java/what-is-new-in-java-12/)\r
-   [What is new in Java 13](https://mkyong.com/java/what-is-new-in-java-13/)\r
-   [What is new in Java 14](https://mkyong.com/java/what-is-new-in-java-14/)\r
-   [What is new in Java 15](https://mkyong.com/java/what-is-new-in-java-15/)\r
-   [What is new in Java 16](https://mkyong.com/java/what-is-new-in-java-16/)\r
-   [What is new in Java 17](https://mkyong.com/java/what-is-new-in-java-17/)\r
-   [What is new in Java 18](https://mkyong.com/java/what-is-new-in-java-18/)\r
-   [What is new in Java 19](https://mkyong.com/java/what-is-new-in-java-19/)\r
-   [Announcement Java 21 Released : JDK 21 Arrived - What's new features in Java 21](https://www.techgeeknext.com/java/java21-features)\r
-   [Latest Java 20 : JDK 20 Arrived - What's new features in Java 20](https://www.techgeeknext.com/java/java20-features)\r
-   [New Features Between Java 8 and Java 19](https://ondro.inginea.eu/index.php/new-features-in-java-versions-since-java-8/)\r
`,PR=`# 1 簡介\r
\r
呢篇文章會講開發 React 之前我地要安裝既軟件或者工具。\r
\r
---\r
\r
# 2 安裝網頁瀏覽器（必須）\r
\r
因為 Chrome 最多人用，所以建議一定要安裝 Chrome。\r
\r
## 2.1 安裝 extensions（可選）\r
\r
Chrome 或者 Firefox 官方應用程式商店都有以下既 extensions 或 add-ons：\r
\r
-   React Developer Tools\r
-   Redux DevTools\r
\r
自行下載安裝。\r
\r
---\r
\r
# 3 安裝 NodeJS（必須）\r
\r
Modern web development 必備既工具，有別於以往既傳統 web development，淨係需要 \`.html\`、\`.css\` 及 \`.js\` 檔。而好處係好多 libraries 會被動咁幫我地 handle 曬大部分開發方面既細節，例如儲存一個 source file 既時候，網頁會自動 refresh，令我地即時見到效果。\r
\r
官網下載 LTS 版：[Node.js - Downloads](https://nodejs.org/en/download/)\r
\r
Node.js 已經包括 npm（Node.js package manager），而 npm 都係必須既工具。\r
\r
解壓縮之後，將 root folder 及 \`node_modules/npm/bin\` 設置成 \`PATH\` 環境變數一部分。\r
\r
然後喺 Command Prompt（Windows）或者 Terminal（macOS）執行以下指令黎確認設定成功：\r
\r
\`\`\`bash\r
node -v\r
npm -v\r
\`\`\`\r
\r
---\r
\r
# 4 安裝 Visual Studio Code IDE（必須）\r
\r
我地可以安裝 VSCodium，佢同 Visual Studio Code 功能完全一樣，但前者既好處係佢唔會將我地既資料 send 去畀 Microsoft。\r
\r
下載最新版（portable）：[VSCodium/vscodium GitHub](https://github.com/vscodium/vscodium/releases)\r
\r
## 4.1 安裝 extensions（必須）\r
\r
有啲 React JS 用既 extensions 係必裝既：\r
\r
-   ES7 React/Redux/GraphQL/React-Native snippets\r
-   ESLint\r
-   Prettier\r
-   npm\r
\r
---\r
\r
## 4.2 自訂配置\r
\r
撳 Ctrl+\`,\`，然後右上角既 Open Settings (JSON) 掣。\r
\r
以下係我既自訂配置：\r
\r
\`\`\`json\r
{\r
	"telemetry.enableCrashReporter": false,\r
	"telemetry.enableTelemetry": false,\r
	"editor.minimap.enabled": false,\r
	"editor.formatOnSave": true,\r
	"editor.detectIndentation": false,\r
	"editor.insertSpaces": false,\r
	"editor.fontFamily": "Monaco, Consolas, 'Courier New', monospace, Microsoft JhengHei",\r
	"workbench.startupEditor": "newUntitledFile",\r
	"workbench.editor.enablePreview": false,\r
	"workbench.tree.indent": 24,\r
	"workbench.list.horizontalScrolling": true,\r
	"workbench.colorCustomizations": {\r
		"activityBar.activeBorder": "#007ac7",\r
		"activityBar.activeBackground": "#294a5b"\r
	},\r
	"explorer.autoReveal": true,\r
	"explorer.confirmDelete": false,\r
	"explorer.openEditors.visible": 0,\r
	"javascript.updateImportsOnFileMove.enabled": "always",\r
	"emmet.includeLanguages": {\r
		"javascript": "javascriptreact"\r
	},\r
\r
	"git.path": "C:/Users/Michael/Desktop/PortableGit/bin/git.exe",\r
	// macOS: "/usr/bin/git"\r
	"git.allowForcePush": true,\r
\r
	"editor.defaultFormatter": "esbenp.prettier-vscode",\r
	"prettier.tabWidth": 4,\r
	"prettier.printWidth": 120,\r
	"prettier.useTabs": true\r
}\r
\`\`\`\r
\r
---\r
\r
## 4.3 自訂 shortcut 配置\r
\r
撳左下角既 Manage 掣 > Keyboard Shortcuts，然後右上角既 Open Keyboard Shortcuts (JSON) 掣。\r
\r
以下係我既自訂 shortcut 配置：\r
\r
\`\`\`json\r
[\r
	{\r
		"key": "ctrl+d", // macOS: cmd+d\r
		"command": "editor.action.deleteLines",\r
		"when": "textInputFocus && !editorReadonly"\r
	},\r
	{\r
		"key": "ctrl+shift+k", // macOS: cmd+shift+k\r
		"command": "-editor.action.deleteLines",\r
		"when": "textInputFocus && !editorReadonly"\r
	},\r
	{\r
		"key": "ctrl+alt+up",\r
		"command": "editor.action.copyLinesUpAction",\r
		"when": "editorTextFocus && !editorReadonly"\r
	},\r
	{\r
		"key": "shift+alt+up",\r
		"command": "-editor.action.copyLinesUpAction",\r
		"when": "editorTextFocus && !editorReadonly"\r
	},\r
	{\r
		"key": "ctrl+alt+down",\r
		"command": "editor.action.copyLinesDownAction",\r
		"when": "editorTextFocus && !editorReadonly"\r
	},\r
	{\r
		"key": "shift+alt+down",\r
		"command": "-editor.action.copyLinesDownAction",\r
		"when": "editorTextFocus && !editorReadonly"\r
	},\r
	{\r
		"key": "ctrl+right", // macOS: alt+right\r
		"command": "cursorWordPartRight",\r
		"when": "textInputFocus && !editorReadonly"\r
	},\r
	{\r
		"key": "ctrl+shift+right", // macOS: shift+alt+right\r
		"command": "cursorWordPartRightSelect",\r
		"when": "textInputFocus && !editorReadonly"\r
	},\r
	{\r
		"key": "ctrl+left", // macOS: alt+left\r
		"command": "cursorWordPartLeft",\r
		"when": "textInputFocus && !editorReadonly"\r
	},\r
	{\r
		"key": "ctrl+shift+left", // macOS: shift+alt+left\r
		"command": "cursorWordPartLeftSelect",\r
		"when": "textInputFocus && !editorReadonly"\r
	},\r
	{\r
		"key": "ctrl+backspace", // macOS: alt+backspace\r
		"command": "deleteWordPartLeft",\r
		"when": "textInputFocus && !editorReadonly"\r
	},\r
	{\r
		"key": "ctrl+shift+backspace", // macOS: alt+delete\r
		"command": "deleteWordPartRight",\r
		"when": "textInputFocus && !editorReadonly"\r
	},\r
	{\r
		"key": "ctrl+delete", // macOS: alt+delete\r
		"command": "-deleteWordRight",\r
		"when": "textInputFocus && !editorReadonly"\r
	},\r
	{\r
		"key": "ctrl+,", // macOS: cmd+,\r
		"command": "-workbench.action.openSettings"\r
	},\r
	{\r
		"key": "ctrl+,", // macOS: cmd+,\r
		"command": "workbench.action.openSettingsJson"\r
	}\r
]\r
\`\`\`\r
\r
---\r
\r
# 5 安裝 Create-React-App（必須）\r
\r
React 有一個 npm package 可以幫我地快速生成一個 React project 既 template。\r
\r
安裝 npm package 既 command：\r
\r
\`\`\`bash\r
npm install -g create-react-app\r
\`\`\`\r
\r
或者用 \`install\` 既 short form —— \`i\`：\r
\r
\`\`\`bash\r
npm i -g create-react-app\r
\`\`\`\r
\r
\`-g\` 係 global 既意思，即係我地呢個 package 並唔係跟 project（喺 \`package.json\` 既 dependencies），而係一個「安裝喺我地系統既程式」既存在。\r
\r
## 5.1 快速生成 project template\r
\r
執行以下 command：\r
\r
\`\`\`bash\r
create-react-app my-sample-react-project\r
\`\`\`\r
\r
之後 Create-React-App 就會喺 console（Windows Command Prompt、macOS Terminal 等）現時既路徑生成一個 \`my-sample-react-project\` folder，裡面有齊曬一個 React project 需要既野，包括 \`node_modules\`。\r
\r
---\r
\r
## 5.2 試行 React project template\r
\r
生成左之後，喺 project root folder 行以下 command：\r
\r
\`\`\`bash\r
npm start\r
\`\`\`\r
\r
---\r
\r
## 5.3 了解 React project template 內既文件\r
\r
| 檔案／folder            | 用途                                                                                                                                                                                                                                                                                                     |\r
| ----------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| \`package.json\`          | 呢個 project 要用到既 npm packages 都寫曬喺度，每當我地執行 \`npm i\`，Node.js package manager（npm）就會根據呢個檔案內既 dependency npm packages 生成 \`package-lock.json\`，然後下載所有 JavaScript libraries 到 \`node_modules\` folder                                                                     |\r
| \`package-lock.json\`     | 如果想更新所有呢個 project 用到既 npm packages 佢地背後既 dependency npm packages，咁我地可以刪除呢個檔案，但就有可能會因為後面既一啲 JavaScript libraries 更新之後有 bug 而令到個 project 既 behavior 唔同左或者有野無意之間 break 左，所以刪除之前要諗清楚，刪除之後都要試清楚                         |\r
| \`node_modules\`          | 我地呢個 project 用到既 JavaScript libraries，呢啲檔案都係喺 npm 既 public registry 度下載落黎，至於佢個 registry 有冇畀人 hack 過，有冇惡意代碼，到底可唔可信，呢一點就要自己考慮                                                                                                                       |\r
| \`src\`                   | 呢個 project 既所有 JavaScript source code，裡面有 Create-React-App 生成出黎既 Hello World                                                                                                                                                                                                               |\r
| \`public\`                | 呢個 HTML project 既公開文件，瀏覽呢個網站既用戶可以透過 \`<host>/<文件名>\` URL 下載到                                                                                                                                                                                                                    |\r
| \`.git\`（hidden folder） | 係 Git 用黎 version control 呢個 folder 用既一啲 metadata。如果唔需要用 Git 做 version control，可以刪除。如果冇呢個 folder 而又想用 Git，可以執行 \`git init\` 生成。如果係 \`git clone\` 落黎既 project，Git 會自動生成 \`.git\`，commit 然後 push 就可以直接改到 remote repository 上既 project source code |\r
| \`.gitignore\`            | Git ignore 係我地話畀 Git 知我地邊啲 pattern 既 files 或者 folders 唔應該畀 Git 做 version control，例如 \`node_modules\` 呢個 folder 裡面既 JavaScript libraries 都係根據 \`package-lock.json\` 下載落黎／洐生出黎，咁我地冇必要 commit \`node_modules\` 上 Git repo                                          |\r
| \`README.md\`             | Markdown 格式既 project readme 檔案，GitHub、GitLab 等等既 repository 首頁會顯示呢個檔案，可以用 Visual Studio Code 編輯 Markdown 檔案，右上角有個按鈕可以 side-by-side 一邊打字一邊睇結果                                                                                                               |\r
\r
### 5.3.1 了解 \`src\` 內既文件\r
\r
\`src\` folder 裡面既文件以 JavaScript \`.js\` 檔為主，亦都有啲 CSS \`.css\` 檔案：\r
\r
| 檔案        | 用途|\r
| ----------- ||\r
| \`index.js\`  | 網頁既入口。唔用 React/Angular/Vue 既話，一個最 basic 最 vanilla 最 minimal 既網頁只需要一個 \`index.html\` 檔案，而我地 \`public/index.html\` 就係呢個檔案。但係 React/Angular/Vue 呢啲 modern web development library/framework 係 rely on JavaScript 去 call \`document.createElement(...)\`，然後改左 \`index.html\` 上面既一個特定 \`id\` 既 DOM element（React：\`<div id="root"></div>\`） 做我地 \`index.js\` 寫既 \`<App />\`，所以我地係唔需要改 \`public/index.html\` 裡面既 \`<body>\` 裡面既任何野，要改就改 \`index.js\` 裡面會顯示既 \`<App />\`，亦即係 \`src/App.js\` |\r
| \`index.css\` | 呢個係 global 既|\r
| \`App.js\`    | 呢個網頁既 root element，一開始由 Create-React-App 生成出黎，可以清空                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |\r
| \`App.css\`   | \`App.js\` 會 import 呢張 CSS stylesheet|\r
\r
至於其他檔案，例如 \`App.test.js\`、\`reportWebVitals.js\`、\`setupTests.js\`，佢地就唔太重要，純粹 for testing，可以刪除。\`logo.svg\` 就係 Create-React-App 生成既 template 既 Hello World，清空左 \`App.js\` 之後可以刪除。\r
`,RR=`# 1 關於 Lombok\r
\r
一般黎講，我地多數會喺啲只有 properties 既 VO（value object）、DTO（data transfer object）、entity classes 上使用 Lombok。\r
\r
呢啲 classes 有以下既特徵：\r
\r
-   有好多 properties，如 \`private\` 或 \`protected\` 既非 \`static\` properties，但絕對唔會係 \`public\`（除非冇跟到 best practice）\r
-   至少有一個 constructor\r
-   容許我地建立多個 objects（換言之呢個 class 唔可以係 singleton）\r
-   每個 property 都有對應既 getter（\`get\` 開頭，冇 parameter，有 return type，如 \`String getName()\`），而如果係 mutable class 就會有埋 setter（\`set\` 開頭，有 parameter，\`void\` return type，如 \`void setName(String name)\`），呢啲 getters/setters 都係 \`public\`，應該佔呢個 class 既 methods 既大部分，而 getters/setters 其實用 Eclipse 都可以 gen 到出黎，所以被稱為 boilerplate code\r
\r
## 1.1 唔用 Lombok 既例子\r
\r
\`\`\`java\r
public class Person {\r
    private String firstName;\r
    private String lastName;\r
\r
    public String getFirstName() {\r
        return firstName;\r
    }\r
\r
    public String getLastName() {\r
        return lastName;\r
    }\r
\r
    public void setFirstName(String firstName) {\r
        this.firstName = firstName;\r
    }\r
\r
    public void setLastName(String lastName) {\r
        this.lastName = lastName;\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
## 1.2 用左 Lombok 既例子\r
\r
以下例子用左 \`@Getter\` 同 \`@Setter\` 黎為所有 properties 去 gen getters 同 setters，以及 \`@FieldDefaults(level = PRIVATE)\` 去為所有 properties 加上 \`private\` 既 access modifier。\r
\r
\`\`\`java\r
@Getter\r
@Setter\r
@FieldDefaults(level = PRIVATE)\r
public class Person {\r
    String firstName;\r
    String lastName;\r
}\r
\`\`\`\r
\r
---\r
\r
# 2 喺 Eclipse 安裝 Lombok\r
\r
先去 [Lombok 官網下載 JAR 檔](https://projectlombok.org/download)。\r
\r
Double click 個 JAR 檔，選擇 Eclipse 既安裝路徑，然後完成安裝。\r
\r
最後，重新開啟 Eclipse。\r
\r
---\r
\r
# 3 正式使用 Lombok\r
\r
## 3.1 添加 Maven dependencies\r
\r
\`pom.xml\` 裡面需要以下 dependency：\r
\r
\`\`\`xml\r
<dependency>\r
    <groupId>org.projectlombok</groupId>\r
    <artifactId>lombok</artifactId>\r
    <version>1.18.24</version>\r
    <scope>provided</scope>\r
</dependency>\r
\r
\`\`\`\r
\r
---\r
\r
## 3.2 寫 Java code\r
\r
\`\`\`java\r
@Getter\r
@Setter\r
@FieldDefaults(level = PRIVATE)\r
public class Person {\r
    String firstName;\r
    String lastName;\r
}\r
\`\`\`\r
\r
---\r
\r
## 3.3 喺 Eclipse 查看 Outline\r
\r
Eclipse 會話畀我地知我地既 properties 實際上係 \`private\` 同埋呢個 class 有咩 methods，我地應該會見到對應既 getters 同 setters 都已經 gen 左出黎。\r
\r
雖然個 class 既 source code 睇唔到有 getters/setters，但因為 Lombok 已經喺 compile time 幫我地 gen 左 code，所以其實同我地自己寫既 code 冇任何分別。\r
\r
![](blog/2020-10/using-lombok/eclipse-outline.png)\r
\r
---\r
\r
## 3.4 運用 Lombok generate 出黎既 code\r
\r
試驗一下 Lombok gen 出黎同自己寫既有冇分別，毫不意外地 Eclipse 正常 compile 到，冇報任何 error，而運行程式都可以正常咁 call 到 setters 去 set properties、call 到 getters 去 get 返出黎。\r
\r
![](blog/2020-10/using-lombok/use-lombok-generated-code.png)\r
\r
---\r
\r
# 4 更多 Lombok annotations\r
\r
Lombok 有以下既 annotations 都好有用：\r
\r
| Lombok annotation          | 描述                                                                                                                                                                                                                                                                                                                                                                                | 參考                                                                  |\r
| -------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------- |\r
| \`@Getter\`                  | 根據 properties 去 gen getters                                                                                                                                                                                                                                                                                                                                                      | [官網](https://projectlombok.org/features/GetterSetter)               |\r
| \`@Setter\`                  | 根據 properties 去 gen setters，可以加上 \`chain = true\` 去令 setters 既 return type 由 \`void\` 改為個 property 屬於既 class，從而支援 method chaining（\`new Person().setFirstName("Michael").setLastName("Chung")\`）                                                                                                                                                                 | [官網](https://projectlombok.org/features/GetterSetter)               |\r
| \`@ToString\`                | 根據 properties 去 gen \`toString\` method                                                                                                                                                                                                                                                                                                                                            | [官網](https://projectlombok.org/features/ToString)                   |\r
| \`@EqualsAndHashCode\`       | 根據 properties 去 gen \`equals\` 及 \`hashCode\` methods                                                                                                                                                                                                                                                                                                                               | [官網](https://projectlombok.org/features/EqualsAndHashCode)          |\r
| \`@Data\`                    | 懶人包——包括曬 \`@ToString\`、\`@EqualsAndHashCode\`、\`@Getter\`、\`@Setter\` 及 \`@RequiredArgsConstructor\`                                                                                                                                                                                                                                                                                | [官網](https://projectlombok.org/features/Data)                       |\r
| \`@Value\`                   | 懶人包（immutable 版）——包括曬 \`@ToString\`、\`@EqualsAndHashCode\`、\`@AllArgsConstructor\`、\`@FieldDefaults(makeFinal = true, level = PRIVATE)\` 及 \`@Getter\`，而呢個 class 都會係 \`final\`                                                                                                                                                                                              | [官網](https://projectlombok.org/features/Value)                      |\r
| \`@Builder\`                 | 根據 properties 去 gen 一個 inner class 叫 \`XxxBuilder\`（如 \`PersonBuilder\`），builder class 裡面有非 \`set\` 開頭既 setters 同一個 \`build\` method，畀我地用 builder 黎 construct objects，從而做到 builder pattern，亦支援 method chaining                                                                                                                                           | [官網](https://projectlombok.org/features/Builder)                    |\r
| \`@FieldDefaults\`           | 為啲冇 access modifier（default）既 properties 加上 access modifier，如 \`private\`                                                                                                                                                                                                                                                                                                   | [官網](https://projectlombok.org/features/experimental/FieldDefaults) |\r
| \`@NoArgsConstructor\`       | Gen 一個冇 argument 既 constructor，如 \`public Person() {}\`                                                                                                                                                                                                                                                                                                                         | [官網](https://projectlombok.org/features/constructor)                |\r
| \`@RequiredArgsConstructor\` | 根據 class 內 \`final\` 或 \`@NonNull\` 既 properties 去 gen 一個 constructor                                                                                                                                                                                                                                                                                                           | [官網](https://projectlombok.org/features/constructor)                |\r
| \`@AllArgsConstructor\`      | Gen 一個有齊所有 properties 既 constructor                                                                                                                                                                                                                                                                                                                                          | [官網](https://projectlombok.org/features/constructor)                |\r
| \`@Slf4j\`                   | Gen 一個 \`static\` 既 Slf4j \`log\` object 出黎，for 出 log 用（一般都係用 \`log.debug\` 或 \`log.info\` 代替 \`System.out.println\`，用 \`log.warn\` 或 \`log.error\` 代替 \`System.err.println\`），而個 project 需要 \`org.slf4j\` 既 \`slf4j-api\` 及 \`ch.qos.logback\` 既 \`logback-classic\` 兩個 dependencies。另外，我地可以喺 \`main/resources\` 度加個 \`logback.xml\` 檔黎設定 Logback，例子喺下面 | [官網](https://projectlombok.org/features/log)                        |\r
\r
\`logback.xml\`：\r
\r
\`\`\`xml\r
<?xml version="1.0" encoding="UTF-8"?>\r
<configuration>\r
\r
    <property name="LOG_FOLDER" value="logs" />\r
    <property name="LOG_FILE" value="app" />\r
    <property name="STYLE_LOG_PATTERN" value="%magenta(%d{yyyy-MM-dd HH:mm:ss.SSS}) %highlight(%-5level) [%-5t] %cyan(%-50.50replace(%replace(%caller{1}){'Caller.*?at ', 'at '}){'(\\r)?\\n', ''}) - %msg%n" />\r
    <property name="PLAIN_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%-5t] %-50.50replace(%replace(%caller{1}){'Caller.*?at ', 'at '}){'(\\r)?\\n', ''} - %msg%n" />\r
\r
\r
\r
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">\r
        <layout class="ch.qos.logback.classic.PatternLayout">\r
            <Pattern>\${STYLE_LOG_PATTERN}</Pattern>\r
        </layout>\r
    </appender>\r
\r
\r
\r
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">\r
        <file>\${LOG_FOLDER}/\${LOG_FILE}.log</file>\r
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">\r
            <Pattern>\${PLAIN_LOG_PATTERN}</Pattern>\r
        </encoder>\r
\r
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\r
            <!-- rollover daily -->\r
            <fileNamePattern>\${LOG_FOLDER}/archived/\${LOG_FILE}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>\r
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">\r
                <maxFileSize>10MB</maxFileSize>\r
            </timeBasedFileNamingAndTriggeringPolicy>\r
        </rollingPolicy>\r
    </appender>\r
\r
\r
\r
    <root level="info">\r
        <appender-ref ref="STDOUT" />\r
        <appender-ref ref="FILE" />\r
    </root>\r
\r
</configuration>\r
\`\`\`\r
\r
---\r
\r
# 5 Lombok 配置檔\r
\r
我地可以喺 project root folder 新增一個 \`lombok.config\` 檔，然後根據上述官網提及既 config properties 黎設定呢個 project 既 Lombok。\r
\r
\`lombok.config\` 檔既例子：\r
\r
\`\`\`properties\r
lombok.getter.noIsPrefix=true\r
lombok.accessors.chain=true\r
\`\`\`\r
\r
以上 config 帶黎既效果：\r
\r
-   \`@Getter\` 為 property \`boolean exist\` gen 出黎既 getter 就會係 \`getExist\` 而唔係 \`isExist\`\r
-   \`@Setter\` 為 property \`boolean exist\` gen 出黎既 setter 既 return type 就會係個 property 屬於既 class 而唔係 \`void\`\r
\r
---\r
\r
# 6 Spring Boot Maven Plugin：JAR 檔排除 Lombok\r
\r
如果我地喺 Spring Boot projects 裡面用 \`spring-boot-maven-plugin\`，我地唔需要 Lombok dependency 出現喺最終果個 artifact JAR 檔裡面。\r
\r
咁係因為 compile 階段已經 generate 曬啲 code，所以最終果個 artifact JAR 檔裡面既 Lombok JAR 檔就再冇利用價值。\r
\r
不過，用 Maven \`<dependency>\` 既 \`<scope>provided</scope>\` 係唔會 work，因為我地喺 Maven \`package\` phase 裡面用左 Spring Boot Maven plugin 既 \`repackage\` goal，佢依然係會將所有 dependencies 既 JAR 檔打包喺 \`BOOT-INF/lib\` 裡面。\r
\r
要解決呢個問題，我地就要自行配置 Spring Boot Maven plugin 去 exclude 佢：\r
\r
\`\`\`xml\r
<build>\r
    <plugins>\r
        <plugin>\r
            <groupId>org.springframework.boot</groupId>\r
            <artifactId>spring-boot-maven-plugin</artifactId>\r
            <executions>\r
                <execution>\r
                    <goals>\r
                        <goal>repackage</goal>\r
                    </goals>\r
                </execution>\r
            </executions>\r
            <configuration>\r
                <excludes>\r
                    <exclude>\r
                        <groupId>org.projectlombok</groupId>\r
                        <artifactId>lombok</artifactId>\r
                    </exclude>\r
                </excludes>\r
            </configuration>\r
        </plugin>\r
    </plugins>\r
</build>\r
\`\`\`\r
\r
參考資料：\r
\r
-   [Maven 官網 - A Build Lifecycle is Made Up of Phases](http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#a-build-lifecycle-is-made-up-of-phases)\r
-   [Spring Boot Maven plugin 官網 - Packaging Executable Archives](https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#packaging)\r
-   [Spring Boot Maven plugin 官網 - Dependency Exclusion](https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#packaging.examples.exclude-dependency)\r
\r
---\r
\r
# 7 Java 14 既 \`record\`\r
\r
Java 14 新加既 \`record\` type 嘗試做緊部分 Lombok 既功能。\r
\r
\`record\` 會 gen 到以下既野：\r
\r
-   \`equals\` method\r
-   \`hashCode\` method\r
-   \`toString\` method\r
-   \`private\` access modifier\r
-   \`final\` modifier\r
-   \`public\` constructor\r
\r
參考文章：[Java 14 Record Keyword](https://www.baeldung.com/java-record-keyword)\r
`,DR=`# 3 動手使用 Selenium/Selenide 抓取動態網頁\r
\r
## 3.1 幾時用 Selenium/Selenide\r
\r
Selenium 係一個用黎測試網頁既 testing library，但係佢既 use case 其實不限於做測試，可以用喺不同既網頁自動化流程上。\r
\r
至於 Selenide 就係基於 Selenium 再擴充 API 既 library。\r
\r
Selenium、Selenide 同上述既 jsoup 一樣，都係擁有強大既 API 畀我地根據 HTML source 既 tags 同各種 attributes 去定位 DOM node，但因為佢地係用瀏覽器既 driver（由瀏覽器官方開發者提供）去駁住一個實實在在咁運行緊既瀏覽器，所以佢會額外有「等待直至頁面出現 DOM node」（出現左喺 DOM，或者要視覺上顯示左）既功能。\r
\r
用 Selenium/Selenide 比用 jsoup 既好處係，我地除左用 jsoup 都支援既所有方法之外，仲可以用 XPath 黎定位 DOM node。XPath 同 CSS selector 類似，但功能上更強大。其中主要既分別有：\r
\r
-   XPath 可以用 \`text()\` 黎根據字眼定位 DOM node；相反，CSS selector 就冇辦法根據字眼黎定位 DOM node\r
-   XPath 可以用 \`/..\`、\`/parent::*\`、\`/ancestor::*\` 黎返返上上一層或上幾層（parent/ancstor node）；相反，CSS selector 就冇辦法返返去 parent/ancestor node，只能由上至下咁 navigate DOM tree\r
\r
注意 Selenium/Selenide 因為要駁住瀏覽器，所以會明顯慢過 jsoup fetch 完網頁然後 parse，所以如果 jsoup 夠做就用 jsoup 做，要 handle JavaScript 先好用 Selenium/Selenide。\r
\r
---\r
\r
## 3.2 需求情境\r
\r
為左簡單咁示範我地必須用 Selenium/Selenide 而唔可以用 jsoup 黎抓取資料，用呢個 e-portfolio 網站黎做例子就最好不過，因為呢個 e-portfolio 網站係用 React JS 寫既冇 server-side rendering 既網站，必須要有 JavaScript 先可以喺 user 瀏覽果刻即時令 DOM tree 出現到本身寫既 components。\r
\r
今次我地想要寫一個程式，去我既 e-portfolio 既 All Blog Posts 頁面上面，睇下有冇新既 blog post。假設呢個程式會定時自動喺背景執行，我地要做既就係處理網頁上既資訊，搵出所有 blog post 既標題。\r
\r
---\r
\r
## 3.3 分析\r
\r
呢個 e-portfolio 網站 All Blog Posts 既網址係 [https://blackr1234.github.io/eportfolio/#/blog/](https://blackr1234.github.io/eportfolio/#/blog/)。\r
\r
從頁面可以睇到，只有一個位置提供 blog post 標題既資訊。\r
\r
![](blog/2020-10/web-scraping-with-selenide/blog-post-header.png)\r
\r
---\r
\r
## 3.4 添加 Maven dependencies\r
\r
\`pom.xml\` 裡面需要以下 dependency：\r
\r
\`\`\`xml\r
<dependency>\r
    <groupId>com.codeborne</groupId>\r
    <artifactId>selenide</artifactId>\r
    <version>5.15.1</version>\r
</dependency>\r
\`\`\`\r
\r
---\r
\r
## 3.5 寫 Java code\r
\r
### 3.5.1 如果使用 jsoup 下載網頁 HTML 會如何？\r
\r
參考返上次既 [「網頁抓取（一） - jsoup - 下載網頁 HTML」](/blog/web-scraping-with-jsoup#251-%E4%B8%8B%E8%BC%89%E7%B6%B2%E9%A0%81-html)，如果我地用同樣既 code 黎下載網頁其實又得唔得呢？\r
\r
\`\`\`java\r
public class Main {\r
\r
    public static void main(String[] args) throws Exception {\r
\r
        final Document doc = Jsoup.connect("https://blackr1234.github.io/eportfolio/#/blog/").get();\r
        final String html = doc.body().html();\r
\r
        System.out.println(html);\r
    }\r
}\r
\`\`\`\r
\r
我地睇下下載返黎既係咩 HTML source…非常可惜，今次我地用 jsoup 係唔 work 既，因為冇 JavaScript engine 既關係，jsoup 執行唔到 JavaScript，就冇辦法令本身既內容出現喺 HTML source 度。\r
\r
\`\`\`xml\r
<noscript>\r
 You need to enable JavaScript to run this app.\r
</noscript>\r
<div id="root"></div>\r
<script>!function(e){function r(r){for(var n,l,f=r[0],i=r[1],p=r[2],c=0,s=[];c<f.length;c++)l=f[c],Object.prototype.hasOwnProperty.call(o,l)&&o[l]&&s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n]);for(a&&a(r);s.length;)s.shift()();return u.push.apply(u,p||[]),t()}function t(){for(var e,r=0;r<u.length;r++){for(var t=u[r],n=!0,f=1;f<t.length;f++){var i=t[f];0!==o[i]&&(n=!1)}n&&(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&r&&(e=l(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/eportfolio/";var f=this.webpackJsonpeportfolio=this.webpackJsonpeportfolio||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var p=0;p<f.length;p++)r(f[p]);var a=i;t()}([])<\/script>\r
<script src="/eportfolio/static/js/2.aa0813bd.chunk.js"><\/script>\r
<script src="/eportfolio/static/js/main.c5cc27be.chunk.js"><\/script>\r
\`\`\`\r
\r
### 3.5.2 使用 Selenide 下載網頁 HTML\r
\r
我地先寫到佢可以下載到 All Blog Posts 頁既 HTML：\r
\r
\`\`\`java\r
public class Main {\r
\r
    public static void main(String[] args) throws Exception {\r
\r
        Selenide.open("https://blackr1234.github.io/eportfolio/#/blog/");\r
        System.out.println(WebDriverRunner.source());\r
        Selenide.closeWebDriver();\r
    }\r
}\r
\`\`\`\r
\r
運行程式，我地可以得到以下結果。因為用左 HTML formatter 所以先係 pretty format。\r
\r
我地可以見到已經有曬我地要既 blog post 標題。\r
\r
\`\`\`xml\r
<html lang="en">\r
    <head>\r
        <meta charset="utf-8">\r
        <meta name="viewport" content="width=device-width,initial-scale=1">\r
        <link rel="shortcut icon" href="/eportfolio/favicon.ico">\r
        <link rel="apple-touch-icon" sizes="180x180" href="/eportfolio/apple-touch-icon.png">\r
        <link rel="icon" type="image/png" sizes="32x32" href="/eportfolio/favicon-32x32.png">\r
        <link rel="icon" type="image/png" sizes="16x16" href="/eportfolio/favicon-16x16.png">\r
        <link rel="mask-icon" href="/eportfolio/safari-pinned-tab.svg" color="#5bbad5">\r
        <link rel="manifest" href="/eportfolio/manifest.json">\r
        <meta name="msapplication-TileColor" content="#da532c">\r
        <meta name="theme-color" content="#f8bbd0">\r
        <title>Michael Chung's e-Portfolio</title>\r
        <link href="/eportfolio/static/css/2.e4bde519.chunk.css" rel="stylesheet">\r
        <link href="/eportfolio/static/css/main.5f04d1e0.chunk.css" rel="stylesheet">\r
        <style data-styled="active" data-styled-version="5.2.0"></style>\r
    </head>\r
    <body data-aos-easing="ease" data-aos-duration="500" data-aos-delay="0">\r
        <noscript>You need to enable JavaScript to run this app.</noscript>\r
        <div id="root">\r
            <a href="#/blog/"><button class="ui yellow big circular compact icon button sc-fnVYJo aqTZb" style="opacity: 0; pointer-events: none;"><i aria-hidden="true" class="chevron up icon"></i></button></a>\r
            <div class="sc-fFSRdu iimMZr" style="opacity: 1;"><span class="sc-iemXMA KstKn top"></span><span class="sc-iemXMA KstKn middle"></span><span class="sc-iemXMA KstKn bottom"></span></div>\r
            <div class="sc-bkbjAj gDLPQT" style="opacity: 1;"></div>\r
            <div id="nav-menu-buttons-background" class="sc-dIvqjp ciTSxc"></div>\r
            <div class="sc-hBMVcZ hahZCc">\r
                <nav>\r
                    <ul>\r
                        <li data-is-nav-menu-open="false"><a class="code" href="#/">Home</a></li>\r
                        <li data-is-nav-menu-open="false"><a class="code" href="#/workExp">Work Experiences</a></li>\r
                        <li data-is-nav-menu-open="false"><a class="code" href="#/hobbyProject">Hobby Projects</a></li>\r
                        <li data-is-nav-menu-open="false"><a class="code" href="#/personality">Personality</a></li>\r
                        <li data-is-nav-menu-open="false"><a class="code" href="#/blog">Blog</a></li>\r
                    </ul>\r
                </nav>\r
            </div>\r
            <div style="width: 100%; opacity: 1; transition: all 250ms ease 0s;">\r
                <div class="sc-bdnylx jMhaxE"><code class="sc-gtssRu gmjWml">Chung Cheuk Hang Michael</code><code class="sc-dlnjPT cuIYFB">Web Developer</code></div>\r
                <div class="sc-hKFyIo bdDYJz" style="padding-bottom: 1em;">\r
                    <div class="ui text center aligned container">\r
                        <div class="ui tiny borderless compact inverted stackable four item menu">\r
                            <a draggable="false" class="blue item" href="#/" style="text-align: center;">Home</a>\r
                            <div role="listbox" aria-expanded="false" class="ui item simple dropdown" tabindex="0">\r
                                <div aria-atomic="true" aria-live="polite" role="alert" class="divider text">My Experiences</div>\r
                                <i aria-hidden="true" class="dropdown icon"></i>\r
                                <div class="menu transition"><a draggable="false" role="option" aria-checked="false" class="item" href="#/workExp" style="text-align: center;">Work</a><a draggable="false" role="option" aria-checked="false" class="item" href="#/hobbyProject" style="text-align: center;">Hobby Projects</a></div>\r
                            </div>\r
                            <a draggable="false" class="purple item" href="#/personality" style="text-align: center;">Personality</a><a draggable="false" class="teal item" href="#/blog" style="text-align: center;">Blog</a>\r
                        </div>\r
                    </div>\r
                </div>\r
                <div class="sc-hKFyIo bdDYJz">\r
                    <div class="ui huge header">All Blog Posts</div>\r
                    <div class="ui section divider"></div>\r
                    <div class="ui vertical segment">\r
                        <div class="ui divided relaxed items sc-iqAbSa gfcIZQ">\r
                            <div class="item">\r
                                <a class="ui tiny image" href="#/blog/git-basics" style="margin: auto;"><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Git-logo.svg/1280px-Git-logo.svg.png"></a>\r
                                <div class="content">\r
                                    <a class="header" href="#/blog/git-basics">Git 基本操作</a>\r
                                    <div class="meta"><span>2020-09-27</span></div>\r
                                    <div class="description">如何使用 Git 既基本 commands 進行版本控制</div>\r
                                    <div class="extra">\r
                                        <a class="ui pink basic compact right floated button" role="button" href="#/blog/git-basics">Continue reading<i aria-hidden="true" class="right chevron icon"></i></a>\r
                                        <div class="sc-eCApGN htLRdL">\r
                                            <div class="ui labels"><a class="ui orange label"><i aria-hidden="true" class="github icon"></i>Git</a></div>\r
                                        </div>\r
                                    </div>\r
                                </div>\r
                            </div>\r
                            <div class="item">\r
                                <a class="ui tiny image" href="#/blog/web-scraping" style="margin: auto;"><img src="https://selenide.org/images/selenide-logo-big.png"></a>\r
                                <div class="content">\r
                                    <a class="header" href="#/blog/web-scraping">網頁抓取（Web scraping）</a>\r
                                    <div class="meta"><span>2020-09-26</span></div>\r
                                    <div class="description">如何使用 jsoup 及 Selenium/Selenide 工具抓取網頁，喺網頁獲取有用資訊</div>\r
                                    <div class="extra">\r
                                        <a class="ui pink basic compact right floated button" role="button" href="#/blog/web-scraping">Continue reading<i aria-hidden="true" class="right chevron icon"></i></a>\r
                                        <div class="sc-eCApGN htLRdL">\r
                                            <div class="ui labels"><a class="ui blue label"><i aria-hidden="true" class="code icon"></i>Java</a><a class="ui brown label"><i aria-hidden="true" class="chrome icon"></i>Web Scraping</a></div>\r
                                        </div>\r
                                    </div>\r
                                </div>\r
                            </div>\r
                            <div class="item">\r
                                <a class="ui tiny image" href="#/blog/spring-mapstruct" style="margin: auto;"><img src="https://mapstruct.org/images/mapstruct.png"></a>\r
                                <div class="content">\r
                                    <a class="header" href="#/blog/spring-mapstruct">在 Spring Boot 中使用 MapStruct</a>\r
                                    <div class="meta"><span>2020-09-23</span></div>\r
                                    <div class="description">MapStruct 的用途，以及如何在 Spring Boot 中使用 MapStruct</div>\r
                                    <div class="extra">\r
                                        <a class="ui pink basic compact right floated button" role="button" href="#/blog/spring-mapstruct">Continue reading<i aria-hidden="true" class="right chevron icon"></i></a>\r
                                        <div class="sc-eCApGN htLRdL">\r
                                            <div class="ui labels"><a class="ui blue label"><i aria-hidden="true" class="code icon"></i>Java</a><a class="ui green label"><i aria-hidden="true" class="leaf icon"></i>Spring</a></div>\r
                                        </div>\r
                                    </div>\r
                                </div>\r
                            </div>\r
                            <div class="item">\r
                                <a class="ui tiny image" href="#/blog/coding-java-6" style="margin: auto;"><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Maven_logo.svg/1200px-Maven_logo.svg.png"></a>\r
                                <div class="content">\r
                                    <a class="header" href="#/blog/coding-java-6">Java 開發筆記（六）</a>\r
                                    <div class="meta"><span>2020-09-15</span></div>\r
                                    <div class="description">Java 開發筆記 - Dependency Management</div>\r
                                    <div class="extra">\r
                                        <a class="ui pink basic compact right floated button" role="button" href="#/blog/coding-java-6">Continue reading<i aria-hidden="true" class="right chevron icon"></i></a>\r
                                        <div class="sc-eCApGN htLRdL">\r
                                            <div class="ui labels"><a class="ui blue label"><i aria-hidden="true" class="code icon"></i>Java</a><a class="ui red label"><i aria-hidden="true" class="code icon"></i>Maven</a></div>\r
                                        </div>\r
                                    </div>\r
                                </div>\r
                            </div>\r
                            <div class="item">\r
                                <a class="ui tiny image" href="#/blog/coding-java-5" style="margin: auto;"><img src="https://upload.wikimedia.org/wikipedia/fr/thumb/2/2e/Java_Logo.svg/1200px-Java_Logo.svg.png"></a>\r
                                <div class="content">\r
                                    <a class="header" href="#/blog/coding-java-5">Java 開發筆記（五）</a>\r
                                    <div class="meta"><span>2020-09-15</span></div>\r
                                    <div class="description">Java 開發筆記 - 幾款超有用必學 3rd party libraries</div>\r
                                    <div class="extra">\r
                                        <a class="ui pink basic compact right floated button" role="button" href="#/blog/coding-java-5">Continue reading<i aria-hidden="true" class="right chevron icon"></i></a>\r
                                        <div class="sc-eCApGN htLRdL">\r
                                            <div class="ui labels"><a class="ui blue label"><i aria-hidden="true" class="code icon"></i>Java</a></div>\r
                                        </div>\r
                                    </div>\r
                                </div>\r
                            </div>\r
                            <div class="item">\r
                                <a class="ui tiny image" href="#/blog/coding-java-4" style="margin: auto;"><img src="https://cdn.worldvectorlogo.com/logos/spring-3.svg"></a>\r
                                <div class="content">\r
                                    <a class="header" href="#/blog/coding-java-4">Java 開發筆記（四）</a>\r
                                    <div class="meta"><span>2020-09-15</span></div>\r
                                    <div class="description">Java 開發筆記 - Spring 基礎知識</div>\r
                                    <div class="extra">\r
                                        <a class="ui pink basic compact right floated button" role="button" href="#/blog/coding-java-4">Continue reading<i aria-hidden="true" class="right chevron icon"></i></a>\r
                                        <div class="sc-eCApGN htLRdL">\r
                                            <div class="ui labels"><a class="ui blue label"><i aria-hidden="true" class="code icon"></i>Java</a><a class="ui green label"><i aria-hidden="true" class="leaf icon"></i>Spring</a></div>\r
                                        </div>\r
                                    </div>\r
                                </div>\r
                            </div>\r
                            <div class="item">\r
                                <a class="ui tiny image" href="#/blog/coding-java-3" style="margin: auto;"><img src="https://upload.wikimedia.org/wikipedia/fr/thumb/2/2e/Java_Logo.svg/1200px-Java_Logo.svg.png"></a>\r
                                <div class="content">\r
                                    <a class="header" href="#/blog/coding-java-3">Java 開發筆記（三）</a>\r
                                    <div class="meta"><span>2020-09-15</span></div>\r
                                    <div class="description">Java 開發筆記 - Java 基礎知識</div>\r
                                    <div class="extra">\r
                                        <a class="ui pink basic compact right floated button" role="button" href="#/blog/coding-java-3">Continue reading<i aria-hidden="true" class="right chevron icon"></i></a>\r
                                        <div class="sc-eCApGN htLRdL">\r
                                            <div class="ui labels"><a class="ui blue label"><i aria-hidden="true" class="code icon"></i>Java</a></div>\r
                                        </div>\r
                                    </div>\r
                                </div>\r
                            </div>\r
                            <div class="item">\r
                                <a class="ui tiny image" href="#/blog/coding-java-2" style="margin: auto;"><img src="https://upload.wikimedia.org/wikipedia/fr/thumb/2/2e/Java_Logo.svg/1200px-Java_Logo.svg.png"></a>\r
                                <div class="content">\r
                                    <a class="header" href="#/blog/coding-java-2">Java 開發筆記（二）</a>\r
                                    <div class="meta"><span>2020-09-15</span></div>\r
                                    <div class="description">Java 開發筆記 - 建立 project</div>\r
                                    <div class="extra">\r
                                        <a class="ui pink basic compact right floated button" role="button" href="#/blog/coding-java-2">Continue reading<i aria-hidden="true" class="right chevron icon"></i></a>\r
                                        <div class="sc-eCApGN htLRdL">\r
                                            <div class="ui labels"><a class="ui blue label"><i aria-hidden="true" class="code icon"></i>Java</a></div>\r
                                        </div>\r
                                    </div>\r
                                </div>\r
                            </div>\r
                            <div class="item">\r
                                <a class="ui tiny image" href="#/blog/coding-java-1" style="margin: auto;"><img src="https://upload.wikimedia.org/wikipedia/fr/thumb/2/2e/Java_Logo.svg/1200px-Java_Logo.svg.png"></a>\r
                                <div class="content">\r
                                    <a class="header" href="#/blog/coding-java-1">Java 開發筆記（一）</a>\r
                                    <div class="meta"><span>2020-09-15</span></div>\r
                                    <div class="description">Java 開發筆記 - 安裝所需程式</div>\r
                                    <div class="extra">\r
                                        <a class="ui pink basic compact right floated button" role="button" href="#/blog/coding-java-1">Continue reading<i aria-hidden="true" class="right chevron icon"></i></a>\r
                                        <div class="sc-eCApGN htLRdL">\r
                                            <div class="ui labels"><a class="ui blue label"><i aria-hidden="true" class="code icon"></i>Java</a></div>\r
                                        </div>\r
                                    </div>\r
                                </div>\r
                            </div>\r
                        </div>\r
                    </div>\r
                </div>\r
                <div class="sc-hKFyIo bdDYJz">\r
                    <div class="ui horizontal section divider">\r
                        <h5 class="ui header" style="opacity: 0.5;"><i aria-hidden="true" class="react icon"></i>Reach Me Now!</h5>\r
                    </div>\r
                    <div class="ui stackable padded three column grid">\r
                        <div class="column">\r
                            <a href="tel:+85263301333">\r
                                <h4 class="ui header" style="opacity: 0.75; transform: scale(1);">\r
                                    <i aria-hidden="true" class="teal phone clockwise rotated icon"></i>\r
                                    <div class="content">\r
                                        Mobile\r
                                        <div class="sub header">6330 1333</div>\r
                                    </div>\r
                                </h4>\r
                            </a>\r
                        </div>\r
                        <div class="column">\r
                            <a href="mailto:michaelboyboy@gmail.com">\r
                                <h4 class="ui header" style="opacity: 0.75; transform: scale(1);">\r
                                    <i aria-hidden="true" class="red mail icon"></i>\r
                                    <div class="content">\r
                                        Email\r
                                        <div class="sub header">michaelboyboy@gmail.com</div>\r
                                    </div>\r
                                </h4>\r
                            </a>\r
                        </div>\r
                        <div class="column">\r
                            <a href="https://www.linkedin.com/in/mickchung" target="_blank" rel="external nofollow noopener noreferrer">\r
                                <h4 class="ui header" style="opacity: 0.75; transform: scale(1);">\r
                                    <i aria-hidden="true" class="blue linkedin icon"></i>\r
                                    <div class="content">\r
                                        LinkedIn\r
                                        <div class="sub header">www.linkedin.com/in/mickchung</div>\r
                                    </div>\r
                                </h4>\r
                            </a>\r
                        </div>\r
                    </div>\r
                    <div class="ui divider"></div>\r
                    <div>\r
                        <div style="color: rgb(75, 163, 199);">\r
                            <div class="sc-eCApGN htLRdL" style="display: inline-block;">Copyright © 2020 Chung Cheuk Hang Michael. All rights reserved.</div>\r
                            <div class="sc-eCApGN htLRdL" style="display: inline-block; float: right;">Last Updated On: <span title="10 Oct 2020 06:09:14" style="cursor: help;">10 Oct 2020</span> / <span title="8abd2641a6dd67cff979ead5b07edf5ca6f89db6" style="cursor: help;">8abd264</span></div>\r
                        </div>\r
                    </div>\r
                    <div class="ui hidden divider"></div>\r
                </div>\r
            </div>\r
            <div class="particles-wrapper">\r
                <canvas width="3355" height="1705" style="width: 100%; height: 100%;"></canvas>\r
            </div>\r
        </div>\r
        <script>!function(e){function r(r){for(var n,l,f=r[0],i=r[1],p=r[2],c=0,s=[];c<f.length;c++)l=f[c],Object.prototype.hasOwnProperty.call(o,l)&&o[l]&&s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n]);for(a&&a(r);s.length;)s.shift()();return u.push.apply(u,p||[]),t()}function t(){for(var e,r=0;r<u.length;r++){for(var t=u[r],n=!0,f=1;f<t.length;f++){var i=t[f];0!==o[i]&&(n=!1)}n&&(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&r&&(e=l(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/eportfolio/";var f=this.webpackJsonpeportfolio=this.webpackJsonpeportfolio||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var p=0;p<f.length;p++)r(f[p]);var a=i;t()}([])<\/script><script src="/eportfolio/static/js/2.aa0813bd.chunk.js"><\/script><script src="/eportfolio/static/js/main.c5cc27be.chunk.js"><\/script>\r
    </body>\r
</html>\r
\`\`\`\r
\r
---\r
\r
### 3.5.3 取得定點資訊\r
\r
拎到 HTML source 之後，我地可以根據 blog post 標題既 DOM 定位，定點咁取得所有標題 value。其實一旦有左似樣既 HTML source（確保行左 JavaScript，DOM tree 砌好曬），咁我地轉返用 jsoup parser 都係可以既（用 \`Jsoup.parse(html)\`）。\r
\r
以下係一個 blog post 標題既節錄：\r
\r
\`\`\`xml\r
<div class="item">\r
    <a class="ui tiny image" href="#/blog/git-basics" style="margin: auto;"><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Git-logo.svg/1280px-Git-logo.svg.png"></a>\r
    <div class="content">\r
        <a class="header" href="#/blog/git-basics">Git 基本操作</a>\r
        <div class="meta"><span>2020-09-27</span></div>\r
        <div class="description">如何使用 Git 既基本 commands 進行版本控制</div>\r
        <div class="extra">\r
            <a class="ui pink basic compact right floated button" role="button" href="#/blog/git-basics">Continue reading<i aria-hidden="true" class="right chevron icon"></i></a>\r
            <div class="sc-eCApGN htLRdL">\r
                <div class="ui labels"><a class="ui orange label"><i aria-hidden="true" class="github icon"></i>Git</a></div>\r
            </div>\r
        </div>\r
    </div>\r
</div>\r
\`\`\`\r
\r
因為 blog post 標題冇特定字眼可以追蹤，咁我地退而求其次，可以用 \`class="header"\` 黎定位 blog post 標題。\r
\r
\`\`\`java\r
public class Main {\r
\r
    public static void main(String[] args) throws Exception {\r
\r
        Selenide.open("https://blackr1234.github.io/eportfolio/#/blog/");\r
        Selenide.$$(By.className("header"))\r
                .stream()\r
                .map(SelenideElement::getText)\r
                .forEach(System.out::println);\r
        Selenide.closeWebDriver();\r
    }\r
}\r
\`\`\`\r
\r
我地得到既結果：\r
\r
\`\`\`plaintext\r
All Blog Posts\r
網頁抓取（二） - Selenium/Selenide\r
Git 基本操作\r
網頁抓取（一） - jsoup\r
在 Spring Boot 中使用 MapStruct\r
Java 開發筆記（六）\r
Java 開發筆記（五）\r
Java 開發筆記（四）\r
Java 開發筆記（三）\r
Java 開發筆記（二）\r
Java 開發筆記（一）\r
Reach Me Now!\r
Mobile\r
6330 1333\r
6330 1333\r
Email\r
michaelboyboy@gmail.com\r
michaelboyboy@gmail.com\r
LinkedIn\r
www.linkedin.com/in/mickchung\r
www.linkedin.com/in/mickchung\r
\`\`\`\r
\r
雖然有我地要既野，但係有唔少多餘既資訊都拎埋出黎，因為 \`class\` 包含 \`header\` 既唔淨止 blog post 標題。我地嘗試用埋 tag 係 \`<a>\` 黎 narrow down。\r
\r
\`\`\`java\r
public class Main {\r
\r
    public static void main(String[] args) throws Exception {\r
\r
        Selenide.open("https://blackr1234.github.io/eportfolio/#/blog/");\r
        Selenide.$$(By.cssSelector("a.header"))\r
                .stream()\r
                .map(SelenideElement::getText)\r
                .forEach(System.out::println);\r
        Selenide.closeWebDriver();\r
    }\r
}\r
\`\`\`\r
\r
以上 CSS selector 既意思係 DOM node 既 \`Element.classList\` 包含 \`header\` 既 \`<a>\` tag 先會中到。\r
\r
然後今次就岩曬喇！\r
\r
\`\`\`plaintext\r
網頁抓取（二） - Selenium/Selenide\r
Git 基本操作\r
網頁抓取（一） - jsoup\r
在 Spring Boot 中使用 MapStruct\r
Java 開發筆記（六）\r
Java 開發筆記（五）\r
Java 開發筆記（四）\r
Java 開發筆記（三）\r
Java 開發筆記（二）\r
Java 開發筆記（一）\r
\`\`\`\r
\r
---\r
\r
## 3.6 Selenide 自定義配置\r
\r
以下既自定義功能都係由 Selenide 提供（背後會幫我地改 Selenium 配置），只要喺 call \`Selenium.open(relativeOrAbsoluteUrl)\` 之前配置好就得。\r
\r
### 3.6.1 隱藏瀏覽器視窗\r
\r
由於 Selenium/Selenide 啟動既時候會踢著 local 裝既瀏覽器（如 Chrome），如果唔想下下都彈個瀏覽器出黎，可以 set headless mode。\r
\r
\`\`\`java\r
Configuration.headless = true;\r
\`\`\`\r
\r
---\r
\r
### 3.6.2 瀏覽器安裝位置\r
\r
如果想由 Chrome 瀏覽器改為使用 Chromium，我地可以下載 Chromium 既 portable binary distribution：\r
\r
1. 去 [Chromium History Versions Download](https://vikyd.github.io/download-chromium-history-version/#/)\r
1. 根據 Selenide JAR 裡面（或者 [GitHub](https://github.com/selenide/selenide/blob/master/src/main/resources/versions.properties)）既 \`versions.properties\` 檔上面寫既支援既版本號碼，喺上面網頁搵最接近既版本（建議版本號碼唔好大過 Selenide 支援既版本號碼）\r
1. 撳落去會開 chromium-browser-snapshots 既網頁出黎，再撳落去 zip 檔名度就可以下載\r
1. 解壓縮個 zip 檔\r
\r
之後咁樣寫：\r
\r
\`\`\`java\r
// 改成解壓縮後既 location\r
Configuration.browserBinary = "path/to/chrome.exe";\r
\`\`\`\r
`,OR=`## 1 關於 Chrome Extension\r
\r
相信大家對 Chrome extension 都唔陌生，因為大部分人都係 ad blocker plugins 既 user，知道瀏覽器係可以安裝一啲小插件黎優化用戶體驗（UX）。\r
\r
其實呢啲小插件係可以自己寫，而且非常簡單。\r
\r
---\r
\r
## 2 需求情境\r
\r
呢篇文章會教大家動手寫一個 Chrome extension，用黎去除 uTorrent Web 網頁各種各樣既多餘網頁 components，令到版面更簡潔。\r
\r
uTorrent Web 係一個專門用黎 BT 下載既電腦程式，需要自行下載安裝，佢個程式介面係用網頁既形式呈現，所以叫 uTorrent Web，有別於以前既 uTorrent（PC 客戶端）。\r
\r
---\r
\r
## 3 比較原貌及結果\r
\r
先畀大家睇下我地既 before & after 會相差幾遠。\r
\r
### 3.1 Before\r
\r
![](blog/2020-10/writing-chrome-extensions/before-home-page.png)\r
\r
![](blog/2020-10/writing-chrome-extensions/before-downloading.png)\r
\r
---\r
\r
### 3.2 After\r
\r
![](blog/2020-10/writing-chrome-extensions/after-home-page.png)\r
\r
![](blog/2020-10/writing-chrome-extensions/after-downloading.png)\r
\r
---\r
\r
## 4 動手寫\r
\r
### 4.1 Project structure\r
\r
我地呢個 project folder 會有以下檔案：\r
\r
| 檔案            | 用途                                                                                                                                         |\r
| --------------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\r
| \`manifest.json\` | 關於呢個 Chrome extension 既 metadata。Chrome 會讀取，咁就知道邊啲網頁要用呢個 extension，邊啲唔洗，同埋知道需要執行既 JavaScript 資源既位置 |\r
| \`content.js\`    | 我地既程式入口，類似 Java 既 \`main\` method，喺 Chrome load 完 dependency 既 libraries（即係我地既 \`jquery.js\`）之後就會執行                  |\r
| \`js/jquery.js\`  | jQuery 係一個打橫行既 JavaScript library，可以肆意修改整個 DOM tree，係傳統網頁必備既 library                                                |\r
\r
---\r
\r
### 4.2 寫 \`manifest.json\`\r
\r
\`manifest.json\` 負責話畀 Chrome 知道我地呢個 extension 既全名、簡單描述、URL 匹配同權限，以及要執行既 JavaScript 檔案。\r
\r
因為 uTorrent Web 既 URL 有時會係 \`utweb.trontv.com\` 有時會係 \`127.0.0.1\`，所以就有兩個，但一般都只係得一個。\r
\r
至於 \`js\`，次序一定要岩，dependency libraries 行先，之後先到我地寫既入口主程式（類似 Java 既 \`main\` method）。\r
\r
\`\`\`json\r
{\r
	"name": "uTorrent Web Plugin",\r
	"version": "1.0",\r
	"description": "Remove ads",\r
	"content_scripts": [\r
		{\r
			"matches": ["*://utweb.trontv.com/*", "*://127.0.0.1/*"],\r
			"js": ["js/jquery.js", "content.js"],\r
			"run_at": "document_start"\r
		}\r
	],\r
	"manifest_version": 2\r
}\r
\`\`\`\r
\r
---\r
\r
### 4.3 寫 \`content.js\`\r
\r
我地想要一個簡潔版本既 uTorrent Web，其實只需要不斷將多餘既 components 刪除就可以。\r
\r
Windows 下撳 \`F12\` 或者 macOS 下撳 \`Option\` + \`Command\` + \`I\`，然後喺 Chrome developer tools 既 Elements tab 下撳左上角既箭嘴掣，手動黎喺頁面上視覺定位不同既多餘 DOM nodes，Chrome developer tools 會幫我地定位 DOM node 既位置，然後我地可以自行判決點樣 programmatically 定位呢啲 DOM nodes。\r
\r
我地會想寫到呢個 Chrome extension 可以無限 loop 咁行，因為有時啲網頁完成加載既時間可能好長，有啲 components 亦可能係之後先加入，亦可能因為某啲操作（當我地新增 BT 下載任務既時候）而令頁面再次改變，所以係有必要無限 loop。\r
\r
| 多餘既 DOM node（CSS selector）            | 對應頁面位置                                                     |\r
| ------------------------------------------ | ---------------------------------------------------------------- |\r
| \`.nav-tabs > :not([id=auto-settings-btn])\` | 頂部右方設定掣左邊既兩個掣，分別係 Safe Torrrent Scanner 及 Help |\r
| \`footer[id=ads-privacy-footer]\`            | 最底既 Terms of Service、Privacy Policy 及 copyright             |\r
| \`[id=sidebar]\`                             | 左手邊既 sidebar menu                                            |\r
| \`div.tutorial-video-container\`             | 正右方既 Watch this video on torrenting 連影片                   |\r
| \`div.media-cover\`                          | 當有下載任務時，下載任務左手邊有個影片播放器                     |\r
| \`div.search-control-nav-main\`              | 正中既 Search for a torrent 搜尋列                               |\r
| \`[id=jw-player-container]\`                 | 正下方既影片                                                     |\r
| \`.search-header\`                           | 正中既 Stream torrents while you download                        |\r
\r
\`\`\`js\r
// 無限 loop 既配置，一開始會行得密啲，之後就會放慢\r
const MAX_RUN = Infinity;\r
const DELAY_INCREMENT = 25;\r
const DELAY_MAX = 1000;\r
var delay = 25;\r
\r
// 用於 jQuery 既 CSS selector，喺 Chrome developer tools 既 Elements tab 可以用佢黎 search\r
const SELECTOR = \`\r
    .nav-tabs > :not([id=auto-settings-btn]),\r
    footer[id=ads-privacy-footer],\r
    [id=sidebar],\r
    div.tutorial-video-container,\r
    div.media-cover,\r
    div.search-control-nav-main,\r
    [id=jw-player-container],\r
    .search-header\r
\`;\r
\r
const run = () => {\r
	let i = 0;\r
\r
	const _run = () => {\r
		if (i === MAX_RUN) {\r
			return;\r
		}\r
\r
		i++;\r
		console.log("Running iteration " + i); // 喺 Chrome developer tools 既 Console 會見到\r
\r
		const result = $(SELECTOR);\r
\r
		if (!(result.length > 0)) {\r
			// 如果未搵到（可能係頁面未 load 好）\r
			setTimeout(_run, delay);\r
			delay = Math.min(delay + DELAY_INCREMENT, DELAY_MAX);\r
			return;\r
		}\r
\r
		// 將多餘野設置為唔顯示\r
\r
		result.css("display", "none");\r
\r
		$(".media-library-top-container.show-ad").removeClass("show-ad");\r
\r
		setTimeout(_run, delay);\r
		delay = Math.min(delay + DELAY_INCREMENT, DELAY_MAX);\r
	};\r
\r
	_run();\r
};\r
\r
run(); // call 上面 define 既 run function\r
\`\`\`\r
\r
---\r
\r
### 4.4 下載 \`jquery.js\`\r
\r
正因為 jQuery 太強大，可以肆意修改整個 DOM tree，所以佢係傳統網頁必備既 dependency library（但新派做法已經棄用 jQuery）。正正就係我地刪除多餘 DOM nodes 需要用到。\r
\r
我地需要將呢個 jQuery library 既 code 下載落黎。只需要 right click 下面條 link，save as \`js/jquery.js\` 即可：\r
\r
[https://code.jquery.com/jquery-3.5.1.min.js](https://code.jquery.com/jquery-3.5.1.min.js)\r
\r
---\r
\r
## 5 安裝\r
\r
去 \`chrome://extensions\` 度，打開右上角 Developer mode 既開關，撳 Load unpacked，然後揀我地個 project folder。\r
\r
之後我地會見到多左個我地個 Chrome extension（請確保開關掣係開住）。呢個時候我地可以 refresh 一下 uTorrent Web 個網頁，[就會見到係極致地簡潔！](#32-after)\r
\r
![](blog/2020-10/writing-chrome-extensions/chrome-extensions.png)\r
`,LR=`## 1 關於 Retrofit\r
\r
Retrofit 係一個 HTTP client 既 Java library，可以幫我地做到 HTTP call，有啲似 Spring Cloud OpenFeign，都係行 declarative approach，透過 interface methods 既 annotations 以及 parameters 黎定義 HTTP 請求。\r
\r
---\r
\r
## 2 動手使用 Retrofit 下載資料\r
\r
### 2.1 需求情境\r
\r
試想像我地而家想寫一個程式，可以幫我地喺 Jumbo Computer 網站獲取電腦零件報價資訊。\r
\r
Jumbo Computer 既網址係：[https://shoponjc.com/quote.php](https://shoponjc.com/quote.php)\r
\r
透過 Chrome developer tools 既 Network 分頁，我地可以見到，當我地喺頁面選擇左「產品類型」之後，Jumbo Computer 會喺 XHR 分類下有個 \`getprod.php\` 既 HTTP POST request，而 response body 係 JSON 格式。\r
\r
![](blog/2021-04/pull-data-with-retrofit/jumbo-http-response.png)\r
\r
---\r
\r
### 2.2 分析\r
\r
#### 2.2.1 必填的 \`session\` form data\r
\r
我地可以見到 Jumbo Computer 拎資料用既 HTTP POST request 係需要一個 \`session\` 既 form data entry。\r
\r
經 Postman 一試，我地會發現如果個 HTTP request 缺少左 \`session\`，又或者個 \`session\` 值係我地自己改出黎既話，都會收到 error response，咁係因為 Jumbo Computer 既 server 會驗證呢個 \`session\` 值。\r
\r
至於呢個 \`session\` 值要點樣先可以拎到？實驗話畀我地知，呢個 \`session\` 值好似唔會 expire，咁即係我地可以直接用已知既 \`session\` 值。不過，穩陣起見，我地都係睇下佢係點樣攞到或者計到呢個 \`session\` 值比較好。\r
\r
![](blog/2021-04/pull-data-with-retrofit/jumbo-http-request.png)\r
\r
![](blog/2021-04/pull-data-with-retrofit/postman.png)\r
\r
---\r
\r
#### 2.2.2 如何取得新的 \`session\` 值\r
\r
喺 Chrome developer tools 既 Application 分頁下面，我地可以見到 Local Storage 分類下，\`shoponjc.com\` 有一個 \`Key\` 為 \`Session ID\` 既 entry。\r
\r
另外，喺 Chrome developer tools 既 Sources 分頁下面，我地可以見到 \`shoponjc.com\` 有一個 JavaScript 檔叫 \`quo.js?d83scwsoejkx6\`，裡面有以下一段：\r
\r
\`\`\`js\r
if (window.localStorage) {\r
	storage = window.localStorage;\r
	storage.setItem("Version", "1.0");\r
	storage.setItem("Session ID", document.getElementById("sid").value);\r
}\r
\`\`\`\r
\r
咁即係我地可以用 \`sid\` 作為 DOM element ID 黎喺個網頁上搵 DOM element，而結果如下：\r
\r
\`\`\`html\r
<input type="hidden" id="sid" value="wpjfi557nqf75" />\r
\`\`\`\r
\r
**解讀：** 每當我地瀏覽呢個網頁既時候，佢 server 會返回一個帶有隨機 session ID 既 DOM element 既 HTML 檔，然後 JavaScript 會令 Local Storage 裡面多左一個名為 \`Session ID\` 既 entry。\r
\r
另外，我地都可以從個 JavaScript 檔見到個 \`session\` 值係黎自於 \`this.$refs.sid\`。因為個網頁係用 Vue.js library 黎寫，而 \`this.$refs.sid\` 就即係指緊 DOM element ID 為 \`sid\` 既 DOM element。\r
\r
\`\`\`js\r
var vm = new Vue({\r
	// ... 省略 500 幾行\r
	mounted: function () {\r
		this.session = this.$refs.sid.value;\r
		// ... 省略幾行\r
	},\r
});\r
\`\`\`\r
\r
**解讀：** 喺個 \`sid\` DOM element mount 左之後，Vue.js 既 \`session\`（\`this.session\`）就會變成 \`sid\` DOM element 既 \`value\`。\r
\r
再睇下佢係點樣組裝 POST request 同 call 出去：\r
\r
\`\`\`js\r
actualSearch: function (pnum) {\r
    /*\r
    if (this.ptype == '') {\r
        alert("Please select 產品類型 Product Type first.");\r
        return;\r
    }\r
    if (this.ptypeval.length > 40) {\r
        alert("關鍵字 Key words are too long, please re-enter first.");\r
        return;\r
    }\r
    */\r
    if (this.searchFired == false) {\r
        this.searchFired = true;\r
        var form_data = new FormData();\r
        form_data.append('session', this.session);\r
        form_data.append('sort', this.nsort);\r
        form_data.append('link', this.linkpicks);\r
        form_data.append('ptype', this.ptype);\r
        form_data.append('pmin', this.range[0]);\r
        form_data.append('pmax', this.range[1]);\r
        form_data.append('pwords', this.ptypeval);\r
        form_data.append('prow', this.pagerow);\r
        form_data.append('pnum', pnum);\r
        ajax({\r
            method: 'post',\r
            url: 'getprod.php',\r
            data: form_data\r
        }).then(response => {\r
            this.searchFired = false;\r
            this.$nextTick(function () {\r
                let json = response.data;\r
                this.havedata = false;\r
                if (json.status == 'Error') {\r
                    alert("No product found!!");\r
                } else {\r
                    this.plist = json.plist;\r
                    if (json.plist.length >= 10)\r
                        this.havedata = true;\r
                }\r
            });\r
        });\r
    }\r
},\r
\`\`\`\r
\r
**解讀：** 可以見到拎資料既 POST request 既 \`session\` 係黎自於 Vue.js 既 \`session\`（\`this.session\`）。\r
\r
成件事就係咁簡單！我地每次用 jsoup 下載個新既 HTML 落黎就可以拎到新既 session ID 值。\r
\r
---\r
\r
### 2.3 添加 Maven dependencies\r
\r
我地會用到以下 Maven dependencies，當中包括 jsoup：\r
\r
\`\`\`xml\r
<!-- ##### jsoup ##### -->\r
<dependency>\r
    <groupId>org.jsoup</groupId>\r
    <artifactId>jsoup</artifactId>\r
    <version>1.13.1</version>\r
</dependency>\r
\r
<!-- ##### retrofit ##### -->\r
<dependency>\r
    <groupId>com.squareup.retrofit2</groupId>\r
    <artifactId>retrofit</artifactId>\r
    <version>2.9.0</version>\r
</dependency>\r
<dependency>\r
    <groupId>com.squareup.retrofit2</groupId>\r
    <artifactId>converter-scalars</artifactId>\r
    <version>2.9.0</version>\r
</dependency>\r
<dependency>\r
    <groupId>com.squareup.retrofit2</groupId>\r
    <artifactId>converter-gson</artifactId>\r
    <version>2.9.0</version>\r
</dependency>\r
\`\`\`\r
\r
---\r
\r
### 2.4 寫 Java code\r
\r
\`ProductsResponse.java\`：\r
\r
\`\`\`java\r
@Data\r
@Accessors(chain = true)\r
@FieldDefaults(level = PRIVATE)\r
public class ProductsResponse {\r
    String status;\r
    String session;\r
\r
    @SerializedName("plist")\r
    List<Product> products;\r
}\r
\`\`\`\r
\r
\`JumboClient.java\`：\r
\r
\`\`\`java\r
public interface JumboClient {\r
\r
    @FormUrlEncoded\r
    @POST("getprod.php")\r
    Call<ProductsResponse> getProductsByCategory(\r
        @Field("session") String session,\r
        @Field("sort")    Integer sortType,\r
        @Field("link")    Boolean link,\r
        @Field("ptype")   Integer productType,\r
        @Field("pmin")    Long priceMin,\r
        @Field("pmax")    Long priceMax,\r
        @Field("pwords")  String productKeywords,\r
        @Field("prow")    Long pageRowCount,\r
        @Field("pnum")    Long pageNum\r
    );\r
}\r
\`\`\`\r
\r
\`RetrofitHelper.java\`：\r
\r
\`\`\`java\r
public final class RetrofitHelper {\r
\r
    private static RetrofitHelper retrofitHelper;\r
\r
    private RetrofitHelper() {\r
\r
    }\r
\r
    public static RetrofitHelper getInstance() {\r
        return retrofitHelper==null ? (retrofitHelper = new RetrofitHelper())\r
                                    : retrofitHelper;\r
    }\r
\r
    public JumboClient createJumboClient() {\r
        return createRetrofit("https://shoponjc.com").create(JumboClient.class);\r
    }\r
\r
    private Retrofit createRetrofit(String baseUrl) {\r
        return new Retrofit.Builder()\r
                   .baseUrl(baseUrl)\r
                   .client(new OkHttpClient.Builder()\r
                               .readTimeout(10, SECONDS)\r
                               .connectTimeout(10, SECONDS)\r
                               .build())\r
                   .addConverterFactory(ScalarsConverterFactory.create())\r
                   .addConverterFactory(GsonConverterFactory.create(new GsonBuilder().setLenient().create()))\r
                   .build();\r
    }\r
}\r
\`\`\`\r
\r
\`Main.java\`：\r
\r
\`\`\`java\r
@Slf4j\r
public class Main {\r
\r
    public static void main(String[] args) throws Exception {\r
\r
        final JumboClient jumboClient = RetrofitHelper.getInstance().createJumboClient();\r
\r
        // 拎資料\r
        jumboClient.getProductsByCategory(\r
            getSessionIdWithJsoup(), // sessionId\r
            3, // sortType\r
            true, // link\r
            5, // productType\r
            1L, // priceMin\r
            200000L, // priceMax\r
            "", // productKeywords\r
            10000L, // pageRowCount\r
            0L // pageNum\r
        ).execute().body();\r
    }\r
\r
    private static String getSessionIdWithJsoup() {\r
\r
        try {\r
            final String html = Jsoup.connect("https://shoponjc.com/quote.php").get().html();\r
\r
            final Matcher matcher = Pattern.compile("<input type=\\"hidden\\" id=\\"sid\\" ref=\\"sid\\" value=\\"(?<sessionId>\\\\w+)\\"").matcher(html);\r
            final String sessionId = matcher.find() ? matcher.group("sessionId") : null;\r
\r
            return sessionId;\r
        } catch (Exception e) {\r
            log.error("Failed to download Jumbo webpage.", e);\r
        }\r
\r
        return null;\r
    }\r
}\r
\`\`\`\r
`,_R=`# 1 什麼是 FFmpeg\r
\r
FFmpeg 係一個多功能既影片處理 command line 工具。\r
\r
---\r
\r
# 2 下載 FFmpeg\r
\r
坊間既 build：\r
\r
[Gyan.dev FFmpeg](https://www.gyan.dev/ffmpeg/builds/)\r
\r
[直接下載最新版本](https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full.7z)\r
\r
---\r
\r
# 3 FFmpeg 功能\r
\r
## 3.1 轉換影片 format\r
\r
\`\`\`bash\r
ffmpeg -i "input.mkv" -codec copy "output.mp4"\r
\`\`\`\r
\r
---\r
\r
## 3.2 轉換影片成 GIF\r
\r
\`\`\`bash\r
ffmpeg -i "input.mov" -s 720x480 -pix_fmt rgb24 -r 10 -f gif - > "out.gif"\r
\`\`\`\r
\r
---\r
\r
## 3.3 裁剪影片\r
\r
\`\`\`bash\r
ffmpeg -ss 00:00:30 -to 00:01:00 -i "input.mp4" -c copy "output.mp4"\r
\`\`\`\r
\r
---\r
\r
## 3.4 順時針旋轉影片\r
\r
\`\`\`bash\r
ffmpeg -i "input.mp4" -c copy -metadata:s:v:0 rotate=-90 "output.mp4"\r
\`\`\`\r
\r
\`\`\`bash\r
# 90 度\r
ffmpeg -i "input.mp4" -vf "transpose=1" "output.mp4"\r
\r
# 180 度\r
ffmpeg -i "input.mp4" -vf "transpose=1,transpose=1" "output.mp4"\r
\`\`\`\r
\r
---\r
\r
## 3.5 逆時針旋轉影片\r
\r
\`\`\`bash\r
ffmpeg -i "input.mp4" -c copy -metadata:s:v:0 rotate=90 "output.mp4"\r
\`\`\`\r
\r
\`\`\`bash\r
# 90 度\r
ffmpeg -i "input.mp4" -vf "transpose=2" "output.mp4"\r
\r
# 180 度\r
ffmpeg -i "input.mp4" -vf "transpose=2,transpose=2" "output.mp4"\r
\`\`\`\r
\r
---\r
\r
## 3.6 合併多條影片\r
\r
先建立一個叫 \`input.txt\` 既檔案，內容跟以下格式：\r
\r
\`\`\`plaintext\r
file '1.mkv'\r
file '2.mkv'\r
file '3.mkv'\r
\`\`\`\r
\r
之後執行：\r
\r
\`\`\`bash\r
ffmpeg -safe 0 -f concat -i "input.txt" -c copy "output.mkv"\r
\`\`\`\r
\r
---\r
\r
### 3.6.1 合併多條影片並加入淡入淡出效果\r
\r
如果想要影片與影片之間有淡入淡出效果，有人寫左一個網頁可以根據需要而生成相關既 FFmpeg command：\r
\r
[Generate FFmpeg script - Generator FFmpeg CLI command for concatenation several videos into single one using filter complex xfade and acrossfade.](https://romander.github.io/ffmpeg-script-generator/)\r
\r
---\r
\r
## 3.7 從影片提取 WAV 音頻\r
\r
\`\`\`bash\r
ffmpeg -i "input.mp4" -vn -acodec pcm_s16le -ar 44100 -ac 2 "output.wav"\r
\`\`\`\r
\r
---\r
\r
## 3.8 轉換影片成 MP3 音頻\r
\r
\`\`\`bash\r
ffmpeg -i "input.mp4" "output.mp3"\r
\`\`\`\r
\r
---\r
\r
## 3.9 加入音頻\r
\r
如果想將一首樂曲作為影片既聲音部分，我地可以咁做：\r
\r
\`\`\`bash\r
ffmpeg -i "input.mp4" -i "audio.wav" -map 0:v -map 1:a -c:v copy -shortest "output.mp4"\r
\`\`\`\r
\r
註：\`-shortest\` 既作用係令影片既長度以播放長度較短既一方決定，咁就唔會因為音頻長過影片而令影片結尾出現有聲冇畫面既情況，但係如果音頻短過影片，就唔好加呢個 flag。\r
\r
---\r
\r
## 3.10 影片靜音\r
\r
為影片除去音頻部分：\r
\r
\`\`\`bash\r
ffmpeg -i "input.mp4" -c copy -an "output.mp4"\r
\`\`\`\r
\r
---\r
\r
## 3.11 將多張圖片轉成一條影片\r
\r
先將所有圖片儲存做 JPG 格式。\r
\r
之後建立一個叫 \`input.txt\` 既檔案，內容跟以下格式：\r
\r
\`\`\`plaintext\r
file '1.jpg'\r
duration 5\r
file '2.jpg'\r
duration 5\r
file '3.jpg'\r
duration 5\r
\`\`\`\r
\r
之後執行：\r
\r
\`\`\`bash\r
ffmpeg -f concat -i "input.txt" -c:v libx264 -r 30 -pix_fmt yuv420p "output.mp4"\r
\`\`\`\r
\r
註：\r
\r
-   \`duration\` 後面既數字係我地想上一行既圖片喺影片裡面所佔既時間，以秒數計。\r
-   第 \`1\` 張圖片會被用作影片既闊度同埋高度。\r
-   要確保第 \`1\` 張圖片既闊度同埋高度都係 \`2\` 既倍數。\r
\r
### 3.11.1 已知問題\r
\r
有一個已知問題，就係影片既長度可能會出錯，尤其係當我地只有 \`1\` 張或者 \`2\` 張圖片既時候。\r
\r
參考：\r
\r
-   [FFmpeg defect ticket - Using the concat demuxer with images and specified duration directives produces wrong duration](https://trac.ffmpeg.org/ticket/6128)\r
\r
我自己既 workaround：\r
\r
-   [StackOverflow 解答 - FFMPEG - concat demuxer with duration filter issue](https://stackoverflow.com/questions/46952350/ffmpeg-concat-demuxer-with-duration-filter-issue/72175215#72175215)\r
\r
個 workaround 就係最好都係先將每一張圖片轉換成獨立既影片檔案，再將佢地合併成單條影片。\r
\r
---\r
\r
## 3.12 檢查影片長度\r
\r
\`\`\`bash\r
ffprobe result.mp4 -show_entries format=duration -v 0\r
\`\`\`\r
\r
---\r
\r
## 3.13 提取 SRT 字幕\r
\r
如果影片自帶非內嵌既字幕，我地可以簡單咁提取佢地出黎做 SRT 檔：\r
\r
\`\`\`bash\r
ffmpeg -i "input.mkv" -map 0:s:1 "output.srt"\r
\`\`\`\r
\r
註：\r
\r
-   \`0:s:1\` 裡面既 \`1\` 係指第幾個字幕（\`0\`-based）。\r
-   有啲影片可能有多國語言既字幕，我地可以用影片播放程式播放呢條片，再睇下我地想要既字幕排第幾。\r
\r
---\r
\r
# 4 參考資料\r
\r
-   [FFmpeg CLI Flags](https://opensourcelibs.com/lib/ffmpeg-cli-flags)\r
-   [Gist - Complete list of ffmpeg flags / commands](https://gist.github.com/tayvano/6e2d456a9897f55025e25035478a3a50)\r
-   [How to use FFmpeg to convert images to video](https://shotstack.io/learn/use-ffmpeg-to-convert-images-to-video/)\r
-   [StackOverflow - How to add a new audio (not mixing) into a video using ffmpeg?](https://stackoverflow.com/questions/11779490/how-to-add-a-new-audio-not-mixing-into-a-video-using-ffmpeg/11783474#11783474)\r
`,NR=`# 1 JavaScript 本質\r
\r
Client-side 既 JavaScript 係由瀏覽器執行，所以會有 \`document\` 同 \`window\`，包含瀏覽器既 metadata、視窗大小、user agent 等等。\r
\r
JavaScript 唔似其他程式語言咁有 class 概念，而 JavaScript 中既 \`class\` 只係 \`prototype\` 既 syntactical sugar（語法糖，即係只係一個方便啲既寫法，唔係咩新功能）。JavaScript 一直都係 prototype-based。\`Object.prototype\`、\`Array.prototype\`、\`Number.prototype\`、\`String.prototype\` 等 prototypes 都可以被修改，影響所有已經建造既 object、array、number、string 等等。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
Object.prototype.keys = function() {\r
    return Object.keys(this);\r
};\r
\r
({ k: "v" }).keys(); // ["k"]\r
\`\`\`\r
\r
---\r
\r
# 2 Variables\r
\r
JavaScript 唔係 strongly typed，呢一點同 Java 完全唔同。除非用 JavaScript 既 superset TypeScript，否則 JavaScript 本身容許 variable 改變 data type。\r
\r
另外，JavaScript 裡面既 function 都係 variable，可以直接 reference，呢一點唔同需要用 reflection 既 Java。\r
\r
## 2.1 \`var\`\r
\r
-   Globally scoped 或者 function-scoped\r
-   如果唔係喺 function 裡面 declare 時用，個 variable 就會去左 \`window\`\r
-   可以重新 declare\r
-   數值可以改變\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
var bar;\r
var bar = 5;\r
var bar = 10;\r
var bar;\r
bar // 5\r
window.bar // 5\r
\r
let bar; // SyntaxError: Identifier 'bar' has already been declared\r
const bar; // SyntaxError: Identifier 'bar' has already been declared\r
\r
function foo() {\r
    var test = 123;\r
}\r
\r
test // ReferenceError: test is not defined\r
\`\`\`\r
\r
---\r
\r
## 2.2 \`let\`\r
\r
-   Block-scoped\r
-   不能重新 declare\r
-   數值可以改變\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
let bar;\r
let bar = 5;\r
bar = 10;\r
\r
let bar; // SyntaxError: Identifier 'bar' has already been declared\r
const bar; // SyntaxError: Identifier 'bar' has already been declared\r
\r
function foo() {\r
    let test;\r
    let test; // bad: SyntaxError: Identifier 'test' has already been declared\r
}\r
\`\`\`\r
\r
---\r
\r
## 2.3 \`const\`\r
\r
-   Block-scoped\r
-   Declare 時必須提供數值\r
-   不能重新 declare\r
-   數值不能改變\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const bar; // SyntaxError: Missing initializer in const declaration\r
const bar = 5;\r
bar = 10; // TypeError: Assignment to constant variable.\r
\r
var bar; // SyntaxError: Identifier 'bar' has already been declared\r
let bar; // SyntaxError: Identifier 'bar' has already been declared\r
\`\`\`\r
\r
\`for...in\`、\`for...of\` 可以用 \`const\`，但 \`for\` 就唔得。\r
\r
---\r
\r
## 2.4 Hoisting\r
\r
JavaScript 同 Java 既一個不同之處，就係 JavaScript 既 variables 可以喺 reference 之後先至 declare，咁係因為 JavaScript engine 識得 hoist，類似將 declaration 搬到 reference 之前。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
console.log(bar); // undefined\r
var bar = 5;\r
\`\`\`\r
\r
以上例子係唔會導致 \`ReferenceError\`，因為佢喺被執行既時候會變成：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
var bar;\r
console.log(bar); // undefined\r
bar = 5;\r
\`\`\`\r
\r
注意：hoisting variable declaration 並唔適用於 \`let\` 同 \`const\`，\`let\` 同 \`const\` 既 variables 喺 declare 之前會進入 temporal dead zone（TDZ），reference 既話會得到 \`ReferenceError: Cannot access '<variable>' before initialization\`。\r
\r
Function declaration 都可以 hoist。呢一點 Java 一樣，可以將 method 寫喺 class body 任何地方。對 Java 黎講好正常，因為 Java 係 compiled language；但對 JavaScript 而言，因為係 interpreted language，唔 hoist 既話，到用既時候就會唔知有果樣野既存在。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
foo();\r
\r
function foo() {}\r
\`\`\`\r
\r
但係咁就唔得：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
foo(); // TypeError: foo is not a function\r
\r
var foo = function() {};\r
\`\`\`\r
\r
參考資料：\r
\r
-   [Understanding Hoisting in JavaScript](https://www.digitalocean.com/community/tutorials/understanding-hoisting-in-javascript)\r
\r
---\r
\r
# 3 Boolean 相關\r
\r
JavaScript 同 Java 喺比較數值上有唔同，JavaScript 有 \`==\` 同 \`===\`；而 Java 就再強大得多（或者複雜得多），有 \`==\` 同 \`Object\` class 既 instance method \`equals(obj)\`（同 \`hashCode()\` 一齊用）。\r
\r
JavaScript 除左 Java 既 \`null\`（type：object），仲有 \`undefined\`（type：undefined）。\r
\r
參考：[JavaScript — Double Equals vs. Triple Equals](https://codeburst.io/javascript-double-equals-vs-triple-equals-61d4ce5a121a)\r
\r
## 3.1 驗證 value 係 truthy 定 falsy\r
\r
如果 value 唔係 boolean，而喺冇得用 \`&&\`（AND）、\`||\`（OR）、\`?\`（ternary／conditional operator）、\`if (boolean) {}\`、\`while (boolean) {}\`（只能 take boolean 做 argument）既情況下，需要得出一個 boolean value，咁我地可以用 \`!\`（not operator）得出 boolean（相反值），然後寫兩次（\`!!\`）就可以得出正值。\r
\r
JavaScript 同 Java 唔同既地方係，JavaScript 任何 variable，無論係 Number、Object 都可以驗證 truthy 或者 falsy，用 not operator \`!\` 得出 boolean 結果（truthy 或 falsy）。\r
\r
**Number：**\r
\r
只有 0 先係 falsy，其他 numbers 都係 truthy。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
!!0 // false\r
let bar = -0;\r
bar // -0 你冇睇錯，JavaScript 有分正 0、負 0\r
!!-0 // false 不過正 0、負 0 一樣都係 falsy\r
\r
!!-5 // true 負數都係 truthy，因為有野\r
!!5 // true\r
\`\`\`\r
\r
**String：**\r
\r
只要長度大過 0 就係 truthy，否則 falsy。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
!!"" // false\r
!!" " // true 你冇睇錯，blank string 都係 truthy\r
!!"0" // true\r
\`\`\`\r
\r
**Array：**\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
!![] // true 注意，咁係 check 唔到一個 array 係咪冇 element\r
!![].length // false\r
!![1].length // true\r
\`\`\`\r
\r
**Object：**\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
!!{} // true 注意，咁係 check 唔到一個 object 係咪冇 property\r
!!Object.keys({}).length // false\r
!!Object.keys({ k: "v" }).length // true\r
\`\`\`\r
\r
> There are only six falsy values in JavaScript you should be aware of:\r
>\r
> -   false — boolean false\r
> -   0 — number zero\r
> -   "" — empty string\r
> -   null\r
> -   undefined\r
> -   NaN — Not A Number\r
\r
---\r
\r
## 3.2 比較兩個 values\r
\r
用 \`==\` 比較 boolean、number、string 既話，左右兩邊即使唔係同一個 type，如果 type cast 完之後數值上相同，都可以得出 \`true\`。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
5 == "5" // true 因為 JavaScript 將 "5" 轉換成 5\r
0 == false // true 因為 JavaScript 將 0 轉換成 false\r
\`\`\`\r
\r
用 \`===\` 比較 number、string 既話，左右兩邊必須要係同一個 type，而且數值上相同，先會得出 \`true\`。\r
\r
用 \`===\` 或者 \`==\` 比較 array、object、function 既話，必須要係同一個 reference，先會得出 \`true\`。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
[] == [] // false\r
{} == {} // false\r
(() => {}) == (() => {}) // false 左右兩邊係 arrow function\r
\r
[] === [] // false\r
{} === {} // false\r
(() => {}) === (() => {}) // false 左右兩邊係 arrow function\r
\`\`\`\r
\r
> **Double equals**\r
>\r
> When using double equals in JavaScript we are testing for loose equality. Double equals also performs type coercion.\r
\r
> **Triple Equals**\r
>\r
> When using triple equals \`===\` in JavaScript, we are testing for strict equality. This means both the type and the value we are comparing have to be the same.\r
\r
---\r
\r
# 4 Array 語法\r
\r
喺 JavaScript 既世界，Array 都係 Object 既一種。\r
\r
## 4.1 Array 可以有特殊既 \`empty\` element\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
[ , ] // [empty]\r
[ , , ] // [empty × 2]\r
\`\`\`\r
\r
---\r
\r
## 4.2 Array spread operator\r
\r
當我地喺一個 array 上面用 spread operator，就可以去除最外層既 \`[]\`，令到 pass arguments 既時候只 pass 裡面既 elements（散開），而唔係個 array object。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
// ... 係 rest parameter，等於 Java 既 varargs\r
function foo(bar, ...rest) {}\r
\r
foo();\r
foo(1); // bar = 1\r
foo(1, 2); // bar = 1, rest = [2]\r
foo(1, 2, 3); // bar = 1, rest = [2, 3]\r
\r
const arr = [1, 2, 3, 4];\r
foo(arr); // bar = [1, 2, 3, 4], rest = []\r
foo(...arr); // bar = 1, rest = [2, 3, 4] 呢個就係 spread\r
\`\`\`\r
\r
用 spread operator 黎重新建立一個新 array：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
let arr = [1, 2, 3];\r
arr = [...arr, 4, ...arr];\r
arr // [1, 2, 3, 4, 1, 2, 3]\r
\`\`\`\r
\r
Conditional spread：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
[...(true ? [1] : [])] // [1]\r
[...(false ? [1] : [])] // []\r
\`\`\`\r
\r
---\r
\r
## 4.3 Array destructuring assignment\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const [, r = 0, g = 0, b = 0] = [0.5, 248, 187, 223]; // ARGB\r
r // 248\r
g // 187\r
b // 223\r
\`\`\`\r
\r
解釋：將 array 既數值按順序按位置 assign 落左邊既 variables 同時提供 default value，亦可以用 empty 黎 skip 左唔需要既 elements。\r
\r
互換數值：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
let foo = 5;\r
let bar = 10;\r
[foo, bar] = [bar, foo];\r
foo // 10\r
bar // 5\r
\`\`\`\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const obj = { bar: 5 };\r
Object.entries(obj).forEach(([k, v]) => console.log(\`\${k}: \${v}\`)); // bar: 5\r
\`\`\`\r
\r
可以用 rest parameter：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const [first, second, ...rest] = [1, 2, 3, 4];\r
first // 1\r
second // 2\r
rest // [3, 4]\r
\`\`\`\r
\r
就算乜 variable 名都冇，都唔會有問題：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const [, ,] = [1, 2, 3, 4];\r
\`\`\`\r
\r
---\r
\r
## 4.4 生成數字 array\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
[...Array(10).keys()] // [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r
\`\`\`\r
\r
---\r
\r
## 4.5 去除重複 elements\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
let arr = [1, 2, 3, 1, 2, 4];\r
arr = Array.from(new Set(arr));\r
arr // [1, 2, 3, 4]\r
\`\`\`\r
\r
---\r
\r
# 5 Object 語法\r
\r
## 5.1 創建 object\r
\r
Shorthand property names：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const bar = 5;\r
const obj = { bar }; // 等於 { bar: bar }\r
obj // {bar: 5}\r
\`\`\`\r
\r
解釋：當我地 initialize object 既時候，如果喺 \`{}\` 裡面用 \`<variable>\` 既寫法而唔係 \`<key>: <value>\` 既寫法，variable 名就會成為 object property key，而 variable 既 value 就會成為 object property value。\r
\r
Computed property names：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const prefix = "bar";\r
const i = 3;\r
const obj = {\r
    [\`\${prefix}\${i}\`]: 5,\r
};\r
obj // {bar3: 5}\r
\`\`\`\r
\r
解釋：\`[]\` 裡面可以填 expression，表達 object property 名（string）。\r
\r
---\r
\r
## 5.2 Object spread operator\r
\r
當我地喺一個 object 上面用 spread operator，就可以去除最外層既 \`{}\`，令到 pass arguments 既時候只 pass 裡面既 property key-value pairs（散開），而唔係個 object。\r
\r
用 spread operator 黎重新建立一個新 object：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
let obj = { k: "v" };\r
obj = { k: "vv", ...obj };\r
obj // {k: "v"}\r
obj = { ...obj, k: "vv" };\r
obj // {k: "vv"}\r
\`\`\`\r
\r
注意：因為 object 既 properties 唔可以重複，所以 \`{}\` 裡面如果出現同一個 property 名（包括 spread 出黎既 properties），最後既數值會覆蓋之前既數值成為最終既數值。\r
\r
Conditional spread：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
{...(true && {k: 'v'})} // {k: "v"}\r
{...(false && {k: 'v'})} // {}\r
\`\`\`\r
\r
---\r
\r
## 5.3 Object destructuring assignment\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const { k, kk = "vv" } = { k: "v" };\r
k // "v"\r
kk // "vv"\r
\`\`\`\r
\r
解釋：喺 object 拎個 property key-value 出黎 declare 成一個 variable，而 variable 名會同 object property 名一樣。如果 object 裡面冇我地需要既 property，可以提供 default value。\r
\r
Destructure 既時候仲可以同時重新命名 variable：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const { k: kk } = { k: "v" };\r
kk // "v"\r
\`\`\`\r
\r
解釋：喺 object 拎個 property key-value 出黎 declare 成一個唔同名既 variable。\r
\r
可以用 rest parameter：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const { k1, k2, ...rest } = { k1: 1, k2: 2, k3: 3, k4: 4 };\r
k1 // 1\r
k2 // 2\r
rest // {k3: 3, k4: 4}\r
\`\`\`\r
\r
就算乜 variable 名都冇，都唔會有問題：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const {} = { k: "v" };\r
\`\`\`\r
\r
### 5.3.1 Nested object and array destructuring assignment\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const {\r
    name,\r
    // orders, // 如果需要 access orders array\r
    orders: [\r
        { id: id1, status: status1 },\r
        { id: id2, status: status2 },\r
    ],\r
} = {\r
    name: "Mick",\r
    orders: [\r
        {\r
            id: 101,\r
            status: "SHIPPED",\r
        },\r
        {\r
            id: 115,\r
            status: "PAID",\r
        },\r
        {\r
            id: 128,\r
            status: "CANCELLED",\r
        },\r
    ],\r
};\r
\r
name // "Mick"\r
id1 // 101\r
id2 // 115\r
status1 // "SHIPPED"\r
status2 // "PAID"\r
orders // ReferenceError: orders is not defined\r
\`\`\`\r
\r
---\r
\r
# 6 String 語法\r
\r
## 6.1 Template literal\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const bar = 5;\r
const foo = () => 10;\r
const str1 = \`\${bar}\`;\r
const str2 = \`\${foo()}\`;\r
const str3 = \`\${true ? bar : foo()}\`;\r
const str4 = \`\${false ? bar : foo()}\`;\r
\r
str1 // "5"\r
str2 // "10"\r
str3 // "5"\r
str4 // "10"\r
\`\`\`\r
\r
---\r
\r
# 7 Operators\r
\r
參考資料：\r
\r
-   [MDN - Operator precedence](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence#table)\r
\r
## 7.1 Logical operators\r
\r
### 7.1.1 Logical AND operator\r
\r
\`a && b\` 會喺 \`a\` 係任何 truthy value 既情況下得出 \`b\`，否則得出 \`a\`。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
true && 10      // 10\r
5 && 10         // 5\r
null && 10      // null\r
undefined && 10 // undefined\r
0 && 10         // 0\r
"" && 10        // ""\r
\`\`\`\r
\r
---\r
\r
### 7.1.2 Logical OR operator\r
\r
\`a || b\` 會喺 \`a\` 係任何 falsy value 既情況下得出 \`b\`，否則得出 \`a\`。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
true || 10      // true\r
5 || 10         // 5\r
null || 10      // 10\r
undefined || 10 // 10\r
0 || 10         // 10\r
"" || 10        // 10\r
\`\`\`\r
\r
---\r
\r
### 7.1.3 Nullish coalescing operator\r
\r
\`a ?? b\` 只會喺 \`a\` 係 \`null\` 或者 \`undefined\` 既情況下得出 \`b\`，否則得出 \`a\`。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
true ?? 10      // true\r
5 ?? 10         // 5\r
null ?? 10      // 10\r
undefined ?? 10 // 10\r
0 ?? 10         // 0\r
"" ?? 10        // ""\r
\`\`\`\r
\r
---\r
\r
## 7.2 Ternary/conditional operator\r
\r
\`a ? b : c\` 會喺 \`a\` 係任何 truthy value 既情況下得出 \`b\`，否則得出 \`c\`。\r
\r
而呢個 statement 係 short circuit evaluation，\`b\`、\`c\` 執唔執行視乎 \`a\` 既 value：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
a ? foo() : bar()\r
\`\`\`\r
\r
解釋：\r
\r
-   \`a\` 係 truthy 既情況下會執行 \`foo()\`，唔會執行 \`bar()\`\r
-   \`a\` 係 falsy 既情況下會執行 \`bar()\`，唔會執行 \`foo()\`\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
let bar = 5;\r
\r
// ternary operator\r
bar = bar > 3 ? 10 : "false";\r
\r
// 相等於\r
if (bar > 3) {\r
    bar = 10;\r
} else {\r
    bar = "false";\r
}\r
\`\`\`\r
\r
---\r
\r
## 7.3 Assignment operators\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
let bar = 10;\r
bar++;    // 相等於 bar = bar + 1;\r
bar--;    // 相等於 bar = bar - 1;\r
bar += 5; // 相等於 bar = bar + 5;\r
bar -= 5; // 相等於 bar = bar - 5;\r
bar *= 5; // 相等於 bar = bar * 5;\r
bar /= 5; // 相等於 bar = bar / 5;\r
bar %= 5; // 相等於 bar = bar % 5;\r
\r
bar = 2;\r
bar **= 3; // 相等於 bar = Math.pow(bar, 3);\r
\`\`\`\r
\r
### 7.3.1 Logical AND assignment operator\r
\r
\`a &&= b;\` 會喺 \`a\` 係任何 truthy value 既情況下 assign \`b\` 去 \`a\`，否則咩都唔做。\r
\r
而呢個 statement 係 short circuit evaluation——只有當 \`a\` 係 truthy，\`b\` 先會執行。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
let bar = 10;\r
bar &&= 5; // 相等於 bar && (bar = 5);\r
bar // 5\r
\`\`\`\r
\r
---\r
\r
### 7.3.2 Logical OR assignment operator\r
\r
\`a ||= b;\` 會喺 \`a\` 係任何 falsy value 既情況下 assign \`b\` 去 \`a\`，否則咩都唔做。\r
\r
而呢個 statement 係 short circuit evaluation——只有當 \`a\` 係 falsy，\`b\` 先會執行。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
let bar = 0;\r
bar ||= 10; // 相等於 bar || (bar = 10);\r
bar // 10\r
\`\`\`\r
\r
---\r
\r
### 7.3.3 Logical nullish assignment operator\r
\r
\`a ??= b;\` 只會喺 \`a\` 係 \`null\` 或者 \`undefined\` 既情況下 assign \`b\` 去 \`a\`，否則咩都唔做。\r
\r
而呢個 statement 係 short circuit evaluation——只有當 \`a\` 係 \`null\` 或者 \`undefined\`，\`b\` 先會執行。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
let bar = 0;\r
bar ??= 10; // 相等於 bar ?? (bar = 10);\r
bar // 0\r
\`\`\`\r
\r
---\r
\r
## 7.4 Optional chaining\r
\r
當我地 call \`a.b.c.d\` 咁既 chaining 既時候，視乎情況，我地有時需要考慮到 \`a\`、\`b\`、\`c\` 有可能係 nullish（\`undefined\` 或者 \`null\`）而加上唔少 check nullish value 既 code，否則可能會因為 nullish value 而導致 chaining 既時候出現 \`TypeError: Cannot read property 'x' of undefined/null\`。\r
\r
用返上面個例子，如果利用 optional chaining，就可以咁寫：\`a?.b?.c?.d\`，而最少只需要 declare \`a\` 就已經可以避免到因為 nullish value 而導致既 \`TypeError\`。\r
\r
另一個例子 \`a.b().c.d\` 寫成 \`a?.b?.()?.c?.d\` 就可以 handle 到 \`a\`、\`b\`、\`b()\`、\`c\` 係 nullish。不過有一點要留意，就係 optional chaining 都唔係無敵，因為 \`a?.b?.\` 後面有 \`()\`，所以 \`b\` 就必須係 nullish 或者一個 valid 既 function object，否則就會出 \`TypeError: a?.b is not a function\`。\r
\r
| 情境                                 | 例子               |\r
| :----------------------------------- | :----------------- |\r
| Access 一個 object/array 既 property | \`o?.p\`、\`o?.["p"]\` |\r
| Call 一個 function                   | \`f?.()\`            |\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const obj = {\r
	foo: () => 123,\r
	bar: null,\r
};\r
const obj2 = null;\r
\r
obj?.foo?.() // 123\r
obj?.bar?.() // undefined\r
obj?.bar?.(blah) // undefined\r
obj?.["bar"] // undefined\r
\r
obj2?.foo // undefined\r
obj2?.blah() // undefined\r
obj2?.a?.b?.c?.d?.e // undefined\r
\r
obj3 // ReferenceError\r
\`\`\`\r
\r
注意：Optional chaining 係用唔到喺 assignment 既左手邊，\`a?.b = 123\` 係會出 \`SyntaxError: Invalid left-hand side in assignment\`。\r
\r
---\r
\r
# 8 Deep clone\r
\r
Deep clone 同 shallow clone 既分別在於 clone 既深度。Shallow clone 指既係只會 clone 最表面果層，裡面如果有 nested objects，會用返相同既 object references，如果改左裡面既 nested object，就會影響到新舊兩個 objects；而 deep clone 就會 recursively 咁 clone 到去最入面果層，令到新既 object 同舊既 object 完全冇關係，無論點改其中一個 object，另一個 object 都唔會受到任何影響。\r
\r
參考資料：\r
\r
-   [StackOverflow - What is the most efficient way to deep clone an object in JavaScript?](https://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-deep-clone-an-object-in-javascript)\r
\r
## 8.1 \`JSON\`\r
\r
最簡單亦適用於一般既 JSON data deep clone 場景既方法就係將 object serialize 成 string，再 deserialize 成全新既 object，裡面既 nested objects 都係全新。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
let obj = { k: "v", kk: [1, 2] };\r
obj = JSON.parse(JSON.stringify(obj));\r
obj // {k: "v", kk: [1, 2]}\r
\`\`\`\r
\r
---\r
\r
## 8.2 Lodash library\r
\r
先透過 \`<script>\` load Lodash，或者以 \`npm install\` + \`import\` 語句 import Lodash。\r
\r
Lodash 既 utility object 係 \`_\`。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
let obj = { k: "v", kk: [1, 2] };\r
obj = _.cloneDeep(obj);\r
obj // {k: "v", kk: [1, 2]}\r
\`\`\`\r
`,BR=`# 1 React 實作\r
\r
我地已經安裝曬需要既 IDE、IDE plugin 同埋對 React project 既文件目錄有初步既認識，之後我地可以寫一個非常簡單、純 front-end 冇 back-end 既 React project 黎學下 React、React hooks、JSX syntax、ES6+ 既 JavaScript（ECMAScript）新功能。\r
\r
---\r
\r
# 2 需求\r
\r
有一次面試，面試官畀一個鐘我寫一個 calculator program 出黎，可以用 Java 或者 web 寫，功能不限。咁我當然揀用 web（HTML+JavaScript）寫啦。\r
\r
---\r
\r
# 3 做法既考慮因素\r
\r
我揀左 React，而我既考慮因素如下：\r
\r
-   如果用 Java 寫\r
    -   一係就 command line，用 \`Scanner\` 讀取 user input，冇介面既 calculator 就有啲怪\r
    -   一係就用 Swing、JavaFX 等等既 GUI framework 黎寫，有埋介面\r
        -   我以前寫過唔少 JavaFX 既程式\r
        -   但係鑑於 JavaFX 要 customize 得個介面靚係唔會比 HTML+CSS 易寫\r
-   如果用 web 寫\r
    -   介面容易寫，CSS customize layout 又唔難\r
    -   React\r
        -   有 one-way binding\r
        -   用 Create-React-App 生成一個 React template 出黎改，好方便\r
        -   如果有需要，可以裝 npm packages\r
        -   而家寫 React app 有曬 hot reloading，就算手動 refresh 都快過 Java\r
-   做法\r
    -   最 basic 既 calulator 係冇算式，每次只係將兩個數用一個 operator（加減乘除）運算出結果\r
    -   好啲既做法係用戶 append 數字同 operators 落一條 equation 度，個 equation 支援好幾個數，中間有好幾個 operators（加減乘除，甚至括號）\r
        -   時間有限，唔想寫 algorithm（queue、FIFO）\r
        -   最簡單就係 pass 成條 calculator 算式既 string 畀個 programming language 自己計\r
        -   舊版 Java 有 Nashorn JavaScript engine，不過 Java 15 移除左，所以如果將來用新版 Java，呢啲 code 可能會用唔到。雖然我用 Java 8，但最好都係唔寫比較好\r
        -   JavaScript 有 \`eval()\` function，我地 calculator 限制數字同幾個 operators，所以唔會有其他人所講既 security risk\r
    -   用邊個 programming language 以及方法，都一樣會有浮點問題（\`0.1\` + \`0.2\` 唔等於 \`0.3\` 而係等於 \`0.30000000000000004\`），所以最後都係考慮返易唔易寫、UX、功能數量\r
\r
---\r
\r
# 4 介面設計\r
\r
因為我果日帶左部 MacBook Pro 去面試，而 macOS 自帶既 Calculator app 係咁既樣：\r
\r
![](blog/2021-05/react-calculator/macos-calculator.png)\r
\r
咁我地個 calculator 可以參考佢個排版。\r
\r
<!-- prettier-ignore -->\r
\`\`\`plaintext\r
       3\r
     1+2\r
AC ( ) ⌫\r
 7 8 9 ÷\r
 4 5 6 ×\r
 1 2 3 −\r
  0  . +\r
\`\`\`\r
\r
除左答案，我地會顯示埋條算式。\`AC\` 係 all clear，會刪除曬所有輸入左既字；\`⌫\` 係 backspace，會刪除最後一個字。\r
\r
注意：我地呢個 calculator 係唔需要一個 \`=\` 按鍵，咁係因為我地會令佢不斷自動計答案出黎，唔需要撳 \`=\` 按鍵先識出答案。\r
\r
---\r
\r
# 5 動手寫\r
\r
## 5.1 用 Create-React-App 建立 project\r
\r
Make sure 你已經安裝左 npm 同 Create-React-App，如果未，睇返上一篇：[React JS 網頁開發筆記（一）](/blog/react-web-1)\r
\r
首先是但搵個 folder 執行以下 command：\r
\r
<!-- prettier-ignore -->\r
\`\`\`bash\r
create-react-app calculator\r
\`\`\`\r
\r
等一陣之後喺個 project folder 度執行 command：\r
\r
<!-- prettier-ignore -->\r
\`\`\`bash\r
npm start\r
\`\`\`\r
\r
就會見到瀏覽器自動彈出我地既網頁，網址係 [http://localhost:3000](http://localhost:3000)。\r
\r
---\r
\r
## 5.2 寫 React code\r
\r
根據上一篇 React blog post —— [React JS 網頁開發筆記（一） - 了解 src 內既文件](/blog/react-web-1#531-了解-src-內既文件)，我地先刪除多餘既文件同 code，之後我地就可以加我地既 calculator code 啦。\r
\r
Project structure：\r
\r
-   \`src\`\r
    -   \`/components\`\r
        -   \`/Calculator\`\r
            -   \`index.css\`\r
            -   \`index.js\`\r
        -   \`/CalculatorButton\`\r
            -   \`index.css\`\r
            -   \`index.js\`\r
    -   \`App.css\`\r
    -   \`App.js\`\r
    -   \`index.css\`\r
    -   \`index.js\`\r
\r
### 5.2.1 \`Calculator\`\r
\r
首先喺 \`src\` folder 裡面，開一個 folder 叫 \`components\`，然後喺裡面再開一個 folder 叫 \`Calculator\`，然後喺裡面開一個檔案叫 \`index.js\`。\r
\r
先寫一個空白既 React component：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
function Calculator(props) {\r
    return <></>;\r
}\r
\r
export default Calculator;\r
export { Calculator };\r
\`\`\`\r
\r
\`return <></>\` 係 JSX 既寫法，詳情睇呢度：[7.1 JSX 語法、Babel、Webpack](#71-jsx-語法babelwebpack)\r
\r
要做到上面設計既排版，我地會用 \`<table>\`。將 \`return\` 後面改成：\r
\r
<!-- prettier-ignore -->\r
\`\`\`jsx\r
<table>\r
    <thead>\r
        <tr>\r
            <th colSpan={4}>Output</th>\r
        </tr>\r
    </thead>\r
    <tbody>\r
        <tr>\r
            <td colSpan={4}>Equation</td>\r
        </tr>\r
        <tr>\r
            <td>AC</td>\r
            <td>(</td>\r
            <td>)</td>\r
            <td>⌫</td>\r
        </tr>\r
        <tr>\r
            <td>7</td>\r
            <td>8</td>\r
            <td>9</td>\r
            <td>÷</td>\r
        </tr>\r
        <!-- 等等 -->\r
    </tbody>\r
</table>\r
\`\`\`\r
\r
每一個 \`<tr>\` 都代表一層，而每一個 \`<td>\` 就代表一個 table cell。照住呢個 format 將上面改成 4x7。\r
\r
CSS 少不了，喺同一個 folder 下開一個 \`index.css\` 檔，類似：\r
\r
<!-- prettier-ignore -->\r
\`\`\`css\r
table {\r
    border-collapse: collapse;\r
    border: 1px solid gray;\r
}\r
\r
th,\r
td {\r
    padding: 8px;\r
    text-align: center;\r
    width: 2em;\r
    line-height: 1.75em;\r
    border: 1px solid gray;\r
}\r
\`\`\`\r
\r
---\r
\r
### 5.2.2 \`CalculatorButton\`\r
\r
之後喺 \`src/components\` 加一個 \`CalculatorButton\` folder，喺裡面加一個 \`index.js\` 檔：\r
\r
<!-- prettier-ignore -->\r
\`\`\`jsx\r
function CalculatorButton(props) {\r
    const { children, ...rest } = props;\r
\r
    return (\r
        <td className="calculator-button" {...rest}>\r
            {children}\r
        </td>\r
    );\r
}\r
\r
export default CalculatorButton;\r
export { CalculatorButton };\r
\`\`\`\r
\r
---\r
\r
### 5.2.3 令 \`Calculator\` 使用 \`CalculatorButton\`\r
\r
去返 \`Calculator/index.js\`，我地可以喺最頂加呢句：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
import { CalculatorButton } from "../CalculatorButton";\r
\`\`\`\r
\r
喺個 function component 裡面我地定義一個新 function，呢個 function 會令我地之後撳掣既時候，Chrome developer tools 既 console 顯示撳左既按鍵既字。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const handleClick = (e) => {\r
    console.log(e);\r
};\r
\`\`\`\r
\r
然後將所有：\r
\r
<!-- prettier-ignore -->\r
\`\`\`jsx\r
<td>1</td>\r
\`\`\`\r
\r
改成：\r
\r
<!-- prettier-ignore -->\r
\`\`\`jsx\r
<CalculatorButton onClick={(e) => handleClick("1")}>1</CalculatorButton>\r
\`\`\`\r
\r
呢度我地 attach 左一個 \`onClick\` 既 event handler，當我地撳一個按鍵，就會 call 裡面既 function。\r
\r
---\r
\r
### 5.2.4 修改算式\r
\r
喺 \`Calculator/index.js\` 頂頭加呢句：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
import { useState } from "react";\r
\`\`\`\r
\r
再喺 function component 裡面加呢句：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const [equation, setEquation] = useState("0");\r
\`\`\`\r
\r
呢句畀我地定義一個 React 明既 variable 同埋佢對應既 setter，當 setter 被 call，React 會安排去 update \`equation\` 既值。\r
\r
我地再將 \`<td colSpan={4}>Equation</td>\` 改成 \`<td colSpan={4}>{equation}</td>\`，咁 React 就會 interpolate \`equation\` 既值入呢個 \`<td>\` 裡面，將 \`0\` 顯示出黎。\r
\r
要做到撳數字或者運算符號可以令 \`equation\` 後面加插果個字，就要將 \`handleClick\` function 既 method body 加入一句：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
setEquation(equation + e);\r
\`\`\`\r
\r
不過 \`AC\` 同 \`⌫\` 既處理方式會有唔同，所以我地要針對性咁改。\r
\r
首先，我地改 \`AC\` 按鍵既 event handler。將 \`onClick\` 用既 function 換成一個新既：\r
\r
<!-- prettier-ignore -->\r
\`\`\`jsx\r
<CalculatorButton onClick={() => handleClickAC()}>AC</CalculatorButton>\r
\`\`\`\r
\r
並且喺 function component 裡面加上呢個 function：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const handleClickAC = () => {\r
    console.log("AC is clicked!");\r
    setEquation("0");\r
};\r
\`\`\`\r
\r
至於 \`⌫\` 按鍵，我地要刪除最後輸入既字。將 \`onClick\` 用既 function 換成一個新既：\r
\r
<!-- prettier-ignore -->\r
\`\`\`jsx\r
<CalculatorButton onClick={() => handleClickBackspace()}>⌫</CalculatorButton>\r
\`\`\`\r
\r
並且喺 function component 裡面加上呢個 function：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const handleClickBackspace = () => {\r
    console.log("Backspace is clicked!");\r
    setEquation(equation.substring(0, equation.length - 1));\r
};\r
\`\`\`\r
\r
\`substring\` 係 string 既一個 function，第一個 argument 係 start index，喺我地呢個情況就係 \`equation\` 值既第一個字，第二個 argument 係 end index + 1（\`"123".substring(0, 2)\` 出 \`12\` 而唔係 \`123\`，因為 end index 唔似 start index，後者係 0-based），喺我地呢個情況就係 \`equation\` 值既長度減 2。\r
\r
參考 MDN \`substring\`：[String.prototype.substring()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring)\r
\r
---\r
\r
### 5.2.5 運算答案\r
\r
喺 function component 裡面加呢句：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const [output, setOutput] = useState("0");\r
\`\`\`\r
\r
再將 \`<th colSpan={4}>Output</th>\` 改成 \`<th colSpan={4}>{output}</th>\`。\r
\r
我地會用 React 自帶既 \`useEffect\` hook 黎將 \`output\` bind 落 \`equation\` 既運算結果。\r
\r
將 \`Calculator/index.js\` 既頂頭 \`import\` 改一改：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
import { useState, useEffect } from "react";\r
\`\`\`\r
\r
喺 function component 裡面加呢段：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
useEffect(() => {\r
    try {\r
        setOutput(eval(equation.replace(/−/g, "-")\r
                               .replace(/×/g, "*")\r
                               .replace(/÷/g, "/")));\r
    } catch (err) {\r
        // do nothing\r
    }\r
}, [equation]);\r
\`\`\`\r
\r
\`useEffect\` 既第二個 argument \`[equation]\` 係一個 array，React 會 mon 住裡面既 variable(s)，如果 value(s) 改左就會執行第一個 argument 既 arrow function（\`() => {}\`）既 method body，用 \`eval()\` 黎運算我地既算式。\`equation\` 裡面除左 \`+\` 號，其他運算符號都要改返做 keyboard 果隻寫法。\r
\r
---\r
\r
## 5.3 為 IE 瀏覽器 polyfill\r
\r
為左要令個網頁喺 Internet Explorer 11 瀏覽器上面行得到，我地要為佢 polyfill 啲新版 JavaScript 既 syntax。有一個 library 可以做到呢樣野。\r
\r
首先，我地執行：\r
\r
\`\`\`bash\r
npm i react-app-polyfill\r
\`\`\`\r
\r
然後喺 \`package.json\` 既 \`browserslist\` 既 \`production\` 同 \`development\` 裡面加上 \`ie 11\`：\r
\r
\`\`\`json\r
"browserslist": {\r
    "production": [\r
        ">0.2%",\r
        "not dead",\r
        "not op_mini all",\r
        "ie 11"\r
    ],\r
    "development": [\r
        "last 1 chrome version",\r
        "last 1 firefox version",\r
        "last 1 safari version",\r
        "ie 11"\r
    ]\r
}\r
\`\`\`\r
\r
然後喺 \`src/index.js\` 既最頂頭加上：\r
\r
\`\`\`js\r
import "react-app-polyfill/ie11";\r
import "react-app-polyfill/stable";\r
\`\`\`\r
\r
---\r
\r
# 6 成果\r
\r
改良一下 CSS 就會得到一個好靚仔既 calculator！\r
\r
![](blog/2021-05/react-calculator/react-calculator.png)\r
\r
再改良一下 JavaScript 就可以解決 \`0.1\` + \`0.2\` 唔等於 \`0.3\` 既問題。\r
\r
![](blog/2021-05/react-calculator/precision-issue-solved.png)\r
\r
[Demo - React Calculator](https://blackr1234.github.io/calculator/)\r
\r
---\r
\r
# 7 心得\r
\r
## 7.1 JSX 語法、Babel、Webpack\r
\r
注意 \`return <></>\` 係將 JavaScript 既 \`return\` keyword 同 HTML 既 tags \`<></>\`（React fragment）寫埋一齊。呢一個並唔係正常既 JavaScript，而係 JSX syntax。目前只有 React 咁寫，係 React 既賣點之一，Angular 同 Vue 都冇（至少佢地既 project template 冇預你用）。因為 Create-React-App 幫我地起呢個 project template 既時候已經加左必須既 React dependencies，而呢啲 React dependencies 背後又各自有佢地既 dependencies，包括 Babel 同 Webpack。\r
\r
Babel 會將 JSX 轉化為正常瀏覽器睇得明既 JavaScript，亦會 polyfill 部分 JavaScript ES6+ 既新 syntax 或者 functions。Polyfill 既意思係做一層處理，將新版 ES6+ 既 JavaScript 寫法換成舊版 JavaScript 既寫法，令大部分瀏覽器（包括好舊既版本，只睇得明舊版 JavaScript）都睇得明，行得到。Babel 會喺我地 compile 或者 build 個 project 既時候運行，最後我地得到既 for production deployment 用既 code 係經過 Babel 同 Webpack 處理之後既產物，亦都係 minified 左。\r
\r
Minification 即係我地寫完曬所有 code 之後，Webpack 會將我既啲 code 壓縮，做法就係將所有 variable 名同 function 名都有咁短改咁短，變曬 abcde，同埋冇曬啲隔行。因為其實啲 variable 名、function 名只係為左我地 developer 容易理解所以先用英文詞語寫，對於瀏覽器其實長啲短啲就算換曬 abcde 都冇所謂，因為只要 syntax 岩，reference 岩曬，成件事一樣會 work。因為當用戶上一個網站既時候，瀏覽器需要下載 HTML、CSS、JavaScript 等等既資源，下載速度同所需時間係一個問題。如果我地 minify 左我地既 code，傳輸果時就可以慳返啲 bandwidth，理論上用戶都可以快啲見到個頁面。\r
\r
參考 React 官網：[What's a JSX Transform?](https://zh-hant.reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html#whats-a-jsx-transform)\r
\r
> Browsers don't understand JSX out of the box, so most React users rely on a compiler like Babel or TypeScript to transform JSX code into regular JavaScript. Many preconfigured toolkits like Create React App or Next.js also include a JSX transform under the hood.\r
\r
---\r
\r
## 7.2 Can I use\r
\r
如果我地想知道邊啲功能有可能有瀏覽器支援問題，或者知道到底適用於現時世界上幾多百分率既瀏覽器，我地可以用 [caniuse.com](https://caniuse.com/)。我地可以喺 Can I use 後面輸入例如：\r
\r
-   \`blockquote\`（HTML tag）\r
-   \`draggable\`（HTML attribute）\r
-   \`user-select\`（CSS property）\r
-   \`::before\`（CSS selector）\r
-   \`Array.filter\`（JavaScript API）\r
\r
Firefox 瀏覽器既公司 Mozilla 都有一個 [MDN 網站](https://developer.mozilla.org/en-US/)可以畀我地睇到 reference，同埋瀏覽器支援情況。\r
`,HR=`# 1 Cookie 同 local storage 既比較\r
\r
## 1.1 簡單 fact sheet\r
\r
-   瀏覽器 call back-end server API 既時候會自動帶埋 cookies\r
-   Call back-end server API 要用到 HTTP header 既話，需要執行 JavaScript\r
-   HttpOnly 既 cookie 只會畀瀏覽器使用，連 JavaScript 都 access 唔到\r
-   主要兩大類型既安全問題：CSRF 同 XSS 攻擊\r
\r
---\r
\r
## 1.2 比較\r
\r
| 考慮／儲存方式     | Cookie                           | Local storage          |\r
| ------------------ | -------------------------------- | ---------------------- |\r
| 限制               | 有指定 domain，做唔到 cross site | 必須用 JavaScript 提取 |\r
| 安全隱憂：CSRF     | 有，但可防止 ①                   | 冇 ②                   |\r
| 安全隱憂：XSS 攻擊 | 有，但可防止 ③                   | 有 ④                   |\r
\r
解釋：\r
\r
-   ①：網站可以用 SameSite cookie，咁就算用戶上錯左惡意網站，因為佢喺該網站（例如銀行）既 cookies 同惡意網站並唔係 SameSite，所以重要既 cookie 就唔會被送出；POST API 加上 CSRF token 可以防止 CSRF，因為必須要用 JavaScript 先可以將 HTTP header 既 CSRF token cookie 抄到 header。\r
-   ②：因為需要用 JavaScript 黎儲取 local storage，所以冇 CSRF 既隱憂。\r
-   ③：如果 cookie 既 HttpOnly 係 true，JavaScript 就無法讀取該 cookie；但如果係 false，亦會受到 XSS 攻擊。\r
-   ④：因為 XSS 攻擊就係利用惡意既 JavaScript 黎喺用戶既瀏覽器任意執行，而 local storage 係用 JavaScript 存取。\r
\r
結論：我地應該用 cookie 儲存敏感既 session ID 或者 access token 資料。\r
\r
註：cookie 既 SameSite 屬性同 HttpOnly 屬性需要瀏覽器支援。\r
\r
參考資料：\r
\r
-   [Cross-site request forgery - Cookie-to-header token（Wiki）](https://en.wikipedia.org/wiki/Cross-site_request_forgery#Cookie-to-header_token)\r
-   [OWASP - Browsers Supporting HttpOnly](https://owasp.org/www-community/HttpOnly#browsers-supporting-httponly)\r
-   [Chrome 80 後針對第三方 Cookie 的規則調整 (default SameSite=Lax)](https://ianhung0529.medium.com/chrome-80-%E5%BE%8C%E9%87%9D%E5%B0%8D%E7%AC%AC%E4%B8%89%E6%96%B9-cookie-%E7%9A%84%E8%A6%8F%E5%89%87%E8%AA%BF%E6%95%B4-default-samesite-lax-aaba0bc785a3)\r
-   [Cross-Site Request Forgery Prevention Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html)\r
\r
---\r
\r
# 2 Session ID 同 access token 既比較\r
\r
用戶使用一般網上服務（銀行除外）好多時都會希望喺下一次訪問網頁既時候可能保持登入狀態，所以用戶一般都唔會自行登出網頁，而網頁為左做到咁，正常都會將用戶登入成功既資訊儲存喺用戶既瀏覽器。瀏覽器可以用到 cookie（一般做法）或者 local storage。用戶資訊可以係當用戶喺登入果時提供既登入帳號同密碼，但因為安全問題，將帳號同密碼儲存喺瀏覽器度（唔加密）係好危險，所以正常做法都係將一個可以對應到 back-end server session 既 session ID 儲存喺瀏覽器既 cookie（都可以用 local storage，但需要用到 JavaScript）。\r
\r
Session ID 同 access token 都係為左一個共同既目的，就係喺驗證左用戶既身份之後，方便後續對 back-end server 既 API call，咁用戶使用網頁既功能既時候，front-end 網頁就唔需要再提供密碼，而係提供 session ID 或者 access token。\r
\r
我地可以有以下 4 種配搭：\r
\r
|   認證方式   | 瀏覽器存取方式 |\r
| :----------: | :------------: |\r
|  Session ID  |     Cookie     |\r
|  Session ID  | Local storage  |\r
| Access token |     Cookie     |\r
| Access token | Local storage  |\r
\r
## 2.1 Session ID 既做法\r
\r
簡單咁講，Session ID 既做法就係當用戶登入成功之後，back-end server 會生成一啲用戶登入既狀態數據存放喺 back-end server，可以係 database 或者 cache。然後，back-end server 會返回一個 session ID 畀 front-end 網頁作為對應返果啲數據既一個密碼，可以係以 HTTP header \`Set-Cookie: "sessionId=ABCDEFG12345"\` 而 front-end 網頁會將呢個 session ID 記低，之後 call back-end server 既 API 去為用戶進行唔同既操作既時候就會放埋落個 API call 度一同送出。用戶成功登入之後，後續任何 call back-end server 既操作都會令 back-end server 驗證 API call 裡面既 session ID，睇下係邊個用戶操作緊、用戶有咩權限、用戶既帳號仲係咪正常既狀態。\r
\r
一般黎講，啲網頁考慮到下次用戶重新開啟網頁既時候都可以 keep 返用戶成功登入左既狀態，就會喺佢由 back-end server 收到呢個 session ID 值之後將佢儲低喺瀏覽器既 cookies 或者 local storage，咁下次重新開返個網頁出黎果陣，就可以喺 cookies 或者 local storage 讀取返用戶既 session ID 值。\r
\r
---\r
\r
## 2.2 Access token 既做法\r
\r
Access token 既做法係當用戶登入成功之後，back-end server 會生成一條好長既 token 值畀 front-end 網頁，但唔會將用戶既狀態數據存放喺 back-end server；相反，用戶既狀態數據就正正夾雜左喺個 token 裡面。\r
\r
因為密碼學既關係，token 係幾乎冇可能畀人修改到而令 back-end server 信左條修改左既 token。喺生成 token 既時候，back-end server 會用到一個密碼黎將資料進行 HMAC 處理，然後將 HMAC 既值放到 token 裡面，作為簽署。\r
\r
Access token 既例子有 JSON Web Token（簡稱 JWT），而應用方面就有 OAuth。\r
\r
有一種做法係用 refresh token 黎 renew access token，而 refresh token 既 expiry set 好長，access token 既 expiry set 好短如 15 分鐘。\r
\r
### 2.2.1 伏位\r
\r
現時網絡上有大量網站吹捧 JWT，我地可以從唔少既網上 sample code 睇到，一般 implement JWT 既 code，例如用 Spring framework 寫既，通常都只係提供最基本既功能，就係 generate token 同埋喺 access API 既時候 intercept request（Spring 既 filter）然後 validate 個 token。\r
\r
但係如果要完善整個設計，問題就在於：\r
\r
-   Access token 既 expiry？\r
    -   到底應該 set 幾長？15 分鐘定係長達一星期或者一個月？\r
    -   如果 set 得太長而遇到 access token 畀人偷左，咁只能夠改 server 既 secret 或者 private key，咁會影響所有用戶？\r
-   Renew 機制？\r
    -   注意 mobile app 既話需要長期登入，亦要考慮用戶可能會有一段時間冇開個 mobile app。\r
    -   每次 access API 都攞一次新既 access token？\r
    -   如果加入 refresh token，咁都有畀人偷左 refresh token 既風險。\r
-   Revoke 機制？\r
    -   如果用戶帳號畀 admin 修改左，例如降低權限、即時停用，唔 hit database 或者 cache 去 check 而淨係睇住個 token 上既資料係冇辦法做到即時生效，只能等個 token 過期。\r
    -   考慮到 token 可能會畀黑客偷左，如果要用 database 或者 cache 黎 whitelist 或者 blacklist token，或者每次 access API 都 hit database 去比較 token 既 issued-at 同 user record 既更新時間，咁會增加 latency，就變左同 session ID 冇分別。\r
    -   考慮到以上問題，其實 stateless access token 唔太可行，但 access token 既原意係想 stateless，因為 stateless 容易做到 scalable。\r
-   Call API 果陣帶埋個 token，咁個 token 應該放喺 Authorization header（Bearer）定係 cookie？\r
    -   如果放喺 header，就必須用到 JavaScript，個 cookie 唔可以係 HttpOnly，咁就有可能受到 XSS 攻擊。\r
\r
---\r
\r
# 3 要面對既安全問題\r
\r
## 3.1 CSRF\r
\r
瀏覽器係會將用戶既 cookies 夾埋落每一個 HTTP call 度送出去 back-end server。如果用戶上既一個佢自以為安全但實際上係畀黑客入侵左或者根本係黑客製造出黎既假網站，而呢個網站上既網頁 call 左一個銀行既 API，咁就有可能出事。呢個網頁可以用一個 \`<img>\` tag，例如 \`<img src="https://real.bank.com/sendMoney?to=hacker888&money=10000" />\`，咁瀏覽器可能會當左佢係一張圖片而 load 條 URL 去嘗試下載圖片，但係 load 呢條 URL 既時候其實就變相去左 call 真正既銀行既 API。\r
\r
咁做可行既原因係同網站一般會用 cookies 做 authentication 有關。代表用戶已經登入左網站既 cookies 會由瀏覽器自動加入相同網站既 HTTP calls 裡面，呢個係瀏覽器正常不過既 behavior。但黑客可以喺假既網站利用呢個 behavior 去令真正既銀行既 back-end server 一樣收到 cookies（session ID 或者 access token 同樣受害），因為銀行分辨唔到個 HTTP call 黎自邊個網站，所以最後用戶既錢就會成功過左畀黑客戶口。\r
\r
參考資料：\r
\r
-   [Wikipedia - 跨站請求偽造 CSRF](https://zh.wikipedia.org/zh-hk/跨站请求伪造)\r
-   [Spring 官方文檔 - Cross Site Request Forgery (CSRF)](https://docs.spring.io/spring-security/reference/features/exploits/csrf.html)\r
-   [OWASP - Cross-Site Request Forgery Prevention Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html)\r
\r
### 3.1.1 解決方法\r
\r
-   驗證 \`Origin\` request header，呢個 request header 只會由瀏覽器加入，就連假網站都冇辦法修改到。\r
-   將 session ID 儲喺 local storage，而唔係 cookies，不過用 local storage 又會有 XSS 攻擊既問題。\r
-   將 session ID 儲喺 cookies，但必須係 SameSite。\r
-   加入 CSRF token。\r
\r
註：cookie 既 SameSite 屬性同 HttpOnly 屬性需要瀏覽器支援。\r
\r
---\r
\r
## 3.2 XSS 攻擊\r
\r
大部分網站為左快啲完成開發，都可能會用到一啲現成既開源 CSS/JavaScript libraries，而呢啲 libraries 背後亦有可能用左大量既其他開源 libraries。開源項目雖然話係開放源碼畀任何人都睇到，但必須要有人睇過然後發掘到個問題出黎先至有用。如果唔計唔開源既項目有低機率因為員工私自惡意修改（man-in-the-middle attack），開源項目比起唔開源既項目係比較容易畀黑客修改到，從而植入惡意代碼。\r
\r
呢啲惡意代碼想做乜都得，例如：\r
\r
-   讀取用戶非 HttpOnly 既 cookies 或者 local storage，然後去 call 銀行既 API，令銀行將用戶既錢過畀黑客戶口\r
-   將用戶既 cookies 或者 local storage send 去黑客既一個 back-end server 既 API，然後儲存低，作日後之用\r
\r
參考資料：\r
\r
-   [Wikipedia - 跨網站指令碼 CORS](https://zh.wikipedia.org/zh-hk/跨網站指令碼)\r
\r
### 3.2.1 解決方法\r
\r
-   將 session ID 儲喺 cookies，但必須係 HttpOnly，咁樣可以防止 JavaScript 讀取到，但係都要用戶既瀏覽器支援 HttpOnly 既屬性先得\r
\r
---\r
\r
# 4 Scalability\r
\r
如果用 access token 既設計完全唔 hit database，理論上係好 scalable，因為任何一個 resource server 只需要驗證個 access token 既 signature 係咪 valid 就得。但實際上冇人會咁做，因為為左完善既權限機制，最終都係要 hit 到 database。比較好既做法可以係存取一個 distributed cache，例如 Redis，咁一樣可以做到 scalable，而且係 stateless。不過同樣地，session ID 既方法都可以用 distributed cache，所以其實兩者喺 scalability 上都冇乜分別。\r
\r
---\r
\r
# 5 EU 法律問題：通知用戶\r
\r
大家以為用左 cookie 先至需要彈 banner 通知用戶，但其實 EU 法律（如 GDPR）上，只要個網站有追蹤用戶，無論係用 cookie 定係 local storage 黎儲存 session ID 定係 access token，都一樣要出 banner 通知用戶。\r
\r
---\r
\r
# 6 Access token 可唔可以取代 session ID？\r
\r
唔可以，但 access token 都有佢既特別 use cases，例如：\r
\r
-   下載文件\r
-   出現喺 email 既 URL（query string \`?token=xxx\`），配合短至十幾分鐘至半小時既 expiry。\r
\r
參考資料：\r
\r
-   [JSON Web Tokens Suck](https://www.youtube.com/watch?v=pYeekwv3vC4)、[SFNode Meetup: Why JWTs Are Bad for Authentication - Randall Degges - 2018-01](https://www.youtube.com/watch?v=GdJ0wFi1Jyo)\r
-   [JSON web tokens are NOT meant for authenticating the same user repeatedly: Use session tokens instead](https://dev.to/masakudamatsu/json-web-tokens-are-not-meant-for-authenticating-the-same-user-repeatedly-use-session-tokens-instead-pno?signin=true)\r
`,qR=`# 1 重溫 Java collections\r
\r
如果想重溫返關於 Java \`Collection\` 既 \`List\`、\`Set\` subinterfaces 以及 \`Map\`，可以睇返呢篇：[Java 開發筆記（三） - Array / Collection / Map](/blog/coding-java-3#335-array--collection--map)。\r
\r
\`List\`：\r
\r
\`\`\`java\r
List<String> names = new ArrayList<>();\r
names.add("Michael");\r
names.add("Peter");\r
names.add("Peter");\r
System.out.println(names); // [Michael, Peter, Peter]\r
\`\`\`\r
\r
解釋：\`List\` 支持重複既 elements。\r
\r
\`Set\`：\r
\r
\`\`\`java\r
Set<String> names = new HashSet<>();\r
names.add("Michael");\r
names.add("Peter");\r
names.add("Peter");\r
System.out.println(names); // [Michael, Peter]\r
\`\`\`\r
\r
解釋：\`Set\` 裡面既 elements 都係獨一無二，唔會重複。如果 \`Set\` 既 generic type 係自定義既 class，咁建議喺自定義既 class 裡面再定義 \`equals(obj)\` 同 \`hashCode()\` 既邏輯，畀 \`Set\` 判決呢個自定義既 class 既唔同既 objects 係咪重複。\r
\r
\`Map\`：\r
\r
\`\`\`java\r
Map<String, Integer> nameAgeMap = new HashMap<>();\r
nameAgeMap.put("Alice", 15);\r
nameAgeMap.put("Bob", 24);\r
nameAgeMap.put("Alice", 22);\r
System.out.println(nameAgeMap); // {Bob=24, Alice=22}\r
\`\`\`\r
\r
解釋：\`Map\` 既 keys 都係獨一無二，唔會重複，一般情況都會用 Java 內建既 primitive wrapper classes 或者 \`String\` 作為 key 既 generic type，而 value 就更可以用自定義既 class 做 generic type。\r
\r
---\r
\r
# 2 介紹 Java generic type\r
\r
上面既 \`List\`、\`Set\`、\`Map\` 例子裡面，我地都見到佢地有個 diamond operator \`<>\`，而裡面有一個 type，我地會叫 \`<T>\` 裡面既 type 做 generic type，咁 \`Clazz<T>\` 成個夾埋係表達緊 class of type，例如 \`List<String>\` 解 \`List\` of \`String\`，因為已經 substitute 左 \`String\` 落 \`List<T>\` 既 \`T\`，所以 \`List<String>\` 喺呢個情況就係一個 parameterized type。\r
\r
Generic type 係 Java 5 加入既功能，compiler 會喺 compile time 既時候幫我 check 啲 code 寫得合唔合理，係 for type safety 既用途。例如，明明我地 declare 既係 \`List<String> list\`，但我地又 call \`list.add(1)\`，咁就好唔合理，而 compiler 就會喺 compile time 出 error，示意我地要睇下有冇寫錯 code。不過呢個功能只會應用喺 compile time，runtime 係發揮唔到任何作用，因為有 type erasure。\r
\r
因為 Java 既新版都會支持返舊式既 syntax，所以就算唔寫 \`<Type>\` 都唔會引致 compilation error。即係咁樣寫都冇問題：\r
\r
\`\`\`java\r
List rawList = new ArrayList();\r
Set rawSet = new HashSet();\r
Map rawMap = new HashMap();\r
\`\`\`\r
\r
呢啲冇畀 generic type 既 objects 既 class 我地會叫做 [raw type](https://docs.oracle.com/javase/tutorial/java/generics/rawTypes.html)。\r
\r
有啲 IDE 例如 Eclipse 默認既設定下會顯示黃線 warning，提示 raw type 係舊式寫法，應該跟足新式寫法，令我地既 code 更 strongly typed。\r
\r
以下係複雜少少，牽涉 subclass：\r
\r
\`\`\`java\r
List<Number> nums = new ArrayList<>();\r
nums.add(1); // 1 係 int，會被 autobox 成 Integer object\r
nums.add(1L); // 1 係 long，會被 autobox 成 Long object\r
nums.add(1.5F); // 1.5F 係 float，會被 autobox 成 Float object\r
nums.add(1.5D); // 1.5D 係 double，會被 autobox 成 Double object\r
\`\`\`\r
\r
解釋：\`List<Number>\` 可以 \`add()\` 既 argument 可以係任何 \`extends Number\` 既 object。\r
\r
但咁樣寫會有 compilation error：\r
\r
\`\`\`java\r
List<Number> nums = new ArrayList<>();\r
nums = new ArrayList<Integer>(); // compilation error\r
nums = new ArrayList<Long>(); // compilation error\r
nums = new ArrayList<Float>(); // compilation error\r
nums = new ArrayList<Double>(); // compilation error\r
\`\`\`\r
\r
解釋：\`List<Number>\` 既 variable 只限 assign 返 \`List<Number>\` 既 object。\r
\r
但如果換成咁樣寫，反而就冇 compilation error（Java 8+）：\r
\r
\`\`\`java\r
public static void main(String[] args) throws Exception {\r
\r
    List<Number> nums = new ArrayList<>();\r
\r
    // 下面既 createList(T...) 同用 Arrays.asList(T...) 一樣\r
    nums = createList(); // List<Number>\r
    nums = createList(1, 2); // List<Integer>\r
    nums = createList(1L, 2L); // List<Long>\r
    nums = createList(1.5F, 2.5F); // List<Float>\r
    nums = createList(1.5D, 2.5D); // List<Double>\r
}\r
\r
private static <T> List<T> createList(T... nums) {\r
    final List list = Arrays.asList(nums);\r
    return list;\r
}\r
\`\`\`\r
\r
解釋：\`createList(T...)\` 或者 \`Arrays.asList(T...)\` 做緊既野一樣，都係根據傳入既 \`T...\` varargs 既 \`T\` 去 infer return type \`List<T>\` 裡面既 \`T\`。然後我地將 \`createList(T...)\` 既 result assign 落 \`List<Number>\` 度。就咁睇好似同上面出 error 既例子一樣，但其實情況有啲唔同，因為 Java 8+ 會睇埋 assignment 既被 assign 果邊（即係左手邊既 \`nums\`）既 type，再去決定右手邊既 type，而呢個情況下句 \`createList(T...)\` expression 就係 poly expression，出現左喺一個 poly context 裡面。類似既做法有 Java 7 既 type inference，例如 \`List<String> list = new ArrayList<>()\` 既 \`<>\` 唔洗寫 \`<String>\` 係因為 compiler 知道呢個係 poly expression，就會睇埋 assignment 既 context，會睇被 assign 果邊去決定 \`<>\` 裡面係咩 type。相反，standalone expression 就唔會理個 context。\r
\r
## 2.1 Type erasure\r
\r
其實 Java 既 generic type 只不過係 for compile time 既 type safety 用，而去到 runtime（個 JVM 幫你執行緊你啲 code）既時候，所有 type information 就會冇曬。\r
\r
呢個亦係點解我地寫 utility methods 既時候，係冇得寫 \`T.class\` 或者用 reflection 既方法黎 reference 返一個 parameterized type 既 \`<T>\` 裡面既 \`T\` 喺 runtime 既 value，而一定要用一個 parameter \`Class<?> type\` 既 variable 先可以知道係咩 type。\r
\r
\`\`\`java\r
public static <T> void foo(T obj) {\r
    // 唔知 T 係咩黎，冇得用 T.class 或者 T.newInstance()\r
}\r
\`\`\`\r
\r
要改成：\r
\r
\`\`\`java\r
public static <T> void foo(T obj, Class<T> type) {\r
    T newObj = type.newInstance();\r
    System.out.println(type);\r
}\r
\`\`\`\r
\r
只要唔係 unbounded wildcard 既 parameterized type，都係 non-reifiable type，type information 都會喺 runtime 度 lost 左。\r
\r
> A reifiable type is a type whose type information is fully available at runtime. This includes primitives, non-generic types, raw types, and invocations of unbound wildcards.\r
>\r
> Non-reifiable types are types where information has been removed at compile-time by type erasure — invocations of generic types that are not defined as unbounded wildcards. A non-reifiable type does not have all of its information available at runtime. Examples of non-reifiable types are \`List<String>\` and \`List<Number>\`; the JVM cannot tell the difference between these types at runtime. As shown in Restrictions on Generics, there are certain situations where non-reifiable types cannot be used: in an \`instanceof\` expression, for example, or as an element in an array.\r
\r
舉個例，即係就算我地咁樣寫，唔單止喺 compile time 冇 error，而到左 runtime 都唔會有任何 exception：\r
\r
\`\`\`java\r
List nums = new ArrayList<Integer>();\r
nums.add(1);\r
nums.add("Hi");\r
\r
System.out.println(nums.get(0)); // 1\r
System.out.println(nums.get(1)); // Hi\r
\`\`\`\r
\r
解釋：\r
\r
-   上面段 code 冇 compile time exception 好正常，因為 \`List\` 係 raw type，而之前已經講過，想要 compiler 幫我地 check type，就要寫埋個 generic type，例如 \`List<String>\`；\r
-   而點解上面段 code 喺 runtime 執行 \`add()\` 唔同 types 既 objects 都冇任何 exception？咁係因為 type erasure 既關係，就算我地 assign 既 object 係 \`ArrayList<Integer>\`，其實呢個 \`<Integer>\` 喺 compile 完出黎既 bytecode 裡面係會抹走左，咁 runtime 自然就冇 type information，即係 \`new ArrayList<Integer>()\` 到左 runtime 其實同一個冇 generic type 既 \`new ArrayList()\` 完全一樣，所以點解話 generics 只會喺 compile time 發揮作用，就係呢個原因。\r
\r
但如果我地將 \`List nums\` 改成 \`List<Integer> nums\`，\`nums.add("Hi")\` 就會出 compile time error，咁係因為 compiler 幫我地喺 compile time check 左，\`List<Integer>\` 係加唔到 \`String\` object。\r
\r
### 2.1.1 Explicit type casting\r
\r
因為 type erasure 既關係，喺 runtime 既時候如果要用 generic type \`<T>\` 黎做 explicit type casting，就唔可以用 \`(T) obj\` 既寫法：\r
\r
\`\`\`java\r
public class Main {\r
\r
    public static void main(String[] args) {\r
        final GenericClass<Integer> list = castToGenericClass("123");\r
        System.out.println(list.getData() instanceof Integer); // false\r
        System.out.println(list.getData().getClass()); // ClassCastException\r
    }\r
\r
    private static <T> GenericClass<T> castToGenericClass(Object obj) {\r
\r
        final T cast = (T) obj;\r
\r
        final GenericClass<T> list = new GenericClass<>();\r
        list.setData(cast);\r
\r
        return list;\r
    }\r
}\r
\r
@Data\r
class GenericClass<T> {\r
    T data;\r
}\r
\`\`\`\r
\r
應該改為傳入 \`Class<T> clazz\`，然後用 \`clazz.cast(obj)\` 既方式：\r
\r
\`\`\`java\r
public class Main {\r
\r
    public static void main(String[] args) {\r
        final GenericClass<String> list = castToGenericClass("123", String.class);\r
        System.out.println(list.getData().getClass()); // class java.lang.String\r
\r
        final GenericClass<Integer> list2 = castToGenericClass(123, Integer.class);\r
        System.out.println(list2.getData().getClass()); // class java.lang.Integer\r
    }\r
\r
    private static <T> GenericClass<T> castToGenericClass(Object obj, Class<T> clazz) {\r
\r
        final T cast = clazz.cast(obj);\r
\r
        final GenericClass<T> list = new GenericClass<>();\r
        list.setData(cast);\r
\r
        return list;\r
    }\r
}\r
\r
@Data\r
class GenericClass<T> {\r
    T data;\r
}\r
\`\`\`\r
\r
參考資料：\r
\r
-   [StackOverflow - Cast Object to Generic Type for returning](https://stackoverflow.com/questions/14524751/cast-object-to-generic-type-for-returning)\r
\r
### 2.1.2 Declared type information\r
\r
如果個 generic type 係喺 class definition 層面，例如以下既例子，咁係可以 reference 到個 type，但一定要係 type declaration 先可以，如果唔係 type declaration 既情況下 invoke generic type，最後都係會令 type information lost 左。\r
\r
首先我地寫一個 utility class，喺下面既例子會用到：\r
\r
\`\`\`java\r
public final class TypeUtils {\r
\r
    private TypeUtils() {}\r
\r
    public static List<String> getGenericTypeNames(Class<?> clazz) {\r
\r
        if (!(clazz.getGenericSuperclass() instanceof ParameterizedType)) {\r
            return Collections.emptyList();\r
        }\r
\r
        return Arrays\r
                .stream(((ParameterizedType) clazz.getGenericSuperclass()).getActualTypeArguments())\r
                .map(Type::getTypeName)\r
                .collect(Collectors.toList());\r
    }\r
\r
    public static List<Class<?>> getGenericTypes(Class<?> clazz) {\r
        return getGenericTypeNames(clazz).stream()\r
                .map(e -> e.replaceAll("<.*?>", ""))\r
                .map(e -> {\r
                    try {\r
                        return Class.forName(e);\r
                    } catch (Exception ex) {\r
                        ex.printStackTrace(); // handle exception\r
                        return null;\r
                    }\r
                })\r
                .filter(Objects::nonNull)\r
                .collect(Collectors.toList());\r
    }\r
}\r
\`\`\`\r
\r
#### 2.1.2.1 Anonymous class\r
\r
Anonymous class 係 type declaration，所以可以拎到 parameterized type 裡面既 generic type information 出黎。\r
\r
\`\`\`java\r
Map raw = new HashMap<Integer, String>() {}; // 注意後面既 {} 令佢成為 anonymous class\r
\r
List<String> typeNames = TypeUtils.getGenericTypeNames(raw.getClass());\r
System.out.println(typeNames);\r
// [java.lang.Integer, java.util.List<java.lang.String>]\r
\r
List<Class<?>> types = TypeUtils.getGenericTypes(raw.getClass());\r
System.out.println(types);\r
// [class java.lang.Integer, interface java.util.List]\r
\`\`\`\r
\r
#### 2.1.2.2 Subclass\r
\r
Subclass 係 type declaration，所以可以拎到 parameterized type 裡面既 generic type information 出黎。但係如果直接用 superclass invoke generic type，咁就拎唔到 generic type information 出黎。\r
\r
\`\`\`java\r
public class Main {\r
\r
    public static void main(String[] args) {\r
\r
        new Sub();\r
        // [java.lang.String, java.util.List<java.lang.Integer>]\r
        // [class java.lang.String, interface java.util.List]\r
\r
        new Super<Integer, List<String>>();\r
        // [] 拎唔到\r
        // [] 拎唔到\r
    }\r
}\r
\r
class Super<T1, T2> {\r
    public Super() {\r
        System.out.println(TypeUtils.getGenericTypeNames(getClass()));\r
        System.out.println(TypeUtils.getGenericTypes(getClass()));\r
    }\r
}\r
\r
class Sub extends Super<String, List<Integer>> {}\r
\`\`\`\r
\r
---\r
\r
## 2.2 Unbounded wildcard generic type\r
\r
我地可以用問號 \`?\` 黎代表 generic type 係 wildcard type：\r
\r
\`\`\`java\r
List<?> list = new ArrayList<>();\r
\r
list = Arrays.asList("item");\r
// wildcard generic type 既 List variable 可以 assign 任何 generic type 既 List object\r
\r
list.add(null);\r
list.add(new Object()); // compilation error\r
// 因為 Java 唔知個 List 係咩 generic type，我地係 add 唔到 element（除左乜野 type 都唔係既 null）\r
\`\`\`\r
\r
---\r
\r
## 2.3 Upper bounded wildcard generic type\r
\r
\`\`\`java\r
List<? extends Number> nums = new ArrayList<>();\r
\`\`\`\r
\r
解釋：呢一個 \`List\` 既 variable 只能夠接受 list of \`Number\` 或者 list of \`extends Number\` 既 class。下面既都可以：\r
\r
\`\`\`java\r
List<? extends Number> nums;\r
nums = new ArrayList<Number>();\r
nums = new ArrayList<Integer>();\r
nums = new ArrayList<Double>();\r
\`\`\`\r
\r
需要注意既係，因為唔知個 \`List\` 係幾 specific 既 generic type，\`List<? extends Number>\` 可以 assign \`List<Number>\`、\`List<Integer>\`，甚至 list of \`Integer\` 既 subclass（自定義或者 3rd party library 裡面提供既）既 object，而如果 assign 既係 \`List<Integer>\` 既 object，理論上係唔應該畀 \`add()\` 一個 \`Integer\` 以外既 element，所以 compiler 穩陣起見，就喺 compile time 唔畀我地 \`add()\` 任何 element（除左乜野 type 都唔係既 \`null\`）：\r
\r
\`\`\`java\r
List<? extends Number> nums = new ArrayList<>();\r
nums.add(null);\r
nums.add(1); // compilation error\r
\`\`\`\r
\r
---\r
\r
## 2.4 Lower bounded wildcard generic type\r
\r
\`\`\`java\r
List<? super Number> nums = new ArrayList<>();\r
\`\`\`\r
\r
解釋：呢一個 \`List\` 既 variable 只能夠接受 list of \`Number\` 或者 list of \`Number\` 既 superclass。下面既都可以：\r
\r
\`\`\`java\r
List<? super Number> nums;\r
nums = new ArrayList<Number>();\r
nums = new ArrayList<Object>();\r
\`\`\`\r
\r
需要注意既係，lower bounded wildcard 同 upper bounded wildcard 唔同，因為知道個 \`List\` 唔會比 \`List<Number>\` 更 specific，可以 assign \`List<Number>\` 或者 \`List<Object>\` 既 object 都得，如果 assign 既係 \`List<Number>\` 既 object，係可以 \`add()\` 任何 \`Number\` 或者 \`extends Number\` 既 object，而如果 assign 既係 \`List<Object>\` 既 object 既話更加係 \`add()\` 乜野 object 都可以，所以 lower bounded wildcard 係畀我地 \`add()\` element，但 \`List<? super Number>\` 只限 \`add()\` 到 \`Number\` 或者 \`extends Number\` 既 object，以及乜野 type 都唔係既 \`null\`。\r
\r
咁樣寫係冇問題：\r
\r
\`\`\`java\r
List<? super Number> nums = new ArrayList<>();\r
nums.add(null);\r
nums.add(new Number() { /* add unimplemented methods */ }); // anonymous class\r
nums.add(1);\r
nums.add(1.5D);\r
\`\`\`\r
\r
---\r
\r
# 3 Covariance 問題\r
\r
因為 generic type 可以有繼承，即係我地可以寫 \`class Sub extends Super\`，咁即係話我地可以有 \`List<Super>\` 同 \`List<Sub>\`，咁到底兩者既 variables 同 objects 係咪互相相容（in terms of polymorphism）？呢個就係 covariance 問題。\r
\r
註：除左 \`extends\`，covariance 既規則對 \`implements\`（interface）都一樣適用。\r
\r
---\r
\r
# 4 Covariance 規則\r
\r
到底 \`Clazz<T>\` 可以 assign 返乜野 type 既 object？\r
\r
假設我地有以下既自定義 classes：\r
\r
\`\`\`java\r
class Wrapper<T> {\r
    public void foo(T obj) {}\r
}\r
class SubWrapper<T> extends Wrapper<T> {}\r
\r
class Super {}\r
class Sub extends Super {}\r
\`\`\`\r
\r
如果係特定 generic type，例如 \`Wrapper<Super>\`，特定左 generic type 係 \`Super\`，咁只能 assign 同樣特定 generic type 既 \`Wrapper\` 或者 \`Wrapper\` 既 subclass 既 object：\r
\r
\`\`\`java\r
Wrapper<Super> wrapper;\r
wrapper = new Wrapper<Super>();\r
wrapper = new SubWrapper<Super>();\r
\r
wrapper.foo(null);\r
wrapper.foo(new Super());\r
wrapper.foo(new Sub());\r
\r
// 唔可以用特定 generic type 既 subclass 做個 generic type\r
wrapper = new Wrapper<Sub>(); // compilation error\r
wrapper = new SubWrapper<Sub>(); // compilation error\r
\`\`\`\r
\r
如果係 upper bounded wildcard，例如 \`Wrapper<? extends Super>\`，咁可以 assign 相同既 generic type 或者佢既 subclass 既 \`Wrapper\` 或者 \`Wrapper\` 既 subclass 既 object：\r
\r
\`\`\`java\r
Wrapper<? extends Super> wrapper;\r
wrapper = new Wrapper<Super>();\r
wrapper = new SubWrapper<Super>();\r
wrapper = new Wrapper<Sub>();\r
wrapper = new SubWrapper<Sub>();\r
\r
wrapper.foo(null);\r
\r
// 唔可以 call 任何 parameter 有 T 既 method\r
wrapper.foo(new Super()); // compilation error\r
wrapper.foo(new Sub()); // compilation error\r
\`\`\`\r
\r
如果係 lower bounded wildcard，例如 \`Wrapper<? super Super>\`，咁可以 assign 相同既 generic type 或者佢既 superclass 既 \`Wrapper\` 或者 \`Wrapper\` 既 subclass 既 object：\r
\r
\`\`\`java\r
Wrapper<? super Super> wrapper;\r
wrapper = new Wrapper<Super>();\r
wrapper = new SubWrapper<Super>();\r
wrapper = new Wrapper<Object>();\r
wrapper = new SubWrapper<Object>();\r
\r
wrapper.foo(null);\r
wrapper.foo(new Super());\r
wrapper.foo(new Sub());\r
\`\`\`\r
\r
如果係 wildcard，例如 \`Wrapper<?>\`，咁可以 assign 任何 generic type 既 \`Wrapper\` 或者 \`Wrapper\` 既 subclass 既 object：\r
\r
\`\`\`java\r
Wrapper<?> wrapper;\r
wrapper = new Wrapper<Super>();\r
wrapper = new SubWrapper<Super>();\r
wrapper = new Wrapper<Sub>();\r
wrapper = new SubWrapper<Sub>();\r
wrapper = new Wrapper<Object>();\r
wrapper = new SubWrapper<Object>();\r
\r
wrapper.foo(null);\r
\r
// 唔可以 call 任何 parameter 有 T 既 method\r
wrapper.foo(new Super()); // compilation error\r
wrapper.foo(new Sub()); // compilation error\r
wrapper.foo(new Object()); // compilation error\r
\`\`\`\r
`,FR="# 1 背景\r\n\r\n## 1.1 項目\r\n\r\n話說我寫呢篇文章果陣做緊既公司畀某昆蟲公司收購左之後，就要做大量 revamp 工作，亦包括滿足新既業務需求。眾多個系統當中，有一個負責定時定候 call Amazon、ebay 等等既平台既 back-end application，今年加入左 pull Amazon MWS data 既 task scheduling，主要為每一個商戶客既每一個店舖 pull Amazon MWS data。\r\n\r\n呢個項目要 call `10` 個 Amazon MWS 既 API。\r\n\r\n---\r\n\r\n## 1.2 資料庫設計\r\n\r\nDB 設計上做左 partition，分庫分表（for horizontal scaling）：\r\n\r\n-   Sharing rule：所有 DB tables 根據 user ID 既 value 做 sharding——某兩個位既數字會用黎對應 partition index\r\n-   一共分成 `100` 個 partitions\r\n-   所有 table 資料都由 `10` 個 physical DB、每個 physical DB 各自有 `10` 個 physical tables 組成（`10` DB 乘 `10` tables = `100` partitions）\r\n-   例如：`db3` 有 `table1_30` 至 `table1_39` 以及 `table2_30` 至 `table2_39`\r\n\r\nSchema 既設計：\r\n\r\n-   以 Amazon MWS API 黎分，有 `10` 個 logical tables，另外有其他 tables 負責 keep track 住 task scheduling\r\n\r\n---\r\n\r\n## 1.3 Task scheduling 機制\r\n\r\nTask scheduling 既機制：\r\n\r\n-   Scheduler server 會根據平台上面 scheduled job 既時間配置，定時定候 send message 去 cluster 裡面其中一機器\r\n\r\n而 cluster 裡面既每一部機器既系統設計係咁：\r\n\r\n-   系統引入「三層分發」機制黎實現 distributed task scheduling\r\n-   第一層：`split`\r\n    -   Cluster 裡面只會有一部機器收到 scheduler server 既指令\r\n    -   佢之後會做 split partitions 動作，將 `100` 個 partition indexes 派畀 cluster 裡面既所有機器\r\n    -   每部機器得到既果堆 partition indexes 可以係隨機\r\n    -   平均黎講每部機器會收到 `10` 個 partitions\r\n    -   例如：`instance3` 收到 `30` 至 `39` 既 partition indexes\r\n-   第二層：`load`\r\n    -   當每部機器收到一堆 partition indexes，就會喺呢堆 partition indexes 指定既 physical DB 度 select task records\r\n    -   目前既設定 hardcode 左係只拎最新創建既 `5` 筆 task records\r\n    -   拎到 task records 之後就再派畀 cluster 裡面既所有機器\r\n-   第三層：`execute`\r\n    -   當每部機器收到 task record，就會加落 thread pool 度，等待處理\r\n\r\n---\r\n\r\n## 1.4 Production 場既配置\r\n\r\nProduction 場既 cluster 部署左 `10` 部機器。\r\n\r\n---\r\n\r\n## 1.5 任務配置\r\n\r\n呢個項目有 `2` 個任務：\r\n\r\n-   創建 task\r\n    -   每 `1` 分鐘執行一次\r\n    -   如果店舖既某個 Amazon MWS API 唔存在執行中既任務（例如已經執行完成），就會創建新 task，即係永無休止咁 pull data\r\n    -   每個 Amazon MWS API 都會有一個 task\r\n    -   每個 API 都係每隔 `10` 分鐘 call 一次\r\n    -   啲 API 分散喺唔同既分鐘（唔同既個位數），唔會同一分鐘做曬 `10` 個 API\r\n    -   例如：\r\n        -   `api-3` 既執行時間係 `HH:03`、`HH:13`、`HH:23`、`HH:33`、`HH:43`、`HH:53`\r\n        -   `api-5` 既執行時間係 `HH:05`、`HH:15`、`HH:25`、`HH:35`、`HH:45`、`HH:55`\r\n        -   如此類推\r\n-   處理 task\r\n    -   每 `1` 分鐘執行一次\r\n    -   只要 task 到左預定執行時間，就會處理\r\n    -   目前既設定 hardcode 左係只拎最新創建既 `5` 筆 task records（每個 partition 都係咁）\r\n\r\nScheduler server 每分鐘都會 send messages 去負責 split 既機器度 trigger 呢 `2` 個 _producer & consumer_ 既任務。\r\n\r\n---\r\n\r\n# 2 上線後出現既問題\r\n\r\n呢個 project 最近上左線，onboard 左一部分商戶既店舖 records，但就出現左一個都幾尷尬既問題。\r\n\r\n項目群組裡面有人話發現唔同既 Amazon MWS API 既 logical tables 出現既結果不一，某啲店舖喺某啲 tables 有 Amazon data records，但喺某啲 tables 就冇。\r\n\r\n查一查 logical DB，睇見啲 task records 既預定執行時間係幾日前，呢啲 task records 明明應該已經執行左但就唔知點解一直冇執行到。\r\n\r\n另外，有部分 tasks 執行失敗。\r\n\r\n---\r\n\r\n# 3 原因分析\r\n\r\nLogical DB 裡面見到一堆應該已經執行但一直冇執行既 records 係黎自某幾個 partitions，而呢幾個 partitions 都有一個共通點，就係店舖數量大過 `5`。\r\n\r\n呢個其實係一個數學既問題。\r\n\r\n首先，我地先假設 pull data 既 task 都可以喺 `1` 分鐘之內成功完成。跟住，我地要計下有問題既 partition 創建新 task 既速率。假如有問題既 `partition-3` 有 `6` 個店舖，而因為我地 call 每一款 Amazon API 都係每 `10` 分鐘 call 一次，我地有 `10` 個 API 要 call，咁即係每個 `10` 分鐘裡面都要執行 `60` 個 task records，而每到左下一分鐘都有 `6` 個 data tasks 到左預定執行時間而要被處理。\r\n\r\n正因為每分鐘，系統只會喺每個 partition 拎最新創建既 `5` 筆 task records，一黎呢個速率慢過有問題既 partitions 創建新 task 既速率，二黎因為只會拎最新創建既 task records，所以有啲舊既 task records（唔知點解會有）就一直沉底，永遠都唔輪到佢地被執行。\r\n\r\n理論上，假設所有店舖數據都可以平均咁分散喺各個 partition，咁呢個系統目前只係可以處理到 `500` 個店舖（如果以用戶數量黎計就更少）。\r\n",JR=`# 1 Charles Proxy 用途\r
\r
Charles 係一個 proxy（代理伺服器），即係一個虛擬既中間人 server，有能力截取通過呢個 proxy 通訊既 HTTP/HTTPS（SSL）既請求及響應內容，所以可以用喺開發既時候除錯 web applications。\r
\r
---\r
\r
# 2 設定 Charles\r
\r
## 2.1 主程式設置\r
\r
-   Windows\r
    1.  Proxy > SSL Proxying Settings... > SSL Proxying tab > Add > Host: \`*\`\r
    1.  Help > SSL Proxying > **Install Charles Root Certificate**\r
    1.  In the Certificate popup window, **Install Certificate...**\r
    1.  Store Location: \`Local Machine\`\r
    1.  Place all certificates in the following store, Browse..., \`Trusted Root Certification Authorities\`\r
    1.  Main UI > **Start SSL Proxying**\r
-   macOS\r
    1.  Proxy > SSL Proxying Settings... > SSL Proxying tab > Add > Host: \`*\`\r
    1.  Help > SSL Proxying > **Install Charles Root Certificate**\r
    1.  In the Add Certificates popup window, Keychain: \`System\`, Add\r
    1.  In System Keychains > System, Search for Charles\r
    1.  Right-click Charles Proxy CA > Get Info\r
    1.  Expand Trust > When using this certificate > \`Always Trust\`\r
\r
---\r
\r
## 2.2 截取 Android 手機 HTTP/HTTPS 內容\r
\r
1. 主程式設置\r
    - Windows\r
        1. Make sure **Windows Defender Firewall** settings allow the Charles app\r
            - Check the checkbox next to the app and checkboxes under both private and public\r
        1. Proxy > Proxy Settings... > **Enable transparent HTTP proxying**\r
        1. Help > SSL Proxying > **Install Charles Root Certificate on a Mobile Device or Remote Browser**\r
    - macOS\r
        - TBC\r
1. Android 手機設置\r
    1. Wi-Fi > Configure the current Wi-Fi\r
    1. Add the IP to Charles on Windows: Proxy > Access Control Settings... > Add\r
    1. Proxy: \`Manual\`, IP and Port: refer to the popup in Charles\r
    1. In Chrome, navigate to the URL mentioned in popup in Charles (i.e. [chls.pro/ssl](http://chls.pro/ssl))\r
    1. SSL certificate (\`.crt\`) is downloaded automatically, click on it\r
    1. Enter Android password\r
    1. Give the certificate a name (e.g. \`Charles\`), Credential use: \`VPN and Apps\`\r
\r
---\r
\r
## 2.3 其他設定\r
\r
-   Main UI > Right-click configure column > Check \`Content-Type\`\r
-   Main UI > Settings next to Filter and Focused > Uncheck **Auto scroll**\r
\r
---\r
\r
# 3 如何使用 Charles\r
\r
情境：我地想截取 Jumbo 網頁既 HTTP request 及 response，除左直接喺 Chrome developer tools 度睇之外，Charles 都可以做得到。\r
\r
## 3.1 開始記錄 HTTP 流量\r
\r
首先，換去 Sequence 顯示方式，然後確保 Charles 主介面已經開始記錄 HTTP 流量，而且 SSL proxying 亦都設置好而又開左：\r
\r
![](blog/2021-08/charles-proxy/start-recording.png)\r
\r
我地可以去 Windows 既 Internet Options 度睇下 Charles 係咪自動幫我地設定好曬：\r
\r
![](blog/2021-08/charles-proxy/internet-options-proxy.png)\r
\r
或者如果用 macOS：\r
\r
![](blog/2021-08/charles-proxy/network-proxies.png)\r
\r
![](blog/2021-08/charles-proxy/network-proxies-ssl.png)\r
\r
---\r
\r
## 3.2 瀏覽器開始上網\r
\r
我地而家可以喺 Chrome 打開 [https://shoponjc.com/quote.php](https://shoponjc.com/quote.php)。\r
\r
---\r
\r
## 3.3 觀察截取結果\r
\r
網頁 load 完之後，我地就返去 Charles，觀察 Charles 所截取到既 HTTP requests。\r
\r
如果 Charles 介面夾雜左其他 domains 既 HTTP requests，可能係因為個系統所安裝既某啲軟件或者瀏覽器既其他網頁喺背後發起 HTTP requests。如果只想專注睇 Jumbo 網站既 HTTP requests，可以隨意搵一個 Jumbo 既 HTTP request，然後 right-click 佢，撳 Focus。\r
\r
![](blog/2021-08/charles-proxy/focus-on-domain.png)\r
\r
再 check Focused：\r
\r
![](blog/2021-08/charles-proxy/check-focused.png)\r
\r
咁之後我地就只會見到 Jumbo 網站既 HTTP requests：\r
\r
![](blog/2021-08/charles-proxy/view-focused-http-requests.png)\r
\r
然後就好容易搵到下載產品報價數據既 API 係點樣 call：\r
\r
![](blog/2021-08/charles-proxy/jumbo-getprod.png)\r
\r
---\r
\r
# 4 其他程式設定\r
\r
## 4.1 Postman\r
\r
1. Settings > Proxy > Proxy configurations for sending requests > Check **Add a custom proxy configuration**\r
1. Proxy Type > Check **HTTP** and **HTTPS**\r
1. Proxy Server > Enter IP and port\r
\r
![](blog/2021-08/charles-proxy/postman-proxy.png)\r
\r
---\r
\r
## 4.2 Spring Boot \`RestTemplate\`\r
\r
用以下 code 黎 create \`RestTemplate\` object：\r
\r
\`\`\`java\r
final Proxy proxy = new Proxy(Type.HTTP, new InetSocketAddress(getProperty("http.proxyHost"), parseInt(getProperty("http.proxyPort"))));\r
final SimpleClientHttpRequestFactory requestFactory = new SimpleClientHttpRequestFactory();\r
requestFactory.setProxy(proxy);\r
\r
final RestTemplate restTemplate = new RestTemplate(requestFactory);\r
\`\`\`\r
\r
JVM arguments：\r
\r
\`\`\`plaintext\r
java -Dhttp.proxyHost=<host> -Dhttp.proxyPort=8888 -jar xxxxxx.jar\r
\`\`\`\r
\r
Spring Boot Maven：\r
\r
\`\`\`bash\r
mvn spring-boot:run -Dspring-boot.run.jvmArguments="-Dhttp.proxyHost=<host> -Dhttp.proxyPort=8888"\r
\`\`\`\r
`,zR=`# 1 Table 相關語法\r
\r
## 1.1 創建 table\r
\r
\`\`\`sql\r
CREATE TABLE tbl_person (\r
	entity_id  INT          IDENTITY(1, 1),\r
	name       VARCHAR(255) NOT NULL,\r
	email      VARCHAR(255) NOT NULL,\r
	created_at DATETIME     NOT NULL DEFAULT GETDATE(),\r
	updated_at DATETIME     NOT NULL DEFAULT GETDATE(),\r
\r
	PRIMARY KEY (entity_id),\r
	CONSTRAINT UQ_person UNIQUE (email)\r
);\r
\`\`\`\r
\r
---\r
\r
## 1.2 刪除 table\r
\r
\`\`\`sql\r
DROP TABLE IF EXISTS tbl_person;\r
\`\`\`\r
\r
---\r
\r
## 1.3 新增紀錄\r
\r
\`\`\`sql\r
INSERT INTO tbl_person VALUES ('Alice', 'alice@gmail.com', GETDATE(), GETDATE());\r
\`\`\`\r
\r
\`\`\`sql\r
INSERT INTO tbl_person (name, email) VALUES ('Bob', 'bob@gmail.com');\r
\`\`\`\r
\r
註：\r
\r
-   \`IDENTITY\` column 唔應該入，應該由 DB 自動生成。\r
-   如果 \`VALUES\` 前面有 column list，有 \`DEFAULT\` 既 columns 可以選擇明確提供或者唔提供，唔提供既話 DB 就會用左 \`CREATE TABLE\` 裡面 column definition 既 \`DEFAULT\`（例子中 \`create_at\` 既 default value 就係 built-in function \`GETDATE()\`）。\r
\r
---\r
\r
## 1.4 查詢紀錄\r
\r
### 1.4.1 一般查詢\r
\r
\`\`\`sql\r
SELECT * FROM tbl_person;\r
\`\`\`\r
\r
\`\`\`sql\r
SELECT\r
	entity_id,\r
	name,\r
	email,\r
	created_at\r
FROM tbl_person\r
WHERE entity_id = 1;\r
\`\`\`\r
\r
Pagination（分頁）：\r
\r
\`\`\`sql\r
SELECT *\r
FROM tbl_person\r
ORDER BY entity_id\r
OFFSET 1 ROWS\r
FETCH NEXT 1 ROWS ONLY; -- NEXT、FIRST 係同義\r
\`\`\`\r
\r
---\r
\r
### 1.4.2 多 tables 查詢\r
\r
同其他 table 連起黎：\r
\r
\`\`\`sql\r
CREATE TABLE tbl_friend (\r
	entity_id        INT          IDENTITY(1, 1),\r
	person_entity_id INT          NOT NULL,\r
	name             VARCHAR(255) NOT NULL,\r
\r
	PRIMARY KEY (entity_id),\r
	INDEX IX_friend (entity_id, person_entity_id)\r
);\r
\r
INSERT INTO tbl_friend (person_entity_id, name) VALUES (1, 'Mick');\r
\r
SELECT\r
	p.name,\r
	f.name\r
FROM\r
	tbl_person p,\r
	tbl_friend f\r
WHERE\r
	p.entity_id = f.person_entity_id\r
AND p.name = 'Alice'\r
\`\`\`\r
\r
---\r
\r
### 1.4.3 帶鎖查詢\r
\r
如果同時有多過一個程式需要查詢然後更新同一行紀錄，我地可以用悲觀鎖。當兩個程式同時執行以下 SQL，只有一個程式可以立即查詢到相關紀錄，而另一個程式就會一直等待，直到攞到鎖既程式完成曬 transaction，咁佢先會攞到個鎖。\r
\r
\`\`\`sql\r
BEGIN TRANSACTION;\r
\r
SELECT *\r
FROM tbl_person\r
WITH (\r
	UPDLOCK,\r
	ROWLOCK\r
)\r
WHERE entity_id = 2;\r
\`\`\`\r
\r
如果 \`WHERE\` 裡面既條件唔係針對 primary key column 既 value，咁我地就要自己起 index，然後用 \`WITH (UPDLOCK, INDEX(<index name>))\`，否則 SQL Server 會鎖埋唔 match \`WHERE\` 條件既紀錄，更有可能鎖曬成個 table 既紀錄。\r
\r
---\r
\r
## 1.5 刪除部分或所有紀錄\r
\r
以特定條件刪除 table 內紀錄：\r
\r
\`\`\`sql\r
DELETE FROM tbl_person WHERE entity_id = 1;\r
\`\`\`\r
\r
刪除 table 內所有紀錄：\r
\r
\`\`\`sql\r
DELETE FROM tbl_person;\r
\`\`\`\r
\r
註：\r
\r
-   \`DELETE\` 係 DML 語句。\r
    -   所以 \`DELETE\` 係可以喺 transaction 裡面執行，自然就可以 rollback。\r
\r
---\r
\r
## 1.6 清空所有紀錄\r
\r
\`\`\`sql\r
TRUNCATE TABLE tbl_person;\r
\`\`\`\r
\r
註：\r
\r
-   \`TRUNCATE\` 係 DDL 語句，有別於 \`DELETE\`。\r
    -   所以 \`TRUNCATE\` 係唔可以喺 transaction 裡面執行，自然就唔可以 rollback。\r
    -   \`TRUNCATE\` 所產生既 transaction log 會遠少過 \`DELETE\`。\r
-   \`TRUNCATE\` 唔會觸發 trigger。\r
\r
---\r
\r
# 2 Sequence 相關語法\r
\r
## 2.1 創建 sequence\r
\r
\`\`\`sql\r
CREATE SEQUENCE seq_generator START WITH 1000 MINVALUE 1000 MAXVALUE 9999 CYCLE;\r
\`\`\`\r
\r
---\r
\r
## 2.2 更改 sequence\r
\r
\`\`\`sql\r
ALTER SEQUENCE seq_generator RESTART WITH 2000;\r
\`\`\`\r
\r
---\r
\r
## 2.3 獲取下一個 sequence value\r
\r
\`\`\`sql\r
SELECT NEXT VALUE FOR seq_generator;\r
\`\`\`\r
\r
---\r
\r
# 3 Trigger 相關語法\r
\r
## 3.1 創建或更新 trigger\r
\r
### 3.1.1 由更新紀錄觸發\r
\r
\`\`\`sql\r
CREATE OR ALTER TRIGGER trg_person\r
ON tbl_person\r
FOR UPDATE AS\r
BEGIN\r
	UPDATE p\r
	SET updated_at = GETDATE()\r
	FROM tbl_person p, inserted\r
	WHERE p.entity_id = inserted.entity_id\r
END;\r
GO\r
\`\`\`\r
\r
解釋：當 \`tbl_person\` 既紀錄被更新，將會觸發呢個 trigger 去更新相關紀錄既 \`updated_at\` column 做當前系統時間。\r
\r
---\r
\r
# 4 其他語法\r
\r
## 4.1 執行動態 SQL\r
\r
如果 table 名、 column 名等 SQL 元素需要動態 values，咁就要用呢個方法：\r
\r
\`\`\`sql\r
-- 假設 values 從某個 table 取得\r
DECLARE @columns VARCHAR(100) = 'name, email';\r
DECLARE @tableName VARCHAR(100) = 'tbl_person';\r
\r
EXEC('SELECT ' + @columns + ' FROM ' + @tableName);\r
\`\`\`\r
\r
---\r
\r
# 5 查詢系統 tables\r
\r
## 5.1 查詢 table list\r
\r
\`\`\`sql\r
SELECT * FROM sys.tables;\r
\`\`\`\r
\r
---\r
\r
## 5.2 查詢 table 既 column 結構\r
\r
\`\`\`sql\r
SELECT\r
    CAST(c.name AS VARCHAR) columnName,\r
    CAST(typ.name AS VARCHAR) dataType,\r
    c.max_length maxLength,\r
    c.precision,\r
    c.scale\r
FROM\r
    sys.all_columns c,\r
    sys.tables tbl,\r
    sys.types typ\r
WHERE\r
    c.object_id = tbl.object_id\r
AND c.system_type_id = typ.system_type_id\r
AND tbl.name = 'table_name'\r
ORDER BY c.column_id;\r
\`\`\`\r
\r
---\r
\r
# 6 查看 SQL execution plan、index 使用情況（優化 SQL 用）\r
\r
SQL Server 冇 MySQL／MariaDB 既 \`EXPLAIN\`，只能透通過 SQL Server Management Studio（SSMS）黎睇 estimated execution plan 以及 actual execution plan。\r
\r
喺 SSMS：\r
\r
-   顯示 estimated execution plan\r
    1.  Highlight 然後 right-click 句 SQL\r
    1.  撳 **Display Estimated Execution Plan**\r
    1.  佢會顯示 execution plan\r
-   顯示 actual execution plan\r
    1.  Right-click 輸入 SQL query 既任何空白位置\r
    1.  撳 **Include Actual Execution Plan**\r
    1.  每當 execute 一句 SQL，佢就會顯示 execution plan\r
\r
Execution plan 應該會包含 \`2\` 個或以上既圖示，我地可以用 mouse hover 啲圖示睇下佢頭頂寫咩。好籠統咁講：\r
\r
-   如果圖示有 index seek 字眼就會用上 index\r
-   如果圖示有 index scan 或者 table scan 字眼就唔會用上 index。\r
\r
非專業見解：\r
\r
-   Index seek 比 index scan 或者 table scan 效能要好。\r
-   \`SELECT *\`\r
    -   如果令 query result 既 columns 包括左個 table 定義既 indexes 冇既 columns，咁佢個 execution plan 右邊可能會出現 \`2\` 個步驟（\`3\` 個或以上既圖示），可以係 index seek 完再 RID lookup 或者 key lookup，不過實際情況要視乎個 table schema／definition。\r
-   \`LIKE\`\r
    -   如果 \`WHERE\` clause 係對 \`VARCHAR\` column 用 \`LIKE 'xxx%'\`，應該可以用到 index seek。\r
    -   如果 \`WHERE\` clause 係對 \`VARCHAR\` column 用 \`LIKE '%xxx'\` 或者 \`LIKE '%xxx%'\`，就用唔到 index seek。\r
-   Type conversion\r
    -   如果 \`WHERE\` clause 對 \`INT\` column 用 \`LIKE '1%'\`，就用唔到 index seek，而 execution plan 既 SELECT 圖示會顯示黃色三角形以及關於 type conversion 既 warning。\r
-   \`WITH (FORCESEEK)\`\r
    -   呢個 hint 可以令 \`1\` 個 scan 既步驟拆開成 \`2\` 個步驟——seek 以及 lookup。\r
    -   \`SELECT email FROM tbl_person WITH (FORCESEEK) WHERE email LIKE 'xxx%';\`\r
\r
參考資料：\r
\r
-   [Wildcards and Indexes](https://mattsql.wordpress.com/2013/05/22/wildcards-and-indexes/)\r
-   [Sargability: Why %string% Is Slow](https://www.brentozar.com/archive/2010/06/sargable-why-string-is-slow/)\r
-   [SQL 筆記：Index Scan vs Index Seek](https://blog.darkthread.net/blog/index-scan-vs-seek/)\r
-   [Myth: Select \\* is bad](https://use-the-index-luke.com/blog/2013-08/its-not-about-the-star-stupid)\r
-   [StackOverflow - Why can't I simply add an index that includes all columns?](https://stackoverflow.com/questions/5447987/why-cant-i-simply-add-an-index-that-includes-all-columns)\r
`,UR=`# 1 WebP 簡介\r
\r
好似 JPG、PNG、GIF、TIFF、BMP 等等傳統既圖片格式，WebP 係 Google 發展出黎既一隻具有更高壓縮率既圖片格式。如果用喺網頁，例如網購平台，因為用戶可以快啲下載到啲圖片，用戶體驗就會有所提升。\r
\r
主流既網頁瀏覽器都已經可以顯示到 WebP，而且 HTML 有 fallback 機制，就算個瀏覽器唔支援顯示 WebP 格式，都可以 fallback 去顯示其他格式既圖片，從而避免到死圖。\r
\r
---\r
\r
# 2 格式轉換程式\r
\r
Google 提供左 WebP 既壓縮、解壓縮工具。\r
\r
Google WebP 官網下載：[Downloading and Installing WebP](https://developers.google.com/speed/webp/download)\r
\r
## 2.1 \`cwebp\` 壓縮工具\r
\r
\`\`\`bash\r
./cwebp "/path/to/input.png" -q 50 -o "/path/to/output.webp"\r
\`\`\`\r
\r
CLI 選項：\r
\r
| 選項 | 解釋                                        |\r
| :--: | ------------------------------------------- |\r
| \`-q\` | 壓縮比例，數值由 \`0\` 至 \`100\`，可以有小數點 |\r
| \`-o\` | 輸出檔案路徑                                |\r
\r
---\r
\r
## 2.2 \`dwebp\` 解壓縮工具\r
\r
\`\`\`bash\r
./dwebp "/path/to/input.webp" -o "/path/to/output.png"\r
\`\`\`\r
\r
CLI 選項：\r
\r
| 選項 | 解釋         |\r
| :--: | ------------ |\r
| \`-o\` | 輸出檔案路徑 |\r
\r
---\r
\r
# 3 寫 HTML code\r
\r
## 3.1 \`<picture>\` tag\r
\r
### 3.1.1 純 HTML\r
\r
\`\`\`html\r
<picture>\r
	<source srcset="picture.webp" type="image/webp" />\r
	<img src="picture.png" />\r
</picture>\r
\`\`\`\r
\r
解釋：如果瀏覽器支援顯示 WebP 格式，就會下載 \`<source>\` 既 \`srcset\` attribute 既 WebP 圖片；否則，就會下載 \`<img>\` 既 \`src\` attribute 既傳統格式圖片。\r
\r
---\r
\r
### 3.1.2 React 既 JSX\r
\r
要注意一點：用 React JSX 既話，要將 \`srcset\` 寫成 \`srcSet\`。\r
\r
\`\`\`jsx\r
<picture>\r
	<source srcSet="picture.webp" type="image/webp" />\r
	<img src="picture.png" />\r
</picture>\r
\`\`\`\r
\r
參考資料：\r
\r
-   [StackOverflow - picture tag in React](https://stackoverflow.com/questions/43885266/picture-tag-in-react/43887593#43887593)\r
-   [StackOverflow - Why is React.js removing the srcset tag on <img />?](https://stackoverflow.com/questions/34695899/why-is-react-js-removing-the-srcset-tag-on-img)\r
-   [React 官網 - All Supported HTML Attributes](https://reactjs.org/docs/dom-elements.html#all-supported-html-attributes)\r
\r
---\r
\r
## 3.2 \`background-image\` CSS\r
\r
### 3.2.1 純 HTML\r
\r
\`\`\`html\r
<div\r
	style="background-image: url('picture.png'); background-image: -webkit-image-set(url('picture-1x.webp') 1x, url('picture-2x.webp') 2x)"\r
></div>\r
\`\`\`\r
\r
註：\`1x\`、\`2x\` 等等既數字係以 \`window.devicePixelRatio.toFixed(0)\` 黎計。\r
\r
參考資料：\r
\r
-   [CodePen - webp background-image](https://codepen.io/atomo/pen/VXrdMV)\r
-   [StackOverflow - How to use srcset and sizes for responsive images](https://stackoverflow.com/questions/35099471/how-to-use-srcset-and-sizes-for-responsive-images)\r
\r
---\r
\r
# 4 參考資料\r
\r
-   [使用 WebP 格式減少圖片載入時間](https://medium.com/@mingjunlu/image-optimization-using-webp-72d5641213c9)\r
-   [Embracing modern image formats](https://www.joshwcomeau.com/performance/embracing-modern-image-formats/)\r
`,WR=`# 1 情境\r
\r
我地有一個咁既自定義 class \`Item\`：\r
\r
\`\`\`java\r
@Data\r
@Accessors(chain = true)\r
@FieldDefaults(level = PRIVATE)\r
class Item {\r
    String name;\r
    String type;\r
}\r
\`\`\`\r
\r
如果我地有一個 \`List<Item>\`，而我地想將相同 \`type\` 既 elements group 起，成為一個 \`Map<String, List<Item>>\`，咁可以點做？\r
\r
\`\`\`java\r
final List<Item> items = asList(\r
    new Item().setName("One").setType("1"),\r
    new Item().setName("Two").setType("1"),\r
    new Item().setName("Three").setType("1"),\r
    new Item().setName("Four").setType("2"),\r
    new Item().setName("Same").setType(null),\r
    new Item().setName("Same").setType(null),\r
    new Item().setName(null).setType(null)\r
);\r
\`\`\`\r
\r
期望結果：\r
\r
\`\`\`plaintext\r
{\r
    "1": [\r
        { "name": "One", "type": "1" },\r
        { "name": "Two", "type": "1" },\r
        { "name": "Three", "type": "1" }\r
    ],\r
    "2": [\r
        { "name": "Four", "type": "2" },\r
    ],\r
    null: [\r
        { "name": "Same", "type": null },\r
        { "name": "Same", "type": null },\r
        { "name": null, "type": null }\r
    ]\r
}\r
\`\`\`\r
\r
---\r
\r
# 2 解決方法\r
\r
## 2.1 \`Collectors#groupingBy\`（要小心 \`null\`）\r
\r
如果 \`List<Item> items\` 裡面冇一個 element 既 \`type\` 係 \`null\`，咁以下使用 \`Collectors.groupingBy\` 既方法係 work：\r
\r
\`\`\`java\r
final Map<String, List<Item>> error = items.stream().collect(groupingBy(Item::getType));\r
\`\`\`\r
\r
但因為有一啲 elements 既 \`type\` 係 \`null\`，所以就會有 exception：\r
\r
\`\`\`plaintext\r
Exception in thread "main" java.lang.NullPointerException: element cannot be mapped to a null key\r
    at java.util.Objects.requireNonNull(Objects.java:228)\r
    at java.util.stream.Collectors.lambda$groupingBy$45(Collectors.java:907)\r
\`\`\`\r
\r
參考資料：\r
\r
-   [StackOverflow - Collectors.groupingBy doesn't accept null keys](https://stackoverflow.com/questions/22625065/collectors-groupingby-doesnt-accept-null-keys/)\r
\r
---\r
\r
## 2.2 \`Stream#collect(Supplier, BiConsumer, BiConsumer)\`\r
\r
要 handle 到 \`null\` key，就要用 \`Stream#collect(Supplier<R>, BiConsumer<R, ? super T>, BiConsumer<R, R>)\` 而唔係一般既 \`Stream#collect(Collector<? super T, A, R>)\`：\r
\r
<!-- prettier-ignore -->\r
\`\`\`java\r
final Map<String, List<Item>> grouped = items\r
        .stream()\r
        .collect(HashMap::new,\r
                 (m, v) -> m.merge(v.getType(),\r
                                   asList(v),\r
                                   (oldList, newList) -> Stream.concat(oldList.stream(),\r
                                                                       newList.stream())\r
                                                               .collect(toList())),\r
                 HashMap::putAll);\r
\`\`\`\r
\r
參考 Oracle JDK 8 doc：[Stream#collect(Supplier<R>, BiConsumer<R, ? super T>, BiConsumer<R, R>)](https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#collect-java.util.function.Supplier-java.util.function.BiConsumer-java.util.function.BiConsumer-)\r
`,VR='# 1 `HashMap` 內部結構\r\n\r\n`HashMap` 係用一堆「buckets」（bucket array——`Node<K, V>[]`）黎存放 key-value entries。\r\n\r\n| JDK 版本 | Bucket 既 data structure                                               |\r\n| :------: | ---------------------------------------------------------------------- |\r\n|  JDK 7   | 全部都係 linked lists                                                  |\r\n|  JDK 8   | 可以係 linked list 或者 red-black tree（self-balancing binary tree）。 |\r\n\r\n用 bucket 既方式存放 key-value entries 可以提供最好既效能。\r\n\r\n![](blog/2021-09/java-8-hashmap/jdk-7-hashmap.png)\r\n\r\n![](blog/2021-09/java-8-hashmap/jdk-8-hashmap.png)\r\n\r\n註：`HashSet` 既內部都係用一個 `HashMap` object 黎實現，令到 elements 唔會重複。\r\n\r\n---\r\n\r\n# 2 `HashMap#put`\r\n\r\n`HashMap#put(K key, V value)` 既 behaviors：\r\n\r\n-   如果 `HashMap` 既 entries 裡面存在 `key` 既 key，就用 `value` 覆蓋果個 entry 既 value。\r\n-   如果 `HashMap` 既 entries 裡面唔存在 `key` 既 key，就將 `key` 同 `value` 作為新既 entry 放入 `HashMap` 既 entries 之中。\r\n\r\n## 2.1 流程\r\n\r\n以下係 Oracle JDK 既 `HashMap#put` 流程：\r\n\r\n1. 對 `key` 進行 `Object#hashCode`，得出 hash（`null` key 既 hash 係 `0`）。\r\n1. 將 hash 以及 bit-shifted hash 進行 bitwise XOR 處理（`HashMap#hash`）。\r\n    - 令到除左 lower bits 之外，連 higher bits 都可以影響到 hash。\r\n    - 目的係萬一我地有啲寫得差既 `hashCode` method，呢一層既處理可以幫我地把關。\r\n    - 操作／處理\r\n        - Bitwise XOR with bit-shifted hash（Oracle JDK 7、Oracle JDK 8）\r\n        - Bitwise XOR with hash seed（Oracle JDK 7）\r\n1. 對 hash 進行 `& (<bucket size> - 1)`，得出 bucket index（`null` key 既 bucket index 係 `0`）。\r\n    - 因為 bucket size 係 `2` 既次方數，所以結果同 `%` 一樣，但就會 efficient 啲。\r\n1. 將 entry 覆蓋或者放入 `HashMap` 既特定 bucket\r\n    - Bucket 既 data structure\r\n        - 如果 `HashMap` 既容量達到 `64` 而且 bucket 既 linked list 長度超過 `8`，就會 treeify 成 red-black tree，否則就繼續用 linked list。\r\n    - Collision\r\n        - 因為我地將無限值既 hash 轉化成 bucket index，咁就有 collision 既可能，bucket 有可能會存放多過 `1` 個 element。\r\n        - Collision 情境\r\n            - 一樣既 hash，所以得出一樣既 bucket index。\r\n            - 唔一樣既 hash，但得出一樣既 bucket index。\r\n            - 唔一樣既 hash，而又得出唔一樣既 bucket index。\r\n        - 處理 hash collision\r\n            - 如果 bucket index 所在既 bucket 未有 linked list／red-black tree，咁就 init 一個出黎，放呢個 entry 落去。\r\n            - 如果 bucket index 所在既 bucket 已經存在 linked list／red-black tree，咁就由頭到尾 traverse 成個 linked list／red-black tree。\r\n                1. 對每個 element 既 key 進行 `Object#equals`，睇下 `key` 係咪已經喺呢個 `HashMap` 裡面存在。\r\n                1. 如果一樣，就取代個 value；否則，整一個新既 linked list element，然後將 linked list 既最後一個 element（佢既 next）指向呢個新既 element。\r\n\r\n---\r\n\r\n## 2.2 `Object#hashCode`、`Object#equals`\r\n\r\n-   `Object#hashCode` 既 contract\r\n    -   如果 `equals` method 所用到既 data 冇改變過，咁不斷 call `hashCode` method 返回既結果喺同一個 runtime 裡面必須維持不變。\r\n    -   當 `2` 個 objects 通過 `equals` method 得出 `true` 既結果，咁佢地既 `hashCode` method 既結果就必須要返回一樣既 `int` value。\r\n    -   當 `2` 個 objects 通過 `equals` method 得出 `false` 既結果，佢地既 `hashCode` method 既結果係冇必要返回唔同既 `int` values，但唔同既 `int` values 有可以提升 hash table 既效能。\r\n-   `Object#equals` 既 contract\r\n    -   `o.equals(o)` 應該要返回 `true`。\r\n    -   只有當 `a.equals(b)` 既結果係 `true`，咁 `b.equals(a)` 既結果都應該要係 `true`。\r\n    -   `a.equals(b)` 以及 `b.equals(c)` 既結果都係 `true` 既話，`a.equals(c)` 眉結果應該要係 `true`。\r\n    -   如果 `equals` method 所用到既 data 冇改變過，咁不斷 call `a.equals(b)` 返回既結果應該維持不變。\r\n    -   `o.equals(null)` 既結果應該要係 `false`。\r\n    -   Override `equals` method 既同時係需要 override 埋 `hashCode` method。\r\n\r\n| 情境 | `Object#hashCode` 結果 | `Object#equals` 結果 | 符合 contract？ |\r\n| :--: | :--------------------: | :------------------: | :-------------: |\r\n|  ①   |          一樣          |        `true`        |        ✔        |\r\n|  ②   |          一樣          |       `false`        |        ✔        |\r\n|  ③   |         唔一樣         |        `true`        |        ✘        |\r\n|  ④   |         唔一樣         |       `false`        |        ✔        |\r\n\r\n情境 ② 既例子：\r\n\r\n-   `"Aa"`、`"BB"`\r\n    -   Hash 同樣係 `2112`。\r\n        -   `String#hashCode` 既計法將係每個 `char` 作為 `int` value 乘以 `31` 既 char index（右至左，`0`-based）咁多既次方。\r\n            -   `A` 既 ASCII 係 `65`。\r\n            -   `a` 既 ASCII 係 `97`。\r\n            -   `B` 既 ASCII 係 `66`。\r\n            -   `65 * 31 + 97` 等於 `66 * 31 + 66` 等於 `2112`。\r\n    -   `String#equals` 既結果係 `false`。\r\n\r\n---\r\n\r\n# 3 Resize\r\n\r\nBucket 數量即係 `HashMap` 既容量大小，但係就算不斷增加資料量，實際數量可能永久都達唔到容量大小，因為當 `HashMap` 既實際數量超過容量大小既一定比率，就會自動擴大容量大小到先前既 `2` 倍。呢個比率叫 load factor，默認值係 `0.75`（i.e. `75%`）。\r\n\r\n需要注意一點，JDK 7 同 JDK 8 唔同，而唔同之處於 JDK 7 唔係只睇 load factor，所以好容易令到個 `HashMap` 既實際數量接近 `100%`，甚至可能令實際數量超越容量。\r\n\r\n-   如果用 `HashMap` 既 no-arg constructor，咁默認就會有 `16` 個 buckets（`DEFAULT_INITIAL_CAPACITY`）。\r\n-   如果用 `HashMap` 既 `new HashMap<>(int initialCapacity)` constructor 或者 `new HashMap<>(int initialCapacity, float loadFactor)` constructor，咁 bucket 數量就會係不少於 `initialCapacity` 而最接近 `2` 既次方數既一個數字（e.g. `3` 就會得出 `4`，而 `10` 就會得出 `16`）。\r\n\r\n## 3.1 JDK 7 流程\r\n\r\nJDK 7 既 `HashMap#put` 會 call `HashMap#addEntry`，然後根據條件 resize `HashMap`。而 Oracle JDK 7 既條件係 `(size >= threshold) && (null != table[bucketIndex])`：\r\n\r\n-   新增呢個 entry 之前，實際數量達到容量既 load factor\r\n-   當前既 bucket 有 linked list（出現 collision）\r\n\r\n基於以上條件，喺 Oracle JDK 7，一個容量係 `16` 既 `HashMap` 理論上最多係可以存放到 `27` 個 entries（`12 + 15`——某個 bucket `12`，新增最後一個 entry 果時唔超過 `16 * 0.75 = 12`，而其他 buckets 各 `1`）；而 OpenJDK 7 就唔存在第 `2` 個條件，所以就唔會出現咁既情況。\r\n\r\n`HashMap#resize(int newCapacity)` method：\r\n\r\n1. 建立一個全新既 bucket array，容量係舊既 `2` 倍。\r\n1. 將本來既 bucket array 既所有 entries 抄過去新既 bucket array（`HashMap#transfer(Entry[] newTable)` method）。\r\n    1. 對所有 bucket 既 linked list\r\n        1. 由 linked list 第 `1` 個 element 開始至到最後一個 element\r\n            1. 對 entry 既 hash 進行 `& (<bucket size> - 1)`，得出新既 bucket index\r\n            1. 將 entry 放喺新 bucket 既頭部，佢會（佢既 next）指向現有既 entry（如果未有就 `null`）。\r\n\r\n註：Bucket 既 linked list 如果有多過 `1` 個 element（next 唔係 `null`），喺 resize 完之後，linked list elements 既次序將會調轉曬（雖然唔太重要）。\r\n\r\n---\r\n\r\n## 3.2 JDK 8 流程\r\n\r\n`HashMap#resize()` method：\r\n\r\n1.  建立一個全新既 bucket array，容量係舊既 `2` 倍。\r\n1.  將本來既 bucket array 既所有 entries 抄過去新既 bucket array。\r\n    1.  對所有舊 buckets\r\n        -   如果係 linked list\r\n            1. 由 linked list 第 `1` 個 element 開始至到最後一個 element\r\n                1. 對 entry 既 hash 進行 `& <old bucket size>`\r\n                    - 如果結果係 `0`（即係屬於前半部分，屬於舊既 bucket indexes）\r\n                        1. 將 entry 放喺新 linked list 既尾部（借助 `loHead`、`loTail`）。如果已經有 entry，現有 entry（佢既 next）會指向呢個 entry。\r\n                    - 如果結果唔係 `0`（即係屬於後半部分，屬於新增既 bucket indexes）\r\n                        1. 將 entry 放喺新 linked list 既尾部（借助 `hiHead`、`hiTail`）。如果已經有 entry，現有 entry（佢既 next）會指向呢個 entry。\r\n                1. 將新 buckets 指向 `loHead`、`hiHead`\r\n                    - 屬於新 buckets 前半部分既果一個 linked list 就會係 `loHead`（`newTab[j] = loHead;`）。\r\n                    - 屬於新 buckets 後半部分既果一個 linked list 就會係 `hiHead`（`newTab[j + oldCap] = hiHead;`）。\r\n        -   如果係 red-black tree\r\n            1. 同處理 linked list 既方式相似，最後 `loHead`、`hiHead` 會 `treeify` 成 red-black trees。\r\n\r\n註：`loHead`、`loTail`、`hiHead`、`hiTail` 解決左 JDK 7 resize 之後所有 buckets 既 linked lists 如果有多個 elements 既情況下次序調轉曬既問題。\r\n\r\n---\r\n\r\n## 3.3 建立避免 resize 既 `HashMap`\r\n\r\n假如我地而家有已知數量既資料，而且係一個好大既數值，令到我地唔可以唔考慮效能。我地想建立一個 `HashMap` 然後 call `HashMap#put` 或者 `HashMap#putAll` 去存放呢啲資料入去，我地會有以下既考慮（適用於 Oracle JDK 8）：\r\n\r\n| 方法                                                         | 考慮                                                                                                                                                                                                                                                                                          |\r\n| ------------------------------------------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n| `new HashMap<>()`                                            | 最唔推薦，因為如果資料數量好大，就需要由 `16`、`32`、`64` 咁一直 resize 上去，直到資料數量唔多過容量既 `75%`。                                                                                                                                                                                |\r\n| `new HashMap<>(int initialCapacity)`                         | 可以用，但需要計算容量，確保資料數量係容量既 `75%` 或以下，否則會觸發 resize。例子：如果己知數量係 `16`，呢個 constructor 會建立一個容量係 `16` 既 `HashMap`，但當我地 `HashMap#put` 第 `13` 筆資料既時候，`HashMap` 就會 resize。                                                            |\r\n| `new HashMap<>(int initialCapacity, float loadFactor)`       | 最好，因為可以 set load factor 係 `1`，即係 `new HashMap<>(size, 1)`。只有當容量唔夠，`HashMap` 先會 resize。                                                                                                                                                                                 |\r\n| Guava 既 `Maps#newHashMapWithExpectedSize(int expectedSize)` | 可以用，但要注意佢既算式係 `(int) ((float) expectedSize / 0.75F + 1.0F)`，呢個 `+ 1.0F` 有可能會令到容量係真正需要既 `2` 倍。例子：如果己知數量係 `12`，呢個 method 會計到 `17`，從而令 `HashMap` 建立一個容量係 `32` 既 `HashMap`，而唔係容量係 `16`（唔會 resize 既最小容量）既 `HashMap`。 |\r\n\r\n註：\r\n\r\n-   理論上，如果出現過多既 collisions，以上既做法都唔可以保證 `HashMap` 唔會 resize。\r\n-   實際上，資料本身帶有隨機性，而只要我地寫好啲 `hashCode` method，唔好令到 collision 咁容易發生就得。\r\n\r\n---\r\n\r\n# 4 筆記\r\n\r\n## 4.1 內部運作\r\n\r\n-   `HashMap#put` 係用 `& (<bucket size> - 1)`\r\n    -   目的係要知道 key 屬於邊一個 bucket index，所以就需要知道係 `0` 至 `<bucket size> - 1` 邊一個。\r\n-   JDK 8 既 `HashMap#resize` 係用 `& <old bucket size>`\r\n    -   目的係要知道現有既某個 bucket 既每一個 entry 喺新既 bucket array 裡面屬於前半部分（舊既 bucket indexes）定係後半部分（新既 bucket indexes），所以就需要知道新增既 bit 係 `0` 定係 `1`。\r\n    -   新增既 bit 就係舊 bucket size 既二進制數字既 `1` 字果個位。\r\n    -   想知道一個二進制數字對象特定既 bits 係 `0` 定係 `1`，就要對佢進行 bit masking 操作。\r\n        1.  需要用一個二進制數字作為 mask——只有想要既 bits 係 `1` 而其他唔想要既 bits 係 `0` 既二進制數字。\r\n        1.  用呢個 mask 對二進制數字對象進行 bitwise AND（`&`）操作。\r\n        1.  而對舊 bucket index 既二進制數字進行 bit masking 所得出既結果只有 `2` 個。\r\n            -   所有 bits 都係 `0`（亦即係 `0`）\r\n            -   第 `1` 個 bit 係 `1`，其他 bits 係 `0`（亦即係舊 bucket index）\r\n-   因為 bucket size 一定係 `2` 既次方數，所以佢既二進制一定係 `1` 後面有 `N` 個 `0`。\r\n-   例子：容量由 `16` resize 成 `32`\r\n    -   舊 `HashMap`\r\n        -   舊 bucket size `16` 既二進制係 `10000`。\r\n        -   舊 bucket size `16` - `1` 既二進制係 `1111`。\r\n    -   新 `HashMap`\r\n        -   新 bucket size `32` 既二進制係 `100000`。\r\n        -   新 bucket size `32` - `1` 既二進制係 `11111`。\r\n    -   新增既 bit 係指 `10000` 既 `1`（`2^4`）。\r\n        -   舊 `HashMap` 最大既 bucket index `1111` + `1` = `10000`——第 `1` 個新增既 bucket index。\r\n        -   `10000` 開始直至 `11111` 都係新增既 bucket indexes。\r\n\r\n---\r\n\r\n## 4.2 測試用代碼\r\n\r\n以下既代碼可以幫我地了解 Java 幾時會 resize 我地既 `HashMap`，以及 bucket 既分佈。\r\n\r\n`HashMapTest.java`：\r\n\r\n```java\r\npublic class HashMapTest {\r\n\r\n    public static void main(String[] args) {\r\n\r\n        final int cap = 16;\r\n        final int size = 28;\r\n\r\n        final Map<Foo, Integer> map = new HashMap<>(cap);\r\n\r\n        for (int i=0; i<size; i++) {\r\n            map.put(new Foo(i), i);\r\n            HashMapDebugUtils.printMap(map);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n`HashMapDebugUtils.java`：\r\n\r\n```java\r\npublic final class HashMapDebugUtils {\r\n    private static Field nextField;\r\n\r\n    static {\r\n        try {\r\n            final Class<?> entryClass = Class.forName("java.util.HashMap$Entry");\r\n            nextField = entryClass.getDeclaredField("next");\r\n            nextField.setAccessible(true);\r\n        } catch (Exception e) {\r\n            try {\r\n                final Class<?> entryClass = Class.forName("java.util.HashMap$Node");\r\n                nextField = entryClass.getDeclaredField("next");\r\n                nextField.setAccessible(true);\r\n            } catch (Exception ex) {\r\n                ex.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n    private HashMapDebugUtils() {}\r\n\r\n    public static void printMap(Map<?, ?> map) {\r\n        try {\r\n            final Class<?> mapType = map.getClass();\r\n            final Field tableField = mapType.getDeclaredField("table");\r\n            tableField.setAccessible(true);\r\n\r\n            final Object[] bucketArr = (Object[]) tableField.get(map);\r\n            final int capacity = bucketArr.length;\r\n\r\n            System.out.printf("Capacity: %5d", capacity);\r\n            System.out.printf("%5s|%5s", " ", " ");\r\n            System.out.printf("Size: %5d", map.size());\r\n            printBuckets(bucketArr);\r\n            System.out.println();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private static void printBuckets(final Object[] bucketArr) throws Exception {\r\n\r\n        System.out.printf("%5s|%5s", " ", " ");\r\n        System.out.printf("Buckets: ");\r\n\r\n        for (int i=0; i<bucketArr.length; i++) {\r\n            printBucket(i, bucketArr[i]);\r\n\r\n            if (i<bucketArr.length-1) {\r\n                System.out.print(" | ");\r\n            }\r\n        }\r\n    }\r\n\r\n    private static void printBucket(int index, Object entry) throws Exception {\r\n\r\n        if (entry==null) {\r\n            System.out.printf("[%d]:  . ", index);\r\n            return;\r\n        }\r\n\r\n        final boolean isRedBlackTree = "java.util.HashMap$TreeNode".equals(entry.getClass().getName());\r\n\r\n        int count = 0;\r\n        do {\r\n            count++;\r\n            entry = nextField.get(entry);\r\n        } while (entry!=null);\r\n\r\n        System.out.printf("[%d]: %2d", index, count);\r\n        System.out.print(isRedBlackTree ? "t" : " ");\r\n    }\r\n}\r\n```\r\n\r\n`Foo.java`（作為自定義 map key，所以 immutable）：\r\n\r\n```java\r\npublic final class Foo {\r\n    private final int val;\r\n\r\n    public Foo(int val) {\r\n        this.val = val;\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return Math.max(0, val-11);\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object obj) {\r\n        if (this == obj) return true;\r\n        if (!(obj instanceof Foo)) return false;\r\n        Foo other = (Foo) obj;\r\n        return val == other.val;\r\n    }\r\n}\r\n```\r\n\r\n### 4.2.1 Oracle JDK 7 既測試結果\r\n\r\n執行程式之後，我地可以睇到：\r\n\r\n-   當容量係 `16` 既情況下，實際數量係有機會去到 `27`。\r\n-   當新增第 `28` 個 entry 既時候，容量先至由 `16` 擴大到 `32`。\r\n\r\nConsole output：\r\n\r\n<!-- prettier-ignore -->\r\n```plaintext\r\nCapacity:    16     |     Size:     1\r\nCapacity:    16     |     Size:     2\r\nCapacity:    16     |     Size:     3\r\nCapacity:    16     |     Size:     4\r\nCapacity:    16     |     Size:     5\r\nCapacity:    16     |     Size:     6\r\nCapacity:    16     |     Size:     7\r\nCapacity:    16     |     Size:     8\r\nCapacity:    16     |     Size:     9\r\nCapacity:    16     |     Size:    10\r\nCapacity:    16     |     Size:    11\r\nCapacity:    16     |     Size:    12\r\nCapacity:    16     |     Size:    13\r\nCapacity:    16     |     Size:    14\r\nCapacity:    16     |     Size:    15\r\nCapacity:    16     |     Size:    16\r\nCapacity:    16     |     Size:    17\r\nCapacity:    16     |     Size:    18\r\nCapacity:    16     |     Size:    19\r\nCapacity:    16     |     Size:    20\r\nCapacity:    16     |     Size:    21\r\nCapacity:    16     |     Size:    22\r\nCapacity:    16     |     Size:    23\r\nCapacity:    16     |     Size:    24\r\nCapacity:    16     |     Size:    25\r\nCapacity:    16     |     Size:    26\r\nCapacity:    16     |     Size:    27\r\nCapacity:    32     |     Size:    28\r\n```\r\n\r\n---\r\n\r\n### 4.2.2 Oracle JDK 8 既測試結果\r\n\r\n先 uncomment `printBuckets(bucketArr);` 再執行程式，我地可以睇到：\r\n\r\n-   當實際數量去到 `9` 而舊容量係 `16`（多過 `TREEIFY_THRESHOLD` 既 `8` 但係容量小過 `MIN_TREEIFY_CAPACITY` 既 `64`），容量會由 `16` 擴大到 `32`。\r\n-   當實際數量去到 `10` 而舊容量係 `32`（多過 `TREEIFY_THRESHOLD` 既 `8` 但係容量小過 `MIN_TREEIFY_CAPACITY` 既 `64`），容量會由 `32` 擴大到 `64`。\r\n-   當實際數量去到 `11` 而舊容量係 `64`（多過 `TREEIFY_THRESHOLD` 既 `8` 而且容量達到 `MIN_TREEIFY_CAPACITY` 既 `64`），bucket 會由 linked list treeify 成 red-black tree。\r\n\r\nConsole output（省略左部分 bucket 分佈）：\r\n\r\n<!-- prettier-ignore -->\r\n```plaintext\r\nCapacity:    16     |     Size:     1     |     Buckets: [0]:  1 \r\nCapacity:    16     |     Size:     2     |     Buckets: [0]:  2 \r\nCapacity:    16     |     Size:     3     |     Buckets: [0]:  3 \r\nCapacity:    16     |     Size:     4     |     Buckets: [0]:  4 \r\nCapacity:    16     |     Size:     5     |     Buckets: [0]:  5 \r\nCapacity:    16     |     Size:     6     |     Buckets: [0]:  6 \r\nCapacity:    16     |     Size:     7     |     Buckets: [0]:  7 \r\nCapacity:    16     |     Size:     8     |     Buckets: [0]:  8 \r\nCapacity:    32     |     Size:     9     |     Buckets: [0]:  9 \r\nCapacity:    64     |     Size:    10     |     Buckets: [0]: 10 \r\nCapacity:    64     |     Size:    11     |     Buckets: [0]: 11t\r\nCapacity:    64     |     Size:    12     |     Buckets: [0]: 12t\r\nCapacity:    64     |     Size:    13     |     Buckets: [0]: 12t\r\nCapacity:    64     |     Size:    14     |     Buckets: [0]: 12t\r\nCapacity:    64     |     Size:    15     |     Buckets: [0]: 12t\r\nCapacity:    64     |     Size:    16     |     Buckets: [0]: 12t\r\nCapacity:    64     |     Size:    17     |     Buckets: [0]: 12t\r\nCapacity:    64     |     Size:    18     |     Buckets: [0]: 12t\r\nCapacity:    64     |     Size:    19     |     Buckets: [0]: 12t\r\nCapacity:    64     |     Size:    20     |     Buckets: [0]: 12t\r\nCapacity:    64     |     Size:    21     |     Buckets: [0]: 12t\r\nCapacity:    64     |     Size:    22     |     Buckets: [0]: 12t\r\nCapacity:    64     |     Size:    23     |     Buckets: [0]: 12t\r\nCapacity:    64     |     Size:    24     |     Buckets: [0]: 12t\r\nCapacity:    64     |     Size:    25     |     Buckets: [0]: 12t\r\nCapacity:    64     |     Size:    26     |     Buckets: [0]: 12t\r\nCapacity:    64     |     Size:    27     |     Buckets: [0]: 12t\r\nCapacity:    64     |     Size:    28     |     Buckets: [0]: 12t\r\n```\r\n\r\n---\r\n\r\n## 4.3 Mutable key 既問題\r\n\r\n正因為 `HashMap` 係用 key object 既 hash 去計算出存放 entry 既 bucket index，如果 key object 既 hash 喺存放 entry 之後改變左，咁又會產生咩變化或者影響呢？我地可以做個簡單實驗。\r\n\r\n`Bar.java`（mutable）：\r\n\r\n```java\r\npublic class Bar {\r\n    private int val;\r\n\r\n    public Bar(int val) {\r\n        this.val = val;\r\n    }\r\n\r\n    public void setVal(int val) {\r\n        this.val = val;\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        return val;\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object obj) {\r\n        if (this == obj) return true;\r\n        if (!(obj instanceof Bar)) return false;\r\n        Bar other = (Bar) obj;\r\n        System.out.println("Bar#equals: " + (val==other.val) + " (" + val + " = " + other.val + ")");\r\n        return val == other.val;\r\n    }\r\n}\r\n```\r\n\r\n`HashMapWithMutableElementTest.java`：\r\n\r\n```java\r\npublic class HashMapWithMutableElementTest {\r\n\r\n    public static void main(String[] args) throws Exception {\r\n\r\n        final Bar bar = new Bar(1);\r\n\r\n        final Map<Bar, String> map = new HashMap<>();\r\n        map.put(bar, "one");\r\n        HashMapDebugUtils.printMap(map); // bucket [1]: 1 個 entry\r\n\r\n        System.out.println(map.containsKey(new Bar(1))); // true\r\n\r\n        bar.setVal(2);\r\n        HashMapDebugUtils.printMap(map); // bucket [1]: 1 個 entry\r\n\r\n        System.out.println(map.containsKey(new Bar(1))); // false\r\n        System.out.println(map.containsKey(new Bar(2))); // false\r\n\r\n        map.put(new Bar(2), "two");\r\n        HashMapDebugUtils.printMap(map); // bucket [1]: 1 個 entry | [2]: 1 個 entry\r\n\r\n        System.out.println(map.remove(new Bar(1))); // null\r\n        System.out.println(map.remove(new Bar(2))); // two\r\n        HashMapDebugUtils.printMap(map); // bucket [1]: 1 個 entry\r\n\r\n        final Map<Bar, String> newMap = new HashMap<>(map);\r\n        HashMapDebugUtils.printMap(newMap); // bucket [0]: 1 個 entry\r\n        System.out.println(newMap.containsKey(new Bar(2))); // true\r\n\r\n        System.out.println(newMap.remove(new Bar(2))); // one\r\n        HashMapDebugUtils.printMap(newMap); // bucket [0]: 1 個 entry\r\n    }\r\n}\r\n```\r\n\r\n解釋：\r\n\r\n-   我地既 `HashMap` 會用 mutable 既 `Bar` class 作為 key type。\r\n    -   `Bar#hashCode` 會返回 `int` type 既 `val` field value。\r\n    -   `Bar#equals` 會用 `val` field value 黎比較 object equality。\r\n-   測試流程（Oracle JDK 8）\r\n    1.  將 key 係 `val: 1`、value 係 `one` 既 entry 放入 `HashMap`。\r\n        1.  Hash 係 `1`，所以會放入 bucket `1`。\r\n        1.  可以見到 bucket `1` 有 `1` 個 entry。\r\n    1.  用 `HashMap#containsKey` 測試下 `val: 1` 既 key 係咪存在喺 `HashMap` 裡面。\r\n        1.  Hash 係 `1`，所以會喺 bucket `1` 裡面搵。\r\n        1.  Bucket `1` 既 linked list 只有 `1` 個 element，而對呢個 element 既 `Bar#equals` 返回 `true`（`val` `1` 等於 `1`）。\r\n        1.  結果係存在。\r\n    1.  將呢個 `Bar` object 既 `val` 改成 `2`。\r\n    1.  用 `HashMap#containsKey` 測試下 `val: 1` 既 key 係咪存在喺 `HashMap` 裡面。\r\n        1.  Hash 係 `1`，所以會喺 bucket `1` 裡面搵。\r\n        1.  Bucket `1` 既 linked list 只有 `1` 個 element，但係對呢個 element 既 `Bar#equals` 返回 `false`（`val` `1` 唔等於 `2`）。\r\n        1.  結果係唔存在。\r\n    1.  用 `HashMap#containsKey` 測試下 `val: 2` 既 key 係咪存在喺 `HashMap` 裡面。\r\n        1.  Hash 係 `2`，所以會喺 bucket `2` 裡面搵。\r\n        1.  Bucket `2` 係空既。\r\n        1.  結果係唔存在。\r\n    1.  將 key 係 `val: 2`、value 係 `two` 既 entry 放入 `HashMap`。\r\n        1.  Hash 係 `2`，所以會放入 bucket `2`。\r\n        1.  可以見到 bucket `1` 以及 bucket `2` 各有 `1` 個 entry。\r\n    1.  用 `HashMap#remove` 測試下刪除 key 係 `val: 1` 既 entry。\r\n        1.  Hash 係 `1`，所以會喺 bucket `1` 裡面搵。\r\n        1.  Bucket `1` 既 linked list 只有 `1` 個 element，但係對呢個 element 既 `Bar#equals` 返回 `false`（`val` `1` 唔等於 `2`）。\r\n        1.  冇刪除到 entry，所以返回 `null`。\r\n    1.  用 `HashMap#remove` 測試下刪除 key 係 `val: 2` 既 entry。\r\n        1.  Hash 係 `2`，所以會喺 bucket `2` 裡面搵。\r\n        1.  Bucket `2` 既 linked list 只有 `1` 個 element，而對呢個 element 既 `Bar#equals` 返回 `true`（`val` `2` 等於 `2`）。\r\n        1.  因為刪除左 entry，所以返回 entry 既 value `two`。\r\n        1.  可以見到 bucket `1` 有 `1` 個 entry，而 bucket `2` 就再冇 entry。\r\n    1.  用 `new HashMap<>(Map<? extends K,? extends V> m)` constructor 重新建立一個 `HashMap`，argument 用上述既 `HashMap`。\r\n        1.  可以見到只有 `2` 個 buckets——Bucket `0` 有 `1` 個 entry，而 bucket `1` 就冇 entry。\r\n    1.  用 `HashMap#containsKey` 測試下 `val: 2` 既 key 係咪存在喺新既 `HashMap` 裡面。\r\n        1.  Hash 係 `2`，所以會喺 bucket `0` 裡面搵。\r\n        1.  Bucket `0` 既 linked list 只有 `1` 個 element，而對呢個 element 既 `Bar#equals` 返回 `true`（`val` `2` 等於 `2`）。\r\n        1.  結果係存在。\r\n\r\n因為 `HashSet` 既內部都係用一個 `HashMap` object 黎實現，令到 elements 唔會重複，所以如果啲 elements 既 class 係 mutable，都會有一樣既問題。\r\n\r\n`HashSetWithMutableElementTest.java`：\r\n\r\n```java\r\npublic class HashSetWithMutableElementTest {\r\n\r\n    public static void main(String[] args) throws Exception {\r\n\r\n        final Bar bar = new Bar(1);\r\n\r\n        final Set<Bar> set = new HashSet<>();\r\n        set.add(bar);\r\n\r\n        System.out.println(set.contains(new Bar(1))); // true\r\n\r\n        bar.setVal(2);\r\n\r\n        System.out.println(set.contains(new Bar(1))); // false\r\n        System.out.println(set.contains(new Bar(2))); // false\r\n\r\n        set.add(new Bar(2));\r\n\r\n        System.out.println(set.remove(new Bar(1))); // false\r\n        System.out.println(set.remove(new Bar(2))); // true\r\n\r\n        final Set<Bar> newMap = new HashSet<>(set);\r\n        System.out.println(newMap.contains(new Bar(2))); // true\r\n        System.out.println(newMap.remove(new Bar(2))); // true\r\n    }\r\n}\r\n```\r\n\r\n---\r\n\r\n# 5 參考資料\r\n\r\n-   [HashMap - JDK 7 vs JDK 8](https://javamana.com/2021/02/20210202162541893w.html)\r\n-   [JDK 1.8 中 HashMap 的 resize 優化](https://elsef.com/2019/11/11/JDK1.8%E4%B8%ADHashMap%E7%9A%84resize%E6%93%8D%E4%BD%9C/)\r\n-   [深入理解 HashMap（四）：關鍵源碼逐行分析之 resize 擴容](https://segmentfault.com/a/1190000015812438)\r\n-   [你給 HashMap 初始化了容量，卻讓性能變加更糟？](https://zhuanlan.zhihu.com/p/369808654)\r\n-   [StackOverflow - Explanation of HashMap#hash(int) method](https://stackoverflow.com/questions/2414117/explanation-of-hashmaphashint-method)\r\n-   OpenJDK\r\n    -   [OpenJDK 7 - `HashMap.java` source code](https://hg.openjdk.java.net/jdk7/jdk7/jdk/file/tip/src/share/classes/java/util/HashMap.java)\r\n    -   [OpenJDK 8 - `HashMap.java` source code](https://hg.openjdk.java.net/jdk8/jdk8/jdk/file/tip/src/share/classes/java/util/HashMap.java)\r\n    -   [OpenJDK 8 - `HashSet.java` source code](https://hg.openjdk.java.net/jdk8/jdk8/jdk/file/tip/src/share/classes/java/util/HashSet.java)\r\n-   Oracle JDK\r\n    -   [Oracle JDK 7 - `HashMap.java` source code](https://github.com/zxiaofan/JDK/blob/master/JDK1.7/src/java/util/HashMap.java)\r\n    -   [Oracle JDK 8 - `HashMap.java` source code](https://github.com/zxiaofan/JDK/blob/master/JDK1.8/src/java/util/HashMap.java)\r\n    -   [Oracle JDK 8 - `HashSet.java` source code](https://github.com/zxiaofan/JDK/blob/master/JDK1.8/src/java/util/HashSet.java)\r\n',$R=`# 1 Logging 簡介\r
\r
一個程式運行既時候係咩狀態、以前處理過啲咩、有冇曾經出 exceptions，如果我地唔做 logging 就冇辦法知道，然後就唔可能有系統地去 troubleshoot 或者 debug 到個程式。\r
\r
Java 既基礎班有教我地用 \`System.out\` 或者 \`System.err\`（同為 \`PrintStream\` type）既 \`println(...)\` 或者 \`printf(...)\` 去令個程式喺 runtime 時候喺 console 度顯示到 log，但問題係 console 既 log 只能喺果個 console session 仍然存在既時候 keep 到紀錄，而如果 console session 完結左，我地係冇辦法睇得返啲 log。\r
\r
因此，我地必須將啲 log save 落 file 度。除此之外，用 console 去做 logging 仲有唔少問題，所以就要用啲 logging libraries 去做 logging，亦需要用啲工具去幫手管理啲 log。\r
\r
---\r
\r
# 2 如何做好 logging\r
\r
好既 logging practices 至少包括以下幾點：\r
\r
-   可以自行配置格式\r
    -   包括由邊一個 Java class 既邊一行生產出黎、生產既 timestamp 資料\r
    -   包括額外數據（例如 microservice architecture 既 web applications 之間如果用 per-HTTP-request trace ID 溝通，日後就可以用 trace ID 追蹤到成個 flow，知道先後 call 左邊啲 microservices）。\r
    -   一個 Java 程式可以產生多個 threads，如果係 web application 既程式而 log entry 度又冇加到 per-HTTP-request 既 trace ID 或者 session ID，我地就只能以 thread name 黎分返開啲 log，從而串連啲 log 去跟住個 flow debug。\r
    -   可以做到 log message 只係一個 log entry\r
-   根據日期、檔案大小拆檔，並且識自動管理\r
    -   假如我地個程式有好多野 log，亦有好多 users 用我地個 web service，咁我地個 web application 程式就可以生產到勁多 log。咁既情況下，最好係我地可以將啲 log 根據日期自動開新檔案儲存啲 log，甚或再根據檔案大小拆分檔案。\r
-   可以配合搜尋工具\r
    -   如果我地既程式係一個提供 web service 既 web application，而我地又得一個或者一堆 log files，但冇工具去管理佢地，咁我地係好難可以搵返特定既 log 出黎，所以我地亦要用啲專門管理 log 既工具。\r
        -   Open source 既工具有 Elastic 既 ELK stack\r
            -   Elasticsearch - 儲存 log、搜尋引擎\r
            -   Logstash - 讀 log、處理 log\r
            -   Kibana - 搜尋 log 既用戶介面、視覺化或者圖像化搜尋結果\r
        -   收費 cloud 既工具有 Sumo Logic\r
\r
---\r
\r
# 3 Logging libraries\r
\r
Logging 可以分為 API 以及實現既 libraries。我地可以喺程式裡面用唔同既配搭：\r
\r
-   Log4j2 Core（API）、Log4j2 API（實現）\r
-   Slf4j（API）、Logback（實現）\r
-   Apache Commons Logging（API）、Log4j2（實現）\r
    -   需要使用 Commons Logging Bridge\r
\r
![](blog/2021-09/java-logging/bridging-legacy-apis.png)\r
\r
## 3.1 Log4j2 漏洞\r
\r
時間線：[Log4j Vulnerability](https://orangecyberdefense.com/nl/blog/threat/log4j-vulnerability/)\r
\r
### 3.1.1 JNDI lookup 遠程代碼執行漏洞（2021 年 12 月）\r
\r
喺 2021 年 12 月，Log4j2 畀人發現有遠程代碼執行漏洞（Log4Shell／\`CVE-2021-44228\`）。呢個漏洞係利用 Log4j 既一個 JNDI lookup 功能。\r
\r
通常啲 logging libraries 都可以畀我地將 object value substitute 落帶有 \`{}\` placeholder 既 log message format 裡面，而如果呢個 object 係一個 JNDI URL 既 string，因為 Log4j2 本來默認左 JNDI lookup 既關係，Log4j2 就會連接到呢個 JNDI URL。如果個 JNDI URL 係一個上載喺黑客 server 上面既一個惡意 Java class 既網址，咁就有可能令到 Log4j2 call 左果個惡意網址去下載同埋執行果個惡意 Java class，從而達到最危險既資訊安全漏洞——遠程代碼執行漏洞（remote code execution）。\r
\r
受影響既版本由 \`2.0-beta-9\` 至到 \`2.14.1\`，然後 Apache 推出左 \`2.15.0\` 去解決呢個漏洞。\r
\r
如果冇辦法升級到最新版本，只要用既版本係 \`2.10.0\` 或以上，就可以能用呢啲參數：\r
\r
|       參數類別       |           參數名稱            | 參數值 |\r
| :------------------: | :---------------------------: | :----: |\r
|   System property    |  \`log4j2.formatMsgNoLookups\`  | \`true\` |\r
| Environment variable | \`LOG4J_FORMAT_MSG_NO_LOOKUPS\` | \`true\` |\r
\r
參考資料：\r
\r
-   [Reddit - Log4j 0day being exploited](https://www.reddit.com/r/blueteamsec/comments/rd38z9/log4j_0day_being_exploited/)\r
-   [Log4Shell: JNDI Injection via Attackable Log4J](https://securityboulevard.com/2021/12/log4shell-jndi-injection-via-attackable-log4j/)（[備用一](https://web.archive.org/web/20230503012532/https://securityboulevard.com/2021/12/log4shell-jndi-injection-via-attackable-log4j/)／[備用二](https://archive.ph/HNwfs)）\r
-   [Youtube - Log4J Vulnerability (Log4Shell) Explained - for Java developers](https://www.youtube.com/watch?v=uyq8yxWO1ls)\r
-   [Countless Servers Are Vulnerable to Apache Log4j Zero-Day Exploit](https://www.pcmag.com/news/countless-serves-are-vulnerable-to-apache-log4j-zero-day-exploit)（[備用一](https://web.archive.org/web/20230503055429/https://www.pcmag.com/news/countless-serves-are-vulnerable-to-apache-log4j-zero-day-exploit)／[備用二](https://archive.ph/sLjQh)）\r
-   [Inside the Log4j2 vulnerability (CVE-2021-44228)](https://blog.cloudflare.com/inside-the-log4j2-vulnerability-cve-2021-44228/)\r
-   [Apache Log4j2 遠程代碼執行漏洞分析](https://www.anquanke.com/post/id/262668)（[備用一](https://web.archive.org/web/20230503012709/https://www.anquanke.com/post/id/262668)／[備用二](https://archive.ph/PtDnt)）\r
-   [Log4J2 Vulnerability and Spring Boot](https://spring.io/blog/2021/12/10/log4j2-vulnerability-and-spring-boot)\r
-   [Log4j2 官網](https://logging.apache.org/log4j/2.x/)\r
-   [8u191 後的 JNDI 注入利用](https://www.cnblogs.com/yyhuni/p/15088134.html)（[備用一](https://web.archive.org/web/20230503012839/https://www.cnblogs.com/yyhuni/p/15088134.html)／[備用二](https://archive.ph/03McJ)）\r
-   [Youtube - A Journey From JNDI/LDAP Manipulation to Remote Code Execution Dream Land](https://www.youtube.com/watch?v=Y8a5nB-vy78)\r
\r
---\r
\r
### 3.1.2 Infinite recursion DoS 漏洞（2021 年 12 月）\r
\r
不過之後又有人發現 Log4j2 仲有 DoS 漏洞（\`CVE-2021-45105\`），情況就好似 iPhone 既 iMessage 輸入特定文字有機會令到個程式 crash 咁。要解決呢個問題，就要升級 Log4j2 到 \`2.17.0\`（到底有完沒完？）。\r
\r
參考資料：\r
\r
-   [Log4j2 JIRA - Certain strings can cause infinite recursion](https://issues.apache.org/jira/browse/LOG4J2-3230)\r
\r
---\r
\r
# 4 動手寫\r
\r
## 4.1 普通 Java 程式（非 Spring）\r
\r
我地會用到 Lombok、Slf4j 以及 Logback。\r
\r
### 4.1.1 Maven dependencies\r
\r
我地會用到 Lombok 既 \`@Slf4j\` annotation 去 generate construct logger object 既 code。\r
\r
\`\`\`xml\r
<dependencies>\r
\r
	<dependency>\r
		<groupId>org.projectlombok</groupId>\r
		<artifactId>lombok</artifactId>\r
		<version>1.18.24</version>\r
		<scope>provided</scope>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.slf4j</groupId>\r
		<artifactId>slf4j-api</artifactId>\r
		<version>1.7.36</version>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>ch.qos.logback</groupId>\r
		<artifactId>logback-classic</artifactId>\r
		<version>1.2.11</version>\r
	</dependency>\r
\r
</dependencies>\r
\`\`\`\r
\r
---\r
\r
## 4.2 Spring Boot web application\r
\r
我地會用到 Spring Boot、Lombok、Slf4j 以及 Logback。\r
\r
### 4.2.1 Maven dependencies\r
\r
我地會用到 Lombok 既 \`@Slf4j\` annotation 去 generate create construct object 既 code。\r
\r
\`\`\`xml\r
<parent>\r
	<groupId>org.springframework.boot</groupId>\r
	<artifactId>spring-boot-starter-parent</artifactId>\r
	<version>2.6.1</version>\r
</parent>\r
\r
<dependencies>\r
\r
	<dependency>\r
		<groupId>org.projectlombok</groupId>\r
		<artifactId>lombok</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-web</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>net.logstash.logback</groupId>\r
		<artifactId>logstash-logback-encoder</artifactId>\r
		<version>7.0.1</version>\r
	</dependency>\r
\r
</dependencies>\r
\`\`\`\r
\r
---\r
\r
## 4.3 Logback 配置\r
\r
喺我地既 Maven project 度建立一個配置檔：\r
\r
-   \`main/resources\`\r
    -   \`logback.xml\`\r
\r
檔案內容：\r
\r
\`\`\`xml\r
<?xml version="1.0" encoding="UTF-8"?>\r
<configuration>\r
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">\r
        <encoder>\r
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} (%file:%line\\) - %msg%n</pattern>\r
			<charset>UTF-8</charset>\r
        </encoder>\r
    </appender>\r
\r
    <appender name="stash" class="ch.qos.logback.core.rolling.RollingFileAppender">\r
        <file>logs/app.log</file>\r
\r
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">\r
            <fileNamePattern>logs/archived/app.%d{yyyy-MM-dd}.%i.log</fileNamePattern>\r
            <maxHistory>30</maxHistory>\r
            <maxFileSize>100MB</maxFileSize>\r
            <totalSizeCap>1GB</totalSizeCap>\r
        </rollingPolicy>\r
\r
        <encoder class="net.logstash.logback.encoder.LogstashEncoder" />\r
    </appender>\r
\r
    <root level="INFO">\r
        <appender-ref ref="console" />\r
        <appender-ref ref="stash" />\r
    </root>\r
</configuration>\r
\`\`\`\r
\r
解釋：\r
\r
-   呢度配置左 \`2\` 個 log appenders\r
    -   當有 log 出現，每個 appender 都會接收到相同既 log\r
    -   Console\r
        -   仍然會喺 console 度出到 log，方便 local 啟動個 web application 既時候喺 IDE 或者 OS 自帶既 console（Windows 既 Command Prompt 或者 macOS 既 Terminal）睇到 log\r
    -   Logstash\r
        -   Encoder 會指定用現成黎自 \`logstash-logback-encoder\` 既 \`LogstashEncoder\`\r
        -   呢個係為左畀 Elastic 既 ELK stack 裡面既 Logstash 工具睇得明我地既 log\r
        -   每一行都係 JSON 格式\r
-   \`rollingPolicy\` 可以畀我地配置點樣拆分檔案，到底係根據日期（每月一個或每日一個），又或者日期 + 檔案大小。\r
    -   Logback 提供既 implementations\r
        -   \`TimeBasedRollingPolicy\`\r
        -   \`SizeAndTimeBasedRollingPolicy\`\r
    -   \`fileNamePattern\`\r
        -   用 \`TimeBasedRollingPolicy\` 既話，可以係以月拆分（用 \`{yyyy-MM}\`）或者以日拆分（用 \`{yyyy-MM-dd}\`）。\r
        -   用 \`SizeAndTimeBasedRollingPolicy\` 既話，需要再加上 \`%i\`（第幾個分檔）。\r
    -   \`maxHistory\`\r
        -   儲存最近幾耐既 log 檔\r
        -   如果 log 檔以月拆分，呢個數字就以月計（想一個月就寫 \`1\`）\r
        -   如果 log 檔以日拆分，呢個數字就以日計（想一個月就寫 \`30\`）\r
    -   \`maxFileSize\`\r
        -   每個 log 檔既大小上限\r
    -   \`totalSizeCap\`\r
        -   所有舊既 log 檔既大小總數上限\r
        -   一旦超出上限，會自動刪除日期最舊既 log 檔\r
    -   Logback 會先睇 \`maxHistory\`，之後再睇 \`totalSizeCap\` 去決定刪除舊既 log 檔。\r
\r
---\r
\r
## 4.4 寫 Java code\r
\r
我地需要喺每個需要做 logging 既 class 加上 Lombok 既 \`@Slf4j\` annotation，然後用 Lombok 幫我地改好左叫 \`log\` 既 \`org.slf4j.Logger\` object 黎 log 我地既 log message。\r
\r
\`\`\`java\r
@Slf4j\r
@Service\r
public class MyService {\r
\r
    public void foo() {\r
        log.debug("This is DEBUG log.");\r
        log.info("This is INFO log.");\r
        log.trace("This is TRACE log.");\r
\r
        try {\r
            throw new RuntimeException();\r
        } catch (Exception e) {\r
            log.warn("This is WARN log.", e);\r
            log.error("This is ERROR log.", e);\r
        }\r
    }\r
}\r
\`\`\`\r
\r
註：如果係喺有 exception 既情況下要 log，又想包括埋 stack trace，可以喺任何一個出 log 既 method call 既最後一個 argument 畀個 \`Throwable\` object 佢。\r
\r
用左 \`@Slf4j\` 就可以取代一般寫法：\r
\r
\`\`\`java\r
@Service\r
public class MyService {\r
    private Logger log = LoggerFactory.getLogger(getClass());\r
}\r
\`\`\`\r
\r
---\r
\r
# 5 參考資料\r
\r
-   [Slf4j 官網 - Bridging legacy APIs](http://www.slf4j.org/legacy.html)\r
-   [Logback 官網：Appenders](http://logback.qos.ch/manual/appenders.html)\r
-   [使用 SLF4J 和 Logback](https://www.liaoxuefeng.com/wiki/1252599548343744/1264739155914176)\r
-   [Apache Commons Logging + log4j 2 Example](https://www.logicbig.com/tutorials/misc/java-logging/jcl-log4j2.html)\r
`,GR=`# 2 JUnit 4\r
\r
## 2.1 Maven dependencies\r
\r
\`\`\`xml\r
<dependency>\r
    <groupId>junit</groupId>\r
    <artifactId>junit</artifactId>\r
    <version>4.13.2</version>\r
    <scope>test</scope>\r
</dependency>\r
\`\`\`\r
\r
如果係用緊新版既 Spring Boot，咁佢就已經用緊 JUnit 5。JUnit 5 係一個完全唔同既新版，所以如果要用返 JUnit 4 既話，可以用以下既 dependency，裡面已經包括左 \`junit\` 版本 \`4.x\`：\r
\r
\`\`\`xml\r
<dependency>\r
	<groupId>org.junit.vintage</groupId>\r
	<artifactId>junit-vintage-engine</artifactId>\r
	<scope>test</scope>\r
</dependency>\r
\`\`\`\r
\r
---\r
\r
## 2.2 寫 Java code\r
\r
Production code：\r
\r
\`\`\`java\r
public final class StringUtils {\r
\r
    private StringUtils() {}\r
\r
    public static boolean isBlank(String str) {\r
        return str==null\r
                || str.isEmpty()\r
                || str.chars().allMatch(Character::isWhitespace);\r
    }\r
}\r
\`\`\`\r
\r
Test code：\r
\r
\`\`\`java\r
public class StringUtilsTest {\r
\r
    @Test\r
    public void test_isBlank_null() {\r
        Assert.assertTrue(StringUtils.isBlank(null));\r
    }\r
\r
    @Test\r
    public void test_isBlank_emptyString() {\r
        Assert.assertTrue(StringUtils.isBlank(""));\r
    }\r
\r
    @Test\r
    public void test_isBlank_spaces() {\r
        Assert.assertTrue(StringUtils.isBlank(" "));\r
    }\r
\r
    @Test\r
    public void test_isBlank_specialWhitespaceCharacter1() {\r
        Assert.assertTrue(StringUtils.isBlank("\\u005Ct"));\r
    }\r
\r
    @Test\r
    public void test_isBlank_specialWhitespaceCharacter2() {\r
        Assert.assertTrue(StringUtils.isBlank("\\u005Cn"));\r
    }\r
\r
    @Test\r
    public void test_isBlank_someCharacters() {\r
        Assert.assertFalse(StringUtils.isBlank("a"));\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
## 2.3 JUnit API\r
\r
### 2.3.1 Annotations\r
\r
#### 2.3.1.1 \`@Test\`\r
\r
最基本會畀 JUnit pick up 去 run 既 test method：\r
\r
\`\`\`java\r
@Test\r
public void test() {\r
    // test code\r
}\r
\`\`\`\r
\r
如果期望個 test 會出 exception：\r
\r
\`\`\`java\r
@Test(expected = RuntimeException.class) // 改成我地期望既 exception class\r
public void test() {\r
    throw new RuntimeException();\r
}\r
\`\`\`\r
\r
#### 2.3.1.2 \`@Before\`\r
\r
有時我地會想喺每個 test case 行之前 set 一啲野，咁可以加個 method（method 名冇所謂）：\r
\r
\`\`\`java\r
@Before\r
public void setUp() {\r
    // do something\r
}\r
\`\`\`\r
\r
#### 2.3.1.3 \`@BeforeClass\`\r
\r
同樣地，如果只想喺行成個 test class 一開始行一次去 set 一啲野，咁可以加個 static method（method 名冇所謂）：\r
\r
\`\`\`java\r
@BeforeClass\r
public static void setUpOnce() {\r
    // do something\r
}\r
\`\`\`\r
\r
#### 2.3.1.4 \`@After\`\r
\r
如果需要喺每個 test case 行完之後收拾返一啲野，咁可以加個 method（method 名冇所謂）：\r
\r
\`\`\`java\r
@After\r
public void tearDown() {\r
    // do something\r
}\r
\`\`\`\r
\r
#### 2.3.1.5 \`@AfterClass\`\r
\r
同樣地，如果只想喺行成個 test class 最後尾行一次去收拾返一啲野，咁可以加個 static method（method 名冇所謂）：\r
\r
\`\`\`java\r
@AfterClass\r
public static void tearDownOnce() {\r
    // do something\r
}\r
\`\`\`\r
\r
---\r
\r
### 2.3.2 Assertion methods\r
\r
#### 2.3.2.1 \`assertNull\`、\`assertNotNull\`\r
\r
\`\`\`java\r
Assert.assertNull(null);\r
Assert.assertNotNull("");\r
\`\`\`\r
\r
#### 2.3.2.2 \`assertTrue\`、\`assertFalse\`\r
\r
\`\`\`java\r
Assert.assertTrue(true);\r
Assert.assertFalse(false);\r
\`\`\`\r
\r
#### 2.3.2.3 \`assertEquals\`\r
\r
\`\`\`java\r
final String expected = "Hello World!";\r
final String actual = "Hello" + " " + "World!";\r
\r
Assert.assertEquals(expected, actual);\r
\`\`\`\r
\r
#### 2.3.2.4 \`fail\`\r
\r
如果想個 test method 去到某一行就會 fail 左個 test case，就用呢句：\r
\r
\`\`\`java\r
Assert.fail();\r
\`\`\`\r
\r
---\r
\r
## 2.4 Parameterized test\r
\r
\`\`\`java\r
@RunWith(Parameterized.class)\r
@FieldDefaults(level = PRIVATE)\r
@AllArgsConstructor\r
public class MyParameterizedTest {\r
\r
    String value;\r
    boolean expected;\r
\r
    @Parameters\r
    public static Collection<Object[]> params() {\r
        return Arrays.asList(new Object[][] {\r
            { "123", false },\r
            { "", true }\r
        });\r
    }\r
\r
    @Test\r
    public void test() {\r
        final boolean actual = StringUtils.isBlank(value);\r
        Assert.assertEquals(expected, actual);\r
    }\r
}\r
\`\`\`\r
\r
參考資料：\r
\r
-   [JUnit – Parameterized Test](https://mkyong.com/unittest/junit-4-tutorial-6-parameterized-test/)\r
`,KR=`# 3 Mockito\r
\r
Mockito 係基於 proxy 既原理，去做到 mock 一個 method 既 implementation，令到佢變成我地返回想要既結果。\r
\r
喺 Mockito 既世界裡面，有兩種 objects：\r
\r
| 種類 | 描述                                                                                                                                                         |\r
| :--: | ------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r
| Mock | 當我地用 Mockito 創造一個 mock object，佢既所有 methods 默認會返回 \`null\`、\`false\`、\`0\` 之類既 default value，或者乜野都唔做（return type 係 \`void\` 既話）。 |\r
| Spy  | 當我地用 Mockito 創造一個 spy object，佢既所有 methods 默認都會用返原本既 method implementations。                                                           |\r
\r
Mock 以及 spy 都可以畀我地覆寫佢地既 behaviors，令到我地想佢返回乜野就返回乜野，亦可以令到佢喺唔同既 method calls 返回唔同既野。\r
\r
除此之外，Mockito 仲畀我地寫 verifications，去驗證到底個 mock object 或者 spy object 畀人 call 左幾多次，咁我地就可以好清楚自己寫既 unit test 所 test 緊既 program flow 或者 scenario 係咪我地所期望既。\r
\r
## 3.1 Maven dependencies\r
\r
如果有引入 \`spring-boot-starter-test\`，就已經有 \`mockito-core\` 以及 \`mockito-junit-jupitor\`。\r
\r
\`\`\`xml\r
<dependency>\r
    <groupId>org.mockito</groupId>\r
    <artifactId>mockito-core</artifactId>\r
    <version>4.6.1</version>\r
    <scope>test</scope>\r
</dependency>\r
\`\`\`\r
\r
自從 \`3.4.0\`，Mockito 就開始支援 mock static methods。不過如非必要，都唔應該 mock static methods，因為有違 OOP 原則；但如果真係需要，就要用以下既 dependency：\r
\r
\`\`\`xml\r
<!-- 建議加埋 mockito-core -->\r
\r
<dependency>\r
    <groupId>org.mockito</groupId>\r
    <artifactId>mockito-inline</artifactId>\r
    <version>4.6.1</version>\r
    <scope>test</scope>\r
</dependency>\r
\`\`\`\r
\r
註：\r
\r
-   如果要用 Mockito 去 mock static methods，就唔可以有 PowerMock 既 dependencies，因為會有衝突。\r
-   雖然 \`mockito-inline\` depends on \`mockito-core\`，但最好同時寫埋 \`mockito-core\` 既版本，因為如果有用 \`spring-boot-starter-test\`，佢會引入特定版本既 \`mockito-core\`，而 Mockito 既 libraries 係需要用同一個版本。\r
\r
參考資料：\r
\r
-   [StackOverflow - Mock static method in JUnit 5 using Mockito](https://stackoverflow.com/questions/67299161/mock-static-method-in-junit-5-using-mockito)\r
\r
---\r
\r
## 3.2 寫 Java code\r
\r
先建立同配置好一個典型既 Spring Boot + JPA web application，確認連得到 database、成功啟動到，之後寫下面既 code。\r
\r
Production code：\r
\r
\`\`\`java\r
@Data\r
@Accessors(chain = true)\r
@FieldDefaults(level = PRIVATE)\r
@Entity\r
@Table(name = "system_config")\r
public class SystemConfig {\r
    @Id\r
    @GeneratedValue(strategy = IDENTITY)\r
    Long id;\r
\r
    String configKey;\r
    String configValue;\r
}\r
\`\`\`\r
\r
\`\`\`java\r
@Repository\r
public interface SystemConfigRepo extends JpaRepository<SystemConfig, Long> {\r
    Optional<SystemConfig> findOneByConfigKey(String configKey);\r
}\r
\`\`\`\r
\r
\`\`\`java\r
@Service\r
public class SystemConfigService {\r
\r
    @Autowired\r
    SystemConfigRepo systemConfigRepo;\r
\r
    public String getConfigValue(String configKey) {\r
        return systemConfigRepo.findOneByConfigKey(configKey)\r
                               .map(SystemConfig::getConfigValue)\r
                               .orElse(null);\r
    }\r
}\r
\`\`\`\r
\r
Test code：\r
\r
\`\`\`java\r
@RunWith(MockitoJUnitRunner.class)\r
public class SystemConfigServiceTest {\r
\r
    @InjectMocks\r
    SystemConfigService systemConfigService;\r
\r
    @Mock\r
    SystemConfigRepo systemConfigRepo;\r
\r
    @Test\r
    public void test_getConfigValue_repoReturnsNull() {\r
\r
        // given\r
        Mockito.when(systemConfigRepo.findOneByConfigKey(ArgumentMatchers.anyString()))\r
               .thenReturn(Optional.empty());\r
\r
        // when\r
        String result = systemConfigService.getConfigValue("timeout");\r
\r
        // then\r
        Assert.assertNull(result);\r
        Mockito.verify(systemConfigRepo, Mockito.times(1)).findOneByConfigKey(ArgumentMatchers.eq("timeout"));\r
    }\r
\r
    @Test\r
    public void test_getConfigValue_repoReturnsRecord() {\r
\r
        // given\r
        Mockito.when(systemConfigRepo.findOneByConfigKey(ArgumentMatchers.anyString()))\r
               .thenReturn(Optional.of(new SystemConfig()\r
                                           .setConfigKey("timeout")\r
                                           .setConfigValue("1000")));\r
\r
        // when\r
        String result = systemConfigService.getConfigValue("timeout");\r
\r
        // then\r
        Assert.assertEquals("1000", result);\r
        Mockito.verify(systemConfigRepo, Mockito.times(1)).findOneByConfigKey(ArgumentMatchers.eq("timeout"));\r
    }\r
}\r
\`\`\`\r
\r
### 3.2.1 解釋\r
\r
因為我地寫左 \`@RunWith(MockitoJUnitRunner.class)\`，咁呢個 test class 就會用 \`MockitoJUnitRunner\` 黎去 run，佢會自動掃瞄 Mockito 既 annotations，然後做相應既處理，例如：\r
\r
|   Annotation   | 處理                                                                                                                                                                                            |\r
| :------------: | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
|    \`@Mock\`     | Mockito 會用 cglib（code generation library）去 create 一個 proxy object，而我地可以透過 \`Mockito.when()\` 等等既 method 去配置呢個 mock object 將會返回既 output。                              |\r
|     \`@Spy\`     | 同 \`@Mock\` 一樣，只不過係呢個 annotation 係 for 創造 spy objects 用。                                                                                                                           |\r
| \`@InjectMocks\` | Mockito 會 create 一個 new instance，之後將標註左 \`@Mock\` 既 objects 透過 reflection 之類既方式 set 落去被標註 \`@InjectMocks\` 既 object 裡面既 fields，就好似 Spring 既 \`@Autowired\` 既效果咁。 |\r
\r
---\r
\r
## 3.3 Mockito API\r
\r
### 3.3.1 唔用 \`MockitoJUnitRunner\` 黎 init\r
\r
我地可能唔想用 \`MockitoJUnitRunner\` 黎自動 initialize 個 test class 既 mock fields，原因有可能係因為我地想 \`@RunWith\` 用其他既 \`Runner\`，咁既話可以喺個 test case 裡面加呢個 method，都可以做到同樣效果：\r
\r
\`\`\`java\r
@Before\r
public void setUp() throws Exception {\r
    MockitoAnnotations.initMocks(this); // 舊版既寫法\r
    MockitoAnnotations.openMocks(this).close(); // 新版既寫法\r
}\r
\`\`\`\r
\r
---\r
\r
### 3.3.2 Mock 有 return type 既 method\r
\r
如果要 mock 有 return type 既 method，可以用：\r
\r
\`\`\`java\r
Mockito.when(systemConfigRepo.save(ArgumentMatchers.any(SystemConfig.class)))\r
       .thenReturn(new SystemConfig());\r
\`\`\`\r
\r
---\r
\r
### 3.3.3 Mock \`void\` method\r
\r
如果要 mock return type 係 \`void\` 既 method，可以用：\r
\r
\`\`\`java\r
Mockito.doNothing()\r
       .when(systemConfigRepo)\r
       .deleteAll();\r
\`\`\`\r
\r
---\r
\r
### 3.3.4 驗證 when 階段個 mock method call 左幾多次\r
\r
如果需要驗證個 method 背後 call 左個 mock method 幾多次又或者有冇 call 到，可以用：\r
\r
\`\`\`java\r
Mockito.verify(systemConfigRepo, Mockito.times(1))\r
       .findOneByConfigKey(ArgumentMatchers.eq("timeout"));\r
\`\`\`\r
\r
---\r
\r
### 3.3.5 Mock static method\r
\r
加左 \`mockito-inline\` Maven dependency 之後就可以咁樣去 mock 一個 static method：\r
\r
\`\`\`java\r
@Test\r
public void test() {\r
\r
    // 未 mock，所以 call 緊本來既 method implementation\r
    Assert.assertTrue(StringUtils.isBlank(""));\r
\r
    // mock static 只會喺 try-catch block 裡面生效\r
    try (MockedStatic<StringUtils> mock = Mockito.mockStatic(StringUtils.class)) {\r
\r
        // 因為個 mock 喺初始狀態，所以任何 method calls：\r
        // 如果有 return type，都會返回 default value，例如 null\r
        // 如果 return type 係 void，就會乜都唔做\r
        Assert.assertFalse(StringUtils.isBlank(""));\r
\r
        // mock："123" 係咪 blank：\r
        // 第一次 call 當係\r
        // 第二次 call 唔當係\r
        // 第三次及打後既 calls 都當係\r
        mock.when(() -> StringUtils.isBlank(ArgumentMatchers.eq("123"))).thenReturn(true, false, true);\r
\r
        // argument 中左 mock\r
        Assert.assertTrue(StringUtils.isBlank("123"));\r
        Assert.assertFalse(StringUtils.isBlank("123"));\r
        Assert.assertTrue(StringUtils.isBlank("123"));\r
        Assert.assertTrue(StringUtils.isBlank("123"));\r
\r
        // argument 唔中 mock\r
        Assert.assertFalse(StringUtils.isBlank("444"));\r
    }\r
\r
    // 因為唔喺個 try-catch block 裡面，所以唔受我地既 mock 影響\r
    Assert.assertFalse(StringUtils.isBlank("123"));\r
}\r
\`\`\`\r
\r
---\r
\r
### 3.3.6 重設 mock object\r
\r
如果需要重設一個 mock object，將之前所有用左 \`Mockito.when(...)\` 去 mock 既 methods 都還原到初始狀態，可以用：\r
\r
\`\`\`java\r
Mockito.reset(systemConfigRepo);\r
\`\`\`\r
\r
註：\r
\r
-   根據 Javadoc，一般黎講係唔應該需要用到 \`Mockito.reset\`。如果要用到佢，就意味住我地個 test 可能寫得唔好。\r
    -   因為如果有用以下方法黎喺每個 \`@Test\` method 執行之前 initialize mock objects 或者 spy objects，我地係唔需要額外 reset 佢地。\r
        1. 個 test class 係 \`@RunWith(MockitoJunitRunner.class)\`\r
        1. 喺 \`@Before\` 或者 \`@After\` 既 method 裡面行 \`MockitoAnnotations.initMocks(this)\` 或者 \`MockitoAnnotations.openMocks(this)\`\r
\r
---\r
\r
## 3.4 喺 Spring test 裡面 dependency-inject mock 左既 Spring beans\r
\r
如果我地個 test 係 \`@SpringBootTest\`、\`@RunWith(SpringRunner.class)\`，咁佢就會 initialize Spring context，咁 dependency injection 亦都會發生。\r
\r
\`spring-boot-starter-test\` 裡面既 \`spring-boot-test\` 提供左一啲 annotations，畀我地去 mock 或者 spy 一個 Spring bean（例如 \`@Service\`、\`@Component\`），並且將佢用喺 dependency injection 裡面，成為 depend on 佢既 Spring beans 既 property value（透過 \`@Autowired\` 或者其他 dependency injection 方式）。\r
\r
當我地用 \`MockMvc\` 黎 test controller endpoints 既時候，呢個方式可以幫到我地好容易咁將一啲 mock 左或者 spy 左 Spring beans inject 入去 Spring context 裡面。\r
\r
我地可以睇下以下既例子。\r
\r
\`Bean1.java\`：\r
\r
\`\`\`java\r
@Component\r
public class Bean1 {}\r
\`\`\`\r
\r
\`Bean2.java\`：\r
\r
\`\`\`java\r
@Component\r
public class Bean2 {\r
\r
    @Getter\r
    @Autowired\r
    Bean1 bean1;\r
}\r
\`\`\`\r
\r
\`Bean3.java\`：\r
\r
\`\`\`java\r
@Component\r
public class Bean3 {\r
\r
    @Getter\r
    @Autowired\r
    Bean2 bean2;\r
}\r
\`\`\`\r
\r
寫 test code：\r
\r
\`\`\`java\r
@SpringBootTest\r
@RunWith(SpringRunner.class)\r
public class MockBeanTest {\r
\r
    @Autowired\r
    Bean3 bean3;\r
\r
    // 如果用既係 @Mock，呢個 test 就會因為 AssertionError 而 fail\r
	// 因為 @Mock 只能取代 @InjectMocks 既 objects 裡面既 property values\r
    @MockBean\r
    Bean1 bean1;\r
\r
    @Before\r
    public void setUp() throws Exception {\r
        MockitoAnnotations.openMocks(this).close();\r
    }\r
\r
    @Test\r
    public void test() {\r
        Assert.assertEquals(bean1, bean3.getBean2().getBean1());\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
## 3.5 參考資料\r
\r
-   [Mock vs. Stub vs. Spy\r
    ](https://www.javatpoint.com/mock-vs-stub-vs-spy)\r
-   [Mockito 官方 Javadoc](https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html)\r
\r
> By default, for all methods that return a value, a mock will return either null, a primitive/primitive wrapper value, or an empty collection, as appropriate. For example 0 for an int/Integer and false for a boolean/Boolean.\r
`,YR=`# 1 Java 測試簡介\r
\r
## 1.1 Development 既方式\r
\r
Development 離不開做 testing 去保證 production code 既執行結果符合期望。Development 既同時做埋 automated testing 既方式有以下兩種：\r
\r
| 方式名稱                           | 描述                                                                                                                                                                                                                                                                                                                                                                                                     |\r
| ---------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| Test-driven development（TDD）     | 最 ideal 既做法係先寫 test code，寫曬我地期望既 given-when-then，因為有 production code 未寫而導致有 compilation error（例如 method 不存在）先再去寫 production code，當 production code 足以解決 compilation error 就再完成埋個 unit test case，直到個 unit test 行到（正常會係 fail 左）而且又冇 compilation error，再去寫埋啲 production code 既 implementation，寫完果陣應該個 unit test 就會 pass。 |\r
| Behavior-driven development（BDD） | 以 end user 既 user journey 既角度去諗 test case scenarios，來源可以係黎自 functional specs 或者 business analysts 得出既 user requirements，而寫出黎既 test code 都會同一般 TDD 所針對單個 class 既 method 去寫既 test code 有明顯分別。                                                                                                                                                                |\r
\r
---\r
\r
## 1.2 Unit test case 既表達形式\r
\r
一般既 unit test case 寫法：\r
\r
\`\`\`java\r
public void test() {\r
    // Given - 喺呢個 context 下…\r
    // 構建 context，為 dependencies 作出一啲合理假設（mocking）\r
\r
    // When - 當我地執行呢個 method…\r
    // 執行需要測試既 method\r
\r
    // Then - 咁我地期望得到…\r
    // 有結果既話，驗證結果係咪符合期望；void return 既話，驗證下有冇出 exception\r
    // 亦可以驗證下某一啲 objects 既 methods 應該曾經被 call\r
}\r
\`\`\`\r
\r
JUnit 例子：\r
\r
\`\`\`java\r
@Test\r
public void test_happy_calculateSine_degMode() {\r
\r
    // given\r
    Calculator calculator = new Calculator(Mode.DEG);\r
\r
    // when\r
    double result = calculator.calculateSine(90);\r
\r
    // then\r
    Assert.assertTrue("Sine result under DEG mode should be correct",\r
                      result == 1);\r
}\r
\r
@Test\r
public void test_happy_calculateSine_radMode() {\r
\r
    // given\r
    Calculator calculator = new Calculator(Mode.RAD);\r
\r
    // when\r
    double result = calculator.calculateSine(90);\r
\r
    // then\r
    Assert.assertTrue("Sine result under RAD mode should be correct",\r
                      result > 0.8939 && result < 0.894);\r
}\r
\`\`\`\r
\r
---\r
\r
## 1.3 Libraries\r
\r
|     名稱      | 功能                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |\r
| :-----------: | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| JUnit、TestNG | 提供 API 畀我地執行 assertion statements，咁我地就可以利用佢去做 TDD（test-driven development）。如果 expected value 同 actual value 兩者唔 match 就會令個 unit test fail，IDE 裡面既 plugin 會顯示紅燈；如果 match 既話就會顯示綠燈黎表示通過。Build tools 包括 Maven（Maven Surefire plugin 以及 Maven Failsafe plugin）、Gradle 會喺各自 build artifact 既 goal 執行果陣先自動執行 unit tests 甚或 integration tests。                                                   |\r
|    Mockito    | 提供 API 畀我地 mock 一啲 dependency objects 既 public instance methods 所返回既 return values，咁我地就可以專注 test 一個 class 既 business logic。Mockito \`3.4.0\` 之前既版本未能夠 mock static methods（雖然需要咁樣做可能象徵住有 code smell，因為要咁做唔係幾 OOP）。                                                                                                                                                                                                   |\r
|   PowerMock   | 係一個基於 Mockito 既 library，佢提供 API 畀我地 mock 埋 static methods 既 return values（雖然需要咁樣做可能象徵住有 code smell，因為要咁做唔係幾 OOP），呢一點 Mockito \`3.4.0\` 之前係做唔到。                                                                                                                                                                                                                                                                              |\r
|   WireMock    | 提供 API 畀我地建立 runtime mock servers 黎 mock external web services 既 HTTP responses。呢個比較係 end-to-end 多過 unit testing。                                                                                                                                                                                                                                                                                                                                         |\r
|   Cucumber    | 提供 API 畀我地做 behavior-driven 既 testing，咁我地就可以利用佢去做 BDD（behavior-driven development）。佢支持以文字去描述 given-when-then 既表達形式。呢個比較係 end-to-end 多過 unit testing。                                                                                                                                                                                                                                                                           |\r
|    PITest     | 呢一個 mutation testing library 會自動 analyze source code，知道啲 if-else conditions 用咩 values 可以令到個 condition 成立，從而透過修改我地 source code 裡面既一啲 operators 之類（例如將 \`==\` 改成 \`!=\`）去睇下我地既 unit tests 有冇因為佢 library 做既 code changes 而影響左結果——即係有冇 test failures。如果冇 test fail 到既話就算係唔正常，因為如果我地改左 code 但係所有 unit tests 都照 pass，咁就即係我地既 unit test coverage 唔足以 cover 曬所有 conditions。 |\r
\r
---\r
\r
## 1.4 其他輔助 libraries\r
\r
|    名稱    | 功能                                                                                                                                                                                                            |\r
| :--------: | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| JSONAssert | 呢個 library 係 Jackson Databind 既一個 alternative，可以根據內容黎 compare JSON strings，而唔係當一般 strings 咁 compare character by character。佢提供左幾個 predefined 既容忍模式。                          |\r
|   PODAM    | POJO Data Mocker 係一個可以為任何 Java POJO class 生成假數據既 library。有啲時候我地想要一個 entity／DO／DTO／VO／POJO class 既 object 裡面既所有 instance fields 都有隨機既數據，呢個 library 就非常簡單易用。 |\r
\r
### 1.4.1 使用 JSONAssert\r
\r
\`JSONCompareMode\`（容忍模式）：\r
\r
-   \`LENIENT\`\r
    -   Extensible：actual JSON 可以包含比 expected JSON 多既內容，只要唔少過就得\r
    -   Non-strict array ordering：唔理 array 順序\r
-   \`NON_EXTENSIBLE\`\r
    -   Non-extensible：actual JSON 唔可以包含比 expected JSON 多既內容\r
    -   Non-strict array ordering：唔理 array 順序\r
-   \`STRICT_ORDER\`\r
    -   Extensible：actual JSON 可以包含比 expected JSON 多既內容，只要唔少過就得\r
    -   Strict ordering：會睇埋 array 順序\r
-   \`STRICT\`\r
    -   Non-extensible：actual JSON 唔可以包含比 expected JSON 多既內容\r
    -   Strict ordering：會睇埋 array 順序\r
\r
註：JSON objects 既 property 次序一定係冇關係。\r
\r
#### 1.4.1.1 Maven dependencies\r
\r
\`\`\`xml\r
<dependency>\r
	<groupId>org.skyscreamer</groupId>\r
	<artifactId>jsonassert</artifactId>\r
	<version>1.4.0</version>\r
</dependency>\r
\`\`\`\r
\r
#### 1.4.1.2 準備 JSON 檔\r
\r
\`expected.json\`：\r
\r
\`\`\`json\r
{\r
	"arr": ["A", "B"],\r
	"name": "something",\r
	"obj": {}\r
}\r
\`\`\`\r
\r
\`actual.json\`：\r
\r
\`\`\`json\r
{\r
	"name": "something",\r
	"arr": ["B", "A"],\r
	"obj": {\r
		"extra": null\r
	}\r
}\r
\`\`\`\r
\r
#### 1.4.1.3 寫 Java code\r
\r
\`\`\`java\r
final String expected = FileUtils.readFileToString(new File("expected.json"), "UTF-8");\r
final String actual = FileUtils.readFileToString(new File("actual.json"), "UTF-8");\r
\r
System.out.println(JSONCompare.compareJSON(expected, actual, JSONCompareMode.LENIENT).passed());\r
// true\r
\r
System.out.println(JSONCompare.compareJSON(expected, actual, JSONCompareMode.NON_EXTENSIBLE).passed());\r
// false\r
\r
System.out.println(JSONCompare.compareJSON(expected, actual, JSONCompareMode.STRICT_ORDER).passed());\r
// false\r
\r
System.out.println(JSONCompare.compareJSON(expected, actual, JSONCompareMode.STRICT).passed());\r
// false\r
\`\`\`\r
\r
---\r
\r
### 1.4.2 使用 PODAM\r
\r
#### 1.4.2.1 Maven dependencies\r
\r
\`\`\`xml\r
<dependency>\r
    <groupId>uk.co.jemos.podam</groupId>\r
    <artifactId>podam</artifactId>\r
    <version>7.2.7.RELEASE</version>\r
</dependency>\r
\`\`\`\r
\r
#### 1.4.2.2 寫 Java code\r
\r
\`\`\`java\r
@SuppressWarnings("unchecked")\r
final List<String> randomData = new PodamFactoryImpl().manufacturePojo(List.class, String.class);\r
System.out.println(randomData); // [J_hO7wAETv, F08kZk64aV, ncjXUymIT6, tk354lMwGX, CQhUbaS3nn]\r
\`\`\`\r
`,QR=`# 1 JPA／Hibernate 簡介\r
\r
Back-end application 一般都需要連接 database 去查詢資料、更新資料，而如果選擇用 Java、TypeScript 呢啲屬於 strongly typed 既程序語言，為左方便 coding，都會寫啲 class 作為載體咁喺 memory 度緩存啲 table 紀錄數據，操作可以只係純查詢，但亦可以包括更新某個 column 既 value。簡單講，就係根據 class、fields 可以得到 SELECT SQL、UPDATE SQL，而 query result 可以用 typed objects 緩存等等。\r
\r
而將 table 紀錄轉化成 typed objects 就需要一個過程，呢個過程就要用到 ORM（object-relational mapping），將程式既 class（人稱 entity／DO／DTO／VO／POJO）以及裡面既 instance fields 同 database table 以及佢既 columns 兩者做 mapping。\r
\r
喺 Java 既世界裡面，最熱門既 ORM libraries 就係 JPA、Hibernate。佢地兩個並唔係二選一既關係——JPA 係一個 ORM 既標準，而 Hibernate 就係實現左 JPA 標準既一個 framework。事實上，Hibernate 係比 JPA 更早出現。\r
\r
一般既 Spring projects 都會引入 JPA、Hibernate 既 libraries 去做 ORM，而國內或者中資公司可能會用 MyBatis，即係 prefer 寫 native SQL，但就唔算係一個 ORM framework。\r
\r
---\r
\r
# 2 動手寫\r
\r
Project setup：\r
\r
-   Spring Boot（web）\r
-   JPA／Hibernate\r
-   MySQL 或 MariaDB\r
\r
## 2.1 Maven dependencies\r
\r
\`\`\`xml\r
<parent>\r
    <groupId>org.springframework.boot</groupId>\r
    <artifactId>spring-boot-starter-parent</artifactId>\r
    <version>2.6.1</version>\r
</parent>\r
\r
<dependencies>\r
    <dependency>\r
        <groupId>org.projectlombok</groupId>\r
        <artifactId>lombok</artifactId>\r
    </dependency>\r
\r
    <dependency>\r
        <groupId>org.springframework.boot</groupId>\r
        <artifactId>spring-boot-starter-web</artifactId>\r
    </dependency>\r
\r
    <dependency>\r
        <groupId>org.springframework.boot</groupId>\r
        <artifactId>spring-boot-starter-data-jpa</artifactId>\r
    </dependency>\r
\r
    <dependency>\r
        <groupId>mysql</groupId>\r
        <artifactId>mysql-connector-java</artifactId>\r
        <version>8.0.26</version>\r
    </dependency>\r
</dependencies>\r
\`\`\`\r
\r
---\r
\r
## 2.2 Application 配置\r
\r
\`application.yml\`：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
spring:\r
  jpa:\r
    show-sql: true\r
    open-in-view: false\r
    hibernate:\r
      ddl-auto: update\r
    properties:\r
      hibernate:\r
        dialect: org.hibernate.dialect.MySQL57InnoDBDialect\r
  datasource:\r
    url: jdbc:mysql://localhost:3306/mydb?useSSL=false\r
    username: root\r
    password:\r
    driver-class-name: com.mysql.cj.jdbc.Driver\r
\`\`\`\r
\r
---\r
\r
## 2.3 寫 Java code\r
\r
### 2.3.1 Entity\r
\r
\`\`\`java\r
@Data\r
@Accessors(chain = true)\r
@FieldDefaults(level = PRIVATE)\r
@Entity\r
@Table(name = "person")\r
public class PersonEntity {\r
    @Id\r
    @GeneratedValue(strategy = IDENTITY)\r
    Long id;\r
\r
    String firstName;\r
    String status;\r
}\r
\`\`\`\r
\r
解釋：\r
\r
-   \`@Data\`、\`@Accessors\` 以及 \`@FieldDefaults\` 都係 Lombok annotations，用黎 generate methods、keyword 既 code，咁我地就冇需要寫 getters 同 setters。\r
-   \`@Entity\` 係用黎話畀 Hibernate 知呢個係一個 entity class。\r
-   \`@Table\` 係用黎話畀 Hibernate 知應該 map 去邊個 database table。\r
\r
---\r
\r
### 2.3.2 Repository interface：用 method 名砌 SQL\r
\r
\`PersonRepo.java\`：\r
\r
\`\`\`java\r
@Repository\r
public interface PersonRepo extends JpaRepository<PersonEntity, Long> {\r
\r
    Optional<PersonEntity> findOneByFirstName(String firstName);\r
\r
    List<PersonEntity> findAllByStatusIn(List<String> statuses);\r
}\r
\`\`\`\r
\r
解釋：\r
\r
-   \`@Repository\`\r
    -   因為個 interface 已經 extends 左 Spring Boot JPA 既 \`JpaRepository\`，所以其實呢個 annotation 唔係必要。\r
-   \`findOneByFirstName\`\r
    -   Return \`Optional<PersonEntity>\`\r
        -   因為 \`findOne\`，所以只會查詢到 \`1\` 個紀錄。\r
        -   Return type 可以選擇性地用 \`Optional\` wrapper 包住，擁抱 Java 8 既新功能。\r
    -   \`findOne\` 砌出黎果句 SQL 會做到 \`SELECT\` 以及 \`LIMIT 1\` 既效果。\r
    -   \`ByFirstName\` 砌出黎果句 SQL 會做到 \`WHERE first_name = ?\` 既效果。\r
-   \`findAllByStatusIn\`\r
    -   Return \`List<PersonEntity>\`\r
        -   因為 \`findAll\`，所以會查詢到多個紀錄。\r
        -   因為已經用左 \`List\` 做 wrapper，所以唔需要再用 \`Optional\` 包多層。\r
    -   \`findAll\` 砌出黎果句 SQL 會做到 \`SELECT\` 既效果。\r
    -   \`ByStatusIn\` 砌出黎果句 SQL 會做到 \`WHERE status IN (?)\` 既效果。\r
\r
---\r
\r
### 2.3.3 Repository interface：用 JPQL／HQL\r
\r
JPQL（Java Persistence query language）／HQL（Hibernate query language）既基本 syntax 同 native SQL 差唔多。因為係有 ORM 既元素喺裡面，所以會用 class 名、field 名黎代替 table 名、column 名。\r
\r
最簡單既 syntax 係咁：\r
\r
\`\`\`java\r
@Repository\r
public interface PersonRepo extends JpaRepository<PersonEntity, Long> {\r
\r
    @Query("SELECT p FROM PersonEntity p WHERE p.firstName = :firstName")\r
    Optional<PersonEntity> getByFirstName(@Param("firstName") String firstName);\r
\r
    @Query("SELECT p FROM PersonEntity p WHERE p.status IN :statuses")\r
    List<PersonEntity> getAllByStatusIn(@Param("statuses") List<String> statuses);\r
}\r
\`\`\`\r
\r
解釋：\r
\r
-   \`getByFirstName\`\r
    -   \`:firstName\` 會成為 prepared statement 既 parameter（i.e. \`= ?\`）\r
    -   \`@Param("firstName")\` 既 variable value 會對應返 \`:firstName\`\r
-   \`getAllByStatusIn\`\r
    -   \`:statuses\` 會成為 prepared statement 既 parameter（i.e. \`IN (?)\`）\r
    -   \`@Param("statuses")\` 既 variable values 會對應返 \`:statuses\`\r
\r
---\r
\r
### 2.3.4 Repository interface：用 native SQL\r
\r
\`\`\`java\r
import org.springframework.transaction.annotation.Transactional;\r
\r
@Repository\r
public interface PersonRepo extends JpaRepository<PersonEntity, Long> {\r
\r
    @Query(nativeQuery = true, value = "SELECT * FROM person WHERE first_name = :firstName")\r
    Optional<PersonEntity> getByFirstName(@Param("firstName") String firstName);\r
\r
    @Query(nativeQuery = true, value = "SELECT * FROM person WHERE status IN :statuses")\r
    List<PersonEntity> getAllByStatusIn(@Param("statuses") List<String> statuses);\r
\r
    @Transactional\r
    @Modifying\r
    @Query(nativeQuery = true, value = "UPDATE person SET status = ?2 WHERE id = ?1")\r
    void updateStatus(Long id, String status);\r
}\r
\`\`\`\r
\r
解釋：\r
\r
-   \`updateStatus\`\r
    -   如果句 SQL 會修改數據，就需要加上 \`@Modifying\` 以及 \`@Transactional\`，否則會導致 exception\r
        -   冇 \`@Modifying\`：\`Caused by: java.sql.SQLException: Can not issue data manipulation statements with executeQuery()\`\r
        -   冇 \`@Transactional\`：\`org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query\`。\r
    -   \`?1\`、\`?2\` 會成為 prepared statements 既 parameters（i.e. \`= ?\`）\r
    -   Method parameters 既次序會對應返 \`?1\`、\`?2\`（index 係 \`1\`-based）\r
\r
---\r
\r
### 2.3.5 DAO class：用 native SQL（Spring Boot 1.5 + Hibernate 5.0）\r
\r
#### 2.3.5.1 將結果轉化成 POJO class\r
\r
\`\`\`java\r
import org.springframework.transaction.annotation.Transactional;\r
\r
@Component\r
@Transactional\r
public class PersonDao {\r
\r
    @Autowired EntityManagerFactory emf;\r
\r
    SessionFactory sessionFactory;\r
\r
    @PostConstruct\r
    public void init() {\r
        sessionFactory = emf.unwrap(SessionFactory.class);\r
    }\r
\r
    @SuppressWarnings("unchecked")\r
    public PersonEntity getByFirstName(String firstName) {\r
\r
        final List<PersonEntity> persons = sessionFactory\r
                .getCurrentSession()\r
                .createSQLQuery("SELECT id, first_name firstName, status FROM person WHERE first_name = :firstName")\r
                .addScalar("id", StandardBasicTypes.LONG)\r
                .addScalar("firstName", StandardBasicTypes.STRING)\r
                .addScalar("status", StandardBasicTypes.STRING)\r
                .setResultTransformer(Transformers.aliasToBean(PersonEntity.class))\r
                .setParameter("firstName", firstName)\r
                .list();\r
\r
        return persons.isEmpty() ? null : persons.get(0);\r
    }\r
\r
    @SuppressWarnings("unchecked")\r
    public List<PersonEntity> getAllByStatus(List<String> statuses) {\r
        return sessionFactory\r
                .getCurrentSession()\r
                .createSQLQuery("SELECT id, first_name firstName, status FROM person WHERE status IN :statuses")\r
                .addScalar("id", StandardBasicTypes.LONG)\r
                .addScalar("firstName", StandardBasicTypes.STRING)\r
                .addScalar("status", StandardBasicTypes.STRING)\r
                .setResultTransformer(Transformers.aliasToBean(PersonEntity.class))\r
                .setParameterList("statuses", statuses)\r
                .list();\r
    }\r
}\r
\`\`\`\r
\r
解釋：\r
\r
-   \`SessionFactory\`\r
    -   呢個例子將 \`EntityManagerFactory\` unwrap 成 \`SessionFactory\`，然後 create session，得到 \`Session\` object 再 create native SQL 既 \`SQLQuery\` object。\r
-   \`setResultTransformer(Transformers.aliasToBean(PersonEntity.class))\`\r
    -   我地需要用 \`AliasToBeanResultTransformer\` 既 \`ResultTransformer\` 黎話畀 Hibernate 知我地想將 query result 轉化成某個特定 class 既 objects。\r
        -   否則，得到既結果就會係一個 \`List<Object[]>\` 既 object。\r
-   \`addScalar("firstName", StandardBasicTypes.STRING)\`\r
    -   我地需要自己 map query result 既 column，仲要話畀 Hibernate 知 data type。\r
    -   如果 column 有 \`_\`，需要畀一個冇 \`_\` 既 alias（\`first_name firstName\` 或者 \`first_name AS firstName\`）。\r
    -   \`addScalar\` 既第 \`1\` 個 argument 係用 SQL 裡面個 column 既 alias。\r
    -   如果 column 有 \`_\` 但係句 SQL 裡面冇畀 column alias 或者冇 call 岩 \`addScalar\`，咁就會令最後轉化出黎既 \`PersonEntity\` object 對應既 field value \`null\` 左。\r
-   \`setParameter\`、\`setParameterList\`\r
    -   呢啲 methods 係用黎將 values 對應返 prepared statement 既 parameters。\r
\r
#### 2.3.5.2 將結果轉化成 Java \`Map\`\r
\r
如果我地需要 dynamic 既 query result，即係 column 名係喺 compile time 既時候唔知既，咁我地可以用 \`AliasToEntityMapResultTransformer.INSTANCE\` 既 \`ResultTransformer\`。\r
\r
\`\`\`java\r
final List<Map<String, Object>> records = sessionFactory.getCurrentSession()\r
											.createSQLQuery("SELECT * FROM person")\r
											.setResultTransformer(AliasToEntityMapResultTransformer.INSTANCE)\r
											.list();\r
\`\`\`\r
\r
---\r
\r
# 3 參考資料\r
\r
-   [StackOverflow - How to pass parameters in a native query JPA](https://stackoverflow.com/questions/66071165/how-to-pass-parameters-in-a-native-query-jpa/66071251)\r
-   [StackOverflow - ResultTransformer with createSQLQuery forces no camelCase in entity fields](https://stackoverflow.com/questions/8136225/resulttransformer-with-createsqlquery-forces-no-camelcase-in-entity-fields)\r
`,XR=`# 1 Kafka 簡介\r
\r
Microservices 之間除左即時、同步既溝通，有啲情況下用異步（async）既溝通就已經足夠。而 Kafka 係一個同時支援 message queue + publish-subscribe 既工具。\r
\r
Kafka 既設計應用左 \`2\` 種 messaging 模式：\r
\r
|       模式        | 描述（以 Kafka 術語）                                           |\r
| :---------------: | --------------------------------------------------------------- |\r
| Publish-subscribe | 每個訊息都會 broadcast 去所有 consumer groups。                 |\r
|   Message queue   | 每個訊息喺每個 consumer group 都只會有 \`1\` 個 consumer 接收到。 |\r
\r
Kafka 強大之處：\r
\r
-   高性能、高吞吐量\r
-   支援 broker horizontal scaling\r
-   支援 producer horizontal scaling\r
    -   一個 topic 可以分成多個 partitions。\r
-   支援 consumer horizontal scaling\r
    -   多個 consumers 可以 form 成一個 consumer group。\r
-   作為一個 MQ，支援 consumer 重新啟動之後可以即時接收返斷線果陣 producer 所產生但又未被接收既訊息。\r
\r
註：Horizontal scaling 即係我地可以喺多過一部機器上面 deploy 一模一樣既 application，而呢啲機器以及 application 係唔知道其他機器既存在。咁做既目的係想避免有啲機器行行下突然 fail 左，影響業務。\r
\r
---\r
\r
# 2 安裝 Kafka\r
\r
## 2.1 本地（免安裝）\r
\r
[Kafka 官網 - Download](https://kafka.apache.org/downloads)\r
\r
建議將 Kafka 既 binaries 解壓縮去 \`C:/\`，因為如果條 path 太長，行 command 果陣可能會有 error。\r
\r
---\r
\r
## 2.2 Docker image\r
\r
### 2.2.1 ZooKeeper\r
\r
可以選擇：\r
\r
\`\`\`bash\r
docker image pull zookeeper\r
\`\`\`\r
\r
\`\`\`bash\r
docker image pull wurstmeister/zookeeper\r
\`\`\`\r
\r
\`\`\`bash\r
docker image pull confluentinc/cp-zookeeper\r
\`\`\`\r
\r
---\r
\r
### 2.2.2 Kafka\r
\r
可以選擇：\r
\r
\`\`\`bash\r
docker image pull wurstmeister/kafka\r
\`\`\`\r
\r
\`\`\`bash\r
docker image pull confluentinc/cp-kafka\r
\`\`\`\r
\r
---\r
\r
# 3 Commands\r
\r
Windows 版既 CLI 喺 \`bin/windows\` folder。\r
\r
如果想模擬到有多部機器同時運作，即係 horizontal scaling 既效果，穩陣啲可以用 Docker containers（保證獨立運行），而簡單啲既就可以複製成個 Kafka binaries 既 folder（不過其實複製啲 properties 檔已經足夠，因為啲數據檔案默認係儲存喺 \`/tmp\`（Windows 版就係 \`C:/tmp\`），而唔係儲存喺 Kafka 安裝檔既 folders 裡面）。\r
\r
## 3.1 ZooKeeper\r
\r
### 3.1.1 啟動\r
\r
\`\`\`bash\r
bin/zookeeper-server-start.sh config/zookeeper.properties\r
\`\`\`\r
\r
\`\`\`powershell\r
bin\\windows\\zookeeper-server-start.bat config\\zookeeper.properties\r
\`\`\`\r
\r
---\r
\r
## 3.2 Kafka broker\r
\r
想要模擬多部 broker 機器同時運作，就需要修改每個 broker 既 Kafka binaries 裡面既 \`config/server.properties\`：\r
\r
\`\`\`plaintext\r
# 唔同既 broker 要 assign 唔同既 ID\r
broker.id=9\r
\r
# 唔同既 broker 要 assign 唔同既 port\r
listeners=PLAINTEXT://:9999\r
\r
# 唔同既 broker 要 assign 唔同既 log directory\r
log.dirs=/tmp/kafka-logs-9\r
\`\`\`\r
\r
我地會起 \`2\`個 brokers：\r
\r
| Broker | \`broker.id\` | \`listeners\` 既 port | \`log.dirs\`          |\r
| :----: | :---------: | :-----------------: | ------------------- |\r
|   1    |    \`111\`    |       \`9991\`        | \`/tmp/kafka-logs-1\` |\r
|   2    |    \`222\`    |       \`9992\`        | \`/tmp/kafka-logs-2\` |\r
\r
註：\r
\r
-   Windows 既話都可以用上面既 log dir，啲 Kafka 數據會去左 \`C:/tmp\`。\r
-   因為有啲 \`--describe\` 既 commands 會顯示數字（例如列出所有 topics 會顯示 leaders、replicas、in-sync replicas），果啲數字其實係 broker ID。\r
    -   所以為左容易啲分辨，broker ID 可以用長啲既數字（只可以用純數字）。\r
\r
### 3.2.1 啟動\r
\r
\`\`\`bash\r
bin/kafka-server-start.sh config/server.properties\r
\`\`\`\r
\r
\`\`\`powershell\r
bin\\windows\\kafka-server-start.bat config\\server.properties\r
\`\`\`\r
\r
### 3.2.2 停止\r
\r
想要停止 broker 既話，一定要 gracefully shutdown broker。\r
\r
可以撳 \`Ctrl+C\`，佢會顯示 \`shut down completed\`。\r
\r
---\r
\r
## 3.3 Topic\r
\r
### 3.3.1 建立新 topic\r
\r
我地會起 \`1\` 個 topic，而呢個 topic 會有 \`2\` 個 partitions。\r
\r
我地可以喺個 ZooKeeper 度執行以下既 command：\r
\r
\`\`\`bash\r
bin/kafka-topics.sh --bootstrap-server localhost:9991,localhost:9992 --create --topic new-topic-name --partitions 2\r
\`\`\`\r
\r
\`\`\`powershell\r
bin\\windows\\kafka-topics.bat --bootstrap-server localhost:9991,localhost:9992 --create --topic new-topic-name --partitions 2\r
\`\`\`\r
\r
---\r
\r
### 3.3.2 列出所有 topics\r
\r
\`\`\`bash\r
bin/kafka-topics.sh --bootstrap-server localhost:9991,localhost:9992 --list\r
bin/kafka-topics.sh --bootstrap-server localhost:9991,localhost:9992 --describe\r
\`\`\`\r
\r
\`\`\`powershell\r
bin\\windows\\kafka-topics.bat --bootstrap-server localhost:9991,localhost:9992 --list\r
bin\\windows\\kafka-topics.bat --bootstrap-server localhost:9991,localhost:9992 --describe\r
\`\`\`\r
\r
---\r
\r
## 3.4 Kafka producer\r
\r
Kafka 既 producer 係有 retry 機制，默認既 producer 配置下係會無限 retry 發送訊息，而必須注意既係，喺默認既 producer 配置下，\`1\` 個 connection 最多可以有 \`5\` 個等待發送既訊息。而如果有發送失敗既情況，例如發送第一個訊息出去果陣失敗左，但係發送排喺後面既訊息成功左既話，呢個情況下就會令最終條 MQ 裡面既訊息既次序同本來唔同。所以有啲配置係好重要，一定要設定。\r
\r
\`config/producer.properties\`：\r
\r
\`\`\`plaintext\r
max.in.flight.requests.per.connection=1\r
\`\`\`\r
\r
參考資料：\r
\r
-   [Confluent - Producer Configurations - \`retries\`](https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#retries)\r
-   [Confluent - Producer Configurations - \`max.in.flight.requests.per.connection\`](https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#max-in-flight-requests-per-connection)\r
-   [Does Kafka really guarantee the order of messages?](https://blog.softwaremill.com/does-kafka-really-guarantee-the-order-of-messages-3ca849fd19d2)\r
\r
### 3.4.1 發送訊息\r
\r
Kafka 既訊息係 key-value pair。\r
\r
如果訊息需要順次序，有 \`2\` 個方法，視乎情況而用：\r
\r
| 場景                                           | 方法                                                                                                                                                                                                                       |\r
| ---------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| 所有訊息都要順次序。                           | 每個 topic 只有 \`1\` 個 partition，而每個 consumer group 亦只需要 \`1\` 個 consumer。                                                                                                                                         |\r
| 只需要相同業務 ID（例如用戶 ID）既訊息順次序。 | 每個 topic 可以有多個 partitions，但係每個訊息都要提供業務 ID（例如用戶 ID）作為 key，用黎計算應該落入邊個 partition。因為 producer partitioner 係用 hashing algorithm 黎計算，所以相同既 key 一定會落入相同既 partition。 |\r
\r
用下面既 command 就可以發送訊息：\r
\r
\`\`\`bash\r
bin/kafka-console-producer.sh --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --property parse.key=true --property key.separator="|"\r
\`\`\`\r
\r
\`\`\`powershell\r
bin\\windows\\kafka-console-producer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --property parse.key=true --property key.separator="|"\r
\`\`\`\r
\r
之後輸入訊息內容，例如 \`1|foo\`、\`2|bar\`，撳 \`Enter\` 掣可以立即發送訊息。想退出既話可以撳 \`Ctrl+C\`。\r
\r
我地可以喺 producer 度不停發送相同 key 既訊息，又夾雜下唔同 key 既訊息，睇下有冇出現同一個 key 既訊息畀每個 consumer group 裡面唔同既 consumers 接收既情況，但正常係唔會出現，因為 Kafka 保證相同 key 既訊息只會由每個 consumer group 裡面既同一個 consumer 接收，咁就保障到 message ordering。\r
\r
註：\r
\r
-   \`key.separator\` 默認係 tab。\r
-   \`--property parse.key=true --property key.separator="|"\` 係用黎話畀 producer 知我地既訊息既 key、value 用 \`|\` 黎分隔。\r
    -   如果唔加上呢 \`2\` 個配置，咁訊息既 key 就會係 \`null\`，而 producer partitioner 會用 round-robin 既方式將訊息發送去某個 partition。\r
\r
---\r
\r
## 3.5 Kafka consumer\r
\r
我地會起 \`2\` 個 consumer groups，各有 \`2\` 個 consumers，總共 \`4\` 個 consumers。\r
\r
每個 consumer group 都會收到一樣的訊息，而同一個 consumer group 裡面既每個 consumer 都會收到 Kafka assign 畀佢對應既 partition 既訊息。\r
\r
| Consumer | Group ID |\r
| :------: | :------: |\r
|    1     | \`group1\` |\r
|    2     | \`group1\` |\r
|    3     | \`group2\` |\r
|    4     | \`group2\` |\r
\r
### 3.5.1 接收訊息\r
\r
執行 \`4\` 次以下既 command：\r
\r
-   Consumer \`1\` 用 \`--consumer-property group.id=group1\`。\r
-   Consumer \`2\` 用 \`--consumer-property group.id=group1\`。\r
-   Consumer \`3\` 用 \`--consumer-property group.id=group2\`。\r
-   Consumer \`4\` 用 \`--consumer-property group.id=group2\`。\r
\r
\`\`\`bash\r
bin/kafka-console-consumer.sh --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --consumer-property group.id=group1\r
\`\`\`\r
\r
\`\`\`powershell\r
bin\\windows\\kafka-console-consumer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --consumer-property group.id=group1\r
\`\`\`\r
\r
---\r
\r
### 3.5.2 列出 consumer groups\r
\r
\`\`\`bash\r
bin/kafka-consumer-groups.sh --bootstrap-server localhost:9991,localhost:9992 --describe --all-groups\r
\`\`\`\r
\r
\`\`\`powershell\r
bin\\windows\\kafka-consumer-groups.bat --bootstrap-server localhost:9991,localhost:9992 --describe --all-groups\r
\`\`\`\r
\r
---\r
\r
# 4 測試\r
\r
先複製好所有安裝檔既 folders，然後跟次序啟用以下既 components：\r
\r
1. ZooKeeper\r
1. Broker 1\r
1. Broker 2\r
1. Producer 1\r
1. Producer 2\r
1. Consumer 1 (group 1)\r
1. Consumer 2 (group 1)\r
1. Consumer 3 (group 2)\r
1. Consumer 4 (group 2)\r
\r
![](blog/2021-09/kafka-cli/kafka-cli-binaries.png)\r
\r
## 4.1 相同數量既 partitions、consumers\r
\r
將以下既 command prompt script 保存做 \`start-all.bat\`，然後執行：\r
\r
\`\`\`powershell\r
@ECHO OFF\r
\r
PUSHD zookeeper\r
START bin\\windows\\zookeeper-server-start.bat config\\zookeeper.properties\r
POPD\r
\r
TIMEOUT /NOBREAK /T 8\r
\r
PUSHD broker-1\r
START bin\\windows\\kafka-server-start.bat config\\server.properties\r
POPD\r
\r
PUSHD broker-2\r
START bin\\windows\\kafka-server-start.bat config\\server.properties\r
POPD\r
\r
TIMEOUT /NOBREAK /T 8\r
\r
PUSHD zookeeper\r
CALL bin\\windows\\kafka-topics.bat --bootstrap-server localhost:9991,localhost:9992 --create --topic new-topic-name --partitions 2\r
CALL bin\\windows\\kafka-topics.bat --bootstrap-server localhost:9991,localhost:9992 --list\r
CALL bin\\windows\\kafka-topics.bat --bootstrap-server localhost:9991,localhost:9992 --describe\r
POPD\r
\r
START "Producer 1" producer-1\\bin\\windows\\kafka-console-producer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --property parse.key=true --property key.separator="|"\r
START "Producer 2" producer-2\\bin\\windows\\kafka-console-producer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --property parse.key=true --property key.separator="|"\r
\r
START "Group 1 - Consumer 1" consumer-1\\bin\\windows\\kafka-console-consumer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --consumer-property group.id=group1\r
START "Group 1 - Consumer 2" consumer-2\\bin\\windows\\kafka-console-consumer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --consumer-property group.id=group1\r
START "Group 2 - Consumer 1" consumer-3\\bin\\windows\\kafka-console-consumer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --consumer-property group.id=group2\r
START "Group 2 - Consumer 2" consumer-4\\bin\\windows\\kafka-console-consumer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --consumer-property group.id=group2\r
\r
TIMEOUT /NOBREAK /T 8\r
\r
PUSHD zookeeper\r
bin\\windows\\kafka-consumer-groups.bat --bootstrap-server localhost:9991,localhost:9992 --describe --all-groups\r
POPD\r
\r
PAUSE\r
\`\`\`\r
\r
之後發送訊息：\r
\r
1. Producer 1 發送 \`1|message should go to partition A\`。\r
1. Producer 1 發送 \`2|message should go to partition B\`。\r
1. Producer 2 發送 \`1|message should go to partition A (producer 2)\`。\r
1. Producer 2 發送 \`2|message should go to partition B (producer 2)\`。\r
\r
結果：\r
\r
-   唔會有一個 consumer 又收到 \`partition A\` 既訊息，又收到 \`partition B\` 既訊息。\r
\r
解釋：\r
\r
-   因為每個 consumer group 裡面既 consumer 數量同 partition 數量一樣，所以我地見到訊息 ID 係 \`1\` 既訊息只會去同一個 consumer，而訊息 ID 係 \`2\` 既訊息就會去另一個 consumer。\r
\r
![](blog/2021-09/kafka-cli/producers-publish-messages.png)\r
\r
![](blog/2021-09/kafka-cli/consumers-receive-messages.png)\r
\r
---\r
\r
## 4.2 Partition 數量多過 consumer（只維持一段時間）\r
\r
關於呢個測試：\r
\r
-   承接上面既測試，我地可以停止某一個 consumer，令到佢既 consumer group 得返 \`1\` 個 consumer。\r
-   因為 partitions 有 \`2\` 個，但係呢個 consumer group 只有 \`1\` 個 consumer，咁之後既所有訊息發送去呢個 consumer group 既時候都只會發送到呢 \`1\` 個 consumer 度。\r
-   不過，過一排之後，當呢個 consumer group 回復返係 \`2\` 個 consumers，咁之後既所有訊息發送去呢個 consumer group 既時候又會再次平均分配到呢 \`2\` 個 consumers 度。\r
\r
具體既測試步驟：\r
\r
1. 承接上面既測試，我地而家有 \`2\` 個 consumer groups，各有 \`2\` 個 consumers，總共有 \`4\` 個 consumers。\r
1. 喺 consumer \`3\`（group 2）既 command prompt window 度撳 \`Ctrl+C\`。\r
1. 喺任意既一個 producer 發送：\`1|message should go to partition A (testing single consumer in group)\`。\r
1. 喺任意既一個 producer 發送：\`2|message should go to partition B (testing single consumer in group)\`。\r
1. 檢查 consumer \`4\`（group 2）既 command prompt window，應該會見到佢收到曬 \`2\` 個訊息。\r
1. 喺 consumer \`3\`（group 2）既 command prompt window 度執行返啟動既 command。\r
1. 喺任意既一個 producer 發送：\`1|message should go to partition A (testing two consumers in group again)\`。\r
1. 喺任意既一個 producer 發送：\`2|message should go to partition B (testing two consumers in group again)\`。\r
1. 檢查 consumer \`3\`、\`4\`（group 2）既 command prompt windows，應該會見到佢地各自都收到 \`1\` 個訊息。\r
1. 檢查 consumer \`1\`、\`2\`（group 1）既 command prompt windows，應該會見到佢地各自都收到 \`2\` 個訊息。\r
    - 收開 \`partition A\` 訊息既 consumer 會收到呢個測試新增既 \`2\` 個 \`partition A\` 訊息。\r
    - 收開 \`partition B\` 訊息既 consumer 會收到呢個測試新增既 \`2\` 個 \`partition B\` 訊息。\r
\r
註：\r
\r
-   就算 consumer \`3\` 回復運作，佢都唔一定會收返同最開始相同既 partition 既訊息，而係可能會同 consumer \`4\` 交換左。\r
    -   不過唔需要擔心，因為相同 partition 既訊息都仲係保持到 message ordering。\r
\r
![](blog/2021-09/kafka-cli/consumers-receive-messages-2.png)\r
\r
---\r
\r
# 5 參考資料\r
\r
-   [What is Zookeeper and why is it needed for Apache Kafka?](https://www.cloudkarafka.com/blog/cloudkarafka-what-is-zookeeper.html)\r
-   [Confluent - Single machine, multi-broker and multi-cluster configurations](https://docs.confluent.io/platform/current/kafka/kafka-basics.html#single-machine-multi-broker-and-multi-cluster-configurations)\r
-   [A Visual Understanding to Ensuring Your Kafka Data is (Literally) in Order](https://www.instaclustr.com/a-visual-understanding-to-ensuring-your-kafka-data-is-literally-in-order/)\r
-   [Confluent - Producer Configurations - \`partitioner.class\`](https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#partitioner-class)\r
-   [Kafka GitHub - \`DefaultPartitioner.java\`](https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/producer/internals/DefaultPartitioner.java)\r
-   [Custom Partitioner in Kafka: Let's Take a Quick Tour!](https://dzone.com/articles/custom-partitioner-in-kafka-lets-take-quick-tour)\r
`,ZR=`# 1 Markdown 簡介\r
\r
Markdown（\`.md\`）係一種純文字既檔案，對比起冇任何格式既純文字（\`.txt\`），Markdown 既格式標準畀我地用簡單符號去表達文字格式。\r
\r
GitHub 既 \`README.md\` 就係最佳例子。\r
\r
---\r
\r
# 2 寫法\r
\r
Markdown 既世界，任何兩個 components 之間都應該要隔至少一行。\r
\r
## 2.1 一般文字\r
\r
Code：\r
\r
\`\`\`markdown\r
呢一段係一般文字。呢一段係一般文字。呢一段係一般文字。\r
呢一段係一般文字。呢一段係一般文字。呢一段係一般文字。\r
呢一段係一般文字。呢一段係一般文字。呢一段係一般文字。\r
呢一段係一般文字。呢一段係一般文字。呢一段係一般文字。\r
呢一段係一般文字。呢一段係一般文字。呢一段係一般文字。\r
\r
開新段落要隔一行。開新段落要隔一行。開新段落要隔一行。\r
開新段落要隔一行。開新段落要隔一行。開新段落要隔一行。\r
開新段落要隔一行。開新段落要隔一行。開新段落要隔一行。\r
開新段落要隔一行。開新段落要隔一行。開新段落要隔一行。\r
開新段落要隔一行。開新段落要隔一行。開新段落要隔一行。\r
\`\`\`\r
\r
效果：\r
\r
呢一段係一般文字。呢一段係一般文字。呢一段係一般文字。\r
呢一段係一般文字。呢一段係一般文字。呢一段係一般文字。\r
呢一段係一般文字。呢一段係一般文字。呢一段係一般文字。\r
呢一段係一般文字。呢一段係一般文字。呢一段係一般文字。\r
呢一段係一般文字。呢一段係一般文字。呢一段係一般文字。\r
\r
開新段落要隔一行。開新段落要隔一行。開新段落要隔一行。\r
開新段落要隔一行。開新段落要隔一行。開新段落要隔一行。\r
開新段落要隔一行。開新段落要隔一行。開新段落要隔一行。\r
開新段落要隔一行。開新段落要隔一行。開新段落要隔一行。\r
開新段落要隔一行。開新段落要隔一行。開新段落要隔一行。\r
\r
---\r
\r
## 2.2 格式化文字\r
\r
Code：\r
\r
\`\`\`markdown\r
**粗體文字**\r
\r
_斜體文字_\r
\`\`\`\r
\r
效果：\r
\r
**粗體文字**\r
\r
_斜體文字_\r
\r
---\r
\r
## 2.3 標題\r
\r
Code：\r
\r
\`\`\`markdown\r
# 1 H1 標題\r
\r
## 1.1 H2 標題\r
\r
### 1.1.1 H3 標題\r
\r
#### 1.1.1.1 H4 標題\r
\`\`\`\r
\r
---\r
\r
## 2.4 分隔線\r
\r
Code：\r
\r
\`\`\`markdown\r
---\r
\`\`\`\r
\r
---\r
\r
## 2.5 Code\r
\r
Code：\r
\r
\`\`\`markdown\r
This \`code\` is inline.\r
\`\`\`\r
\r
\`\`\`\`markdown\r
\`\`\`js\r
console.log("This is a code block.");\r
\`\`\`\r
\`\`\`\`\r
\r
\`\`\`\`markdown\r
\`\`\`java\r
System.out.println("This is a code block.");\r
\`\`\`\r
\`\`\`\`\r
\r
註：可以指明用邊隻語言做 syntax highlighting。\r
\r
效果：\r
\r
This \`code\` is inline.\r
\r
\`\`\`js\r
console.log("This is a code block.");\r
\`\`\`\r
\r
\`\`\`java\r
System.out.println("This is a code block.");\r
\`\`\`\r
\r
---\r
\r
## 2.6 引用\r
\r
Code：\r
\r
\`\`\`markdown\r
> Someone said,\r
>\r
> （可以有空行）\r
> Something\r
\`\`\`\r
\r
效果：\r
\r
> Someone said,\r
>\r
> （可以有空行）\r
> Something\r
\r
---\r
\r
## 2.7 List\r
\r
Code：\r
\r
\`\`\`markdown\r
-   Bullet point 1\r
    -   Inner\r
-   [x] Checklist item 1 (checked)\r
-   [ ] Checklist item 2 (unchecked)\r
\`\`\`\r
\r
\`\`\`markdown\r
1. 第一點\r
1. 數字會自動加上去\r
1. 顯示出黎就係 1、2、3\r
\`\`\`\r
\r
效果：\r
\r
-   Bullet point 1\r
    -   Inner\r
-   [x] Checklist item 1 (checked)\r
-   [ ] Checklist item 2 (unchecked)\r
\r
1. 第一點\r
1. 數字會自動加上去\r
1. 顯示出黎就係 1、2、3\r
\r
---\r
\r
## 2.8 Table\r
\r
Code：\r
\r
\`\`\`markdown\r
| Table header - Column 1 | Table header - Column 2 |\r
| ----------------------- | ----------------------- |\r
| Record 1 - Column 1     | Record 1 - Column 2     |\r
| Record 2 - Column 1     | Record 2 - Column 2     |\r
\`\`\`\r
\r
效果：\r
\r
| Table header - Column 1 | Table header - Column 2 |\r
| ----------------------- | ----------------------- |\r
| Record 1 - Column 1     | Record 1 - Column 2     |\r
| Record 2 - Column 1     | Record 2 - Column 2     |\r
\r
---\r
\r
## 2.9 URL\r
\r
Code：\r
\r
\`\`\`markdown\r
[My e-Portfolio](https://blackr1234.github.io/eportfolio/#/)\r
\`\`\`\r
\r
效果：\r
\r
[My e-Portfolio](https://blackr1234.github.io/eportfolio/#/)\r
\r
---\r
\r
## 2.10 圖片\r
\r
Code：\r
\r
\`\`\`markdown\r
![](https://blackr1234.github.io/eportfolio/blog/2021-09/markdown-basics/thumbnail.svg)\r
\`\`\`\r
\r
效果：\r
\r
![](/blog/2021-09/markdown-basics/thumbnail.svg)\r
\r
---\r
\r
## 2.11 HTML\r
\r
部分 Markdown parser 支援 render HTML tags，甚或 CSS（\`<style>\`）。\r
\r
---\r
\r
# 3 推薦 IDE\r
\r
要將 Markdown 檔裡面既格式顯示出黎，就需要可以睇得明 Markdown syntax 既檢視工具：\r
\r
-   Visual Studio Code 支援 Markdown 即時 preview\r
    -   可以裝埋 Prettier 去自動 format \`.md\` 檔既內容\r
-   Chrome 可以安裝 Markdown Viewer\r
    -   設定 COMPILER 用 REMARK，開啟 gfm 模組\r
    -   設定 CONTENT 開啟 autoreload、toc\r
`,eD=`# 1 項目背景\r
\r
我地想寫一個可以本地執行既 CLI（command line interface）小工具，要有以下功能：\r
\r
| 功能 | 描述                                                                         |\r
| :--: | ---------------------------------------------------------------------------- |\r
| 加密 | 以用戶提供既密碼，加密一個檔案（任何檔案格式），輸出一個純文字檔案。         |\r
| 解密 | 以用戶提供既密碼，解密一個由呢個工具既加密功能得出既純文字檔案，輸出原檔案。 |\r
\r
而加密、解密功能都會用上 AES——最多人用既 symmetric key algorithm，而 CryptoJS 作為一個熱門既 JavaScript 加密 package 就可以提供到呢一個加密算法。\r
\r
---\r
\r
# 2 動手寫\r
\r
## 2.1 NPM dependencies\r
\r
\`package.json\`：\r
\r
\`\`\`json\r
{\r
	"name": "aes-encryptor-decryptor",\r
	"version": "1.0.0",\r
	"private": true,\r
	"type": "module",\r
	"dependencies": {\r
		"crypto-js": "^4.1.1"\r
	}\r
}\r
\`\`\`\r
\r
---\r
\r
## 2.2 寫 JavaScript code\r
\r
### 2.2.1 通用既 utility\r
\r
我地會用 AES（symmetric key）黎加密數據，再用 Base64 表達。\r
\r
\`utils.js\`：\r
\r
\`\`\`js\r
import CryptoJS from "crypto-js";\r
\r
const encrypt = (data, secret) => CryptoJS.AES.encrypt(data, secret).toString();\r
\r
const decrypt = (data, secret) => CryptoJS.AES.decrypt(data, secret).toString(CryptoJS.enc.Utf8);\r
\r
export default { encrypt, decrypt };\r
export { encrypt, decrypt };\r
\`\`\`\r
\r
---\r
\r
### 2.2.2 加密功能\r
\r
加密功能需要用戶提供：\r
\r
1. 要加密既檔案既路徑\r
1. 輸出檔案既路徑\r
1. 密碼\r
\r
\`enc.js\`：\r
\r
\`\`\`js\r
import { readFile, writeFile } from "fs/promises";\r
import { encrypt } from "./utils.js";\r
\r
const main = async () => {\r
	const args = process.argv.slice(2); // 一定係 2\r
\r
	if (args.length < 3) {\r
		console.log(\r
			[\r
				"Required 3 args:",\r
				"",\r
				"    enc <I> <O> <P>",\r
				"",\r
				"I: Input file path",\r
				"O: Output file path",\r
				"P: Password",\r
			].join("\\n")\r
		);\r
		return;\r
	}\r
\r
	const inputFilePath = args.shift();\r
	const outputFilePath = args.shift();\r
	const secret = args.shift();\r
\r
	const data = await readFile(inputFilePath, { encoding: "base64" });\r
	const encrypted = encrypt(data, secret);\r
	await writeFile(outputFilePath, encrypted, { encoding: "utf8" });\r
\r
	console.log("Done encryption!");\r
};\r
\r
main();\r
\`\`\`\r
\r
---\r
\r
### 2.2.3 解密功能\r
\r
解密功能需要用戶提供：\r
\r
1. 已加密既檔案既路徑\r
1. 輸出檔案既路徑\r
1. 密碼\r
\r
\`dec.js\`：\r
\r
\`\`\`js\r
import { readFile, writeFile } from "fs/promises";\r
import { decrypt } from "./utils.js";\r
\r
const main = async () => {\r
	const args = process.argv.slice(2); // 一定係 2\r
\r
	if (args.length < 3) {\r
		console.log(\r
			[\r
				"Required 3 args:",\r
				"",\r
				"    dec <I> <O> <P>",\r
				"",\r
				"I: Input file path",\r
				"O: Output file path",\r
				"P: Password",\r
			].join("\\n")\r
		);\r
		return;\r
	}\r
\r
	const inputFilePath = args.shift();\r
	const outputFilePath = args.shift();\r
	const secret = args.shift();\r
\r
	const data = await readFile(inputFilePath, { encoding: "utf8" });\r
	const decrypted = decrypt(data.trim(), secret);\r
	await writeFile(outputFilePath, decrypted, { encoding: "base64" });\r
\r
	console.log("Done decryption!");\r
};\r
\r
main();\r
\`\`\`\r
\r
---\r
\r
# 3 測試\r
\r
## 3.1 測試加密功能\r
\r
\`\`\`bash\r
node enc "/path/to/raw.file" "/path/to/encrypted.file" "password"\r
\`\`\`\r
\r
---\r
\r
## 3.2 測試解密功能\r
\r
\`\`\`bash\r
node dec "/path/to/encrypted.file" "/path/to/raw.file" "password"\r
\`\`\`\r
\r
---\r
\r
# 4 筆記\r
\r
## 4.1 用 \`import\` 而非 \`require\` 引用 modules\r
\r
\`require\` 係 CommonJS 既寫法，可以喺 runtime 根據條件即時 load module；而 \`import\` 就係 ECMAScript 既寫法，喺 compile 既時候就會 load，亦冇得根據條件 load 或唔 load module。\r
\r
NodeJS 默認係用 CommonJS，除非喺 \`package.json\` 度配置：\r
\r
\`\`\`json\r
{\r
	"type": "module"\r
}\r
\`\`\`\r
\r
---\r
\r
## 4.2 \`process.argv\`\r
\r
頭 \`2\` 個 values 係 NodeJS 個 binary 既 file path 以及我地個 JavaScript 程式既 file path，所以要去除頭 \`2\` 個 values：\r
\r
\`\`\`js\r
const args = process.argv.slice(2); // 一定係 2\r
\`\`\`\r
\r
參考資料：\r
\r
-   [NodeJS 官網 - process.argv](https://nodejs.org/docs/latest/api/process.html#process_process_argv)\r
\r
---\r
\r
## 4.3 \`fs/promises\`\r
\r
NodeJS 自帶既 \`fs\` module 提供左讀寫檔案既功能，不過啲 API 就係 async callback 既寫法黎既。\r
\r
如果我地想得到 \`Promise\`，然後用 \`await\` 去令佢返回結果，可以用 NodeJS 自帶既 \`fs/promises\` module。\r
\r
參考資料：\r
\r
-   [NodeJS 官網 - \`fs.readFile\`](https://nodejs.org/api/fs.html#fs_fs_readfile_path_options_callback)\r
-   [NodeJS 官網 - \`fs.writeFile\`](https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback)\r
-   [NodeJS 官網 - \`fsPromises.readFile\`](https://nodejs.org/api/fs.html#fs_fspromises_readfile_path_options)\r
-   [NodeJS 官網 - \`fsPromises.writeFile\`](https://nodejs.org/api/fs.html#fs_fspromises_writefile_file_data_options)\r
-   [MDN - \`Promise\`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)\r
-   [MDN - \`await\`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await)\r
\r
---\r
\r
## 4.4 將 config 放喺 \`.env\`\r
\r
如果我地想用一個檔案黎 config password，我地可以喺 project root folder 建立一個 \`.env\` 檔，然後將 config 寫落去。不過我地需要安裝 NPM library \`dotenv\` 先可以將 \`.env\` 檔裡面既 key-value pairs 讀入 \`process.env\`，然後喺 JavaScript code 裡面使用。\r
\r
\`.env\`：\r
\r
\`\`\`plaintext\r
password=1234\r
\`\`\`\r
\r
為 project 添加 dependency：\r
\r
\`\`\`bash\r
npm i dotenv\r
\`\`\`\r
\r
喺 JavaScript code 度讀取 \`.env\` 既 config：\r
\r
\`\`\`js\r
import dotenv from "dotenv";\r
dotenv.config();\r
\r
console.log(process.env.password); // 1234\r
\`\`\`\r
\r
參考資料：\r
\r
-   [NPM - \`dotenv\`](https://www.npmjs.com/package/dotenv)\r
`,nD=`# 1 Spring AOP 簡介\r
\r
AOP 即係 aspect-oriented programming，係一個畀我地從其他角度（如業務角度、功能角度）加插執行代碼既一個設計。簡單啲講，Spring AOP 就係一個做法，可以方便我地做到某啲特別既操作，亦唔需要改到原來既 code，而呢啲功能可能係需要針對一堆相類似既 classes，例如係 service layer 既 classes（帶 \`@Service\`），去做一啲微細又或者毀滅性既操作。\r
\r
## 1.1 Spring AOP 可以進行既操作\r
\r
-   喺一個 Spring bean 既 method 被 call 之前做啲野\r
    -   截取 input argument values\r
-   決定 call 啲乜野、點樣 call\r
    -   唔 call 原先個 method\r
    -   call 原先個 method，但 supply 唔同既 argument values\r
-   喺一個 Spring bean 既 method 被 call 之後做啲野\r
    -   截取 output return value\r
\r
---\r
\r
## 1.2 Spring AOP 既應用\r
\r
### 1.2.1 Spring Framework 本身\r
\r
Spring 既 declarative transaction management 就正正係應用左 Spring AOP，亦即係我地寫 JPA/Hibernate 果陣用到既 \`@Transactional\`，佢既背後就係由 Spring AOP 實現。\r
\r
Spring 官方 doc 裡面既 [Declarative Transaction Management](https://docs.spring.io/spring-framework/docs/current/reference/html/data-access.html#transaction-declarative) 提到：\r
\r
> The Spring Framework's declarative transaction management is made possible with Spring aspect-oriented programming (AOP).\r
\r
> The most important concepts to grasp with regard to the Spring Framework's declarative transaction support are that this support is enabled [via AOP proxies](https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#aop-understanding-aop-proxies) and that the transactional advice is driven by metadata (currently XML- or annotation-based).\r
\r
---\r
\r
### 1.2.2 自定義應用場景\r
\r
而其他應用場景有：\r
\r
| 應用場景 | 描述                                                                   |\r
| :------: | ---------------------------------------------------------------------- |\r
| Logging  | 截取 input 及 output，用 logger log 低，方便 debug 或者 troubleshoot。 |\r
| 數據校驗 | 對特定參數進行校驗。                                                   |\r
| Mocking  | 取締原來既 output。                                                    |\r
\r
至於做 authentication，即係去 check 下個 HTTP request 來自既用戶登入左未、session 係咪 valid，我地就可以用 filters，例如 \`OncePerRequestFilter\`。\r
\r
---\r
\r
# 2 動手使用 Spring AOP 做 logging\r
\r
## 2.1 用 Spring AOP 做既原因\r
\r
試想像下而家有一個 Spring web application，裡面有好多唔同既 service classes，如果我地想對佢地加 logging，去 log 所有 \`public\` 既 service methods 被 call 果陣既 arguments 同埋 return 返出去既 value。\r
\r
我地與其逐個 service method 咁改，倒不如將 logging 既 code 放喺同一個位度，除左方便，咁亦都可以令我地個系統既設計變得 modular，因為 logging 既 code 寫埋一邊，而 service classes 裡面就只有 business logic，河水不犯井水。\r
\r
---\r
\r
## 2.2 Maven dependencies\r
\r
Spring 本身都已經有引入 Spring AOP，因為 Spring AOP 係 Spring 既核心功能，好多其他功能都係基於 Spring AOP，例如 JPA 既 transactions，所以唔需要特登加 \`spring-boot-starter-aop\` 既 dependency。\r
\r
\`\`\`xml\r
<?xml version="1.0" encoding="UTF-8"?>\r
<project xmlns="http://maven.apache.org/POM/4.0.0"\r
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\r
    <modelVersion>4.0.0</modelVersion>\r
\r
    <groupId>com.michael</groupId>\r
    <artifactId>Spring-Boot-2-Playground</artifactId>\r
    <version>1.0.0</version>\r
    <packaging>jar</packaging>\r
\r
    <name>Spring-Boot-2-Playground</name>\r
    <description>Spring Boot 2 Playground</description>\r
\r
    <parent>\r
        <groupId>org.springframework.boot</groupId>\r
        <artifactId>spring-boot-starter-parent</artifactId>\r
        <version>2.7.15</version>\r
    </parent>\r
\r
    <properties>\r
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r
        <javac.source>11</javac.source>\r
        <javac.target>11</javac.target>\r
        <maven.compiler.target>11</maven.compiler.target>\r
        <maven.compiler.source>11</maven.compiler.source>\r
    </properties>\r
\r
    <dependencies>\r
        <dependency>\r
            <groupId>org.springframework.boot</groupId>\r
            <artifactId>spring-boot-starter-web</artifactId>\r
        </dependency>\r
        <dependency>\r
            <groupId>org.springframework.boot</groupId>\r
            <artifactId>spring-boot-starter-aop</artifactId>\r
        </dependency>\r
\r
        <dependency>\r
            <groupId>org.springframework.boot</groupId>\r
            <artifactId>spring-boot-devtools</artifactId>\r
        </dependency>\r
    </dependencies>\r
\r
    <build>\r
        <plugins>\r
            <plugin>\r
                <groupId>org.springframework.boot</groupId>\r
                <artifactId>spring-boot-maven-plugin</artifactId>\r
                <configuration>\r
                    <mainClass>code.MainApplication</mainClass>\r
                </configuration>\r
                <executions>\r
                    <execution>\r
                        <goals>\r
                            <goal>repackage</goal>\r
                        </goals>\r
                    </execution>\r
                </executions>\r
            </plugin>\r
        </plugins>\r
    </build>\r
</project>\r
\`\`\`\r
\r
---\r
\r
## 2.3 寫 Java code\r
\r
Project structure：\r
\r
-   \`src/main/java\`\r
    -   \`/code\`\r
        -   \`/controller\`\r
            -   \`HomeController.java\`\r
        -   \`/service\`\r
            -   \`HomeService.java\`\r
            -   \`ServiceAspect.java\`\r
        -   \`MainApplication.java\`\r
\r
---\r
\r
### 2.3.1 Application 入口\r
\r
\`MainApplication.java\`：\r
\r
\`\`\`java\r
@SpringBootApplication\r
public class MainApplication {\r
\r
    public static void main(String[] args) {\r
        SpringApplication.run(MainApplication.class, args);\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
### 2.3.2 Controller layer\r
\r
\`HomeController.java\`：\r
\r
\`\`\`java\r
@RestController\r
public class HomeController {\r
\r
    @Autowired\r
    HomeService homeService;\r
\r
    @GetMapping("/{name}")\r
    public String greet(@PathVariable("name") String name) {\r
        return homeService.greet(name);\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
### 2.3.3 Service layer\r
\r
\`HomeService.java\`：\r
\r
\`\`\`java\r
@Service\r
public class HomeService {\r
\r
    public String greet(String name) {\r
        return "Hi, " + name;\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
### 2.3.4 AOP \`@Aspect\` component\r
\r
\`ServiceAspect.java\`：\r
\r
\`\`\`java\r
@Slf4j\r
@Aspect\r
@Component\r
public class ServiceAspect {\r
\r
    @Around("execution(* code.service.*.*(..))")\r
    public Object logging(ProceedingJoinPoint joinPoint) throws Throwable {\r
\r
        final List<Object> args = Arrays.asList(joinPoint.getArgs());\r
        final MethodSignature method = (MethodSignature) joinPoint.getSignature();\r
        final Class<?> returnType = method.getReturnType();\r
        final String methodName = method.getMethod().getName();\r
        final String className = method.getDeclaringType().getSimpleName();\r
\r
        log.info("{}.{} is called. Arguments: {}", className, methodName, args);\r
\r
        try {\r
            final Object returnValue = joinPoint.proceed();\r
\r
            log.info("{}.{} returns [class: {}]: {}", className, methodName, returnType.getCanonicalName(), returnValue);\r
\r
            return returnValue;\r
        } catch (Throwable e) {\r
            log.info("{}.{} throws exception [class: {}].", className, methodName, e.getClass(), e);\r
            throw e;\r
        }\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
## 2.4 測試\r
\r
### 2.4.1 啟動 Spring Boot web application\r
\r
執行下面既 command，或者喺 IDE 裡面 run \`MainApplication\` 既 \`main\` method：\r
\r
\`\`\`bash\r
mvn spring-boot:run\r
\`\`\`\r
\r
---\r
\r
### 2.4.2 Call API\r
\r
執行下面既 command，或者喺 Postman 裡面 call \`GET localhost:8080/mick\`：\r
\r
\`\`\`bash\r
curl --request GET "localhost:8080/mick"\r
\`\`\`\r
\r
---\r
\r
### 2.4.3 檢視結果 + 討論\r
\r
留意 Spring Boot 既 console log，我地會見到：\r
\r
\`\`\`plaintext\r
HomeService.greet is called. Arguments: [mick]\r
HomeService.greet returns [class: java.lang.String]: Hi, mick\r
\`\`\`\r
\r
呢個就係 demo 緊我地點樣喺 service layer 被用到既時候，用 Spring AOP 黎 log 低 input 同 output。\r
\r
同樣地，我地都可以針對 controller layer 或者 JPA 既 repository layer 去做一啲處理。我地只需要修改 \`@Around("execution(* code.xxxxxx.*.*(..))")\` 既 package，就可以對呢個 package 裡面既所有 Spring components 做相同既處理。\r
\r
如果想寫一個 method 但係針對多過一個 package，咁我地可以用 \`||\` operator，將幾個 \`execution()\` 駁埋一齊：\r
\r
\`\`\`java\r
@Around(\r
          "execution(* code.controller.*.*(..))"\r
    + " || execution(* code.service.*.*(..))"\r
)\r
public Object around(ProceedingJoinPoint joinPoint) throws Throwable {\r
    // ...\r
}\r
\`\`\`\r
`,rD=`# 1 Redis 簡介\r
\r
一般既 web applications 都會將最重要既資料（例如客戶資料、交易數據）放喺一個或者多個（如果係 microservice architecture）RDBMS 既 databases 裡面，而呢啲 databases 既資料都可以被視作為 single source of truth。不過，資料可以分好多種，除左最重要、改既話一定要直接改 database 既紀錄果啲，仲有一啲比如係用戶網頁登入既 session states、多國語言既翻譯文本，或者係一啲基本上都唔會點改變既業務配置或者程序配置。為左減少 database 既存取、加快查詢速度，我地可以用唔同既 caching library，例如 Redis、Memcached、Ehcache、Caffeine。\r
\r
關於 Redis：\r
\r
-   係一個 in-memory database。\r
    -   佢既 data 都可以 save 落 disk（例如 Redis server shutdown 果陣，或者用 Redis command）。\r
-   資料可以同時畀好多個 Redis client 既 application instances 去存取，大家存取到既資料都係一樣既。\r
-   支援 transaction，隔離狀態咁一次過執行多個 commands，但係就唔 ACID（大概只可以做到 isolation，因為唔支援 rollback）。\r
-   可以建立多個 replicas 以及 sentinels 去達到 high availability。\r
-   支援搭建 cluster 做 distributed cache。\r
-   可以視為一個好快既以讀取為主既 key-value database。\r
\r
---\r
\r
# 2 安裝\r
\r
## 2.1 Docker image\r
\r
\`\`\`bash\r
docker container run -d --rm -p 6379:6379 -v "C:/docker-data/redis:/data" --name redis redis:latest redis-server --save 10 1 --requirepass redispw\r
\`\`\`\r
\r
Redis Docker image 裡面已經包含 Redis CLI，所以我地只需要接連入去個 container 既 CLI 就可以用到。\r
\r
連接 Redis CLI：\r
\r
-   方法一\r
    1.  去 Redis Docker container 頁面既右上角果度按 CLI 圖示\r
    1.  彈出黎既 CLI 視窗已經連接左 Redis Docker container 既 CLI，我地可以執行：\r
        \`\`\`bash\r
        redis-cli -a redispw\r
        \`\`\`\r
-   方法二\r
    1.  喺 Windows Command Prompt 或者 macOS Terminal 執行：\r
        \`\`\`bash\r
        docker container exec -it <redis container name/ID> redis-cli -a redispw\r
        \`\`\`\r
\r
---\r
\r
## 2.2 Windows（免安裝）\r
\r
1. 去 [tporadowski/redis GitHub](https://github.com/tporadowski/redis/releases) 下載 ZIP 版既 Redis server。\r
1. 解壓縮個 ZIP 檔。\r
1. 執行 command：\`redis-server.exe redis.windows.conf\`\r
\r
---\r
\r
## 2.3 macOS（Homebrew）\r
\r
1. 執行 command：\`brew install redis\`\r
1. 執行 command：\`redis-server\`\r
\r
---\r
\r
# 3 動手寫\r
\r
Project setup：\r
\r
-   Spring Boot（web）\r
-   JPA／Hibernate\r
-   MySQL 或 MariaDB\r
-   Redis\r
\r
Project structure：\r
\r
-   \`src/main/java\`\r
    -   \`/code\`\r
        -   \`/controller\`\r
            -   \`PersonController.java\`\r
        -   \`/entity\`\r
            -   \`PersonEntity.java\`\r
        -   \`/repo\`\r
            -   \`PersonRepo.java\`\r
        -   \`/service\`\r
            -   \`PersonService.java\`\r
        -   \`MainApplication.java\`\r
        -   \`RedisConfig.java\`\r
-   \`src/main/resources\`\r
    -   \`/cloud\`\r
        -   \`application.yml\`\r
    -   \`/local\`\r
        -   \`application.yml\`\r
\r
## 3.1 Maven dependencies\r
\r
-   新、舊版本既 Spring Data Redis（由 Spring Boot Starter Data Redis 引入）對於透過 annotations 黎做 Redis caching 既差異：\r
    -   新版 \`2.x\` 既 \`RedisCacheManager\` 裡面用到 \`RedisCacheConfiguration\`，所以係用 \`RedisCacheConfiguration\` 黎配置個別 cache，如果直接配置 \`RestTemplate\` bean 係唔會起到作用。\r
    -   舊版 \`1.x\` 係直接配置 \`RestTemplate\` bean。\r
-   新、舊版本既 Spring Boot Starter Data Redis 引入既 Redis client 既差異：\r
    -   Spring Boot Starter Data Redis \`1.x\` 默認用 Jedis，冇引入 Lettuce 既 dependencies。\r
    -   Spring Boot Starter Data Redis \`2.x\`、\`3.x\` 默認用 Lettuce，冇引入 Jedis 既 dependencies。\r
-   新、舊版本既 Spring Data Redis 配置既差異：\r
    -   Spring Boot \`1.x\`、\`2.x\` 既配置係以 \`spring.redis\` 開頭。\r
    -   Spring Boot \`3.x\` 既配置係以 \`spring.data.redis\` 開頭。\r
-   我地會用 MySQL／MariaDB 作為 database。\r
-   我地會用 Maven profiles。\r
    -   本地用 H2 database。\r
    -   生產環境用 MySQL。\r
\r
\`\`\`xml\r
<parent>\r
	<groupId>org.springframework.boot</groupId>\r
	<artifactId>spring-boot-starter-parent</artifactId>\r
	<version>3.2.5</version>\r
</parent>\r
\r
<dependencies>\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-web</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-data-jpa</artifactId>\r
	</dependency>\r
	<dependency>\r
		<groupId>com.mysql</groupId>\r
		<artifactId>mysql-connector-j</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-data-redis</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.projectlombok</groupId>\r
		<artifactId>lombok</artifactId>\r
		<scope>provided</scope>\r
	</dependency>\r
</dependencies>\r
\r
<profiles>\r
	<profile>\r
		<id>local</id>\r
		<build>\r
			<resources>\r
				<resource>\r
					<directory>src/main/resources/local</directory>\r
				</resource>\r
			</resources>\r
		</build>\r
		<dependencies>\r
			<dependency>\r
				<groupId>com.h2database</groupId>\r
				<artifactId>h2</artifactId>\r
			</dependency>\r
		</dependencies>\r
	</profile>\r
\r
	<profile>\r
		<id>cloud</id>\r
		<activation>\r
			<activeByDefault>true</activeByDefault>\r
		</activation>\r
		<build>\r
			<resources>\r
				<resource>\r
					<directory>src/main/resources/cloud</directory>\r
				</resource>\r
			</resources>\r
		</build>\r
		<dependencies>\r
			<dependency>\r
				<groupId>com.microsoft.sqlserver</groupId>\r
				<artifactId>mssql-jdbc</artifactId>\r
			</dependency>\r
		</dependencies>\r
	</profile>\r
</profiles>\r
\`\`\`\r
\r
---\r
\r
## 3.2 Application 配置\r
\r
\`src/main/resources/cloud/application.yml\`：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
spring:\r
  jpa:\r
    show-sql: true\r
    open-in-view: false\r
    hibernate:\r
      ddl-auto: update\r
    properties:\r
      hibernate:\r
        dialect: org.hibernate.dialect.MySQLDialect\r
  datasource:\r
    url: jdbc:mysql://localhost:3306/dev\r
    username: mysql\r
    password: mysql\r
    driver-class-name: com.mysql.cj.jdbc.Driver\r
  cache:\r
    type: redis\r
  data:\r
    redis:\r
      host: localhost\r
      port: 6379\r
      database: 0\r
      password: redispw\r
\`\`\`\r
\r
\`src/main/resources/local/application.yml\`：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
spring:\r
  jpa:\r
    show-sql: true\r
    open-in-view: false\r
    hibernate:\r
      ddl-auto: update\r
    properties:\r
      hibernate:\r
        dialect: org.hibernate.dialect.H2Dialect\r
  datasource:\r
    url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=4\r
    username: sa\r
    password: \r
    driver-class-name: org.h2.Driver\r
  h2:\r
    console:\r
      enabled: true\r
      path: /h2-console\r
  cache:\r
    type: redis\r
  data:\r
    redis:\r
      host: localhost\r
      port: 6379\r
      database: 0\r
      password: redispw\r
\`\`\`\r
\r
---\r
\r
## 3.3 寫 Java code\r
\r
### 3.3.1 Entity\r
\r
\`PersonEntity.java\`：\r
\r
\`\`\`java\r
@Data\r
@Accessors(chain = true)\r
@FieldDefaults(level = PRIVATE)\r
@Entity\r
@Table(name = "person", uniqueConstraints = {\r
    @UniqueConstraint(name = "UQ_person_1", columnNames = { "email" })\r
})\r
public class PersonEntity {\r
    @Id\r
    @GeneratedValue(strategy = GenerationType.IDENTITY)\r
    @Column(name = "id")\r
    Long id;\r
\r
    @Column(nullable = false)\r
    String email;\r
\r
    String name;\r
}\r
\`\`\`\r
\r
解釋：\r
\r
-   \`id\`\r
    -   Database 層面 auto-increment\r
-   \`email\`\r
    -   Database 層面 guarantee 一定唔會 \`null\`\r
    -   Database 層面 guarantee 一定唔會重複\r
\r
---\r
\r
### 3.3.2 Repository\r
\r
\`PersonRepo.java\`：\r
\r
\`\`\`java\r
import org.springframework.cache.annotation.Cacheable;\r
\r
@CacheConfig(cacheManager = "personCache")\r
@Repository\r
public interface PersonRepo extends JpaRepository<PersonEntity, Long> {\r
\r
    @CachePut(value = "personByEmail", key = "#entity.email", unless = "#result.id == null")\r
    @Override <S extends PersonEntity> S save(S entity);\r
\r
    @Cacheable(value = "personByEmail", key = "#email", unless = "#result == null")\r
    Optional<PersonEntity> findOneByEmail(String email);\r
\r
    @CacheEvict(value = "personByEmail", key = "#email")\r
    void deleteByEmail(String email);\r
}\r
\`\`\`\r
\r
解釋：\r
\r
-   \`@CachePut\`\r
    -   用 return value 覆蓋或者新增 cache 紀錄。\r
    -   \`value\` 以及 \`key\` 會組合成 cache 既 key 名，例如 \`personByEmail::michaelboyboy@gmail.com\`。\r
    -   \`unless\` 用黎喺攞到真既 return value 之後，根據自定義既邏輯去選擇性咁去做定唔做相關操作。\r
-   \`@Cacheable\`\r
    -   如果 cache 已經存在相關紀錄，返回 cache 既紀錄；否則，call 真 method（訪問 database），然後將 return value 放入 cache。\r
    -   \`value\` 以及 \`key\` 會組合成 cache 既 key 名，例如 \`personByEmail::michaelboyboy@gmail.com\`。\r
    -   \`unless\` 用黎喺攞到真既 return value 之後，根據自定義既邏輯去選擇性咁去做定唔做相關操作。\r
-   \`@CacheEvict\`\r
    -   刪除 cache 紀錄。\r
    -   \`value\` 以及 \`key\` 會組合成 cache 既 key 名，例如 \`personByEmail::michaelboyboy@gmail.com\`。\r
    -   可以用 \`allEntries = true\` 黎刪曬所有 \`value\` 下既所有 cache 紀錄（不限 \`key\`）。\r
\r
---\r
\r
### 3.3.3 Service\r
\r
\`PersonService.java\`：\r
\r
\`\`\`java\r
import org.springframework.beans.BeanUtils;\r
import org.springframework.transaction.annotation.Transactional;\r
\r
@CacheConfig(cacheManager = "personCache")\r
@Service\r
@Transactional(rollbackFor = Throwable.class)\r
public class PersonService {\r
\r
    @Autowired\r
    PersonRepo personRepo;\r
\r
    public PersonEntity insert(PersonEntity person) {\r
        return personRepo.save(person);\r
    }\r
\r
    public PersonEntity update(PersonEntity person) {\r
        return personRepo.findOneByEmail(person.getEmail()).map(e -> {\r
            BeanUtils.copyProperties(person, e, "id");\r
            return personRepo.save(e);\r
        }).orElse(null);\r
    }\r
\r
    public PersonEntity getByEmail(String email) {\r
        return personRepo.findOneByEmail(email).orElse(null);\r
    }\r
\r
    public void deleteByEmail(String email) {\r
        personRepo.deleteByEmail(email);\r
    }\r
}\r
\`\`\`\r
\r
解釋：\r
\r
-   \`update\`\r
    1.  喺 database 或者 cache 攞出紀錄\r
        -   Cache：透過 \`PersonRepo#findOneByEmail\` 既 \`@Cacheable\`\r
    1.  將 \`id\` 以外既 fields 覆蓋原有紀錄（保留 \`id\` value）\r
        -   利用 String 自帶既 \`BeanUtils#copyProperties(Object source, Object target, String... ignoreProperties)\`\r
    1.  更新 database 紀錄\r
        -   透過 \`PersonRepo#save\`\r
    1.  新增或者更新 cache 紀錄\r
        -   透過 \`PersonRepo#save\` 既 \`@CachePut\`\r
\r
---\r
\r
### 3.3.4 Controller\r
\r
\`PersonController.java\`：\r
\r
\`\`\`java\r
@RestController\r
@RequestMapping("person")\r
public class PersonController {\r
\r
    @Autowired PersonService personService;\r
\r
    @PostMapping\r
    public PersonEntity insert(@RequestBody PersonEntity person) {\r
        return personService.insert(person);\r
    }\r
\r
    @PutMapping\r
    public PersonEntity update(@RequestBody PersonEntity person) {\r
        return personService.update(person);\r
    }\r
\r
    @GetMapping("{email}")\r
    public PersonEntity get(@PathVariable("email") String email) {\r
        return personService.getByEmail(email);\r
    }\r
\r
    @DeleteMapping("{email}")\r
    public void delete(@PathVariable("email") String email) {\r
        personService.deleteByEmail(email);\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
### 3.3.5 自定義 \`RedisCacheManager\`\r
\r
\`RedisConfig.java\`：\r
\r
\`\`\`java\r
@EnableCaching\r
@Configuration\r
public class RedisConfig {\r
\r
    @Bean\r
    public RedisCacheManager personCache(RedisConnectionFactory connectionFactory) {\r
        return RedisCacheManager.builder(connectionFactory)\r
                .withCacheConfiguration("personByEmail", personRedisCacheConfig())\r
                .build();\r
    }\r
\r
    @Bean\r
    public RedisCacheConfiguration personRedisCacheConfig() {\r
        return RedisCacheConfiguration.defaultCacheConfig()\r
                .disableCachingNullValues()\r
                .entryTtl(Duration.ofMinutes(10))\r
                .serializeKeysWith(SerializationPair.fromSerializer(RedisSerializer.string()))\r
                .serializeValuesWith(SerializationPair.fromSerializer(RedisSerializer.json()));\r
    }\r
}\r
\`\`\`\r
\r
解釋：\r
\r
-   \`@EnableCaching\`\r
    -   一定要加上呢個 annotation 先會開啟 caching 功能，否則所有 caching 相關既 annotations 都唔會生效。\r
-   配置 \`redisCacheConfiguration\`\r
    -   根據 \`RedisCacheConfiguration#defaultCacheConfig\`，Redis caching 默認既 value serializer 係 \`JdkSerializationRedisSerializer\`。\r
        -   喺 runtime 既時候，當需要 cache 既 method 被 call 完之際，return value 就要被 cache。\r
        -   \`JdkSerializationRedisSerializer\` 所配置既 \`DefaultSerializer\` 係會 check 要 serialize 既對象係咪 \`Serializable\`。\r
        -   但因為 return type 係 \`PersonEntity\`、\`List<PersonEntity\` 或者 \`Optional<PersonEntity>\`，實際對象 \`PersonEntity\` 唔係一個 \`Serializable\`。\r
        -   咁就會導致 exception \`DefaultSerializer requires a Serializable payload but received an object of type [code.entity.PersonEntity]\`。\r
            -   有 \`2\` 個方法解決\r
                -   我地可以將 \`PersonEntity\` 改成 implement \`Serializable\`。\r
                -   如果我地想將 cache value 儲成 JSON 格式，就要將 value serializer 改成用 Jackson Databind 既 \`GenericJackson2JsonRedisSerializer\`（相當於 \`RedisSerializer.json()\`）。\r
    -   \`disableCachingNullValues\`\r
        -   Return value 係 \`null\` 既話都會出 exception，除非有 \`unless\`。\r
    -   \`entryTtl\`\r
        -   Cache 紀錄既存活時間（time-to-live）。\r
\r
---\r
\r
# 4 測試\r
\r
## 4.1 開啟 MySQL／MariaDB SQL log\r
\r
\`\`\`sql\r
SET global general_log = 1;\r
SET global log_output = 'table';\r
\`\`\`\r
\r
---\r
\r
## 4.2 建立 database\r
\r
先用 HeidiSQL（Windows）或者 Sequel Pro（macOS）連接 MySQL 或者 MariaDB。\r
\r
|    Host     |  Port  |\r
| :---------: | :----: |\r
| \`127.0.0.1\` | \`3306\` |\r
\r
然後執行 SQL：\r
\r
\`\`\`sql\r
CREATE DATABASE mydb;\r
\`\`\`\r
\r
---\r
\r
## 4.3 啟動 Spring Boot web application\r
\r
\`\`\`bash\r
mvn spring-boot:run\r
\`\`\`\r
\r
如果 Spring Boot web application 成功啟動，咁我地既 \`person\` table 都會由個 application 自動創建。\r
\r
---\r
\r
## 4.4 驗證 \`@CachePut\`\r
\r
\`@CachePut\` 既 behaviors：\r
\r
-   如果有 cache 紀錄\r
    -   更新 cache 紀錄\r
-   如果冇 cache 紀錄\r
    -   新增 cache 紀錄\r
\r
### 4.4.1 Call POST API\r
\r
喺 Postman 裡面 call：\r
\r
\`\`\`plaintext\r
POST localhost:8080/person\r
\`\`\`\r
\r
Request body：\r
\r
\`\`\`json\r
{\r
	"email": "michaelboyboy@gmail.com",\r
	"name": "mick"\r
}\r
\`\`\`\r
\r
---\r
\r
### 4.4.2 確保 MySQL／MariaDB 有新紀錄\r
\r
我地可以用 HeidiSQL（Windows）或者 Sequel Pro（macOS）去睇下裡面有冇新增到紀錄。\r
\r
\`\`\`sql\r
SELECT * FROM person;\r
\`\`\`\r
\r
---\r
\r
### 4.4.3 確保 Redis 有新紀錄\r
\r
我地可以用 Redis CLI 去檢查 Redis database 裡面有冇新增到紀錄。\r
\r
執行 command：\r
\r
\`\`\`bash\r
GET personByEmail::michaelboyboy@gmail.com\r
\`\`\`\r
\r
應該會返回：\r
\r
\`\`\`plaintext\r
"{\\"@class\\":\\"code.entity.PersonEntity\\",\\"id\\":1,\\"email\\":\\"michaelboyboy@gmail.com\\",\\"name\\":\\"mick\\"}"\r
\`\`\`\r
\r
---\r
\r
### 4.4.4 Call PUT API\r
\r
喺 Postman 裡面 call：\r
\r
\`\`\`plaintext\r
PUT localhost:8080/person\r
\`\`\`\r
\r
Request body：\r
\r
\`\`\`json\r
{\r
	"email": "michaelboyboy@gmail.com",\r
	"name": "chung"\r
}\r
\`\`\`\r
\r
---\r
\r
### 4.4.5 確保 MySQL／MariaDB 紀錄改變\r
\r
我地可以用 HeidiSQL（Windows）或者 Sequel Pro（macOS）去睇下裡面有冇改變到紀錄。\r
\r
\`\`\`sql\r
SELECT * FROM person;\r
\`\`\`\r
\r
---\r
\r
### 4.4.6 確保 Redis 紀錄改變\r
\r
我地可以用 Redis CLI 去檢查 Redis database 裡面有冇改變到紀錄。\r
\r
執行 command：\r
\r
\`\`\`bash\r
GET personByEmail::michaelboyboy@gmail.com\r
\`\`\`\r
\r
應該會返回：\r
\r
\`\`\`plaintext\r
"{\\"@class\\":\\"code.entity.PersonEntity\\",\\"id\\":1,\\"email\\":\\"michaelboyboy@gmail.com\\",\\"name\\":\\"chung\\"}"\r
\`\`\`\r
\r
---\r
\r
## 4.5 驗證 \`@Cacheable\`\r
\r
\`@Cacheable\` 既 behaviors：\r
\r
-   如果有 cache 紀錄\r
    -   返回 cache 紀錄\r
-   如果冇 cache 紀錄\r
    -   新增 cache 紀錄，然後返回 cache 紀錄\r
\r
### 4.5.1 清空 Redis 所有紀錄\r
\r
執行 command：\r
\r
\`\`\`bash\r
FLUSHDB\r
\`\`\`\r
\r
---\r
\r
### 4.5.2 Call GET API（多次）\r
\r
喺 Postman 裡面 call 幾次：\r
\r
\`\`\`plaintext\r
GET localhost:8080/person/michaelboyboy@gmail.com\r
\`\`\`\r
\r
應該會返回：\r
\r
\`\`\`json\r
{\r
	"id": 1,\r
	"email": "michaelboyboy@gmail.com",\r
	"name": "chung"\r
}\r
\`\`\`\r
\r
註：必須確保每次返回既 JSON object 都係一致。\r
\r
---\r
\r
### 4.5.3 確保 Redis 有新紀錄\r
\r
我地可以用 Redis CLI 去檢查 Redis database 裡面有冇新增到紀錄。\r
\r
執行 command：\r
\r
\`\`\`bash\r
GET personByEmail::michaelboyboy@gmail.com\r
\`\`\`\r
\r
應該會返回：\r
\r
\`\`\`plaintext\r
"{\\"@class\\":\\"code.entity.PersonEntity\\",\\"id\\":1,\\"email\\":\\"michaelboyboy@gmail.com\\",\\"name\\":\\"chung\\"}"\r
\`\`\`\r
\r
---\r
\r
### 4.5.4 檢查 application log\r
\r
我地可以檢查 console 裡面 Spring 既 application log，睇下屬於 Hibernate 既 SQL call log 係咪只有一行：\r
\r
\`\`\`plaintext\r
Hibernate: select personenti0_.id as id1_0_, personenti0_.email as email2_0_, personenti0_.name as name3_0_ from person personenti0_ where personenti0_.email=?\r
\`\`\`\r
\r
---\r
\r
### 4.5.5 檢查 MySQL／MariaDB SQL log\r
\r
我地可以檢查 database 既 SQL log，睇下有冇由 application 執行既相關 SQL。\r
\r
\`\`\`sql\r
SELECT * FROM mysql.general_log ORDER BY event_time DESC;\r
\`\`\`\r
\r
因為後續既 API calls 都應該係訪問 Redis cache，所以睇下 \`argument\` column 呢個 value 係咪只有一行：\r
\r
\`\`\`sql\r
select personenti0_.id as id1_0_, personenti0_.first_name as first_na2_0_, personenti0_.status as status3_0_ from person personenti0_ where personenti0_.first_name='mick'\r
\`\`\`\r
\r
---\r
\r
## 4.6 驗證 \`@CacheEvict\`\r
\r
\`@CacheEvict\` 既 behavior：\r
\r
-   如果有 cache 紀錄\r
    -   刪除 cache 紀錄\r
\r
### 4.6.1 Call DELETE API\r
\r
喺 Postman 裡面 call：\r
\r
\`\`\`plaintext\r
DELETE localhost:8080/person/michaelboyboy@gmail.com\r
\`\`\`\r
\r
---\r
\r
### 4.6.2 確保 MySQL／MariaDB 紀錄消失\r
\r
我地可以用 HeidiSQL（Windows）或者 Sequel Pro（macOS）去睇下裡面有冇刪除到紀錄。\r
\r
\`\`\`sql\r
SELECT * FROM person;\r
\`\`\`\r
\r
---\r
\r
### 4.6.3 確保 Redis 紀錄消失\r
\r
我地可以用 Redis CLI 去檢查 Redis database 裡面有冇刪除到紀錄。\r
\r
執行 command：\r
\r
\`\`\`bash\r
GET personByEmail::michaelboyboy@gmail.com\r
\`\`\`\r
\r
應該會返回：\r
\r
\`\`\`plaintext\r
(nil)\r
\`\`\`\r
\r
---\r
\r
# 5 筆記\r
\r
## 5.1 Redis CLI 功能\r
\r
首先建立連線：\r
\r
\`\`\`bash\r
redis-cli -h localhost -p 6379\r
\`\`\`\r
\r
### 5.1.1 改變 database\r
\r
Redis 有 \`16\` 個 databases（\`0\`-based，\`0\` 至 \`15\`）。\r
\r
\`\`\`bash\r
SELECT 0\r
\`\`\`\r
\r
---\r
\r
### 5.1.2 列出所有 keys\r
\r
\`\`\`bash\r
KEYS *\r
\`\`\`\r
\r
---\r
\r
### 5.1.3 新增 string key-value pair\r
\r
\`\`\`bash\r
SET key-name my-value\r
\`\`\`\r
\r
設定一定秒數後自動清除：\r
\r
\`\`\`bash\r
SET key-name my-value EX 10\r
\`\`\`\r
\r
---\r
\r
### 5.1.4 查詢數據類型\r
\r
\`\`\`bash\r
TYPE key-name\r
\`\`\`\r
\r
---\r
\r
### 5.1.5 查詢 string 數據\r
\r
\`\`\`bash\r
GET key-name\r
\`\`\`\r
\r
---\r
\r
### 5.1.6 清空目前 database 所有內容\r
\r
\`\`\`bash\r
FLUSHDB\r
\`\`\`\r
\r
---\r
\r
### 5.1.7 清空所有 databases 所有內容\r
\r
\`\`\`bash\r
FLUSHALL\r
\`\`\`\r
\r
---\r
\r
# 6 參考資料\r
\r
-   [Spring Boot Cache 集成 Spring Data Redis 1.x 與 2.x 的差異](https://springboot.io/t/topic/2538)\r
-   [StackOverflow - Spring data redis override default serializer](https://stackoverflow.com/questions/50272157/spring-data-redis-override-default-serializer/52971347#52971347)\r
-   [Redis 命令參考](http://redisdoc.com/string/index.html)\r
-   [Redis 命令參考 - 事務（transaction）](http://redisdoc.com/topic/transaction.html)\r
`,tD=`# 1 簡介\r
\r
## 1.1 寫 API 既難處\r
\r
好多時候我地寫網頁或者 back-end API 會遇到一個情況，就係需要唔同既資料。而要同時得到唔同既資料，就需要通過某種方式將唔同既資料組合埋一齊，例如 front-end 分別 call 幾個 back-end APIs，然後 front-end 再分別處理唔同 API responses 既資料；或者，front-end call 一個 back-end API，但呢個 API 背後已經會將各種 front-end 需要既資料 consolidate 埋喺一個 response 裡面。\r
\r
舉個例，一個客戶登入帳號之後、到達 front-end 既首頁（網頁或 mobile app）之前，front-end 可能需要 call back-end 一次或者多次去拎一大堆初始化用既資料，呢啲資料可以黎自唔同既 database tables，資料包括有用戶基本資料、帳號狀態及權限、通知，以及 front-end 既首頁需要顯示既各種資訊（產品、推廣資訊）。不過呢啲用戶資料以及首頁需要顯示既各種資訊都有可能喺其他頁面由 front-end 單獨咁向 back-end 查詢出黎。\r
\r
如果要用單一個 API call 就攞到曬需要既資料，咁呢度就有一個通用性既問題，雖然 service layer 都仲可以做到通用，但 controller layer 就變左會有啲 APIs 係針對特定場景去將唔同既 services 既資料 consolidate 埋一齊。因為唔同情況下有可能需要將唔同既資料 consolidate 埋一齊成為一個針對固定場景既 HTTP response，我地需要喺 back-end 寫多個 API 去應付唔同場景，亦需要寫大量 response classes 去裝住呢啲不同場合用既 consolidated 既資料。\r
\r
另外，有啲 HTTP response 既做法係用返本身 entity class 做 response class，而裡面因為有 \`@OneToOne\`、\`@OneToMany\` 等 annotations 既 relationship fields，serializer 會令到 JPA／Hibernate 幫我地 fetch 埋出黎。但如果考慮到 lazy／eager fetching、用錯既時候有可能出現既 circular reference loop、修改 nested objects 既時候 trigger update、cascade delete 等等既情況，JPA／Hibernate 既 \`@OneToOne\`、\`@OneToMany\` 呢啲 annotations 可以好危險。而 JPA／Hibernate 既 entity graph 功能更加係令到成件事更加複雜。如果唔想用 nested objects，就只能夠寫 response wrapper class 將 parent 同 children objects 寫成平排既 fields，但咁做就變相要寫多啲 response wrapper classes。\r
\r
當然 front-end 可以 async 咁 call 好多次 back-end，然後 front-end 自己分別處理唔同 API responses 既資料，但寫起上黎可能會幾麻煩，同埋每個 API call 都需要 back-end 去 validate session 係咪存在、用戶帳號既狀態係咪正常等等。\r
\r
再者，好多時候我地會想個 response 裡面只包含部分特定既 fields，避免冇必要既 fields 增加左 network usage，我地通常既做法係複製啲現有既 class 然後自己客製化，撇除啲冇必要既 fields。\r
\r
---\r
\r
## 1.2 GraphQL API 既好處\r
\r
因此，就有左 GraphQL 既出現。關於 GraphQL：\r
\r
-   只係暴露 \`1\` 個 GraphQL API。\r
-   畀我地將多個 GraphQL \`query\`／\`mutation\` 操作 consolidate 埋做 \`1\` 個 GraphQL API call。\r
    -   例子\r
        -   一個 GraphQL API 可以同時要求得到 \`getOrder\` GraphQL query 以及 \`getOrderDetails\` GraphQL query 既資料。\r
-   准許 call GraphQL API 既時候要求 response 裡面只係包含部分特定既 fields。\r
    -   GraphQL schema、Java response class 可以重用，唔需要複製再客製化。\r
-   可以建立 \`subscription\`\r
    -   GraphQL server（back-end）可以透過 WebSocket 傳送資料畀 GraphQL client（另一個系統或者 front-end）。\r
\r
---\r
\r
## 1.3 GraphQL 注意事項\r
\r
-   GraphQL schema\r
    -   要暴露 GraphQL API，我地需要先定義 GraphQL schema。\r
-   GraphQL 語法\r
    -   GraphQL 有佢自己既一套語法／格式。\r
-   \`type Query\`\r
    -   指查詢用既 APIs\r
    -   必須提供\r
-   \`type Mutation\`\r
    -   指會修改系統既 APIs\r
-   \`type Subscription\`\r
    -   指 GraphQL server 推送資料畀 GraphQL client 既 APIs\r
-   \`input\` 係 \`(...)\` parameter types 既叫法\r
-   \`type\` 係 response type\r
-   GraphQL 基本 data types\r
    -   \`String\`\r
        -   要用 \`"xxx"\` 而唔係 \`'xxx'\`。\r
    -   \`Int\`\r
        -   32-bit\r
    -   \`Float\`\r
    -   \`Boolean\`\r
    -   \`ID\`\r
        -   格式跟 \`String\`\r
-   \`!\` 係必須提供既 field，要寫喺個 type 既後面\r
-   \`[xxx]\` 係 array\r
-   可以唔寫 \`,\`\r
    -   只需要用 space 或者 newline 分隔。\r
-   \`$\` 開頭既係 variable。\r
    -   Variables 可以喺 \`query\` 或者 \`mutation\` 後面既 \`()\` 裡面 declare。\r
    -   正因為 GraphQL 有佢自己既一套格式，寫起上黎可能會有啲麻煩，所以就有 variable section，畀我地將 variables 分隔開。\r
    -   Variable section 係正常既 JSON 格式。\r
-   Response 係 JSON 格式\r
    -   所有操作所返回既資料由一個叫 \`data\` 既 field 包住。\r
\r
GraphQL API 既格式：\r
\r
\`\`\`plaintext\r
methodName(requestField1: InputType1 requestField2: InputType2 ...): ResponseType\r
\`\`\`\r
\r
註：必須對應返 Java 既 GraphQL API method 名、request classes 以及 response classes。\r
\r
---\r
\r
# 2 動手寫\r
\r
Project structure：\r
\r
-   \`src/main/java\`\r
    -   \`/code\`\r
        -   \`/entity\`\r
            -   \`Order.java\`\r
            -   \`OrderDetail.java\`\r
        -   \`/graphql\`\r
            -   \`OrderMutation.java\`\r
            -   \`OrderQuery.java\`\r
            -   \`OrderSubscription.java\`\r
        -   \`/repo\`\r
            -   \`OrderDetailRepo.java\`\r
            -   \`OrderRepo.java\`\r
        -   \`/service\`\r
            -   \`OrderService.java\`\r
        -   \`MainApplication.java\`\r
-   \`src/main/resources\`\r
    -   \`/graphql\`\r
        -   \`schema.graphqls\`\r
    -   \`application.yml\`\r
\r
## 2.1 Maven dependencies\r
\r
-   GraphQL Spring Boot Starter 會幫我地暴露一個 \`/graphql\` 既 POST API。\r
-   如果用左 Spring Boot Starter Webflux，GraphQL Spring Boot Starter 會幫我地暴露一個 \`/subscriptions\` 既 WebSocket API。\r
-   GraphiQL Spring Boot Starter 會幫我地暴露一個測試頁面既網址——\`/graphiql\` endpoint。\r
-   用 MySQL／MariaDB 作為 database。\r
\r
\`\`\`xml\r
<parent>\r
    <groupId>org.springframework.boot</groupId>\r
    <artifactId>spring-boot-starter-parent</artifactId>\r
    <version>2.7.18</version>\r
</parent>\r
\r
<dependencies>\r
    <dependency>\r
        <groupId>org.projectlombok</groupId>\r
        <artifactId>lombok</artifactId>\r
    </dependency>\r
\r
    <dependency>\r
        <groupId>org.springframework.boot</groupId>\r
        <artifactId>spring-boot-starter-web</artifactId>\r
    </dependency>\r
\r
    <dependency>\r
        <groupId>org.springframework.boot</groupId>\r
        <artifactId>spring-boot-starter-webflux</artifactId>\r
    </dependency>\r
\r
    <dependency>\r
        <groupId>org.springframework.boot</groupId>\r
        <artifactId>spring-boot-starter-websocket</artifactId>\r
    </dependency>\r
\r
    <dependency>\r
        <groupId>org.springframework.boot</groupId>\r
        <artifactId>spring-boot-starter-actuator</artifactId>\r
    </dependency>\r
\r
    <dependency>\r
        <groupId>org.springframework.boot</groupId>\r
        <artifactId>spring-boot-devtools</artifactId>\r
    </dependency>\r
\r
    <dependency>\r
        <groupId>org.springframework.boot</groupId>\r
        <artifactId>spring-boot-starter-data-jpa</artifactId>\r
    </dependency>\r
\r
    <dependency>\r
        <groupId>com.mysql</groupId>\r
        <artifactId>mysql-connector-j</artifactId>\r
    </dependency>\r
\r
    <dependency>\r
        <groupId>com.graphql-java-kickstart</groupId>\r
        <artifactId>graphql-spring-boot-starter</artifactId>\r
        <version>14.1.0</version>\r
    </dependency>\r
\r
    <dependency>\r
        <groupId>com.graphql-java-kickstart</groupId>\r
        <artifactId>graphiql-spring-boot-starter</artifactId>\r
        <version>11.1.0</version>\r
    </dependency>\r
</dependencies>\r
\`\`\`\r
\r
---\r
\r
## 2.2 Application 配置\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
spring:\r
  jpa:\r
    show-sql: true\r
    open-in-view: false\r
    hibernate:\r
      ddl-auto: update\r
    properties:\r
      hibernate:\r
        dialect: org.hibernate.dialect.MySQLDialect\r
  datasource:\r
    url: jdbc:mysql://localhost:3306/mydb?useSSL=false\r
    username: root\r
    password:\r
    driver-class-name: com.mysql.cj.jdbc.Driver\r
management:\r
  endpoints:\r
    web:\r
      exposure:\r
        include: "*"\r
\r
graphql:\r
  servlet:\r
    actuator-metrics: true\r
    cors:\r
      allowedOrigins: "*"\r
graphiql:\r
  enabled: true\r
\`\`\`\r
\r
---\r
\r
## 2.3 寫 Java code\r
\r
### 2.3.1 Entity\r
\r
\`Order.java\`：\r
\r
\`\`\`java\r
@Data\r
@Accessors(chain = true)\r
@FieldDefaults(level = PRIVATE)\r
@Entity\r
@Table(name = "tbl_order")\r
public class Order {\r
    @Id\r
    @GeneratedValue(strategy = IDENTITY)\r
    Long id;\r
\r
    BigDecimal totalPrice;\r
}\r
\`\`\`\r
\r
\`OrderDetail.java\`：\r
\r
\`\`\`java\r
@Data\r
@Accessors(chain = true)\r
@FieldDefaults(level = PRIVATE)\r
@Entity\r
@Table(name = "tbl_order_detail")\r
public class OrderDetail {\r
    @Id\r
    @GeneratedValue(strategy = IDENTITY)\r
    Long id;\r
\r
    Long orderId;\r
    Long productId;\r
    BigDecimal salePrice;\r
    Integer quantity;\r
}\r
\`\`\`\r
\r
---\r
\r
### 2.3.2 Repository\r
\r
\`OrderRepo.java\`：\r
\r
\`\`\`java\r
@Repository\r
public interface OrderRepo extends JpaRepository<Order, Long> {\r
\r
}\r
\`\`\`\r
\r
\`OrderDetailRepo.java\`：\r
\r
\`\`\`java\r
@Repository\r
public interface OrderDetailRepo extends JpaRepository<OrderDetail, Long> {\r
\r
    List<OrderDetail> findAllByOrderId(Long orderId);\r
}\r
\`\`\`\r
\r
---\r
\r
### 2.3.3 Service\r
\r
\`OrderService.java\`：\r
\r
\`\`\`java\r
import org.springframework.transaction.annotation.Transactional;\r
\r
@Service\r
@Transactional(rollbackFor = Throwable.class)\r
public class OrderService {\r
\r
    @Autowired OrderRepo orderRepo;\r
    @Autowired OrderDetailRepo orderDetailRepo;\r
\r
    public Order getOrder(Long orderId) {\r
        return orderRepo.findById(orderId)\r
                        .orElseThrow(() -> new RuntimeException("Order ID [" + orderId + "] does not exist!" ));\r
    }\r
\r
    public List<OrderDetail> getOrderDetails(Long orderId) {\r
        return orderDetailRepo.findAllByOrderId(orderId);\r
    }\r
\r
    public OrderResponse placeOrder(OrderRequest orderRequest) {\r
\r
        final Order order = orderRepo.save(toOrderEntity(orderRequest));\r
        final List<OrderDetail> orderDetails = orderDetailRepo.saveAll(toOrderDetailEntities(orderRequest, order.getId()));\r
\r
        return new OrderResponse().setOrder(order).setOrderDetails(orderDetails);\r
    }\r
\r
    private Order toOrderEntity(OrderRequest orderRequest) {\r
        return new Order()\r
                .setTotalPrice(orderRequest.getOrderDetails().stream()\r
                                .map(e -> e.getSalePrice()\r
                                           .multiply(new BigDecimal(String.valueOf(e.getQuantity()))))\r
                                .reduce(BigDecimal.ZERO, BigDecimal::add));\r
    }\r
\r
    private List<OrderDetail> toOrderDetailEntities(OrderRequest orderRequest, Long orderId) {\r
        return orderRequest.getOrderDetails()\r
                .stream()\r
                .map(e -> new OrderDetail()\r
                                .setOrderId(orderId)\r
                                .setProductId(e.getProductId())\r
                                .setSalePrice(e.getSalePrice())\r
                                .setQuantity(e.getQuantity()))\r
                .collect(toList());\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
### 2.3.4 GraphQL API\r
\r
\`OrderMutation.java\`：\r
\r
\`\`\`java\r
@Component\r
public class OrderMutation implements GraphQLMutationResolver {\r
\r
    @Autowired OrderService orderService;\r
    @Autowired Sinks.Many<OrderResponse> sink;\r
\r
    public OrderResponse placeOrder(OrderRequest orderRequest) {\r
\r
        final OrderResponse response = orderService.placeOrder(orderRequest);\r
        sink.tryEmitNext(response);\r
\r
        return response;\r
    }\r
}\r
\`\`\`\r
\r
\`OrderQuery.java\`：\r
\r
\`\`\`java\r
@Component\r
public class OrderQuery implements GraphQLQueryResolver {\r
\r
    @Autowired OrderService orderService;\r
\r
    public Order getOrder(Long orderId) {\r
        return orderService.getOrder(orderId);\r
    }\r
\r
    public List<OrderDetail> getOrderDetails(Long orderId) {\r
        return orderService.getOrderDetails(orderId);\r
    }\r
}\r
\`\`\`\r
\r
\`OrderSubscription.java\`：\r
\r
\`\`\`java\r
@Component\r
public class OrderSubscription implements GraphQLSubscriptionResolver {\r
\r
    @Autowired Sinks.Many<OrderResponse> orderSink;\r
\r
    public Publisher<OrderResponse> checkNewOrders() {\r
        return orderSink.asFlux();\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
## 2.4 GraphQL schema\r
\r
\`schema.graphqls\`：\r
\r
\`\`\`plaintext\r
type Query {\r
    getOrder(orderId: Int!): Order\r
    getOrderDetails(orderId: Int!): [OrderDetail]\r
}\r
\r
type Mutation {\r
    placeOrder(orderRequest: OrderRequest!): OrderResponse\r
}\r
\r
type Subscription {\r
    checkNewOrders: OrderResponse\r
}\r
\r
input OrderRequest {\r
    orderDetails: [OrderDetailRequest]!\r
}\r
\r
input OrderDetailRequest {\r
    productId: Int!\r
    salePrice: Float!\r
    quantity: Int!\r
}\r
\r
type OrderResponse {\r
    order: Order\r
    orderDetails: [OrderDetail]\r
}\r
\r
type Order {\r
    id: Int\r
    totalPrice: Float\r
}\r
\r
type OrderDetail {\r
    id: Int\r
    orderId: Int\r
    productId: Int\r
    salePrice: Float\r
    quantity: Int\r
}\r
\`\`\`\r
\r
---\r
\r
# 3 測試\r
\r
## 3.1 建立 database\r
\r
先用 HeidiSQL（Windows）或者 Sequel Pro（macOS）連接 MySQL 或者 MariaDB。\r
\r
|    Host     |  Port  |\r
| :---------: | :----: |\r
| \`127.0.0.1\` | \`3306\` |\r
\r
然後執行 SQL：\r
\r
\`\`\`sql\r
CREATE DATABASE mydb;\r
\`\`\`\r
\r
---\r
\r
## 3.2 啟動 Spring Boot web application\r
\r
\`\`\`bash\r
mvn spring-boot:run\r
\`\`\`\r
\r
如果 Spring Boot web application 成功啟動，咁我地既 \`tbl_order\`、\`tbl_order_detail\` tables 都會由個 application 自動創建。\r
\r
---\r
\r
## 3.3 訪問 GraphiQL 測試網頁\r
\r
GraphiQL 可以模擬一個 GraphQL client 去 call 我地 back-end GraphQL APIs。又或者用 Postman 都可以。其實背後都係一個 POST API call。\r
\r
先打開 [http://localhost:8080/graphiql](http://localhost:8080/graphiql)。\r
\r
---\r
\r
## 3.4 用 GraphiQL call \`placeOrder\` API\r
\r
\`\`\`plaintext\r
mutation {\r
  order1: placeOrder(orderRequest: {\r
    orderDetails: [\r
      { productId: 1 salePrice: 123.5 quantity: 5 }\r
      { productId: 2 salePrice: 222.8 quantity: 1 }\r
    ]\r
  }) {\r
    order { id totalPrice }\r
    orderDetails { id orderId productId salePrice quantity }\r
  }\r
\r
  order2: placeOrder(orderRequest: {\r
    orderDetails: [\r
      { productId: 2 salePrice: 222.8 quantity: 7 }\r
      { productId: 3 salePrice: 345.6 quantity: 3 }\r
    ]\r
  }) {\r
    order { id totalPrice }\r
    orderDetails { id orderId productId salePrice quantity }\r
  }\r
}\r
\`\`\`\r
\r
解釋：\r
\r
-   \`order1\`、\`order2\`\r
    -   我地將 \`2\` 個 \`placeOrder\` 既 GraphQL \`mutation\` 操作 consolidate 埋做 \`1\` 個 GraphQL API call。\r
    -   Response 裡面會用呢 \`2\` 個名黎對應返 response objects。\r
\r
![](blog/2021-09/spring-graphql-api/graphiql-placeOrder.png)\r
\r
### 3.4.1 用 Postman call \`placeOrder\` API\r
\r
喺 Postman 裡面 call：\r
\r
\`\`\`plaintext\r
POST localhost:8080/graphql\r
\`\`\`\r
\r
GraphQL query body 照用返 GraphiQL 果個完全一樣就得。\r
\r
![](blog/2021-09/spring-graphql-api/postman-placeOrder.png)\r
\r
---\r
\r
## 3.5 用 GraphiQL call \`getOrder\`、\`getOrderDetails\` API\r
\r
\`\`\`plaintext\r
query ($orderId : Int!) {\r
  order: getOrder(orderId: $orderId) {\r
    id\r
    totalPrice\r
  }\r
\r
  orderDetails: getOrderDetails(orderId: $orderId) {\r
    id\r
    orderId\r
    productId\r
    salePrice\r
    quantity\r
  }\r
}\r
\`\`\`\r
\r
Variable section（JSON 格式）：\r
\r
\`\`\`json\r
{\r
	"orderId": 1\r
}\r
\`\`\`\r
\r
解釋：\r
\r
-   \`order\`、\`orderDetails\`\r
    -   我地將 \`getOrder\` 以及 \`getOrderDetails\` 既 \`2\` 個 GraphQL \`query\` 操作 consolidate 埋做 \`1\` 個 GraphQL API call。\r
    -   Response 裡面會用呢 \`2\` 個名黎對應返 response objects。\r
-   \`$orderId\`\r
    -   呢度我地用左 \`1\` 個 variable。\r
\r
![](blog/2021-09/spring-graphql-api/graphiql-getOrder-getOrderDetails.png)\r
\r
### 3.5.1 用 Postman call \`getOrder\`、\`getOrderDetails\` API\r
\r
喺 Postman 裡面 call：\r
\r
\`\`\`plaintext\r
POST localhost:8080/graphql\r
\`\`\`\r
\r
GraphQL query body 照用返 GraphiQL 果個完全一樣就得。\r
\r
![](blog/2021-09/spring-graphql-api/postman-getOrder-getOrderDetails.png)\r
\r
---\r
\r
## 3.6 用 GraphiQL call \`checkNewOrders\` API\r
\r
\`\`\`plaintext\r
subscription {\r
  checkNewOrders {\r
    order {\r
      id\r
      totalPrice\r
    }\r
\r
    orderDetails {\r
      id\r
      orderId\r
      productId\r
      salePrice\r
      quantity\r
    }\r
  }\r
}\r
\`\`\`\r
\r
解釋：\r
\r
-   \`checkNewOrders\`\r
    -   我地訂閱緊 \`checkNewOrders\`，如果 WebSocket server 有新 message send 出黎，我地個 WebSocket client 就會收到。\r
\r
![](blog/2021-09/spring-graphql-api/graphiql-checkNewOrders-init.png)\r
\r
![](blog/2021-09/spring-graphql-api/graphiql-checkNewOrders-received.png)\r
\r
---\r
\r
# 4 Front-end call GraphQL API\r
\r
我地試左用 GraphiQL 同 Postman call GraphQL API，但 front-end 要點樣 call？雖然已經有啲現成既 NPM libraries 可以做到 GraphQL client，但其實要自己用 JavaScript 做既話都好簡單。\r
\r
## 4.1 用 Fetch API call \`placeOrder\` API\r
\r
非 dynamic 寫法：\r
\r
\`\`\`js\r
fetch("http://localhost:8080/graphql", {\r
	method: "POST",\r
	body: JSON.stringify({\r
		query: \`\r
            mutation {\r
                order1: placeOrder(orderRequest: {\r
                    orderDetails: [\r
                        { productId: 1 salePrice: 123.5 quantity: 5 }\r
                        { productId: 2 salePrice: 222.8 quantity: 1 }\r
                    ]\r
                }) {\r
                    order { id totalPrice }\r
                    orderDetails { id orderId productId salePrice quantity }\r
                }\r
\r
                order2: placeOrder(orderRequest: {\r
                    orderDetails: [\r
                        { productId: 2 salePrice: 222.8 quantity: 7 }\r
                        { productId: 3 salePrice: 345.6 quantity: 3 }\r
                    ]\r
                }) {\r
                    order { id totalPrice }\r
                    orderDetails { id orderId productId salePrice quantity }\r
                }\r
            }\r
        \`,\r
	}),\r
})\r
	.then((e) => e.json())\r
	.then((res) => console.log(res?.data));\r
\`\`\`\r
\r
---\r
\r
## 4.2 用 Fetch API call \`getOrder\`、\`getOrderDetails\` API\r
\r
\`\`\`js\r
fetch("http://localhost:8080/graphql", {\r
	method: "POST",\r
	body: JSON.stringify({\r
		query: \`\r
            query ($orderId : Int!) {\r
                order: getOrder(orderId: $orderId) {\r
                    id\r
                    totalPrice\r
                }\r
\r
                orderDetail: getOrderDetails(orderId: $orderId) {\r
                    id\r
                    orderId\r
                    productId\r
                    salePrice\r
                    quantity\r
                }\r
            }\r
        \`,\r
		variables: {\r
			orderId: 1,\r
		},\r
	}),\r
})\r
	.then((e) => e.json())\r
	.then((res) => console.log(res?.data));\r
\`\`\`\r
\r
---\r
\r
## 4.3 用 WebSocket API call \`checkNewOrders\` API\r
\r
\`\`\`js\r
const ws = new WebSocket("ws://localhost:8080/subscriptions", "graphql-ws");\r
ws.onmessage = (e) => {\r
	console.log(\`%c\${e.data}\`, "color: cyan");\r
\r
	if (JSON.parse(e.data).type === "connection_ack") {\r
		console.log("%cReceived type=connection_ack, subscribing to checkNewOrders...", "color: yellow");\r
\r
		ws.send(\r
			JSON.stringify({\r
				id: 1,\r
				type: "start",\r
				payload: {\r
					query: "subscription { checkNewOrders { order { id totalPrice } orderDetails { id orderId productId salePrice quantity } } }",\r
					variables: null,\r
				},\r
			})\r
		);\r
\r
		console.log("%cSent subscription message to server.", "color: yellow");\r
	}\r
};\r
ws.onopen = (e) => {\r
	console.log("%cWebSocket connection to GraphQL subscriptions is open.", "color: yellow");\r
\r
	ws.send(\r
		JSON.stringify({\r
			type: "connection_init",\r
			payload: {},\r
		})\r
	);\r
\r
	console.log("%cSent connection_init message to server.", "color: yellow");\r
};\r
\`\`\`\r
\r
![](blog/2021-09/spring-graphql-api/chrome-checkNewOrders-received.png)\r
\r
---\r
\r
# 5 參考資料\r
\r
-   [GraphQL 官網 - Spec](https://spec.graphql.org/)\r
-   [GraphQL Java GitHub - \`Scarlars.java\`](https://github.com/graphql-java/graphql-java/blob/master/src/main/java/graphql/Scalars.java)\r
-   [GraphQL and GraphiQL Spring Framework Boot Starters GitHub](https://github.com/graphql-java-kickstart/graphql-spring-boot)\r
`,aD=`# 1 ELK 簡介\r
\r
ELK stack（Elasticsearch、Logstash、Kibana）係 Elastic 公司既 open-source log 管理工具，可以幫我地有效咁搵 log，當我地需要 debug 或者 troubleshoot 一啲 application 問題既時候就會非常有用。\r
\r
|     工具      | 作用                                                                                                                                                                       |\r
| :-----------: | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
|   Logstash    | 收集唔同來源既 log 資料，再通過 API 將資料傳送到唔同既目的地（Elasticsearch）。                                                                                            |\r
| Elasticsearch | 儲存 log 資料，再自動做 indexing，所以有強大既資料搜尋功能（快如 Google search）。佢提供左儲存資料、管理資料、搜尋資料既 API。                                             |\r
|    Kibana     | 提供網頁，畀我地用唔同既搜尋條件（時間段、keyword、metadata）搜尋 log，亦可以用圖表視覺化搜尋結果。佢通過 API 取得 log 資料（Elasticsearch），然後喺網頁上面顯示結果出黎。 |\r
\r
所以一個 log 既 flow 會係由 application 去 Logstash 再去 Elasticsearch 再去 Kibana，最終喺一個網頁上面顯示出黎。\r
\r
## 1.1 ELK 版本\r
\r
根據 [endoflife.date](https://endoflife.date/elasticsearch)，我地最好用仲有 active support 既 version \`8\`。\r
\r
---\r
\r
# 2 動手寫\r
\r
我地會用到 Spring Boot、Lombok、Slf4j 以及 Logback。\r
\r
## 2.1 Maven dependencies\r
\r
我地會用到 Lombok 既 \`@Slf4j\` annotation 去 generate construct logger object 既 code。\r
\r
\`\`\`xml\r
<parent>\r
    <groupId>org.springframework.boot</groupId>\r
    <artifactId>spring-boot-starter-parent</artifactId>\r
    <version>3.2.3</version>\r
</parent>\r
\r
<dependencies>\r
    <dependency>\r
        <groupId>org.springframework.boot</groupId>\r
        <artifactId>spring-boot-starter-web</artifactId>\r
    </dependency>\r
\r
    <dependency>\r
        <groupId>org.projectlombok</groupId>\r
        <artifactId>lombok</artifactId>\r
    </dependency>\r
\r
    <dependency>\r
        <groupId>net.logstash.logback</groupId>\r
        <artifactId>logstash-logback-encoder</artifactId>\r
        <version>7.2</version>\r
    </dependency>\r
</dependencies>\r
\`\`\`\r
\r
---\r
\r
## 2.2 Application 配置\r
\r
我地可以有 \`2\` 個 Spring Boot profiles：\r
\r
\`application.yml\`（default profile，默認會用呢個）：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
spring.application.name: mick-app\r
\r
logging:\r
  config: classpath:logback/logback-prod.xml\r
\`\`\`\r
\r
\`application-dev.yml\`（\`dev\` profile，指定先會用呢個）：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
spring.application.name: mick-app\r
\r
logging:\r
  config: classpath:logback/logback-dev.xml\r
\`\`\`\r
\r
註：如果要指定用 \`dev\` profile，啟動個 application 果陣要用 VM argument \`-Dspring.profiles.active=dev\`。\r
\r
---\r
\r
## 2.3 Logback 配置\r
\r
喺我地既 Maven project 度建立 \`2\` 個配置檔：\r
\r
-   \`src/main/resources\`\r
    -   \`/logback\`\r
        -   \`logback-dev.xml\`\r
        -   \`logback-prod.xml\`\r
\r
\`logback-dev.xml\`（console + file）：\r
\r
\`\`\`xml\r
<?xml version="1.0" encoding="UTF-8"?>\r
<configuration>\r
	<springProperty scope="context" name="app_name" source="spring.application.name" />\r
\r
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">\r
		<encoder>\r
			<pattern>[\${app_name:-}] %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} (%file:%line\\) - %msg%n</pattern>\r
		</encoder>\r
	</appender>\r
\r
	<appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">\r
		<encoder class="net.logstash.logback.encoder.LogstashEncoder">\r
			<includeContext>false</includeContext>\r
			<customFields>{ "host": "\${hostname:-}", "app_name": "\${app_name:-}" }</customFields>\r
		</encoder>\r
\r
		<file>logs/app.log</file>\r
\r
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\r
			<fileNamePattern>logs/archived/app.log.%d{yyyy-MM-dd}</fileNamePattern>\r
			<maxHistory>30</maxHistory>\r
		</rollingPolicy>\r
	</appender>\r
\r
	<root level="INFO">\r
		<appender-ref ref="console" />\r
		<appender-ref ref="file" />\r
	</root>\r
</configuration>\r
\`\`\`\r
\r
\`logback-prod.xml\`（console + TCP socket）：\r
\r
\`\`\`xml\r
<?xml version="1.0" encoding="UTF-8"?>\r
<configuration>\r
	<springProperty scope="context" name="app_name" source="spring.application.name" />\r
\r
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">\r
		<encoder>\r
			<pattern>[\${hostname:-} \${app_name:-}] %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} (%file:%line\\) - %msg%n</pattern>\r
		</encoder>\r
	</appender>\r
\r
	<appender name="stash" class="net.logstash.logback.appender.LogstashTcpSocketAppender">\r
		<encoder class="net.logstash.logback.encoder.LogstashEncoder">\r
			<includeContext>false</includeContext>\r
			<customFields>{ "host": "\${hostname:-}", "app_name": "\${app_name:-}" }</customFields>\r
		</encoder>\r
\r
		<destination>127.0.0.1:5000</destination>\r
		<keepAliveDuration>5 minutes</keepAliveDuration>\r
		<reconnectionDelay>10 second</reconnectionDelay>\r
	</appender>\r
\r
	<root level="INFO">\r
		<appender-ref ref="console" />\r
		<appender-ref ref="stash" />\r
	</root>\r
</configuration>\r
\`\`\`\r
\r
---\r
\r
## 2.4 寫 Java code\r
\r
Project structure：\r
\r
-   \`src/main/java\`\r
    -   \`/code\`\r
        -   \`LogGenerator.java\`\r
        -   \`MainApplication.java\`\r
\r
### 2.4.1 定時生成 log 既 component\r
\r
\`LogGenerator.java\`：\r
\r
\`\`\`java\r
@Slf4j\r
@EnableScheduling\r
@Component\r
public class LogGenerator {\r
\r
    @Scheduled(cron = "* * * * * *")\r
    public void generateLog() {\r
        log.info("Michael says {}", System.currentTimeMillis());\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
# 3 部署 ELK\r
\r
我地會用 Docker Compose 黎建立一個 Docker network 以及 ELK 既 containers，呢啲 containers 會連接到同一個 Docker network。\r
\r
我地需要一個 working directory：\r
\r
-   \`elk-test\`\r
    -   \`/elk-config\`\r
        -   \`/elasticsearch\`\r
            -   \`elasticsearch.yml\`\r
        -   \`/kibana\`\r
            -   \`kibana.yml\`\r
        -   \`/logstash\`\r
            -   \`/pipeline\`\r
                -   \`logstash.conf\`\r
    -   \`/elk-data\`（忽略，全部由 Docker 自動生成）\r
        -   \`/elasticsearch\`\r
            -   \`/data\`\r
        -   \`/kibana\`\r
            -   \`/data\`\r
    -   \`docker-compose.yml\`\r
\r
## 3.1 Elasticsearch 配置\r
\r
\`elk-test/elk-config/elasticsearch/elasticsearch.yml\`：\r
\r
\`\`\`yaml\r
cluster.name: "elasticsearch"\r
network.host: 0.0.0.0\r
xpack.security.enabled: false\r
xpack.security.enrollment.enabled: false\r
xpack.security.autoconfiguration.enabled: false\r
\`\`\`\r
\r
---\r
\r
## 3.2 Kibana 配置\r
\r
\`elk-test/elk-config/kibana/kibana.yml\`：\r
\r
\`\`\`yaml\r
server.name: kibana\r
server.host: "0.0.0.0"\r
elasticsearch.hosts: ["http://elasticsearch:9200"]\r
monitoring.ui.container.elasticsearch.enabled: true\r
\`\`\`\r
\r
---\r
\r
## 3.3 Logstash pipeline 配置\r
\r
\`elk-test/elk-config/logstash/pipeline/logstash.conf\`：\r
\r
\`\`\`plaintext\r
input {\r
    tcp {\r
        port => "5000"\r
        codec => json_lines\r
    }\r
}\r
\r
output {\r
    stdout {}\r
    elasticsearch {\r
        hosts => ["http://elasticsearch:9200"]\r
        index => "mick-elk-%{+YYYY.MM.dd}"\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
## 3.2 Docker Compose 配置\r
\r
\`elk-test/docker-compose.yml\`：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
version: "3.8"\r
\r
networks:\r
  elk:\r
    driver: bridge\r
\r
services:\r
  elasticsearch:\r
    container_name: elasticsearch\r
    image: elasticsearch:8.12.2\r
    mem_limit: 1073741824\r
    ports:\r
      - "9200:9200"\r
      - "9300:9300"\r
    networks:\r
      - elk\r
    volumes:\r
      - ./elk-config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml\r
      - ./elk-data/elasticsearch/data:/usr/share/elasticsearch/data\r
    environment:\r
      - discovery.type=single-node\r
      - ELASTIC_PASSWORD=elastic\r
      - bootstrap.memory_lock=true\r
\r
  logstash:\r
    depends_on:\r
      - elasticsearch\r
    container_name: logstash\r
    image: logstash:8.12.2\r
    mem_limit: 1073741824\r
    ports:\r
      - "5000:5000"\r
      - "9600:9600"\r
    networks:\r
      - elk\r
    volumes:\r
      - ./elk-config/logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf\r
\r
  kibana:\r
    depends_on:\r
      - elasticsearch\r
    container_name: kibana\r
    image: kibana:8.12.2\r
    mem_limit: 1073741824\r
    ports:\r
      - "5601:5601"\r
    networks:\r
      - elk\r
    volumes:\r
      - ./elk-config/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml\r
      - ./elk-data/kibana/data:/usr/share/kibana/data\r
\`\`\`\r
\r
---\r
\r
## 3.3 執行 Docker Compose\r
\r
喺 \`elk-test\` folder 度執行 command：\r
\r
\`\`\`bash\r
docker-compose up -d\r
\`\`\`\r
\r
停止／清理：\r
\r
\`\`\`bash\r
docker-compose down\r
\`\`\`\r
\r
---\r
\r
# 4 產生 log\r
\r
1. 啟動 application（用默認 Spring profile）。\r
1. 等待 console 出現一堆 \`Mick says xxxxxxxxxxxxx\` 既 log messages，建議至少 \`10\` 個。\r
1. 打開 [http://localhost:9200/\\_search?size=100](http://localhost:9200/_search?size=100) 應該可以見到一堆 log documents。\r
\r
---\r
\r
# 5 設定 Kibana、檢視結果\r
\r
1. 打開 [http://localhost:5601](http://localhost:5601)。\r
1. 佢會問我地 Enrollment token，我地可以撳「Configure manually」按鈕。\r
1. 輸入 \`http://elasticsearch:9200\`，然後撳「Check address」按鈕。\r
1. 佢會顯示「Elastic is already configured」，撳「Continue to Kibana」按鈕。\r
1. 去左手邊既 navigation menu > Analytics > Discover 頁面。\r
1. 因為我地已經有啲 log data，所以佢會顯示「You have data in Elasticsearch. Now, create a data view.」。\r
1. 撳「Create data view」按鈕。\r
    1. 喺「Name」度輸入 \`Mick testing\`。\r
    1. 喺「Index pattern」輸入 \`mick-elk-*\`。\r
    1. 喺「Timestamp field」揀 \`@timestamp\`。\r
1. 右邊會顯示符合個 index pattern 既 index 來源。\r
1. 撳「Save data view to Kibana」按鈕。\r
1. 喺 data view 順序加入以下既 fields：\r
    1. \`host\`\r
    1. \`app_name\`\r
    1. \`level\`\r
    1. \`logger_name\`\r
    1. \`message\`\r
1. 確保 \`@timestamp\` column 係 descending order。\r
1. 可以撳右上既 Date quick select > Refresh every 設定 \`5 seconds\`。\r
1. 如果畫面太細，可以撳右上 Chart options > Hide chart。\r
\r
註：以上既設定會被儲存喺 Elasticsearch 裡面既 \`.kibana\` index（[http://localhost:9200/.kibana/\\_search?size=100](http://localhost:9200/.kibana/_search?size=100)）。\r
\r
![](blog/2021-10/spring-boot-elk-logging/kibana-create-data-view.png)\r
\r
![](blog/2021-10/spring-boot-elk-logging/kibana-data-view-with-logs.png)\r
\r
---\r
\r
# 6 注意事項\r
\r
-   確保電腦有 \`85%\` 或以上 disk space，否則 Elasticsearch 會 \`red\` status。\r
    -   檢查 cluster health：[http://localhost:9200/\\_cluster/health](http://localhost:9200/_cluster/health)\r
\r
---\r
\r
# 7 參考資料\r
\r
-   [Sprinkle Some ELK on Your Spring Boot Logs](https://isd-soft.com/tech_blog/sprinkle-elk-spring-boot-logs/)\r
-   [deviantony/docker-elk - \`docker-compose.yml\`](https://github.com/deviantony/docker-elk/blob/main/docker-compose.yml)\r
`,iD=`# 1 背景\r
\r
有某一個 Spring Boot 2 既 web application 唔知點解有個 HTTP POST API 喺唔同情況下，有時會返回 JSON 或者 XML 格式既 responses，而 XML 格式就會導致 consumer application 喺 deserialize 個 response 既時候出現 deserialization exception。\r
\r
| 情況                                                                          | Response 格式 |\r
| ----------------------------------------------------------------------------- | :-----------: |\r
| 使用 Postman 直接 call 個 API                                                 |     JSON      |\r
| 喺 cloud provider 平台上面 test 個 API                                        |     JSON      |\r
| Consumer application 喺 cloud 既環境下用 Spring 既 \`RestTemplate\` call 個 API |      XML      |\r
\r
Postman 既 call 法係用默認既 Postman HTTP request headers，\`Accept\` request header 係 \`*/*\`。\r
\r
Cloud provider 平台既 call 法係冇任何 HTTP request headers。\r
\r
Consumer application 用既係 \`RestTemplate#exchange\` method 去 call 呢個 HTTP POST API，而 \`HttpEntity\` 既 request body 係 \`null\`，\`HttpHeaders\` 係 \`new HttpHeaders()\`，冇咩特別。\r
\r
---\r
\r
# 2 原因分析\r
\r
## 2.1 Cloud provider API 配置\r
\r
Cloud provider 既平台上面冇任何配置，冇對 HTTP API response 做 conversion 或者改 request header，所以唔關 cloud config 事。\r
\r
---\r
\r
## 2.2 Maven dependencies\r
\r
如果只係得 \`spring-boot-starter-web\` 呢個 dependency，係冇能力返回 XML 格式既。\r
\r
查下 Spring 既文檔就發現到原來 producer application 以及 consumer application 都有以下既 transitive dependency：\r
\r
\`\`\`xml\r
<dependency>\r
    <groupId>com.fasterxml.jackson.dataformat</groupId>\r
    <artifactId>jackson-dataformat-xml</artifactId>\r
</dependency>\r
\`\`\`\r
\r
加左呢個 dependency 之後：\r
\r
-   Application 會有能力返回 XML 格式既 HTTP responses。\r
    -   不過就唔會自動將所有 exposed 既 APIs（Spring 既 request mappings）默認返回 XML 格式。\r
-   Application 會有能力解讀 XML 格式既 HTTP responses（但唔清楚點解 consumer application 會出現 deserialization exception）。\r
-   會令到我地冇特別配置既 \`RestTemplate\` 既 HTTP requests 既 \`Accept\` request header 用左 \`application/xml\` 等等既 values，咁就會令到 producer application 傾向選擇返回 XML 格式既 HTTP responses，而咁岩 producer application 又有能力咁做。\r
\r
咁就解釋到點解 Postman 以及 cloud provider 平台上面測試果陣冇得到 XML 格式既 HTTP responses。\r
\r
參考資料：\r
\r
-   [Spring Boot 官方文檔 - 4.2 Write an XML REST Service](https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto.spring-mvc.write-xml-rest-service)\r
\r
---\r
\r
# 3 解決方法\r
\r
只需要將 \`RestTemplate\` object 既 XML message converter 移除就可以，咁喺 call HTTP APIs 既時候，就唔會喺 \`Accept\` request headers 裡面加入 \`application/xml\` 等等既 values。\r
\r
\`\`\`java\r
@Bean\r
public RestTemplate restTemplate() {\r
    final RestTemplate restTemplate = new RestTemplate();\r
    restTemplate.getMessageConverters().removeIf(MappingJackson2XmlHttpMessageConverter.class::isInstance);\r
\r
    return restTemplate;\r
}\r
\`\`\`\r
\r
參考資料：\r
\r
-   [StackOverflow - How to prevent MappingJackson2XmlHttpMessageConverter from taking over serialization?](https://stackoverflow.com/questions/32703367/how-to-prevent-mappingjackson2xmlhttpmessageconverter-from-taking-over-serializa)\r
-   [StackOverflow - Spring RestTemplate message converter priority when posting](https://stackoverflow.com/questions/47894619/spring-resttemplate-message-converter-priority-when-posting)\r
-   [StackOverflow - How to set default MessageConverter to JSON with jackson-dataformat-xml added?](https://stackoverflow.com/questions/57706610/how-to-set-default-messageconverter-to-json-with-jackson-dataformat-xml-added)\r
-   [GitHub - spring-projects/spring-framework - Allow RestTemplate JSON MessageMappers to take higher precedence than XML ones (even if XML mapping libraries are present)](https://github.com/spring-projects/spring-framework/issues/26161)\r
-   [GitHub - spring-projects/spring-framework - RestTemplate.java](https://github.com/spring-projects/spring-framework/blob/main/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java#L182-L183)\r
`,oD=`# 1 何謂 remote debugging\r
\r
Debug Java 程式或者 JavaScript 程式大家都試過，但係 Java 既其中一個強大之處，就係其實 JVM 係可以畀我地利用 Java Debug Wire Protocol 去做到 remote debugging，亦即係個 JVM 唔需要喺自己部機度運行都可以做到 debugging。\r
\r
---\r
\r
# 2 好處\r
\r
呢個功能最大既好處係可以畀我地 debug 唔係喺 local deploy 既 Java 程式。咁當我地遇到問題既時候，就唔需要為左做到 local run 而 setup local 既所有野，包括 database data、上下游既 applications、程式配置（Spring profile、application properties、Java program arguments、Java VM arguments、environment variables 等等），可以利用 remote deployment（e.g. UAT）既配置以及 database data。\r
\r
---\r
\r
# 3 動手設置\r
\r
## 3.1 Eclipse 設置 breakpoint\r
\r
1. 喺 Eclipse 裡面打開想要 debug 既 Java class。\r
1. Double-click 想 debugger 暫停既 line number，會見到有個小藍點顯示左喺左邊。\r
1. 如果去 Debug perspective，會見到 Breakpoints view 裡面有我地所有既 breakpoints。\r
\r
---\r
\r
## 3.2 啟動 Java app\r
\r
無論係一般 Java 程式又或者係 Spring Boot 程式都一樣，我地只需要執行 \`java\` 既時候加入 \`-agentlib\` argument 就得：\r
\r
\`\`\`bash\r
java -jar -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000 App.jar\r
\`\`\`\r
\r
之後就會見到一句：\r
\r
\`\`\`plaintext\r
Listening for transport dt_socket at address: 8000\r
\`\`\`\r
\r
如果我地想等到 Eclipse 連接左個 agent 之後先畀個 Java 程式開始執行，可以用 \`suspend=y\`：\r
\r
\`\`\`bash\r
java -jar -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8000 App.jar\r
\`\`\`\r
\r
---\r
\r
## 3.3 Debug Java app\r
\r
喺 Eclipse 裡面新增一個 Debug configuration：\r
\r
1. 撳 toolbar 上面 Debug 掣（蜘蛛 icon）右邊既倒三角。\r
1. 撳 \`Debug configurations...\`。\r
1. Right-click 左邊個 list 上面既 \`Remote Java Application\` > \`New Configuration\`。\r
1. 撳落新增既配置，揀岩要 debug 既 project，Connection Type 用默認既 \`Standard (Socket Attach)\`，確保 host 以及 port 係對應返個程式運行既 host 以及我地啟動 Java app 果陣句 command 裡面畀 port。\r
1. 撳 Debug 去開始連接個 Java 程式。\r
1. 如果我地去 Debug perspective，就會見到有個 Remote Java application 既 debug session。\r
1. 如果個 Java 程式執行到我地落左 breakpoint 既 code lines，個 Java application 就會停落黎，而 Eclipse 個 Debug perspective 就會顯示相關既資訊出黎。\r
\r
---\r
\r
# 4 參考資料\r
\r
-   [Java Application Remote Debugging](https://www.baeldung.com/java-application-remote-debugging)\r
-   [Debugging Spring Applications](https://www.baeldung.com/spring-debugging)\r
`,sD=`# 1 Spring Cloud Config 簡介\r
\r
Spring Cloud Config 既出現係為左針對喺雲端上運行既 apps 實現 config externalization，即係將 app 既配置綜合存放喺一個地方，例如係一個只負責存放 app 配置檔案既 Git repo，然後用一個 config server 去讀取呢個 Git repo 裡面既 app 配置檔案，當 app 開始運行，佢第一件會做既事就係從 config server 下載 app 配置，然後再用呢啲配置去初始化，例如係連接數據庫。\r
\r
## 1.1 Externalize 配置\r
\r
將配置檔案存放喺另一個 Git repo 既好處：\r
\r
-   配置係會因時間而改變，我地冇理由只係因為配置檔有改動而重新 build 過個 artifact。\r
    -   視乎 CI pipeline（如 Jenkins）既步驟數量以及複雜程度，所需時間可以好長。\r
        -   有啲大公司會喺 pipeline 加入 code scan plugins，例如 SonarQube、Snyk、Fortify，呢啲 code scan 工具都需要唔少時間，亦有可能會因為呢啲 code scan 工具既資料庫更新，突然多左一啲 vulnerabilities 而令 pipeline 執行失敗。\r
        -   如果 pipeline 係 deploy 上 public cloud，視乎雲端平台、雲端技術以及雲端平台既硬件資源，部署所需時間可能需要幾分鐘，慢過喺本地用 JVM 運行個 app。\r
-   如果我地將配置存放喺另一個地方，咁我地只需要重新啟動個 app，或者 call Spring Boot Actuator 提供既 API，就可以刷新 app 既配置，方便快捷。\r
\r
參考資料：\r
\r
-   [Build Once, Run Anywhere: Externalize Your Configuration](https://reflectoring.io/externalize-configuration/#configuration-servers)\r
\r
---\r
\r
## 1.2 關於 12-Factor 既 Config\r
\r
12-Factor App 係為現代既 cloud apps 而訂立既開發規範。有人認為 Spring Cloud Config 達到 12-Factor App 既其中一項規範——Config。\r
\r
> 12 Factor implies that you should not store your configuration in a file in your application.\r
>\r
> But you can source those configs using other tools\r
>\r
> -   Puppet\r
> -   Kubernetes ConfigMaps\r
> -   Spring's configuration server\r
> -   Databases/Data\r
>\r
> Why bother? It reduces the likelihood of developers accidentally committing/sharing secret credentials. You ensure that your application/service does not have logic switching based on the environment.\r
\r
參考資料：\r
\r
-   [12 Factor Apps](https://dkbrummitt.com/hw/2019/08/12/12-factor/)（[備用一](https://web.archive.org/web/20230503055645/https://dkbrummitt.com/hw/2019/08/12/12-factor/)／[備用二](https://archive.ph/ki0JP)）\r
\r
---\r
\r
# 2 設定 Git 配置 repo\r
\r
## 2.1 建立 GitHub repo\r
\r
先建立一個全新既 GitHub repo，內容如下：\r
\r
-   \`/spring-cloud-config-client-demo\`\r
    -   \`spring-cloud-config-client-demo-dev.yml\`\r
\r
\`spring-cloud-config-client-demo-dev.yml\`：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
my:\r
  prop: Hello GitHub!\r
\`\`\`\r
\r
---\r
\r
## 2.2 使用 SSH\r
\r
\`\`\`bash\r
ssh-keyscan -t ecdsa github.com\r
ssh-keygen -t ecdsa -b 256 -m PEM -f keyfile\r
\`\`\`\r
\r
我地要將條 SSH public key（\`keyfile.pub\`）加落個 Git repo 度，而條 SSH private key（\`keyfile\`）就要放喺 config server 既配置度。\r
\r
---\r
\r
## 2.3 Clone Git repo\r
\r
\`\`\`bat\r
:: Windows Command Prompt\r
SET "GIT_SSH_COMMAND=ssh -i keyfile -o IdentitiesOnly=yes"\r
git clone ssh://git@github.com/blackr1234/spring-cloud-config-demo.git\r
\`\`\`\r
\r
---\r
\r
# 3 動手寫\r
\r
我地會用到 Spring Cloud Dependencies 黎做 dependency management，而 Spring Cloud Config Server 又會引入 Spring Boot Starter Web 既 dependency。\r
\r
## 3.1 Config server\r
\r
Project structure：\r
\r
-   \`src/main/java\`\r
    -   \`/code\`\r
        -   \`MainConfigServerApp.java\`\r
-   \`src/main/resources\`\r
    -   \`application.yml\`\r
    -   \`bootstrap.yml\`\r
\r
### 3.1.1 Maven dependencies\r
\r
\`\`\`xml\r
<dependencyManagement>\r
	<dependencies>\r
		<dependency>\r
			<groupId>org.springframework.cloud</groupId>\r
			<artifactId>spring-cloud-dependencies</artifactId>\r
			<version>Hoxton.SR12</version>\r
			<type>pom</type>\r
			<scope>import</scope>\r
		</dependency>\r
		<dependency>\r
			<groupId>org.springframework.boot</groupId>\r
			<artifactId>spring-boot-dependencies</artifactId>\r
			<version>2.3.12.RELEASE</version>\r
			<type>pom</type>\r
			<scope>import</scope>\r
		</dependency>\r
	</dependencies>\r
</dependencyManagement>\r
\r
<dependencies>\r
	<dependency>\r
		<groupId>org.springframework.cloud</groupId>\r
		<artifactId>spring-cloud-config-server</artifactId>\r
	</dependency>\r
</dependencies>\r
\`\`\`\r
\r
---\r
\r
### 3.1.2 Java code\r
\r
\`MainConfigServerApp.java\`：\r
\r
\`\`\`java\r
@EnableConfigServer\r
@SpringBootApplication\r
public class MainConfigServerApp {\r
\r
    public static void main(String[] args) {\r
        SpringApplication.run(MainConfigServerApp.class);\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
### 3.1.3 Bootstrap 配置\r
\r
\`bootstrap.yml\`：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
encrypt:\r
  key: michael ## or use the ENCRYPT_KEY environment variable\r
\r
spring:\r
  cloud:\r
    config:\r
      server:\r
        encrypt:\r
          enabled: true\r
\`\`\`\r
\r
---\r
\r
### 3.1.4 Application 配置\r
\r
\`application.yml\`：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
server:\r
  port: 8889\r
\r
spring:\r
  cloud:\r
    config:\r
      server:\r
        git:\r
          clone-on-start: true\r
          refresh-rate: 10\r
          ignore-local-ssh-settings: true\r
          uri: git@github.com:blackr1234/spring-cloud-config-demo.git\r
          default-label: master\r
          search-paths:\r
            - "{application}"\r
          host-key: 'AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg='\r
          host-key-algorithm: ecdsa-sha2-nistp256\r
          private-key: |\r
                        -----BEGIN EC PRIVATE KEY-----\r
                        MHcCAQEEIPnupl8oxl0Wj6xfOd/PobBG48m3pVkmubPem1XSyexEoAoGCCqGSM49\r
                        AwEHoUQDQgAEUGO+DDpbpsgp3C+H68iTTaklmcnk2MSbbh4bwQVnMws09eqFqvA4\r
                        RzcTRtAXt2IWkq4JHUg6rtjDnc/0zwSQyQ==\r
                        -----END EC PRIVATE KEY-----\r
\`\`\`\r
\r
註：\r
\r
-   \`spring.cloud.config.server.git.host-key\` 係 GitHub 既 host key，除非改用 GitLab 或者用其他 host key algorithm。\r
-   \`spring.cloud.config.server.git.host-key-algorithm\` 要對應返我地喺 [2.2 使用 SSH](#22-使用-ssh) 生成 key 所使用既 command。\r
-   \`spring.cloud.config.server.git.private-key\` 係我地喺 [2.2 使用 SSH](#22-使用-ssh) 生成既 \`keyfile\` 既內容。\r
\r
---\r
\r
## 3.2 Config client\r
\r
Project structure：\r
\r
-   \`src/main/java\`\r
    -   \`/code\`\r
        -   \`MainConfigClientApp.java\`\r
        -   \`MyComponent.java\`\r
-   \`src/main/resources\`\r
    -   \`application.yml\`\r
    -   \`bootstrap.yml\`\r
\r
### 3.2.1 Maven dependencies\r
\r
\`\`\`xml\r
<dependencyManagement>\r
	<dependencies>\r
		<dependency>\r
			<groupId>org.springframework.cloud</groupId>\r
			<artifactId>spring-cloud-dependencies</artifactId>\r
			<version>Hoxton.SR12</version>\r
			<type>pom</type>\r
			<scope>import</scope>\r
		</dependency>\r
		<dependency>\r
			<groupId>org.springframework.boot</groupId>\r
			<artifactId>spring-boot-dependencies</artifactId>\r
			<version>2.3.12.RELEASE</version>\r
			<type>pom</type>\r
			<scope>import</scope>\r
		</dependency>\r
	</dependencies>\r
</dependencyManagement>\r
\r
<dependencies>\r
	<dependency>\r
		<groupId>org.springframework.cloud</groupId>\r
		<artifactId>spring-cloud-starter-config</artifactId>\r
	</dependency>\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-web</artifactId>\r
	</dependency>\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-actuator</artifactId>\r
	</dependency>\r
</dependencies>\r
\`\`\`\r
\r
---\r
\r
### 3.2.2 Java code\r
\r
\`MainConfigClientApp.java\`：\r
\r
\`\`\`java\r
@SpringBootApplication\r
public class MainConfigClientApp {\r
\r
    public static void main(String[] args) {\r
        SpringApplication.run(MainConfigClientApp.class);\r
    }\r
}\r
\`\`\`\r
\r
\`MyComponent.java\`：\r
\r
\`\`\`java\r
@Slf4j\r
@RefreshScope\r
@Component\r
public class MyComponent {\r
\r
    @Value("\${my.prop:not-found}")\r
    private String myProp;\r
\r
    @PostConstruct\r
    public void init() {\r
        log.info("my.prop: {}", myProp);\r
    }\r
\r
    @EventListener\r
    public void refresh(RefreshScopeRefreshedEvent event) {\r
        log.info("Refreshed class [{}].", getClass().getName());\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
### 3.2.3 Bootstrap 配置\r
\r
\`bootstrap.yml\`：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
spring:\r
  application:\r
    name: spring-cloud-config-client-demo\r
  profiles:\r
    active: dev ## should be externalized\r
  cloud:\r
    config:\r
      enabled: true\r
      uri: http://localhost:8889\r
\`\`\`\r
\r
---\r
\r
### 3.2.4 Application 配置\r
\r
\`application.yml\`：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
management:\r
  endpoints:\r
    web:\r
      exposure:\r
        include: refresh, env\r
\`\`\`\r
\r
---\r
\r
# 4 簡單測試\r
\r
## 4.1 步驟\r
\r
1. 啟動 config server。\r
1. 啟動 config client。\r
1. 檢查 \`my.prop\` 既 value，應該係而家 Git 上面既 value。\r
1. 更改 Git 上既 \`my.prop\` 既 value。\r
1. Call config client 既 \`/actuator/refresh\` API。\r
    - Response body 裡面會有一個 array，其中一個 string 就係 \`my.prop\`，意味住 \`my.prop\` 既 value 改變左。\r
1. 檢查 \`my.prop\` 既 value，應該係我地改成既新 value。\r
\r
---\r
\r
## 4.2 檢查 property value\r
\r
針對 \`my.prop\`，我地有以下既方法：\r
\r
1. Call config client 既 \`/actuator/env\` API，response body 會有 \`my.prop\` 既 value，呢個方法只需要配置好 Actuator 就可以用。\r
1. 因為我地有特登寫 code 去做 logging，所以我地可以留意 config client 既 log 裡面 \`my.prop\` 既 value。\r
\r
---\r
\r
# 5 配置檔既應用次序\r
\r
喺 Spring，如果我地唔用 Spring Cloud Config 去 externalize 配置，咁我地個 artifact JAR 檔裡面可以有：\r
\r
1. \`application\`\r
1. \`application-{profile}\`\r
\r
因為 Spring 支援 YAML 以及 Java properties 既格式，而 YAML 格式又可以用 \`.yaml\` 以及 \`.yml\` 作為副檔名，咁我地其實最盡可以有 \`6\` 個檔案。\r
\r
而如果我地用 Spring Cloud Config 去 externalize 配置，咁我地喺既 Git repo 就會有：\r
\r
1. \`application\`\r
1. \`{spring.application.name}\`\r
1. \`application-{profile}\`\r
1. \`{spring.application.name}-{profile}\`\r
\r
如果又各有 \`yaml\`、\`.yml\` 以及 \`.properties\` 副檔名，咁就可以有 \`12\` 個組合咁多既檔案。\r
\r
經過反翻既測試，最後搵到 Spring Cloud Config 既 Git backend 讀取檔案既次序係：\r
\r
1. \`application.yaml\`\r
1. \`application.yml\`\r
1. \`application.properties\`\r
1. \`{spring.application.name}.yaml\`\r
1. \`{spring.application.name}.yml\`\r
1. \`{spring.application.name}.properties\`\r
1. \`application-{profile}.yaml\`\r
1. \`application-{profile}.yml\`\r
1. \`application-{profile}.properties\`\r
1. \`{spring.application.name}-{profile}.yaml\`\r
1. \`{spring.application.name}-{profile}.yml\`\r
1. \`{spring.application.name}-{profile}.properties\`\r
\r
解釋：\r
\r
-   呢個次序既意思係，當同一個名既配置（例如 \`my.prop\`）出現喺以上所有既檔案裡面，咁 Spring Cloud Config 係會以呢個次序去讀取檔案去取值，而較遲讀取既值係會覆蓋之前讀取既值。\r
-   Java properties 檔會「贏」過曬 YAML 格式，最終值會係黎自 Java properties 配置檔。\r
-   冇 \`-{profile}\` 既檔案就係 default profile，而特定既環境 profile 係一定會比較遲讀取，覆蓋默認既配置。\r
\r
---\r
\r
# 6 新版本\r
\r
## 6.1 App 需要修改既地方\r
\r
### 6.1.1 版本\r
\r
更新 config server 以及 config client 既 dependency managements 去以下既版本：\r
\r
\`\`\`xml\r
<dependencyManagement>\r
	<dependencies>\r
		<dependency>\r
			<groupId>org.springframework.boot</groupId>\r
			<artifactId>spring-boot-dependencies</artifactId>\r
			<version>2.7.0</version>\r
			<type>pom</type>\r
			<scope>import</scope>\r
		</dependency>\r
		<dependency>\r
			<groupId>org.springframework.cloud</groupId>\r
			<artifactId>spring-cloud-dependencies</artifactId>\r
			<version>2021.0.3</version>\r
			<type>pom</type>\r
			<scope>import</scope>\r
		</dependency>\r
	</dependencies>\r
</dependencyManagement>\r
\`\`\`\r
\r
---\r
\r
### 6.1.2 \`bootstrap.yml\` 合併入 \`application.yml\`\r
\r
最新版既 Spring Cloud Config 已經唔再用 \`bootstrap.yml\` 檔，所以我地要將佢既 properties 搬去 \`application.yml\`。\r
\r
不過如果真係想用返 \`bootstrap.yml\` 呢個舊既方式，可以加入呢個 dependency：\r
\r
\`\`\`xml\r
<dependency>\r
	<groupId>org.springframework.cloud</groupId>\r
	<artifactId>spring-cloud-starter-config</artifactId>\r
</dependency>\r
\`\`\`\r
\r
---\r
\r
### 6.1.3 新 \`spring.config.import\` 配置\r
\r
Spring Cloud Config client 既 \`spring.cloud.config.uri\` 已經被 \`spring.config.import\` 取代，而 value 都有所唔同：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
# 舊配置，bootstrap.yml 檔\r
spring:\r
  cloud:\r
    config:\r
	  uri: http://localhost:8889\r
\r
---\r
\r
# 新配置，application.yml 檔\r
spring:\r
  config:\r
    import: 'optional:configserver:http://localhost:8889'\r
\`\`\`\r
\r
註：\r
\r
-   如果唔加上 \`optional:\`，咁當 config client 啟動既時候連接唔到 config server，config client 就會 throw exception 並且終止運行。\r
-   如果加上 \`optional:\`\r
    1. 就算 config client 啟動果一刻連接唔到 config server，佢都唔會終止運行。\r
    1. 如果之後我地手動 call config client 既 \`/actuator/refresh\` API，而 config client 成功連接到 config server，咁佢會重新獲取配置，而有 \`@RefreshScope\` 既 components 都會獲得新既配置數值。\r
\r
---\r
\r
# 7 連線容錯測試\r
\r
根據測試，Git backend 係可以容許連線失敗，因為 config server 會有 file cache。\r
\r
## 7.1 使用 Git backend 而 Git 連線失敗\r
\r
模擬連線失敗場景：\r
\r
1. 啟動 config server。\r
1. 啟動 config client。\r
1. 呢個時候，我地可以見到 config server 會將個 Git repo clone 到一個叫 \`config-repo-<random numbers>\` 既 folder，呢個 folder 係喺我地既 JVM temp folder（e.g. \`C:/Users/Michael/AppData/Local/Temp\`）裡面。\r
1. 喺 OS 層面斷開網絡。\r
1. 重新啟動 config client，佢依然可以喺 config server 度拎到配置，咁係因為 config server 用左上面提到既 file cache。\r
\r
---\r
\r
# 8 參考資料\r
\r
-   [Spring Cloud Config 使用與原理分析](https://blog.csdn.net/qq_20597727/article/details/82465069)（[備用一](https://web.archive.org/web/20230503105421/https://blog.csdn.net/qq_20597727/article/details/82465069)／[備用二](https://archive.ph/hTqbk)）\r
-   [Let’s Learn Together Sessions: Spring Cloud Config Server](https://medium.com/javarevisited/lets-learn-together-sessions-spring-cloud-config-server-17ecd171d86)\r
-   [StackOverflow - No spring.config.import property has been defined](https://stackoverflow.com/questions/67507452/no-spring-config-import-property-has-been-defined/70813003#70813003)\r
-   [Spring 官方 blog - Spring Cloud 2020.0.0 (aka Ilford) Is Available](https://spring.io/blog/2020/12/22/spring-cloud-2020-0-0-aka-ilford-is-available)\r
    -   > NOTE: Bootstrap has been disabled by default. The new way of importing configuration is via the new \`spring.config.import\` functionality provided by Spring Boot 2.4.\r
    -   > If you require the legacy bootstrap functionality add the \`org.springframework.cloud:spring-cloud-starter-bootstrap\` dependency to your project.\r
-   [Spring Cloud Config - Config First Bootstrap](https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#config-first-bootstrap)\r
    -   > Spring Boot 2.4 introduced a new way to import configuration data via the spring.config.import property. This is now the default way to bind to Config Server.\r
        >\r
        > To optionally connect to config server set the following in application.properties:\r
        >\r
        > **application.properties**\r
        >\r
        > \`\`\`java\r
        > spring.config.import=optional:configserver:\r
        > \`\`\`\r
\r
延伸閱讀：\r
\r
-   [Spring 官方 blog - Config file processing in Spring Boot 2.4](https://spring.io/blog/2020/08/14/config-file-processing-in-spring-boot-2-4)\r
`,lD=`# 1 cURL 簡介\r
\r
cURL 係一個有好長歷史既 command line 工具，佢既主要用途係發出 HTTP 請求，可以用於測試 HTTP APIs 或者自動化等，同 Postman 既最核心功能相似，但就冇提供針對 API 測試既功能。\r
\r
---\r
\r
# 2 Request methods\r
\r
## 2.1 GET\r
\r
POST method 一般係用黎獲取資源，例如獲取訂單列表、獲取某一份訂單。\r
\r
\`\`\`bash\r
curl "<URL>"\r
\`\`\`\r
\r
註：\r
\r
-   默認係 \`GET\` method。\r
\r
例子：\r
\r
\`\`\`bash\r
curl https://jsonplaceholder.typicode.com/todos/1\r
\`\`\`\r
\r
---\r
\r
## 2.2 POST\r
\r
POST method 一般係用黎新增資源（或者更新資源，視乎 API 點樣實現），例如新增訂單。\r
\r
\`\`\`bash\r
curl -d "<request body>" "<URL>"\r
\`\`\`\r
\r
註：\r
\r
-   因為有 \`-d\`（request body）但係冇 \`-X\`（request method），所以默認會用 \`POST\` method。\r
\r
例子：\r
\r
\`\`\`bash\r
curl -d "{ "title": \\"Michael's new title\\" }" https://jsonplaceholder.typicode.com/todos\r
\`\`\`\r
\r
---\r
\r
## 2.3 其他 methods\r
\r
GET、POST 以外比較常見既 request methods 有：\r
\r
| Request method | 用途                                                                                          |\r
| :------------: | --------------------------------------------------------------------------------------------- |\r
|      PUT       | 更新資源（整個覆蓋）                                                                          |\r
|     PATCH      | 更新資源（只更新一部分）                                                                      |\r
|     DELETE     | 刪除資料                                                                                      |\r
|    OPTIONS     | 了解資源所支持既選項，例如 request methods（\`Allow\`）、CORS（\`Access-Control-Allow-Methods\`） |\r
\r
\`\`\`bash\r
curl -X "<method>" "<URL>"\r
\`\`\`\r
\r
例子：\r
\r
\`\`\`bash\r
curl -X PUT -d "{ "title": \\"Michael's new title\\" }" https://jsonplaceholder.typicode.com/todos/1\r
\`\`\`\r
\r
\`\`\`bash\r
curl -X PATCH -d "{ "title": \\"Michael's new title\\" }" https://jsonplaceholder.typicode.com/todos/1\r
\`\`\`\r
\r
---\r
\r
# 3 Request body\r
\r
通常 \`POST\`、\`PUT\`、\`PATCH\` 都會伴隨 request body。\r
\r
\`\`\`bash\r
curl -d "<request body>" "<URL>"\r
\`\`\`\r
\r
註：\r
\r
-   如果冇 \`-X\`，默認會使用 \`POST\` method。\r
\r
例子：\r
\r
\`\`\`bash\r
curl -d "{ "title": \\"Michael's new title\\" }" https://jsonplaceholder.typicode.com/todos\r
\`\`\`\r
\r
---\r
\r
# 4 Request headers\r
\r
常見既 request headers 有 \`Authorization\`、\`Content-Type\`、\`Content-Length\`、\`Accept\`、\`Cookie\`、\`Origin\` 等。\r
\r
\`\`\`bash\r
curl -H "<k1: v1>" -H "<k2: v2>" "<URL>"\r
\`\`\`\r
\r
註：\r
\r
-   當有 \`-d\`（request body）既時候，cURL 會自動計算字元長度然後加入 \`Content-Length\` header。\r
\r
例子：\r
\r
\`\`\`bash\r
curl -H "Origin: https://example.com" https://jsonplaceholder.typicode.com/todos/1\r
\`\`\`\r
\r
## 4.1 Authorization：Basic Authentication\r
\r
cURL 提供簡單既方法去傳入 Basic Authentication 既 username 以及 password，佢會幫我地轉化成 Base64，作為 \`Authorization\` header。\r
\r
\`\`\`bash\r
curl -u "<username>:<password>" "<URL>"\r
\`\`\`\r
\r
相等於自己轉化成 Base64：\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
var USERNAME = "Mick";\r
var PASSWORD = "Chung";\r
btoa(unescape(encodeURIComponent(USERNAME + ":" + PASSWORD))) // 'TWljazpDaHVuZw=='\r
\`\`\`\r
\r
然後放落 \`Authorization\` header：\r
\r
\`\`\`bash\r
curl -H "Authorization: Basic TWljazpDaHVuZw==" "<URL>"\r
\`\`\`\r
\r
---\r
\r
# 5 其他選項\r
\r
## 5.1 詳細模式\r
\r
詳細模式可以顯示 response body 以外既數據，例如：\r
\r
-   Request method\r
-   Request headers\r
-   Response status code\r
-   Response headers\r
\r
如果唔太熟悉 cURL 既選項背後既邏輯會幫你發送一個點樣既請求，又或者想了解曬成個完整 response 係點樣，就一定要用詳細模式。\r
\r
\`\`\`bash\r
curl "<URL>" -v\r
\`\`\`\r
\r
例子：\r
\r
\`\`\`bash\r
curl https://jsonplaceholder.typicode.com/todos/1 -v\r
\`\`\`\r
\r
---\r
\r
## 5.2 Follow redirects\r
\r
如果 response status code 係 \`3xx\`（例如 \`301\`、\`302\`），而 response headers 帶有 \`Location\`，咁就即係個 response 因為某啲原因想 redirect 我地去另一個 URL。\r
\r
\`\`\`bash\r
curl "<URL>" -L\r
\`\`\`\r
\r
例子：\r
\r
第一步：先用詳細模式，留意下面 command 既執行結果：\r
\r
-   Response status code 係 \`301 Moved Permanently\`。\r
-   Response headers 帶有 \`Location: https://www.google.com/\`。\r
-   Response body 帶有 \`301 Moved\`、\`The document has moved\` 字樣，並唔係我地期望所見到既正常 Google 網頁既 HTML 內容。\r
\r
\`\`\`bash\r
curl https://google.com -v\r
\`\`\`\r
\r
第二步：命令 cURL 去 follow redirects，今次 response body 先係正常既 Google 網頁既 HTML 內容。\r
\r
\`\`\`bash\r
curl https://google.com -L\r
\`\`\`\r
\r
---\r
\r
# 6 下載檔案\r
\r
\`\`\`bash\r
curl --output-dir "<output folder path>" -o "<output file name>" "<URL>"\r
\`\`\`\r
\r
\`\`\`bash\r
curl --output-dir "<output folder path>" -O "<URL>"\r
\`\`\`\r
\r
註：\r
\r
-   \`--output-dir\` 指定下載既 folder 必須要存在。\r
-   如果有 \`-O\`，就會用返個下載 URL 既檔名（唔包括任何 path）黎儲存喺本地。\r
    -   如果個下載既 folder 已經存在相同檔名既檔案，呢個檔案就會被覆寫。\r
-   一個係細楷 \`-o\`；一個係大楷 \`-O\`，唔好混淆兩者。\r
\r
---\r
\r
# 7 參考資料\r
\r
-   [cURL man page](https://curl.se/docs/manpage.html)\r
-   [JSONPlaceholder](http://jsonplaceholder.typicode.com/guide/)\r
-   [The HTTP Request Headers List](https://flaviocopes.com/http-request-headers/)\r
-   [Redirections in HTTP](https://developer.mozilla.org/en-US/docs/Web/HTTP/Redirections)\r
`,cD=`# 1 Docker 簡介\r
\r
Docker 係一種利用 Linux 內核既功能黎達到將程式同系統資源分隔既虛擬化技術。\r
\r
## 1.1 同其他技術既分別\r
\r
喺 Docker 出現之前，大家一般都係用具備完整 Windows 或者 Linux OS 既 virtual machines，但咁做係有好多壞處，例如慢、需要大量儲存空間、難自動化、建設成本高、維護成本高。\r
\r
呢啲 virtual machines 如果要做到程式與程式之間完全隔離，就要每一個程式都用一個完整既 OS 裝住佢，非常麻煩。相反，Docker 就非常方便，需要時又可以做到有限度咁共用資源。\r
\r
|                       產品                        | 描述                                                                   | 虛擬化步驟、使用情況                                                                                                                                                                   |\r
| :-----------------------------------------------: | ---------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| VMware Workstation、VirtualBox、Parallels Desktop | 因為需要透過一個完整既主 OS 黎儲取硬件，所以屬於 Type 2 hypervisor。   | 先喺硬件上面安裝完整既主 OS，再喺上面安裝帶虛擬化功能既軟件，再由呢個軟件虛擬化一個 OS。喺隔離狀況下執行 Windows GUI 程式。                                                            |\r
|               VMware ESXi、Hyper-V                | 因為可以唔需要透過主 OS 而係直接存取硬件，所以屬於 Type 1 hypervisor。 | 先喺硬件上面安裝帶虛擬化功能既系統，再安裝虛擬化既 OS，再喺裡面執行 Windows GUI 程式，虛擬化 OS 之間可以係完全隔離，但因為虛擬化 OS 係一個完整既 OS 環境，所以裡面既程式係共用資源既。 |\r
|                  Sandboxie Plus                   | OS 層級既輕量級虛擬化軟件。                                            | 喺 Windows 環境裡面安裝帶沙盒功能既程式，再喺隔離狀態下執行 Windows GUI 程式。                                                                                                         |\r
|                  Windows Sandbox                  | Windows 10 既 1903 版開始內置既基於 Hyper-V 技術既輕量級虛擬化軟件。   | 喺 Windows 環境裡面啟動，再喺隔離狀態下執行 Windows GUI 程式。                                                                                                                         |\r
|                      Docker                       | 利用 Linux 內核既功能達到 OS 層級既虛擬化。                            | 喺隔離狀態下執行非 GUI 既多層儲存結構既 Docker images。                                                                                                                                |\r
\r
喺 Docker 裡面，執行緊既 runtime 叫 Docker containers。因為用左 OverlayFS（overlay2）儲存技術做到多層儲存結構，所以每個 Docker container 其實都只係文件系統上既一層 layer，只有 container（隔離區）裡面新增既檔案先會佔用儲存空間。\r
\r
---\r
\r
## 1.2 使用場景\r
\r
對於開發者，使用 Docker 用好處係：\r
\r
-   只需要安裝一個 Docker 程式，就可以用到唔同既 infrastructure（例如 JDK、Maven、MySQL、Redis、RabbitMQ），唔需要自己下載個別既程式再安裝。\r
-   因為資源隔離既關係，要重新設定呢啲 infrastructure 非常簡單，只需要將個 container throw away 再重新 \`run\` 一個就得。\r
-   想保留資料既話，又可以用 volume。\r
-   用同一個方式就可以改到任何程式執行既 port，唔需要爬文睇下個別既程式要點樣改配置。\r
\r
對於企業，Docker 就用喺 K8s（Kubernetes）上，用黎做雲端部署。\r
\r
---\r
\r
# 2 Image\r
\r
喺 Docker，如果我地想 reference 一個 Docker image，我地可以用：\r
\r
|          方式          | 解釋                                                                                                                                                                                                                                                   |                   例子                    |\r
| :--------------------: | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | :---------------------------------------: |\r
|        Image ID        | 一組 alphanumeric 既 ID（注意：同 digest 係兩樣野黎）。同 Git commit ID 一樣，只要提供既 image ID 既一部分能夠唯一咁辨別到個 image 就已經足夠（冇兩個或以上既 image IDs 係以相同 value 開頭）。                                                        |           \`3e\`、\`3edbb69f9a49 \`           |\r
|       Image repo       | 一個 fully qualified 既 image name，如果係喺 Docker Hub registry 既官方 images，就可以省卻 host name 同埋 username；如果係 Docker Hub registry 既非官方 images，就會有 username；但如果係其他 registry（例如機構自己既 artifactory）就會有 host name。 | \`openjdk\`、\`localhost:5000/mick/my-image\` |\r
| Image repo + image tag | Image tag 一般用黎表示版本號碼。如果唔提供 tag，就係指緊 \`latest\` tag。                                                                                                                                                                                |     \`redis:7\`、\`rabbitmq:management\`      |\r
\r
如果係官方 images 既話，以下都係指緊同一個 image：\r
\r
-   \`redis\`\r
-   \`redis:latest\`\r
-   \`library/redis\`\r
-   \`library/redis:latest\`\r
-   \`registry.hub.docker.com/library/redis\`\r
-   \`registry.hub.docker.com/library/redis:latest\`\r
\r
## 2.1 查詢 image 列表\r
\r
查詢所有 images（包括我地自己 build image 果陣產生既冇 repo、冇 tag 既 intermediate images／layers）：\r
\r
\`\`\`bash\r
docker image ls -a\r
\`\`\`\r
\r
---\r
\r
## 2.2 下載 image\r
\r
下載 \`latest\` tag：\r
\r
\`\`\`bash\r
docker image pull "<repo>"\r
\`\`\`\r
\r
下載特定 tag：\r
\r
\`\`\`bash\r
docker image pull "<repo>:<tag>"\r
\`\`\`\r
\r
例子：\r
\r
\`\`\`bash\r
docker image pull redis:latest\r
docker image pull rabbitmq:management\r
\`\`\`\r
\r
---\r
\r
## 2.3 Tag image\r
\r
Tag image 既作用就好似我地畀一個別名佢咁。\r
\r
根據 image ID 去新增 tag：\r
\r
\`\`\`bash\r
docker image tag "<image ID>" "<same repo>:<new tag>"\r
docker image tag "<image ID>" "<new repo>:<any tag>"\r
\`\`\`\r
\r
根據 repo ＋ tag 黎為指定 image 新增 tag：\r
\r
\`\`\`bash\r
docker image tag "<repo>:<tag>" "<same repo>:<new tag>"\r
docker image tag "<repo>:<tag>" "<new repo>:<any tag>"\r
\`\`\`\r
\r
Tag 一個 \`latest\` tag 既 repo：\r
\r
\`\`\`bash\r
docker image tag "<repo>" "<any repo>:<any tag>"\r
\`\`\`\r
\r
---\r
\r
## 2.4 上載 image\r
\r
上載 image 到 registry：\r
\r
\`\`\`bash\r
docker image push "<repo>"\r
docker image push "<repo>:<tag>"\r
\`\`\`\r
\r
---\r
\r
## 2.5 儲存 image 檔案\r
\r
我地可以儲存一個 image 做一個 \`.tar\` 檔。\r
\r
\`\`\`bash\r
docker image save -o "<file name.tar>" "<image ID>"\r
docker image save -o "<file name.tar>" "<repo>"\r
docker image save -o "<file name.tar>" "<repo>:<tag>"\r
\`\`\`\r
\r
例子：\r
\r
\`\`\`bash\r
docker image save -o "C:/Users/Michael/Desktop/busybox.tar" busybox:latest\r
\`\`\`\r
\r
之後會開啟一個 interactive shell 畀我地執行 Linux commands。\r
\r
---\r
\r
## 2.6 移除 tag／刪除 image\r
\r
喺 Docker 裡面，無論係移除 tag 或者刪除 image，我地都係用同一個 command。\r
\r
個邏輯係：\r
\r
-   如果根據 image ID 黎刪除，咁我地可能係想喺本地刪除呢個 image，但 Docker 唔知你係咪真係想咁做，所以如果呢個 image 畀多過 1 個 repo + tag reference 緊，咁我地就需要用 \`-f\` 黎強制刪除。\r
-   當我地移除一個 image 既最後一個 repo + tag 既時候，Docker 就會喺本地刪除呢個 image。\r
-   如果執行操作之後呢個 image 仲有至少 1 個 repo + tag，咁 Docker 就唔會喺本地刪除呢個 image，只會移除 tag。\r
\r
移除 \`latest\` tag：\r
\r
\`\`\`bash\r
docker image rm "<repo>"\r
\`\`\`\r
\r
移除特定 repo + tag：\r
\r
\`\`\`bash\r
docker image rm "<repo>:<tag>"\r
\`\`\`\r
\r
用 image ID 黎直接刪除 image（如果一個 image ID 有好幾個 repo + tag，就需要用 \`-f\` 黎強制刪除）：\r
\r
\`\`\`bash\r
docker image rm "<image ID>"\r
docker image rm -f "<image ID>"\r
\`\`\`\r
\r
例子：\r
\r
\`\`\`bash\r
docker image rm redis\r
docker image rm rabbitmq:management\r
docker image rm 3e\r
docker image rm -f 3e\r
\`\`\`\r
\r
---\r
\r
# 3 Container\r
\r
## 3.1 查詢 container 列表\r
\r
查詢所有 containers（包括 exit 左既）：\r
\r
\`\`\`bash\r
docker container ls -as\r
\`\`\`\r
\r
查詢特定 status 既 containers（\`-f\` 指 filter）：\r
\r
\`\`\`bash\r
docker container ls -f status="<status>"\r
\`\`\`\r
\r
例子：\r
\r
\`\`\`bash\r
docker container ls -f status=created\r
docker container ls -f status=running\r
docker container ls -f status=paused\r
docker container ls -f status=restarting\r
docker container ls -f status=removing\r
docker container ls -f status=exited\r
docker container ls -f status=dead\r
\`\`\`\r
\r
---\r
\r
## 3.2 執行 image／建立 container\r
\r
一般我地都會用個 image 既 \`Dockerfile\` 裡面預先定義左既 \`CMD\` 或者 \`ENTRYPOINT\` 黎啟動程式，但如果呢個 image 有好幾個程式既 binaries 喺裡面，或者呢啲程式可以加 options 黎 customize 佢既 behaviors 而我地又有需要既話，我地可以 override 佢既 command。\r
\r
\`\`\`bash\r
docker container run "<image ID>" "[override command]"\r
\`\`\`\r
\r
\`\`\`bash\r
docker container run "<repo>:<tag>" "[override command]"\r
\`\`\`\r
\r
執行 \`latest\` tag 既 image：\r
\r
\`\`\`bash\r
docker container run "<repo>" "[override command]"\r
\`\`\`\r
\r
|              Option               | 解釋                                                                                                                                                                              |\r
| :-------------------------------: | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
|             \`--name\`              | Container name，一個固定既 container 名。                                                                                                                                         |\r
|               \`-d\`                | Detached，個 container process 唔會 attach 落現時既 console window，只會返回 container ID，如果唔介意要 keep 住呢個 console window，或者想即刻睇住啲 log，咁可以唔用呢個 option。 |\r
|              \`--rm\`               | Remove，即係當個 container exit 左，Docker 會將佢自動 remove。                                                                                                                    |\r
| \`-p <host port>:<container port>\` | Publish／bind ports。如果有兩個程式指定左同一個 port，咁我地可以將佢地 map 落主 OS 既兩個唔同 ports。                                                                             |\r
|        \`-e <key>:<value>\`         | Container 裡面既 environment variable。                                                                                                                                           |\r
| \`-v <host path>:<container path>\` | Volume，可以令 container 入面既某個 path map 到主 OS 既某個 path，當有檔案寫落去，就會去左主 OS 度，做到保存資料既效果，重開 container 都可以沿用返呢啲資料。                     |\r
\r
註：\r
\r
-   如果本地冇呢個 image，Docker 會自動幫我地下載。\r
-   如果個 Docker Desktop 唔係用 WSL，咁就可能需要先去 Docker Desktop 既設定度將 \`C:/\` 加落 Resources ➜ File Sharing。\r
\r
---\r
\r
## 3.3 執行 image／建立 container 既熱門例子\r
\r
### 3.3.1 Busybox\r
\r
\`busybox\` 係測試用既 image，裡面包含一啲 Linux 既工具，可以畀我地學習或者測試 Linux 既 commands。\r
\r
\`\`\`bash\r
docker container run -it --rm busybox:latest\r
\`\`\`\r
\r
---\r
\r
### 3.3.2 MySQL\r
\r
MySQL server：\r
\r
\`\`\`bash\r
docker container run -d --rm -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_USER=mysql -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=dev -v "C:/docker-data/mysql:/var/lib/mysql" --name mysql mysql:latest\r
\`\`\`\r
\r
MySQL CLI：\r
\r
\`\`\`bash\r
docker container exec -it mysql mysql -u"root" -p"root" dev\r
docker container exec -it mysql mysql -u"mysql" -p"mysql" dev\r
\`\`\`\r
\r
JDBC connection string：\r
\r
\`\`\`plaintext\r
jdbc:mysql://localhost:3306/dev\r
\`\`\`\r
\r
---\r
\r
### 3.3.3 MariaDB\r
\r
MariaDB server：\r
\r
\`\`\`bash\r
docker container run -d --rm -p 3306:3306 -e MARIADB_ROOT_PASSWORD=root -e MARIADB_USER=mariadb -e MYSQL_PASSWORD=mariadb -e MARIADB_DATABASE=dev -v "C:/docker-data/mariadb:/var/lib/mysql" --name mariadb mariadb:latest\r
\`\`\`\r
\r
MariaDB CLI：\r
\r
\`\`\`bash\r
docker container exec -it mariadb mariadb -u"root" -p"root" dev\r
docker container exec -it mariadb mariadb -u"mariadb" -p"mariadb" dev\r
\`\`\`\r
\r
JDBC connection string：\r
\r
\`\`\`plaintext\r
jdbc:mariadb://localhost:3306/dev\r
\`\`\`\r
\r
---\r
\r
### 3.3.4 Oracle\r
\r
Oracle Express Edition：\r
\r
\`\`\`bash\r
docker container run -d --rm -p 1521:1521 -e ORACLE_PWD=oracle -v "C:/docker-data/oracle:/opt/oracle/oradata" --name oracle container-registry.oracle.com/database/express:21.3.0-xe\r
\`\`\`\r
\r
注意：Oracle Express Edition 21 會使用大約 12 GB 儲存空間。\r
\r
然後：\r
\r
\`\`\`bash\r
docker container exec -it oracle sqlplus system/oracle\r
\`\`\`\r
\r
亦可以用 SQL Developer 連接：\r
\r
-   用戶：\`system\`\r
-   密碼：\`oracle\`\r
-   SID：\`xe\`\r
\r
JDBC connection string：\r
\r
\`\`\`plaintext\r
jdbc:oracle:thin:@localhost:1521:xe\r
\`\`\`\r
\r
---\r
\r
### 3.3.5 SQL Server\r
\r
SQL Server server：\r
\r
\`\`\`bash\r
docker container run -d --rm -p 1433:1433 -e "ACCEPT_EULA=Y" -e MSSQL_SA_PASSWORD=StrongPassword123 -v "C:/docker-data/sqlserver:/var/opt/mssql/data" --name sqlserver mcr.microsoft.com/mssql/server:2022-latest\r
\`\`\`\r
\r
SQL Server CLI：\r
\r
\`\`\`bash\r
docker container exec -it sqlserver /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P StrongPassword123\r
\`\`\`\r
\r
然後：\r
\r
\`\`\`sql\r
CREATE DATABASE dev;\r
GO\r
\`\`\`\r
\r
JDBC connection string：\r
\r
\`\`\`plaintext\r
jdbc:sqlserver://localhost:1433;databaseName=dev;encrypt=false\r
\`\`\`\r
\r
---\r
\r
### 3.3.6 MongoDB\r
\r
MongoDB server：\r
\r
\`\`\`bash\r
docker container run -d --rm -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=mongodb -e MONGO_INITDB_ROOT_PASSWORD=mongodb -v "C:/docker-data/mongodb:/data/db" --name mongodb mongo:latest\r
\`\`\`\r
\r
MongoDB CLI：\r
\r
\`\`\`bash\r
docker container exec -it mongodb mongosh -u mongodb -p mongodb\r
\`\`\`\r
\r
然後：\r
\r
\`\`\`plaintext\r
use mydb\r
db.createCollection("mycollection")\r
\`\`\`\r
\r
MongoDB connection string：\r
\r
\`\`\`plaintext\r
mongodb://mongodb:mongodb@localhost:27017\r
\`\`\`\r
\r
---\r
\r
### 3.3.7 RabbitMQ\r
\r
RabbitMQ server 連 management 介面：\r
\r
\`\`\`bash\r
docker container run -d --rm -p 5672:5672 -p 15672:15672 -e RABBITMQ_DEFAULT_USER=rmq -e RABBITMQ_DEFAULT_PASS=rmq -e RABBITMQ_NODENAME=rabbit@docker-rabbitmq -v "C:/docker-data/rabbitmq:/var/lib/rabbitmq/mnesia" -h "docker-rabbitmq" --name rmq rabbitmq:management\r
\`\`\`\r
\r
Management 介面：\r
\r
-   地址：[http://localhost:15672](http://localhost:15672)\r
-   用戶：\`rmq\`\r
-   密碼：\`rmq\`\r
\r
---\r
\r
### 3.3.8 Redis\r
\r
Redis server：\r
\r
\`\`\`bash\r
docker container run -d --rm -p 6379:6379 -v "C:/docker-data/redis:/data" --name redis redis:latest redis-server --save 10 1 --requirepass redispw\r
\`\`\`\r
\r
Redis CLI：\r
\r
\`\`\`bash\r
docker container exec -it redis redis-cli -a redispw\r
\`\`\`\r
\r
---\r
\r
### 3.3.9 OpenJDK（Azul Zulu、Microsoft）\r
\r
查詢 JDK 版本：\r
\r
\`\`\`bash\r
docker container run --rm azul/zulu-openjdk:17 java -version\r
docker container run --rm mcr.microsoft.com/openjdk/jdk:17-ubuntu java -version\r
\`\`\`\r
\r
喺一個 project folder 度執行 \`java\` command：\r
\r
\`\`\`bat\r
:: Windows Command Prompt\r
CD C:\\docker-data\\spring-boot-demo\r
docker container run --rm -p 8080:8080 -v "%CD%/target:/usr/project" --name=spring-boot-demo azul/zulu-openjdk:17 java -jar "/usr/project/spring-boot-demo-1.0.0.jar"\r
\`\`\`\r
\r
假如個 Spring Boot project 有 expose 到 Actuator Health API：[http://localhost:8080/actuator/health](http://localhost:8080/actuator/health)\r
\r
---\r
\r
### 3.3.10 Maven\r
\r
查詢 Maven 以及 JDK 版本：\r
\r
\`\`\`bash\r
docker container run --rm maven:3-openjdk-17 mvn -v\r
\`\`\`\r
\r
喺一個 project folder 度執行一個 Maven plugin goal（用返 user 既 \`.m2\` folder）：\r
\r
\`\`\`bat\r
:: Windows Command Prompt\r
CD C:\\docker-data\\spring-boot-demo\r
docker container run --rm -p 8080:8080 -v "%CD%:/usr/project" -v "%USERPROFILE%/.m2:/root/.m2" --name=spring-boot-demo maven:3-openjdk-17 mvn spring-boot:run -f /usr/project\r
\`\`\`\r
\r
假如個 Spring Boot project 有 expose 到 Actuator Health API：[http://localhost:8080/actuator/health](http://localhost:8080/actuator/health)\r
\r
---\r
\r
### 3.3.11 Snyk\r
\r
要 scan 一個 Java Maven project，喺 project root directory（有 \`pom.xml\` 既 folder）度執行：\r
\r
\`\`\`bash\r
set SNYK_TOKEN=XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\r
docker container run --rm --env SNYK_TOKEN -v "%CD%:/app" snyk/snyk:maven-3-jdk-17 snyk test\r
docker container run --rm --env SNYK_TOKEN -v "%CD%:/app" snyk/snyk:maven-3-jdk-17 snyk monitor\r
\`\`\`\r
\r
檢視 CVE 測試結果：\r
\r
[https://app.snyk.io](https://app.snyk.io)\r
\r
---\r
\r
### 3.3.12 Selenium Grid\r
\r
Selenium Grid server（standalone Chrome）：\r
\r
\`\`\`bash\r
docker container run -d --rm -p 4444:4444 -p 7900:7900 -e SE_NODE_MAX_SESSIONS=3 -e SE_NODE_OVERRIDE_MAX_SESSIONS=true --shm-size 2g --name selenium-chrome selenium/standalone-chrome:latest\r
\`\`\`\r
\r
介面：\r
\r
-   Selenium Grid：[http://localhost:4444](http://localhost:4444)\r
-   VNC client：[http://localhost:7900?autoconnect=1&resize=scale&password=secret](http://localhost:7900?autoconnect=1&resize=scale&password=secret)\r
    -   密碼：secret\r
\r
---\r
\r
### 3.3.13 Sonatype Nexus\r
\r
Sonatype Nexus repository server（可能要幾分鐘啟動）：\r
\r
\`\`\`bash\r
docker container run -d --rm -p 8081:8081 -v "C:/docker-data/nexus:/nexus-data" --name nexus sonatype/nexus3:latest\r
\`\`\`\r
\r
介面：[http://localhost:8081/#browse/browse](http://localhost:8081/#browse/browse)\r
\r
---\r
\r
## 3.4 喺 container 裡面執行 commands\r
\r
\`\`\`bash\r
docker container exec -it "<container name>" "<command>"\r
docker container exec -it "<container ID>" "<command>"\r
\`\`\`\r
\r
例子：\r
\r
\`\`\`bash\r
docker container exec -it redis redis-cli\r
docker container exec -it spring-boot-demo /bin/sh\r
docker container exec -it spring-boot-demo /bin/bash\r
\`\`\`\r
\r
---\r
\r
## 3.5 重新啟動 container\r
\r
\`\`\`bash\r
docker container restart "<container name>"\r
docker container restart "<container ID>"\r
\`\`\`\r
\r
---\r
\r
## 3.6 暫停／恢復運行 container\r
\r
暫停 run 緊既 container：\r
\r
\`\`\`bash\r
docker container pause "<container name>"\r
docker container pause "<container ID>"\r
\`\`\`\r
\r
恢復運行 pause 左既 container：\r
\r
\`\`\`bash\r
docker container unpause "<container name>"\r
docker container unpause "<container ID>"\r
\`\`\`\r
\r
---\r
\r
## 3.7 停止／立即停止 container\r
\r
停止（\`SIGTERM\`，等 \`10\` 秒後再 \`SIGKILL\`）：\r
\r
\`\`\`bash\r
docker container stop "<container name>"\r
docker container stop "<container ID>"\r
\`\`\`\r
\r
立即停止（直接 \`SIGKILL\`）：\r
\r
\`\`\`bash\r
docker container kill "<container name>"\r
docker container kill "<container ID>"\r
\`\`\`\r
\r
---\r
\r
## 3.8 刪除 container\r
\r
\`\`\`bash\r
docker container rm "<container name>"\r
docker container rm "<container ID>"\r
\`\`\`\r
\r
一次過刪除曬特定 status 既 containers：\r
\r
\`\`\`bat\r
:: Windows Command Prompt\r
FOR /F "tokens=*" %i IN ('docker container ls --filter "status=<status>" -q') DO docker container rm %i\r
\`\`\`\r
\r
刪除所有 exit 左既 containers 既例子：\r
\r
\`\`\`bat\r
:: Windows Command Prompt\r
FOR /F "tokens=*" %i IN ('docker container ls --filter "status=exited" -q') DO docker container rm %i\r
\`\`\`\r
\r
---\r
\r
# 4 參考資料\r
\r
-   [手撕 docker 文件結構—— overlayFS，image，container 文件結構詳解](https://zhuanlan.zhihu.com/p/374924046)\r
-   [Docker 筆記（一）- 鏡像與容器，Overlay2](https://zhuanlan.zhihu.com/p/41958018)\r
-   [StackOverflow - What's the difference between a Docker image's Image ID and its Digest?](https://stackoverflow.com/questions/56364643/whats-the-difference-between-a-docker-images-image-id-and-its-digest)\r
-   [StackOverflow - Dashes in Docker commands](https://stackoverflow.com/questions/52614832/dashes-in-docker-commands)\r
-   Docker 官網\r
    -   [Use the OverlayFS storage driver](https://docs.docker.com/storage/storagedriver/overlayfs-driver/)\r
    -   Image commands\r
        -   [docker image ls](https://docs.docker.com/engine/reference/commandline/image_ls/) / [docker images](https://docs.docker.com/engine/reference/commandline/images/)\r
        -   [docker image pull](https://docs.docker.com/engine/reference/commandline/image_pull/) / [docker pull](https://docs.docker.com/engine/reference/commandline/pull/)\r
        -   [docker image tag](https://docs.docker.com/engine/reference/commandline/image_tag/) / [docker tag](https://docs.docker.com/engine/reference/commandline/tag/)\r
        -   [docker image push](https://docs.docker.com/engine/reference/commandline/image_push/) / [docker push](https://docs.docker.com/engine/reference/commandline/push/)\r
        -   [docker image save](https://docs.docker.com/engine/reference/commandline/image_save/) / [docker save](https://docs.docker.com/engine/reference/commandline/save/)\r
        -   [docker image rm](https://docs.docker.com/engine/reference/commandline/image_rm/) / [docker rmi](https://docs.docker.com/engine/reference/commandline/rmi/)\r
    -   Container commands\r
        -   [docker container ls](https://docs.docker.com/engine/reference/commandline/container_ls/) / [docker ps](https://docs.docker.com/engine/reference/commandline/ps/)\r
        -   [docker container run](https://docs.docker.com/engine/reference/commandline/container_run/) / [docker run](https://docs.docker.com/engine/reference/commandline/run/)\r
        -   [docker container exec](https://docs.docker.com/engine/reference/commandline/container_exec/) / [docker container exec](https://docs.docker.com/engine/reference/commandline/exec/)\r
        -   [docker container restart](https://docs.docker.com/engine/reference/commandline/container_restart/) / [docker restart](https://docs.docker.com/engine/reference/commandline/restart/)\r
        -   [docker container pause](https://docs.docker.com/engine/reference/commandline/container_pause/) / [docker pause](https://docs.docker.com/engine/reference/commandline/pause/)\r
        -   [docker container unpause](https://docs.docker.com/engine/reference/commandline/container_unpause/) / [docker unpause](https://docs.docker.com/engine/reference/commandline/unpause/)\r
        -   [docker container stop](https://docs.docker.com/engine/reference/commandline/container_stop/) / [docker stop](https://docs.docker.com/engine/reference/commandline/stop/)\r
        -   [docker container kill](https://docs.docker.com/engine/reference/commandline/container_kill/) / [docker kill](https://docs.docker.com/engine/reference/commandline/kill/)\r
        -   [docker container rm](https://docs.docker.com/engine/reference/commandline/container_rm/) / [docker rm](https://docs.docker.com/engine/reference/commandline/rm/)\r
`,uD=`# 4 PowerMock\r
\r
JDK 版本方面，8 或者 11 都可以。\r
\r
## 4.1 Maven dependencies\r
\r
因為 PowerMock 同 Mockito 既一啲兼容性問題，我地一定要用 Mockito \`3.9.0\`，唔可以用 \`4.0.0\` 或者以上既版本。\r
\r
\`\`\`xml\r
<properties>\r
	<powermock.version>2.0.9</powermock.version>\r
</properties>\r
\r
<dependencyManagement>\r
	<dependencies>\r
		<dependency>\r
			<groupId>org.springframework.boot</groupId>\r
			<artifactId>spring-boot-dependencies</artifactId>\r
			<version>2.7.1</version>\r
			<type>pom</type>\r
			<scope>import</scope>\r
		</dependency>\r
	</dependencies>\r
</dependencyManagement>\r
\r
<dependencies>\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-web</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.apache.commons</groupId>\r
		<artifactId>commons-lang3</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-test</artifactId>\r
		<scope>test</scope>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.junit.vintage</groupId>\r
		<artifactId>junit-vintage-engine</artifactId>\r
		<scope>test</scope>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.powermock</groupId>\r
		<artifactId>powermock-module-junit4</artifactId>\r
		<version>\${powermock.version}</version>\r
		<scope>test</scope>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.powermock</groupId>\r
		<artifactId>powermock-api-mockito2</artifactId>\r
		<version>\${powermock.version}</version>\r
		<scope>test</scope>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.powermock</groupId>\r
		<artifactId>powermock-module-junit4-rule-agent</artifactId>\r
		<version>\${powermock.version}</version>\r
		<scope>test</scope>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.mockito</groupId>\r
		<artifactId>mockito-core</artifactId>\r
		<version>3.12.4</version> <!--$NO-MVN-MAN-VER$-->\r
		<scope>test</scope>\r
	</dependency>\r
</dependencies>\r
\r
<build>\r
	<plugins>\r
		<plugin>\r
			<groupId>org.springframework.boot</groupId>\r
			<artifactId>spring-boot-maven-plugin</artifactId>\r
			<executions>\r
				<execution>\r
					<goals>\r
						<goal>repackage</goal>\r
					</goals>\r
				</execution>\r
			</executions>\r
		</plugin>\r
\r
		<plugin>\r
			<groupId>org.apache.maven.plugins</groupId>\r
			<artifactId>maven-surefire-plugin</artifactId>\r
			<version>3.0.0-M7</version>\r
			<configuration>\r
				<argLine>-Djdk.attach.allowAttachSelf=true</argLine>\r
			</configuration>\r
		</plugin>\r
	</plugins>\r
</build>\r
\`\`\`\r
\r
註：\`-Djdk.attach.allowAttachSelf=true\` 係用黎解決 JDK 8 之後既新版 JDKs 所出現既「Can not attach to current VM」問題。\r
\r
參考資料：\r
\r
-   [JDK-8180425 : Release Note: Attach API cannot be used to attach to the current VM by default](https://bugs.java.com/bugdatabase/view_bug.do?bug_id=8180425)\r
\r
---\r
\r
## 4.2 寫 Java code\r
\r
先建立一個典型既 Spring Boot web application。\r
\r
寫一個 dummy component：\r
\r
\`\`\`java\r
@Component\r
public class MyComponent {\r
\r
}\r
\`\`\`\r
\r
之後我地可以寫 test code：\r
\r
\`\`\`java\r
@PrepareForTest({ StringUtils.class, RandomStringUtils.class })\r
@PowerMockIgnore({ "com.sun.org.apache.xerces.*", "javax.xml.*", "org.xml.*", "javax.management.*" })\r
@SpringBootTest\r
@RunWith(SpringRunner.class)\r
public class MockStaticSpringTest {\r
\r
    @Autowired\r
    MyComponent myComponent;\r
\r
    @Rule\r
    public PowerMockRule powerMockRule = new PowerMockRule();\r
\r
    @Before\r
    public void setUp() {\r
        PowerMockito.spy(StringUtils.class);\r
        PowerMockito.mockStatic(RandomStringUtils.class);\r
    }\r
\r
    // Spring Boot test，可以測試 Spring context 能唔能夠成功 load 到\r
    @Test\r
    public void contextLoads() {\r
        assertNotNull(myComponent);\r
    }\r
\r
    @Test\r
    public void test_mockStatic_StringUtils() {\r
        assertTrue(StringUtils.isBlank("   "));\r
        PowerMockito.when(StringUtils.isBlank(any())).thenReturn(false);\r
        assertFalse(StringUtils.isBlank("   "));\r
    }\r
\r
    @Test\r
    public void test_mockStatic_RandomStringUtils() {\r
        assertNull(RandomStringUtils.randomAlphabetic(10));\r
        PowerMockito.when(RandomStringUtils.randomAlphabetic(anyInt())).thenReturn("Hello World!");\r
        assertEquals("Hello World!", RandomStringUtils.randomAlphabetic(10));\r
    }\r
}\r
\`\`\`\r
\r
註：\r
\r
-   我地用既係 \`SpringRunner\` 而唔係 \`PowerMockRunner\`。\r
    -   正因為咁，所以我地要加 \`@Rule public PowerMockRule powerMockRule = new PowerMockRule();\`\r
        -   呢個 property 一定要係 \`public\`。\r
        -   呢個 property 要先 initialize，例如 \`new PowerMockRule()\`。\r
-   \`@PowerMockIgnore\` 有可能需要用到。\r
-   我地要 mock static 既 class 係 Apache Commons Lang3 既 \`StringUtils\` 以及 \`RandomStringUtils\`。\r
-   PowerMock 使用上其實同 Mockito 係非常相似。\r
    -   \`PowerMockito.mockStatic(class)\` 默認會令 mock object 既所有 methods 都冇任何 implementation，即係如果有 return type，佢就會返回 \`null\` 或者 \`false\` 之類既默認 value，除非我地用 when-then 既寫法賦予被測試既 method 一啲新既 behavior。\r
    -   \`PowerMockito.spy(class)\` 係當我地需要 mock object 默認用返本身既 implementation，除非我地用 when-then 既寫法賦予被測試既 method 一啲新既 behavior。\r
`,pD=`# 5 WireMock\r
\r
## 5.1 Maven dependencies\r
\r
\`\`\`xml\r
<dependencyManagement>\r
	<dependencies>\r
		<dependency>\r
			<groupId>org.springframework.boot</groupId>\r
			<artifactId>spring-boot-dependencies</artifactId>\r
			<version>2.7.1</version>\r
			<type>pom</type>\r
			<scope>import</scope>\r
		</dependency>\r
	</dependencies>\r
</dependencyManagement>\r
\r
<dependencies>\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-web</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-test</artifactId>\r
		<scope>test</scope>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.junit.vintage</groupId>\r
		<artifactId>junit-vintage-engine</artifactId>\r
		<scope>test</scope>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>com.github.tomakehurst</groupId>\r
		<artifactId>wiremock-jre8-standalone</artifactId>\r
		<version>2.34.0</version>\r
		<scope>test</scope>\r
	</dependency>\r
</dependencies>\r
\r
<build>\r
	<plugins>\r
		<!-- spring-boot-maven-plugin -->\r
\r
		<plugin>\r
			<groupId>org.apache.maven.plugins</groupId>\r
			<artifactId>maven-surefire-plugin</artifactId>\r
			<version>3.0.0-M7</version>\r
			<configuration>\r
				<includes>\r
					<include>**Test.java</include>\r
					<include>**IT.java</include>\r
				</includes>\r
			</configuration>\r
		</plugin>\r
	</plugins>\r
</build>\r
\`\`\`\r
\r
---\r
\r
## 5.2 寫 Java code\r
\r
先建立一個典型既 Spring Boot web application。\r
\r
\`OrderController.java\`：\r
\r
\`\`\`java\r
@RestController\r
@RequestMapping(path = "orders", produces = MediaType.APPLICATION_JSON_VALUE)\r
public class OrderController {\r
\r
    @Autowired\r
    RestTemplate orderRestTemplate;\r
\r
    @GetMapping("{orderId}")\r
    public Order getOrderById(@PathVariable("orderId") String orderId) {\r
\r
        // call Order Service\r
        return orderRestTemplate\r
                .exchange("http://localhost:8080/orders?orderId=" + orderId,\r
                          HttpMethod.GET, HttpEntity.EMPTY, Order.class)\r
                .getBody();\r
    }\r
}\r
\`\`\`\r
\r
\`ApiClientConfig.java\`：\r
\r
\`\`\`java\r
@Configuration\r
public class ApiClientConfig {\r
\r
    @Bean\r
    public RestTemplate orderRestTemplate(RestTemplateBuilder restTemplateBuilder) {\r
        return restTemplateBuilder.basicAuthentication("user", "pass").build();\r
    }\r
}\r
\`\`\`\r
\r
之後我地可以寫 test code：\r
\r
\`\`\`java\r
import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\r
import static com.github.tomakehurst.wiremock.client.WireMock.equalTo;\r
import static com.github.tomakehurst.wiremock.client.WireMock.getRequestedFor;\r
import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\r
import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\r
import static com.github.tomakehurst.wiremock.client.WireMock.verify;\r
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\r
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\r
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\r
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\r
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\r
\r
@AutoConfigureMockMvc\r
@SpringBootTest\r
@RunWith(SpringRunner.class)\r
public class OrderControllerIT {\r
\r
    @Autowired\r
    MockMvc mockMvc;\r
\r
    static WireMockServer orderServiceMockServer = new WireMockServer(8080);\r
\r
    @BeforeClass\r
    public static void setUpOnce() {\r
        orderServiceMockServer.start();\r
    }\r
\r
    @AfterClass\r
    public static void tearDownOnce() {\r
        orderServiceMockServer.stop();\r
    }\r
\r
    @Before\r
    public void setUp() {\r
        orderServiceMockServer.resetRequests();\r
    }\r
\r
    @Test\r
    public void test() throws Exception {\r
\r
        stubFor(WireMock.get(urlEqualTo("/orders?orderId=1"))\r
                .withBasicAuth("user", "pass")\r
                .withQueryParam("orderId", equalTo("1"))\r
                .willReturn(aResponse().withHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE)\r
                                .withBody("{ \\"orderId\\": \\"1\\", \\"totalPrice\\": 8888 }")));\r
\r
        mockMvc.perform(get("/orders/1"))\r
               .andDo(print())\r
               .andExpectAll(\r
                   status().isOk(),\r
                   content().json("{ \\"orderId\\": \\"1\\" }", false),\r
                   jsonPath("$.orderId").value("1"),\r
                   jsonPath("$.totalPrice").value(8888));\r
\r
        verify(1, getRequestedFor(urlEqualTo("/orders?orderId=1")));\r
    }\r
}\r
\`\`\`\r
`,dD=`# 1 Redis 簡介\r
\r
關於 Redis 既基本簡介可以喺呢篇度搵到：[Spring 項目使用 Redis 做 caching - Redis 簡介](/blog/spring-caching-redis#1-redis-簡介)。\r
\r
---\r
\r
# 2 基本概念\r
\r
Redis 有 \`16\` 個 databases（\`0\`-based，\`0\` 至 \`15\`），每個 database 裡面既數據都係以 key-value pair 既形式儲存。\r
\r
Redis 既 data types 指既係 key-value pair 既 value 所用既儲存格式。\r
\r
---\r
\r
# 3 本地運行\r
\r
關於點樣本地運行 Redis 可以喺呢篇度搵到：[Spring 項目使用 Redis 做 caching - 安裝](/blog/spring-caching-redis#2-安裝)。\r
\r
---\r
\r
# 4 Database 操作\r
\r
## 4.1 選擇 database\r
\r
Redis CLI 成功連接之後，初始選擇既係 database \`0\`。\r
\r
\`\`\`bash\r
SELECT "<database index, 0~15>"\r
\`\`\`\r
\r
---\r
\r
## 4.2 查詢目前 database 資料數量\r
\r
查詢目前所選擇既 database 既資料數量（key 數量）：\r
\r
\`\`\`bash\r
# database size\r
DBSIZE\r
\`\`\`\r
\r
---\r
\r
## 4.3 刪除目前 database 內所有資料\r
\r
以下指令會刪除目前所選擇既 database 既所有資料：\r
\r
\`\`\`bash\r
# flush database\r
FLUSHDB\r
\`\`\`\r
\r
---\r
\r
## 4.4 刪除所有資料\r
\r
以下指令會刪除所有 databases 既所有資料：\r
\r
\`\`\`bash\r
# flush all\r
FLUSHALL\r
\`\`\`\r
\r
---\r
\r
# 5 查詢 keys\r
\r
## 5.1 \`KEYS\`\r
\r
查詢所有 keys：\r
\r
\`\`\`bash\r
KEYS *\r
\`\`\`\r
\r
我地亦可以使用 glob-style 既 patterns 去查詢 keys，例如用 \`*\` 代表任意長度既任意值。\r
\r
查詢以特定 prefix 開頭既 keys：\r
\r
\`\`\`bash\r
KEYS "<key prefix>*"\r
\`\`\`\r
\r
---\r
\r
## 5.2 \`SCAN\`\r
\r
根據 Redis 官網呢篇關於 \`KEYS\` 指令既文檔——[KEYS pattern](https://redis.io/docs/latest/commands/keys/)，我地最好唔好喺 Production 環境用 \`KEYS\`：\r
\r
> **Warning**: consider \`KEYS\` as a command that should only be used in production environments with extreme care. It may ruin performance when it is executed against large databases. This command is intended for debugging and special operations, such as changing your keyspace layout. Don't use \`KEYS\` in your regular application code. If you're looking for a way to find keys in a subset of your keyspace, consider using [\`SCAN\`](https://redis.io/commands/scan) or [sets](https://redis.io/topics/data-types#sets).\r
\r
查詢以特定 prefix 開頭、特定 data type 既 keys（第一頁，建議返回若干數量）：\r
\r
\`\`\`bash\r
SCAN "<cursor>" MATCH "<key prefix>*" COUNT "<suggested result count>" TYPE "<string/list/set/zset/hash/stream>"\r
\`\`\`\r
\r
例子：\r
\r
\`\`\`bash\r
MSET a 1 b 2 c 3 d 4 e 5 f 6 g 7 h 8 i 9 j 10 k 11 l 12 m 13 n 14 o 15 p 16 q 17 r 18 s 19 t 20 u 21 v 22 w 23 x 24 y 25 z 26\r
SCAN 0 MATCH "*" COUNT 10 TYPE string\r
SCAN ...\r
SCAN ...\r
（直至返回既 cursor 係 0）\r
\`\`\`\r
\r
結果係由 \`2\` 個 elements 組成：\r
\r
1. 新既 cursor 數字，畀我地下次再 \`SCAN\` 果陣用。\r
    - 例如佢返回既 cursor 係 \`22\`，咁我地下次就將句 command 改成 \`SCAN 22 MATCH "*" COUNT 10 TYPE string\`，直至到佢返回 \`0\` 既 cursor，咁先至代表已經係完成曬成個 search cycle。\r
1. 呢次 \`SCAN\` 指令查詢到既分頁結果，以 array 表示，elements 係 keys。\r
\r
![](/blog/2022-07/redis-basics/redis-scan-command.png)\r
\r
註：\r
\r
-   一定要執行 \`SCAN\` 指令直至到 Redis 返回既 cursor 數字係 \`0\`，否則有可能會 miss 左一啲結果。\r
-   每次 \`SCAN\` 指令返回既結果數量都可以係意想不到，有可能少過、多過，或者等於我地 \`COUNT\` 所建議既數量。\r
-   同 \`KEYS\` 相似既地方係，返回既結果既次序同佢地新增既次序好可能會唔一樣。\r
-   雖然感覺有少少似 SQL \`SELECT\` 既 \`WHERE LIMIT OFFSET\` 分頁查詢，但實際上有好多唔相似既地方。\r
    -   Redis 會先查詢 keys，之後再應用 \`MATCH\` 以及 \`TYPE\` 既 filters。\r
        -   呢個設計有別於 SQL 先應用 \`WHERE\` 既條件，然後再應用 \`LIMIT OFFSET\` 實現分頁。\r
        -   咁亦即係話，如果咁岩個分頁既 keys 全部唔中 pattern 或者 data type 既話，呢次 \`SCAN\` 既最終分頁查詢結果就會係 empty array，但係下一頁（下一個 \`SCAN\`）既結果反而有可能會係 non-empty array。所以一定要執行 \`SCAN\` 直至到佢返回 \`0\` 既 cursor。\r
            -   > It is important to note that the MATCH filter is applied after elements are retrieved from the collection, just before returning data to the client. This means that if the pattern matches very little elements inside the collection, SCAN will likely return no elements in most iterations. An example is shown below:\r
    -   根據官網，\`SCAN\` 有可能會出現重複既結果，所以我地既程式係需要 handle 有重複結果既情況。\r
        -   > A given element may be returned multiple times. It is up to the application to handle the case of duplicated elements, for example only using the returned elements in order to perform operations that are safe when re-applied multiple times.\r
    -   如果有 element(s) 係喺 \`SCAN\` loop 進行緊既時候加入，佢地未必會出現喺結果裡面，呢樣野係話唔定。\r
        -   > Elements that were not constantly present in the collection during a full iteration, may be returned or not: it is undefined.\r
    -   如果有 element(s) 係喺 \`SCAN\` loop 進行既整個過程裡面都存在，咁佢地就保證一定會出現喺某次既結果裡面。\r
    -   如果有 element(s) 係喺 \`SCAN\` loop 進行既整個過程裡面都唔存在，咁佢地就保證一定唔會出現喺任何結果裡面。\r
-   \`COUNT\`\r
    -   代表「建議」分頁數量，類似 SQL 既 \`LIMIT\`。\r
    -   默認值係 \`10\`。\r
    -   呢個數字只係一個「建議」，基於 Redis 對於 \`SCAN\` 既處理方式以及 \`MATCH\` 既生效次序，Redis 最終唔一定會（好可能唔會）返回 exactly 呢個數量既 keys。\r
-   \`SCAN\` 後面既數字——cursor\r
    -   感覺上類似 SQL 既 \`OFFSET\`，但事實上唔係。呢個數字喺一個完整既 \`SCAN\` loop 裡面可以增加亦可以減少。\r
    -   因為 Redis 唔一定會返回我地 \`COUNT\` 所指定既數量，所以下一次再用 \`SCAN\` 查詢果陣，\`SCAN\` 後面既數字必須要用返目前 \`SCAN\` 查詢結果所返回既第 \`1\` 個 element 既數字。\r
    -   一般用法係由 \`0\` 開始，直至下一次結果返回既第 \`1\` 個 element 係 \`0\`，咁先算係查詢曬所有結果（作為一個完整既 \`SCAN\` loop）。\r
        -   但因為冇 server-side state，所以喺一個完整既 \`SCAN\` loop 裡面任何時候中斷查詢都冇問題。\r
-   \`MATCH\`\r
    -   同 \`KEYS\` 一樣都係用 glob-style 既 patterns。\r
    -   佢會喺查詢完分頁既 keys 之後先至生效。\r
-   \`TYPE\`\r
    -   可以係 \`string\`、\`list\`、\`set\`、\`zset\`、\`hash\` 或者 \`stream\`。\r
    -   佢會喺查詢完分頁既 keys 之後先至生效。\r
\r
參考資料：\r
\r
-   [Redis 官網 - SCAN](https://redis.io/docs/latest/commands/scan/)\r
\r
---\r
\r
## 5.3 查詢 keys 存在與否\r
\r
查詢一個或多個 key(s) 存在與否：\r
\r
\`\`\`bash\r
EXISTS "<key>" "[<key2>...]"\r
\`\`\`\r
\r
---\r
\r
# 6 Data types\r
\r
Redis 既 data types 指既係 key-value pair 既 value 所用既儲存格式。\r
\r
| Data type  | 描述                                                         |\r
| :--------: | ------------------------------------------------------------ |\r
|   String   | 一般既文字格式，我地亦可以用 JSON 格式黎儲存 nested 既數據。 |\r
|    List    | 基本上就係 Java 既 \`List\` 咁，會保留 elements 既新增次序。   |\r
|    Set     | 基本上就係 Java 既 \`Set\` 咁，唔容許有重覆既 value。          |\r
|    Hash    | 基本上就係 Java 既 \`Map\` 咁。                                |\r
| Sorted Set | 同 set 相似，但可以根據需要而給予 elements 先後次序。        |\r
\r
查詢某一個 key-value pair 既 value data type：\r
\r
\`\`\`bash\r
TYPE "<key>"\r
\`\`\`\r
\r
以下會介紹最主要既幾種 data types：\r
\r
-   String\r
-   List\r
-   Set\r
\r
## 6.1 String\r
\r
查詢 value：\r
\r
\`\`\`bash\r
GET "<key>"\r
\`\`\`\r
\r
新增或覆蓋：\r
\r
\`\`\`bash\r
SET "<key>" "<value>"\r
\`\`\`\r
\r
新增或覆蓋（附失效時間，以秒計）：\r
\r
\`\`\`bash\r
# set expiration\r
SETEX "<key>" "<timeout in seconds>" "<value>"\r
\`\`\`\r
\r
刪除：\r
\r
\`\`\`bash\r
# get and delete\r
GETDEL "<key>"\r
\`\`\`\r
\r
---\r
\r
## 6.2 List\r
\r
List 係冇得好似 Set 咁直接查詢某 value 存在與否。\r
\r
查詢所有 elements：\r
\r
\`\`\`bash\r
# list range\r
LRANGE "<key>" 0 -1\r
\`\`\`\r
\r
查詢 elements 既數量：\r
\r
\`\`\`bash\r
# list length\r
LLEN "<key>"\r
\`\`\`\r
\r
新增一個或多個 element(s) 喺最前面：\r
\r
\`\`\`bash\r
# left push\r
LPUSH "<key>" "<value>" "[<value2>...]"\r
\`\`\`\r
\r
新增一個或多個 element(s) 喺最後面：\r
\r
\`\`\`bash\r
# right push\r
RPUSH "<key>" "<value>" "[<value2>...]"\r
\`\`\`\r
\r
根據 value 刪除所有匹配既 elements：\r
\r
\`\`\`bash\r
# list remove\r
LREM "<key>" 0 "<value>"\r
\`\`\`\r
\r
刪除最前面既一個或多個 element(s) 並且返回佢或佢地既 value(s)：\r
\r
\`\`\`bash\r
# left pop\r
LPOP "<key>" "[<count>]"\r
\`\`\`\r
\r
刪除最後面既一個或多個 element(s) 並且返回佢或佢地既 value(s)：\r
\r
\`\`\`bash\r
# right pop\r
RPOP "<key>" "[<count>]"\r
\`\`\`\r
\r
---\r
\r
## 6.3 Set\r
\r
查詢所有 elements：\r
\r
\`\`\`bash\r
# set members\r
SMEMBERS "<key>"\r
\`\`\`\r
\r
查詢 elements 既數量：\r
\r
\`\`\`bash\r
# set cardinality\r
SCARD "<key>"\r
\`\`\`\r
\r
新增一個或多個 element(s)：\r
\r
\`\`\`bash\r
# set add\r
SADD "<key>" "<value>" "[<value2>...]"\r
\`\`\`\r
\r
刪除一個或多個 element(s)：\r
\r
\`\`\`bash\r
# set remove\r
SREM "<key>" "<value>" "[<value2>...]"\r
\`\`\`\r
\r
刪除一個或多個任意既 element(s) 並且返回佢或佢地既 value(s)：\r
\r
\`\`\`bash\r
# set pop\r
SPOP "<key>"\r
\`\`\`\r
\r
查詢某 value 存在與否：\r
\r
\`\`\`bash\r
# set is member\r
SISMEMBER "<key>" "<value>"\r
\`\`\`\r
\r
查詢一個或多個任意既 element(s) 既 value(s)：\r
\r
\`\`\`bash\r
# set random member\r
SRANDMEMBER "<key>" "[<count>]"\r
\`\`\`\r
\r
---\r
\r
# 7 其他指令\r
\r
## 7.1 登入\r
\r
\`\`\`bash\r
AUTH "<password>"\r
\`\`\`\r
\r
---\r
\r
## 7.2 查詢客戶端連線資料\r
\r
\`\`\`bash\r
CLIENT INFO\r
\`\`\`\r
\r
---\r
\r
## 7.3 CLI 內建既指令使用手冊\r
\r
\`\`\`bash\r
HELP @string\r
HELP @list\r
HELP @set\r
HELP @hash\r
HELP @sorted-set\r
\`\`\`\r
\r
---\r
\r
# 8 參考資料\r
\r
-   [Redis 命令參考](http://redisdoc.com/)\r
-   Redis 官網\r
    -   [Understand Redis data types](https://redis.io/docs/latest/develop/data-types/)\r
    -   [String commands](https://redis.io/docs/latest/commands/?group=string)\r
    -   [List commands](https://redis.io/docs/latest/commands/?group=list)\r
    -   [Set commands](https://redis.io/docs/latest/commands/?group=set)\r
-   [StackOverflow - Redis is single-threaded, then how does it do concurrent I/O?](https://stackoverflow.com/questions/10489298/redis-is-single-threaded-then-how-does-it-do-concurrent-i-o)\r
`,mD=`# 1 Spring Webflux\r
\r
Reactive programming 可以畀我地靈活啲咁使用系統資源，\r
\r
根據 [Spring 官網 - Web on Reactive Stack](https://docs.spring.io/spring-framework/docs/current/reference/html/web-reactive.html#webflux-new-framework)：\r
\r
> Why was Spring WebFlux created?\r
>\r
> Part of the answer is the need for a non-blocking web stack to handle concurrency with a small number of threads and scale with fewer hardware resources.\r
\r
> The other part of the answer is functional programming.\r
\r
## 1.1 應用場景（vs 傳統 Spring MVC）\r
\r
到底我地應唔應該由傳統 Spring MVC 一下子轉曬做 reactive 既 Spring Webflux？\r
\r
根據 [Spring 官網 - Web on Reactive Stack](https://docs.spring.io/spring-framework/docs/current/reference/html/web-reactive.html#webflux-framework-choice)：\r
\r
> Spring MVC or WebFlux?\r
\r
> -   If you have a Spring MVC application that works fine, there is no need to change. Imperative programming is the easiest way to write, understand, and debug code. You have maximum choice of libraries, since, historically, most are blocking.\r
\r
> -   In a microservice architecture, you can have a mix of applications with either Spring MVC or Spring WebFlux controllers or with Spring WebFlux functional endpoints. Having support for the same annotation-based programming model in both frameworks makes it easier to re-use knowledge while also selecting the right tool for the right job.\r
\r
> -   A simple way to evaluate an application is to check its dependencies. If you have blocking persistence APIs (JPA, JDBC) or networking APIs to use, Spring MVC is the best choice for common architectures at least. It is technically feasible with both Reactor and RxJava to perform blocking calls on a separate thread but you would not be making the most of a non-blocking web stack.\r
\r
> -   If you have a Spring MVC application with calls to remote services, try the reactive WebClient. You can return reactive types (Reactor, RxJava, or other) directly from Spring MVC controller methods. The greater the latency per call or the interdependency among calls, the more dramatic the benefits. Spring MVC controllers can call other reactive components too.\r
\r
> -   If you have a large team, keep in mind the steep learning curve in the shift to non-blocking, functional, and declarative programming. A practical way to start without a full switch is to use the reactive WebClient. Beyond that, start small and measure the benefits. We expect that, for a wide range of applications, the shift is unnecessary.\r
\r
---\r
\r
# 2 動手寫\r
\r
## 2.1 Maven dependencies\r
\r
\`\`\`xml\r
<dependencyManagement>\r
	<dependencies>\r
		<dependency>\r
			<groupId>org.springframework.boot</groupId>\r
			<artifactId>spring-boot-dependencies</artifactId>\r
			<version>2.7.1</version>\r
			<type>pom</type>\r
			<scope>import</scope>\r
		</dependency>\r
	</dependencies>\r
</dependencyManagement>\r
\r
<dependencies>\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-webflux</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.projectlombok</groupId>\r
		<artifactId>lombok</artifactId>\r
		<scope>provided</scope>\r
	</dependency>\r
</dependencies>\r
\`\`\`\r
\r
---\r
\r
## 2.2 寫 Java code\r
\r
Project structure：\r
\r
-   \`src/main/java\`\r
    -   \`/code\`\r
        -   \`/config\`\r
            -   \`ApiConfig.java\`\r
        -   \`/controller\`\r
            -   \`OrderController.java\`\r
            -   \`OrderControllerRx.java\`\r
        -   \`/dao\`\r
            -   \`OrderDao.java\`\r
        -   \`/model\`\r
            -   \`Order.java\`\r
        -   \`MainApplication.java\`\r
\r
\`OrderController.java\`：\r
\r
\`\`\`java\r
@RestController\r
@RequestMapping(path = "orders", produces = MediaType.APPLICATION_JSON_VALUE)\r
public class OrderController {\r
\r
    @Autowired OrderDao orderDao;\r
\r
    @GetMapping\r
    public List<Order> getAllOrders() {\r
        return orderDao.getAllOrders();\r
    }\r
}\r
\`\`\`\r
\r
\`OrderControllerRx.java\`：\r
\r
\`\`\`java\r
@RestController\r
@RequestMapping(path = "rx/orders", produces = MediaType.TEXT_EVENT_STREAM_VALUE)\r
public class OrderControllerRx {\r
\r
    @Autowired OrderDao orderDao;\r
    @Autowired WebClient orderApi;\r
\r
    @GetMapping\r
    public Flux<Order> getAllOrdersRx() {\r
        return orderDao.getAllOrdersRx();\r
    }\r
\r
    @GetMapping("v2")\r
    public Flux<Order> getAllOrdersRxFromSelf() {\r
        return orderApi.get().uri("/rx/orders").exchangeToFlux(res -> {\r
            if (res.statusCode()==HttpStatus.OK) {\r
                return res.bodyToFlux(Order.class);\r
            } else {\r
                return res.createException().flatMapMany(Mono::error);\r
            }\r
        });\r
    }\r
}\r
\`\`\`\r
\r
\`OrderDao.java\`：\r
\r
\`\`\`java\r
@Repository\r
public class OrderDao {\r
\r
    public List<Order> getAllOrders() {\r
        return range(0, 10).mapToObj(e -> new Order().setId(UUID.randomUUID().toString())\r
                .setDate(LocalDateTime.now())\r
                .setTotal(new BigDecimal(new Random().nextInt(10000)+"")))\r
                .peek(e -> {\r
                    try {\r
                        Thread.sleep(1000);\r
                    } catch (InterruptedException ex) {\r
                    }\r
                })\r
                .collect(toList());\r
    }\r
\r
    public Flux<Order> getAllOrdersRx() {\r
        return Flux.range(0, 10)\r
                .delayElements(Duration.ofSeconds(1))\r
                .doOnNext(e -> {\r
                    System.out.println(e);\r
                })\r
                .map(e -> new Order().setId(UUID.randomUUID().toString())\r
                    .setDate(LocalDateTime.now())\r
                    .setTotal(new BigDecimal(new Random().nextInt(10000)+"")));\r
    }\r
}\r
\`\`\`\r
\r
\`ApiConfig\`：\r
\r
\`\`\`java\r
@Configuration\r
public class ApiConfig {\r
\r
    @Bean\r
    public WebClient orderApi() {\r
        return WebClient.create("http://localhost:8080");\r
    }\r
}\r
\`\`\`\r
\r
\`Order.java\`：\r
\r
\`\`\`java\r
@Data\r
@Accessors(chain = true)\r
@FieldDefaults(level = PRIVATE)\r
public class Order {\r
    String id;\r
    LocalDateTime date;\r
    BigDecimal total;\r
}\r
\`\`\`\r
\r
---\r
\r
# 3 測試\r
\r
## 3.1 Postman\r
\r
現時 Postman 唔支援 streaming events 既 API。\r
\r
---\r
\r
## 3.2 cURL\r
\r
傳統 Spring MVC，會 block：\r
\r
\`\`\`bash\r
curl -v http://localhost:8080/orders\r
\`\`\`\r
\r
Reactive 既 Spring Webflux，唔會 block，逐啲逐啲咁返回：\r
\r
\`\`\`bash\r
curl -v http://localhost:8080/rx/orders\r
\`\`\`\r
\r
\`\`\`bash\r
curl -v http://localhost:8080/rx/orders/v2\r
\`\`\`\r
\r
---\r
\r
## 3.3 瀏覽器\r
\r
### 3.3.1 直接打開\r
\r
傳統 Spring MVC API（\`10\` 秒後一口氣返回）：\r
\r
-   http://localhost:8080/orders\r
\r
Reactive 既 Spring Webflux APIs（每過 \`1\` 秒就返回 stream event data，total \`10\` 次）：\r
\r
-   http://localhost:8080/rx/orders\r
-   http://localhost:8080/rx/orders/v2\r
\r
---\r
\r
### 3.3.2 JavaScript Fetch API\r
\r
#### 3.3.2.1 傳統 Spring MVC API\r
\r
執行下面既 JavaScript（可以用 NodeJS CLI 執行）：\r
\r
\`\`\`js\r
async function printOrders() {\r
	const response = await fetch("http://localhost:8080/orders");\r
	const data = await response.json();\r
	console.log(data);\r
}\r
\r
printOrders();\r
\`\`\`\r
\r
#### 3.3.2.2 Reactive 既 Spring Webflux APIs\r
\r
API 用其中一個都可以：\r
\r
-   http://localhost:8080/rx/orders\r
-   http://localhost:8080/rx/orders/v2\r
\r
執行下面既 JavaScript（可以用 NodeJS CLI 執行）：\r
\r
\`\`\`js\r
async function printOrders() {\r
	const response = await fetch("http://localhost:8080/rx/orders/v2");\r
	const stream = response.body.pipeThrough(new TextDecoderStream());\r
	const reader = stream.getReader();\r
\r
	while (true) {\r
		const { value, done } = await reader.read();\r
		console.log(done);\r
		console.log(value);\r
\r
		if (done) {\r
			break;\r
		}\r
	}\r
}\r
\r
printOrders();\r
\`\`\`\r
\r
如果想不停咁 stream：\r
\r
\`\`\`js\r
// 用 NodeJS 既話要 npm install eventsource，再加下面果句：\r
// global.EventSource = require("eventsource");\r
\r
const eventSource = new EventSource("http://localhost:8080/rx/orders/v2");\r
\r
eventSource.onopen = () => {\r
	console.log("Open");\r
};\r
\r
eventSource.onmessage = ({ data }) => {\r
	console.log(data);\r
};\r
\`\`\`\r
\r
註：\r
\r
-   用 \`EventSource\` 既話，就會見到佢每過 \`1\` 秒就會收到 event data，而 \`10\` 次之後佢會再 \`Open\`，然後又會重複再收多 \`10\` 次，無限 loop。\r
`,gD=`# 1 情境\r
\r
有一個網頁，上面有好多一般大小既檔案畀人下載，我既目標就係要自動咁一下子下載曬所有檔案。\r
\r
[Douglas C. Schmidt @ Vanderbilt University - CS 253 course materials](https://www.dre.vanderbilt.edu/~schmidt/cs253/2023-PDFs/)\r
\r
---\r
\r
# 2 分析\r
\r
呢個網站：\r
\r
-   所有檔案既下載連結都出現喺個網頁上面。\r
-   裝住檔案下載連結既係 \`<table>\`。\r
-   因為所有下載連結喺曬第 \`2\` 個 table column，所以我地可以用 \`td:nth-of-type(2)\` 黎 select 曬果個 column 既所有 rows 既 \`<td>\` cells。\r
-   第一個 table row 係 \`Parent Directory\`，並唔係檔案下載連結，但冇任何 CSS class 可以分辨到佢同其他 table rows。\r
    -   因為係目錄既關係，佢既 \`<a>\` child element 既 \`href\` attribute 前面有個 \`/\`，同其他 table rows 既 \`<a>\` child elements 唔同，所以我地可以用 CSS attribute selector 黎 exclude 走呢類既 table row(s)。\r
-   我地可以用以下既 CSS selector 將所有檔案下載連結搵曬出黎：\r
    -   \`\`\`\r
        table tbody tr > td:nth-of-type(2) a:not([href^='/'])\r
        \`\`\`\r
        -   可以見到有 \`163\` 個 \`<a>\` 結果。\r
\r
## 2.1 假設、限制\r
\r
-   為左簡單起見，我會假設個網站前面冇類似 Cloudflare 既 rate limiting 或者 request throttling 既安全功能。\r
    -   否則 Cloudflare 可能會察覺到我地用左自動化程式而 block 左我地。\r
\r
---\r
\r
# 3 動手寫\r
\r
## 3.1 cURL\r
\r
我地可以喺個網頁執行 JavaScript，佢會喺 console 度 print 一堆 \`curl\` commands 出黎：\r
\r
\`\`\`js\r
console.log(\r
	[...document.querySelectorAll("table tbody tr > td:nth-of-type(2) a:not([href^='/'])")]\r
		.map((e) => \`start /b curl --remote-time --output-dir output_curl -o \\"\${e.innerText}\\" \\"\${e.href}\\"\`)\r
		.join("\\n")\r
);\r
\`\`\`\r
\r
註：\r
\r
-   \`-R\` 等於 \`--remote-time\`。\r
-   \`-o\` 等於 \`--output\`。\r
\r
---\r
\r
## 3.2 wget\r
\r
我地可以喺個網頁執行 JavaScript，佢會喺 console 度 print 一堆 \`wget\` commands 出黎：\r
\r
\`\`\`js\r
console.log(\r
	[...document.querySelectorAll("table tbody tr > td:nth-of-type(2) a:not([href^='/'])")]\r
		.map((e) => \`start /b wget -O "output_wget/\${e.innerText}" "\${e.href}"\`)\r
		.join("\\n")\r
);\r
\`\`\`\r
\r
註：\r
\r
-   \`-O\` 等於 \`--output-document\`。\r
\r
---\r
\r
## 3.3 Java\r
\r
我地可以：\r
\r
1. 用 jsoup 既 Java Maven library 直接下載個網頁。\r
1. 然後用 jsoup 既 CSS selector API 去搵曬所有檔案既下載連結。\r
1. 用 Java 既 Process API 去 call cURL 或者 wget CLI 去下載檔案。\r
\r
### 3.3.1 Maven dependencies\r
\r
\`\`\`xml\r
<dependency>\r
	<groupId>org.jsoup</groupId>\r
	<artifactId>jsoup</artifactId>\r
	<version>1.17.2</version>\r
</dependency>\r
\`\`\`\r
\r
---\r
\r
### 3.3.2 寫 Java code\r
\r
\`\`\`java\r
@Slf4j // lombok\r
public class MainDownloader {\r
    private static final String OUTPUT_DIR = "C:/Users/Michael/Downloads/output_java";\r
\r
    public static void main(String[] args) throws Exception {\r
\r
        System.setProperty("java.util.concurrent.ForkJoinPool.common.parallelism",\r
                           String.valueOf(100));\r
\r
        new File(OUTPUT_DIR).mkdirs();\r
\r
        Jsoup.connect("https://www.dre.vanderbilt.edu/~schmidt/cs253/2023-PDFs/")\r
             .get()\r
             .select("table tbody tr > td:nth-of-type(2) a:not([href^='/'])")\r
             .stream()\r
             .parallel()\r
             .forEach(e -> {\r
                 final String fileName = e.ownText();\r
                 final String url = e.absUrl("href");\r
                 final String command = format("wget -O \\"%s/%s\\" \\"%s\\"",\r
                                               OUTPUT_DIR, fileName, url);\r
\r
                 log.info("Downloading [{}] from: {}", fileName, url);\r
\r
                 try {\r
                     new ProcessBuilder("cmd", "/c", command)\r
                         .inheritIO()\r
                         .start()\r
                         .waitFor();\r
                 } catch (Exception ex) {\r
                     log.error("Failed to execute command: {}", command, ex);\r
                 }\r
             });\r
    }\r
}\r
\`\`\`\r
\r
註：\r
\r
-   \`ProcessBuilder\` 強迫我地一定要將一句完整既 command 斬件，再用 varargs 既形式傳入。\r
    -   但如果我地執行既 command 係 \`cmd /c\`，咁我地就可以將一句完整既 command 作為 \`cmd /c\` 既一個單獨既 argument 咁傳入。\r
\r
---\r
\r
# 4 參考資料\r
\r
-   [cURL 官方文檔 - Man Page](https://curl.se/docs/manpage.html)\r
-   [wget 官方文檔](https://www.gnu.org/software/wget/manual/wget.html)\r
`,fD=`# 1 Spring Cloud Config 簡介\r
\r
關於 Spring Cloud Config 既基本簡介可以喺呢篇度搵到：[Spring Cloud Config——使用獨立既 Git 配置 repo - Spring Cloud Config 簡介](/blog/spring-cloud-config#1-spring-cloud-config-簡介)。\r
\r
## 1.1 JDBC backend\r
\r
今次呢篇係關於利用 JDBC backend，我地會用 RDBMS 傳統 DB 黎儲存所有配置資料。\r
\r
---\r
\r
# 2 建立 RDBMS\r
\r
今次測試會用到 H2 in-memory DB 以及 MySQL，而 H2 我地只需要喺 code 度初始化就可以。\r
\r
## 2.1 建立測試用 MySQL 連線\r
\r
我地可以參考返呢篇文：[Docker 基本操作 - MySQL](/blog/docker-basics#332-mysql)。\r
\r
啟動左 Docker Desktop 之後，執行以下 command，喺 MySQL 度建立一個叫 \`scc\` 既 database：\r
\r
\`\`\`bash\r
docker container run -d --rm -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_USER=mysql -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=scc -v "C:/docker-data/mysql:/var/lib/mysql" --name mysql mysql:latest\r
\`\`\`\r
\r
---\r
\r
## 2.2 建立 table\r
\r
先進入 Docker container 並且登入 MySQL 既 CLI，存取 \`scc\` database：\r
\r
\`\`\`bash\r
docker container exec -it mysql mysql -u"root" -p"root" scc\r
\`\`\`\r
\r
Spring Cloud Config 默認會用 \`properties\` table，但我地最好自定義 column 名，避免默認既 columns 帶有 reserved keywords，例如 \`key\`、\`value\`。\r
\r
SQL Server 既例子：\r
\r
\`\`\`sql\r
CREATE TABLE properties (\r
	config_client_app_name VARCHAR(200) NOT NULL,\r
	config_profile VARCHAR(200) NOT NULL,\r
	config_label VARCHAR(200) NOT NULL,\r
	config_key VARCHAR(200) NOT NULL,\r
	config_value NVARCHAR(MAX) NULL\r
);\r
\`\`\`\r
\r
MySQL 既例子：\r
\r
\`\`\`sql\r
CREATE TABLE properties (\r
	config_client_app_name VARCHAR(200) NOT NULL,\r
	config_profile VARCHAR(200) NOT NULL,\r
	config_label VARCHAR(200) NOT NULL,\r
	config_key VARCHAR(200) NOT NULL,\r
	config_value VARCHAR(10000) NULL\r
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 DEFAULT COLLATE=utf8mb4_0900_ai_ci;\r
\`\`\`\r
\r
註：如果想用 \`properties\` 以外既 table 名係可以既，稍後可以喺 config server 既配置度改條 SELECT SQL。\r
\r
---\r
\r
## 2.3 新增紀錄\r
\r
\`\`\`sql\r
INSERT INTO properties (config_client_app_name, config_profile, config_label, config_key, config_value)\r
VALUES ('spring-cloud-config-client-demo', 'dev', 'master', 'my.prop', 'Hello MySQL!');\r
\`\`\`\r
\r
---\r
\r
# 3 動手寫\r
\r
## 3.1 Config server\r
\r
Project structure：\r
\r
-   \`src/main/java\`\r
    -   \`/code\`\r
        -   \`MainConfigServerApp.java\`\r
-   \`src/main/resources\`\r
    -   \`application.yml\`\r
    -   \`bootstrap.yml\`\r
    -   \`data-h2.sql\`\r
    -   \`schema-h2.sql\`\r
\r
### 3.1.1 Maven dependencies\r
\r
\`\`\`xml\r
<dependencyManagement>\r
	<dependencies>\r
		<dependency>\r
			<groupId>org.springframework.boot</groupId>\r
			<artifactId>spring-boot-dependencies</artifactId>\r
			<version>2.7.11</version>\r
			<type>pom</type>\r
			<scope>import</scope>\r
		</dependency>\r
		<dependency>\r
			<groupId>org.springframework.cloud</groupId>\r
			<artifactId>spring-cloud-dependencies</artifactId>\r
			<version>2021.0.7</version>\r
			<type>pom</type>\r
			<scope>import</scope>\r
		</dependency>\r
	</dependencies>\r
</dependencyManagement>\r
\r
<dependencies>\r
	<dependency>\r
		<groupId>org.springframework.cloud</groupId>\r
		<artifactId>spring-cloud-config-server</artifactId>\r
	</dependency>\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-data-jdbc</artifactId>\r
	</dependency>\r
\r
	<!-- MySQL -->\r
	<dependency>\r
		<groupId>com.mysql</groupId>\r
		<artifactId>mysql-connector-j</artifactId>\r
	</dependency>\r
\r
	<!-- SQL Server -->\r
	<dependency>\r
		<groupId>com.microsoft.sqlserver</groupId>\r
		<artifactId>mssql-jdbc</artifactId>\r
		<version>12.2.0.jre11</version>\r
	</dependency>\r
\r
	<!-- H2 -->\r
	<dependency>\r
		<groupId>com.h2database</groupId>\r
		<artifactId>h2</artifactId>\r
	</dependency>\r
</dependencies>\r
\`\`\`\r
\r
---\r
\r
### 3.1.2 Java code\r
\r
\`MainConfigServerApp.java\`：\r
\r
\`\`\`java\r
@EnableConfigServer\r
@SpringBootApplication\r
public class MainConfigServerApp {\r
\r
    public static void main(String[] args) {\r
        SpringApplication.run(MainConfigServerApp.class);\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
### 3.1.3 Bootstrap 配置\r
\r
\`bootstrap.yml\`：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
encrypt:\r
  key: michael ## or use the ENCRYPT_KEY environment variable\r
\r
spring:\r
  profiles:\r
    active: jdbc ## should be externalized\r
  cloud:\r
    config:\r
      server:\r
        encrypt:\r
          enabled: true\r
\`\`\`\r
\r
註：一定要用 \`jdbc\` 既 Spring profile 先可以啟用到 JDBC backend。\r
\r
---\r
\r
### 3.1.4 Application 配置\r
\r
我地喺原先既 Git backend 配置度再加上 JDBC backend 既配置。\r
\r
\`application.yml\`：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
spring:\r
  datasource:\r
# MySQL\r
#    url: jdbc:mysql://localhost:3306/scc\r
#    username: mysql\r
#    password: mysql\r
# H2\r
    url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=4\r
    username: sa\r
    password: \r
  h2:\r
    console:\r
      enabled: true\r
      path: /h2-console\r
  sql:\r
    init:\r
      mode: always\r
      platform: h2\r
  cloud:\r
    config:\r
      server:\r
        git:\r
          clone-on-start: true\r
          refresh-rate: 10\r
          ignore-local-ssh-settings: true\r
          uri: git@github.com:blackr1234/spring-cloud-config-demo.git\r
          default-label: master\r
          search-paths:\r
            - "{application}"\r
          host-key: 'AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg='\r
          host-key-algorithm: ecdsa-sha2-nistp256\r
          private-key: |\r
                        -----BEGIN EC PRIVATE KEY-----\r
                        MHcCAQEEIPnupl8oxl0Wj6xfOd/PobBG48m3pVkmubPem1XSyexEoAoGCCqGSM49\r
                        AwEHoUQDQgAEUGO+DDpbpsgp3C+H68iTTaklmcnk2MSbbh4bwQVnMws09eqFqvA4\r
                        RzcTRtAXt2IWkq4JHUg6rtjDnc/0zwSQyQ==\r
                        -----END EC PRIVATE KEY-----\r
        jdbc:\r
          enabled: true\r
          sql: "SELECT config_key, config_value FROM properties WHERE config_client_app_name = ? AND config_profile = ? AND config_label = ?"\r
          order: 1\r
\`\`\`\r
\r
註：\r
\r
-   \`spring.cloud.config.server.jdbc.sql\`\r
    -   條 SQL prepared statement 唔預你大改，因為啲 params（\`?\`）會塞既 values 係固定位置既。\r
    -   佢主要係畀你加減下啲 quotes，去令到條 SQL 可以適用喺我地用既 DB 度，例如 \`key\` 同 \`value\` 喺某啲版本既某啲 DB 可以係 reserved words，咁既話就一定要加 quotes。\r
    -   如果想用默認既 \`properties\` 以外既 table 名，可以喺度改。\r
    -   除非用最新版 Spring Cloud Config \`4.0.1\`，否則 JDBC backend 係唔支援 default label，即係同 Git backend 唔同。\r
\r
---\r
\r
### 3.1.5 初始化 H2 in-memory DB 既配置檔\r
\r
\`src/main/resources/schema-h2.sql\`：\r
\r
\`\`\`sql\r
CREATE TABLE properties (\r
    config_client_app_name VARCHAR(200) NOT NULL,\r
    config_profile VARCHAR(200) NOT NULL,\r
    config_label VARCHAR(200) NOT NULL,\r
    config_key VARCHAR(200) NOT NULL,\r
    config_value CLOB(10K) NULL\r
);\r
\`\`\`\r
\r
\`src/main/resources/data-h2.sql\`：\r
\r
\`\`\`sql\r
INSERT INTO properties (config_client_app_name, config_profile, config_label, config_key, config_value)\r
VALUES ('spring-cloud-config-client-demo', 'dev', 'master', 'my.prop', 'Hello H2!');\r
\`\`\`\r
\r
---\r
\r
## 3.2 Config client\r
\r
至於 config client，我地可以完全用返之前寫落果個，詳情可以睇返呢篇：[Spring Cloud Config——使用獨立既 Git 配置 repo - Config client](/blog/spring-cloud-config-git#32-config-client)。\r
\r
---\r
\r
# 4 簡單測試\r
\r
## 4.1 步驟\r
\r
1. 啟動 config server。\r
1. 啟動 config client。\r
1. 檢查 \`my.prop\` 既 value，應該係而家 DB 裡面既 value。\r
1. 更改 DB 裡面既 \`my.prop\` 既 value。\r
1. Call config client 既 \`/actuator/refresh\` API。\r
    - Response body 裡面會有一個 array，其中一個 string 就係 \`my.prop\`，意味住 \`my.prop\` 既 value 改變左。\r
1. 檢查 \`my.prop\` 既 value，應該係我地改成既新 value。\r
\r
---\r
\r
## 4.2 檢查 property value\r
\r
針對 \`my.prop\`，我地有以下既方法：\r
\r
1. Call config client 既 \`/actuator/env\` API，response body 會有 \`my.prop\` 既 value，呢個方法只需要配置好 Actuator 就可以用。\r
1. 因為我地有特登寫 code 去做 logging，所以我地可以留意 config client 既 log 裡面 \`my.prop\` 既 value。\r
\r
---\r
\r
# 5 配置紀錄既應用次序\r
\r
可以睇返呢篇：[Spring Cloud Config——使用獨立既 Git 配置 repo - 配置檔既應用次序](/blog/spring-cloud-config-git#5-配置檔既應用次序)。\r
\r
## 5.1 自己發現到既 bug\r
\r
我喺 2023-01-07 發現到 \`spring-cloud-config-server\` 版本 \`4.0.0\` 或以前既 JDBC backend 對於配置紀錄既應用次序同 Git backend 有唔同，之後 Spring Cloud 項目既維護人員確認左個 bug，然後喺新版本 \`4.0.1\` 度 fix。\r
\r
### 5.1.1 問題核心\r
\r
Git backend 既實現畀到出黎既次序係：\r
\r
1. \`application\`\r
1. \`{spring.application.name}\`\r
1. \`application-{profile}\`\r
1. \`{spring.application.name}-{profile}\`\r
\r
但當我地使用 JDBC backend，個次序就會變左：\r
\r
1. \`application\`\r
1. \`application-{profile}\`\r
1. \`{spring.application.name}\`\r
1. \`{spring.application.name}-{profile}\`\r
\r
呢個 bug 一直存在喺 JDBC backend 既 code，但唔影響 Git backend。\r
\r
詳見：[GitHub - spring-cloud/spring-config-config - issue #2205](https://github.com/spring-cloud/spring-cloud-config/issues/2205#issuecomment-1374253402)\r
\r
---\r
\r
### 5.1.2 即時解決方法\r
\r
確定適用既 Spring Boot 版本：\`2.7.1\`\r
\r
如果等唔切 \`spring-cloud-config-server\` 推出新版本，或者因為某啲原因而唔想用新版本，咁喺使用舊版本既情況下，我地可以覆蓋 Spring 有問題既 Java class。\r
\r
以下係改好左既 \`org.springframework.cloud.config.server.environment.JdbcEnvironmentRepository\`，我地只要將佢放喺我地既 config server 既 \`src/main/java\` 既對應 package 度，個 Java app 運行既時候就會用我地果個版本既 Java class。\r
\r
唯一既改動就係將 \`findOne\` method 既 2 個 for loops 調轉。\r
\r
\`\`\`java\r
package org.springframework.cloud.config.server.environment;\r
\r
/**\r
 * <p>This class is a duplicate of the same class from Spring Cloud Config.\r
 * This version fixes a bug in the order of queries with application names and profiles.</p>\r
 *\r
 * @author Dave Syer\r
 * @author Michael Chung\r
 * @see <a href="https://github.com/spring-cloud/spring-cloud-config/issues/2205">Spring Cloud Config issue #2205</a>\r
 * @see <a href="https://github.com/spring-cloud/spring-cloud-config/pull/2207/commits/cc5aae457eef2ab5925669b4c608bbb3f003e694">Spring Cloud Config issue #2207 - commit</a>\r
 */\r
public class JdbcEnvironmentRepository implements EnvironmentRepository, Ordered {\r
\r
	// ...\r
\r
	@Override\r
	public Environment findOne(String application, String profile, String label) {\r
\r
		// ...\r
\r
		// XXX fixed the order\r
		for (String env : envs) {\r
			for (String app : applications) {\r
				try {\r
					Map<String, Object> next = this.jdbc.query(this.sql, this.extractor, app, env, label);\r
					if (next != null && !next.isEmpty()) {\r
						environment.add(new PropertySource(app + "-" + env, next));\r
					}\r
				}\r
				catch (DataAccessException e) {\r
					if (!failOnError) {\r
						if (logger.isDebugEnabled()) {\r
							logger.debug("Failed to retrieve configuration from JDBC Repository", e);\r
						}\r
					}\r
					else {\r
						throw e;\r
					}\r
				}\r
			}\r
		}\r
		return environment;\r
	}\r
}\r
\`\`\`\r
\r
註：\r
\r
-   呢個方法都係試出黎。\r
-   Spring 既 class loading 複雜，而根據經驗，新舊版本既實現都可以好唔同。\r
    -   並唔能夠保證舊版或者新版既 Spring Boot 項目甚或冇用 Spring 既 Maven 項目都一樣可以咁做黎覆蓋第三方 library 既 source code。\r
-   但至少試過喺呢個 Spring Boot 版本下打包成 JAR 之後都可以成功覆蓋到。\r
\r
---\r
\r
# 6 連線容錯測試\r
\r
根據測試，JDBC backend 並唔容許 DB 連線失敗，因為佢冇用 cache，所以當個 config DB 有 downtime，config client 係有可能啟動唔到。\r
\r
## 6.1 使用 JDBC backend 而 DB 連線失敗\r
\r
模擬連線失敗場景：\r
\r
1. 啟動 MySQL Docker container。\r
1. 啟動 config server。\r
1. 啟動 config client。\r
1. 呢個時候，我地可以見到 config server 既 log 度有 SELECT SQL 既 logs。\r
1. 暫停 MySQL Docker container。\r
1. 重新啟動 config client，可以見到 config client 啟動既時候停左喺度一陣之後，就因為喺 config server 度拎唔到配置而繼續執行，而視乎個 JAR 檔裡面既配置能唔能夠滿足到啲 Spring beans 既需要，個 config client 有可能會啟動失敗。咁都係因為 config server 冇任何 cache，所以佢每次都會問 DB 拎配置紀錄。\r
\r
---\r
\r
# 7 用返 Git backend\r
\r
當我地已經用緊 JDBC backend，但係有需要用返 Git 既話，就要重新執行過個 config server。\r
\r
我地需加上以下既配置去 disable datasource 既 auto-configuration：\r
\r
\`\`\`yaml\r
spring.autoconfigure.exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration\r
\`\`\`\r
\r
另外，我地亦都要：\r
\r
-   唔用 \`jdbc\` Spring profile。\r
-   移除 \`spring.datasource\` 既相關配置。\r
-   將 \`spring.cloud.config.server.jdbc.enabled\` 設置成 \`false\`。\r
`,hD='# 1 kubectl 介紹\r\n\r\n`kubectl` 係一個用黎操作雲端 K8s clusters 既 K8s 資源既一個 CLI 工具。\r\n\r\n---\r\n\r\n# 2 登入 K8s cluster\r\n\r\n用之前需要先成功登入 K8s cluster，拎到 client certificate、client key、token 等等既 data，之後就可以操作佢上面既 K8s 資源。\r\n\r\n呢啲 data 儲存喺 `C:/Users/<username>/.kube/config` 裡面。\r\n\r\n我地可以登入多個 K8s clusters，然後喺佢地之間 switch 黎 switch 去。\r\n\r\n## 2.1 本地開發環境：Docker Desktop\r\n\r\n如果係喺本地開發環境，直接喺 Docker Desktop 度 enable Kubernetes 就唔洗額外登入。\r\n\r\n---\r\n\r\n## 2.2 本地開發環境：Minikube\r\n\r\n如果係喺本地開發環境，直接用 Minikube 就唔洗額外登入。\r\n\r\n---\r\n\r\n## 2.3 登入 Azure Kubernetes Service（AKS）\r\n\r\n如果係用 AKS，就要用 Azure CLI 登入：\r\n\r\n```bash\r\naz login -u <email>\r\naz aks get-credentials -n <cluster name> -g <resource group> --admin --overwrite-existing\r\n```\r\n\r\n---\r\n\r\n# 3 kubectl 指令\r\n\r\n## 3.1 切換 cluster\r\n\r\n```bash\r\nkubectl config use-context <context name>\r\n```\r\n\r\n---\r\n\r\n## 3.2 查看目前 cluster\r\n\r\n我地可以睇到已經登入左既 cluster、佢既 context name、目前既默認 namespace，以及目前既 cluster（打左星號 `*`）：\r\n\r\n```bash\r\nkubectl config get-contexts\r\n```\r\n\r\n---\r\n\r\n## 3.3 切換默認 namespace\r\n\r\n```bash\r\nkubectl config set-context --current --namespace=<namespace>\r\n```\r\n\r\n如果唔先切換去目標 namespace，而目標 namespace 同現時默認既 namespace 唔同既話，咁就要喺每個 `kubectl` command 都用 `-n <namespace>` option 去指定目標 namespace。\r\n\r\n---\r\n\r\n## 3.4 列出所有 K8s 資源種類\r\n\r\n```bash\r\nkubectl api-resources -o wide\r\n```\r\n\r\n---\r\n\r\n## 3.5 列出某種類既 K8s 資源\r\n\r\n```bash\r\nkubectl get <resource type>\r\n```\r\n\r\n### 3.5.1 `Pod`\r\n\r\n睇 pod name、幾多個 containers 已經 ready、status、create 左幾耐：\r\n\r\n```bash\r\nkubectl get pods\r\n```\r\n\r\n---\r\n\r\n### 3.5.2 `Deployment`\r\n\r\n```bash\r\nkubectl get deployments\r\n```\r\n\r\n---\r\n\r\n### 3.5.3 `ReplicaSet`\r\n\r\n```bash\r\nkubectl get replicasets\r\n```\r\n\r\n---\r\n\r\n### 3.5.4 `HorizontalPodAutoscaler`\r\n\r\n```bash\r\nkubectl get horizontalpodautoscalers\r\n```\r\n\r\n---\r\n\r\n### 3.5.5 `AuthorizationPolicy`\r\n\r\n```bash\r\nkubectl get authorizationpolicys\r\n```\r\n\r\n---\r\n\r\n### 3.5.6 `Service`\r\n\r\n```bash\r\nkubectl get services\r\n```\r\n\r\n---\r\n\r\n### 3.5.7 `VirtualService`\r\n\r\n```bash\r\nkubectl get virtualservices\r\n```\r\n\r\n---\r\n\r\n### 3.5.8 `DestinationRule`\r\n\r\n```bash\r\nkubectl get destinationrules\r\n```\r\n\r\n---\r\n\r\n### 3.5.9 `ServiceAccount`\r\n\r\n```bash\r\nkubectl get serviceaccounts\r\n```\r\n\r\n---\r\n\r\n### 3.5.10 `Event`\r\n\r\n```bash\r\nkubectl get events\r\n```\r\n\r\n---\r\n\r\n### 3.5.11 `Node`\r\n\r\n睇 nodes 同埋佢地既 container runtime 版本（`containerd` 或者 `docker`）：\r\n\r\n```bash\r\nkubectl get nodes -o wide\r\n```\r\n\r\n---\r\n\r\n## 3.6 檢視 K8s 資源內容\r\n\r\n用 `get` 列出某種類既所有 K8s 資源之後，我地會見到個別 K8s 資源既名，然後就可以呢啲名黎 reference 個別 K8s 資源。\r\n\r\n睇重要既 fields：\r\n\r\n```bash\r\nkubectl describe <resource type> <resource name>\r\n```\r\n\r\n睇曬所有 fields：\r\n\r\n```bash\r\nkubectl get <resource type> <resource name> -o yaml\r\n```\r\n\r\n比較常需要檢視既 K8s 資源有 `Pod` 以及 `Deployment`，因為：\r\n\r\n-   `Pod` 既內容可以話畀我地知而家個 microservice 用咩參數黎運行，例如 Image ID、env、args、requests、limits，可以幫助我地 troubleshoot 問題。\r\n-   `Deployment` 定義左 pod template，係生成 `Pod` 既範本，修改佢之後 rollout restart 或者 delete `Pod` 就可以避免重新部署個 microservice。\r\n\r\n---\r\n\r\n## 3.7 修改 K8s 資源內容\r\n\r\n```bash\r\nkubectl edit <resource type> <resource name>\r\n```\r\n\r\n執行之後，會自動彈出 Notepad，修改完之後喺 Notepad 度 save，之後退出 Notepad，就會見到返回修改完成既回應。\r\n\r\n---\r\n\r\n## 3.8 刪除 K8s 資源\r\n\r\n```bash\r\nkubectl delete <resource type> <resource name>\r\n```\r\n\r\n`Pod` 算係比較常需要刪除既 K8s 資源，因為：\r\n\r\n-   為左加快開發，我地會想即時改變 microservice 既執行參數，但係因為 `Pod` 裡面既 microservice 已經運行緊，就咁修改 `Pod` 唔會起到作用，所以就要修改 `Deployment` 既 pod template，然後刪除運行緊既 `Pod`，等 K8s 自動生成 `Pod` 黎滿足 `ReplicaSet` 要求既 `Pod` 數量。\r\n\r\n---\r\n\r\n## 3.9 查看 `Pod` 日誌\r\n\r\n```bash\r\nkubectl logs <pod name>\r\n```\r\n\r\nFollow logs（佢會一直咁 stream logs 去我地個 console）：\r\n\r\n```bash\r\nkubectl logs -f <pod name>\r\n```\r\n\r\n睇最後 `20` 行 logs，並且繼續 follow：\r\n\r\n```bash\r\nkubectl logs -f <pod name> --tail=20\r\n```\r\n\r\n儲存喺檔案度（視乎 K8s 會為 `Pod` keep 幾多 logs，有上限）：\r\n\r\n```bash\r\nkubectl logs <pod name> > logs.txt\r\n```\r\n\r\n---\r\n\r\n## 3.10 Port-forward\r\n\r\n### 3.10.1 Port-forward `Pod`\r\n\r\n我地部署左一個 web microservice 上 K8s 之後，當個 `Pod` 成功運行緊，我地就可以試下佢既 HTTP API 功能。\r\n\r\n其中一個方式就係直接訪問個 `Pod`，呢個時候就需要用到 `port-forward`。\r\n\r\n```bash\r\nkubectl port-forward <pod name> <port>\r\nkubectl port-forward <pod name> <local port>:<remote port>\r\n```\r\n\r\n例子一：假如個 `Pod` expose 緊 `8080`，而我地又想 local port 同 remote port 用埋同一個：\r\n\r\n```bash\r\nkubectl port-forward <pod name> 8080\r\n```\r\n\r\n之後我地可以：\r\n\r\n```bash\r\ncurl localhost:8080\r\n```\r\n\r\n例子二：假如個 `Pod` expose 緊 `8080`，而我地又想 local port 用另一個，例如係 `8081`：\r\n\r\n```bash\r\nkubectl port-forward <pod name> 8081:8080\r\n```\r\n\r\n之後我地可以：\r\n\r\n```bash\r\ncurl localhost:8081\r\n```\r\n\r\n---\r\n\r\n### 3.10.2 Port-forward `Service`\r\n\r\n同樣地，我地都可以 port-forward `Service`：\r\n\r\n```bash\r\nkubectl port-forward service/<service name> <port>\r\nkubectl port-forward service/<service name> <local port>:<remote port>\r\n```\r\n\r\n---\r\n\r\n### 3.10.3 Port-forward `Deployment`\r\n\r\n同樣地，我地都可以 port-forward `Deployment`：\r\n\r\n```bash\r\nkubectl port-forward deployment/<deployment name> <port>\r\nkubectl port-forward deployment/<deployment name> <local port>:<remote port>\r\n```\r\n\r\n---\r\n\r\n## 3.11 Scale up/down `Deployment`\r\n\r\n手動增加或者減少 `Deployment` 既 `Pod` 數量：\r\n\r\n```bash\r\nkubectl scale --replicas=<new replica count> deployment <deployment name>\r\n```\r\n\r\n註：如果有用緊 `HorizontalPodAutoscaler`，因為佢會控制 replicas 既數量，所以手動 scale up、scale down 係唔會 work，除非我地完全 scale down 到 `0` 或者刪除左個 `HorizontalPodAutoscaler`。\r\n\r\n---\r\n\r\n## 3.12 重新部署 `Deployment`\r\n\r\n想重新部署 `Pod` 但唔想有 downtime 既話，可以 restart `Deployment`：\r\n\r\n```bash\r\nkubectl rollout restart deployment <deployment name>\r\n```\r\n\r\nK8s 會逐一將而家相同數量既 `Pod` 重新部署：\r\n\r\n1. 先部署新既 `Pod`。\r\n1. 等新既 `Pod` ready（probes 成功）。\r\n1. 移除舊既 `Pod`。\r\n1. 重複以上步驟直至新既 `Pod` 取代曬所有舊既 `Pod`。\r\n\r\n---\r\n\r\n## 3.13 對 `Pod` 裡面既 container 執行指令\r\n\r\n有時如果需要檢視 container 裡面既檔案，或者執行一啲指令，都可以做到：\r\n\r\n```bash\r\nkubectl exec -it -c <container> <pod name> -- /bin/bash\r\nkubectl exec -it -c <container> <pod name> -- sh\r\n```\r\n\r\n場景：\r\n\r\n-   執行 `ls -l` 以及 `cat <filename>` 去睇下有咩檔案，以及個別檔案內容。\r\n-   執行 `java -version` 去了解 Java microservice 既 Java 版本。\r\n\r\n---\r\n\r\n## 3.14 查看某種類 K8s 資源既資源使用情況\r\n\r\n呢度既「資源使用情況」係指 CPU、memory、storage。\r\n\r\n```bash\r\nkubectl top <resource type>\r\n```\r\n\r\n---\r\n\r\n## 3.15 部署 K8s 資源\r\n\r\n根據檔案內容而部署或者更新 K8s resources：\r\n\r\n```bash\r\nkubectl apply -f path/to/file.yml\r\n```\r\n\r\n根據檔案內容而刪除 K8s resources：\r\n\r\n```bash\r\nkubectl delete -f path/to/file.yml\r\n```\r\n\r\n---\r\n\r\n## 3.16 從 K8s container 抄出檔案\r\n\r\n我地可以將一個 K8s pod 既某個 container 既 file system 裡面既檔案抄到本地 file system。\r\n\r\n由 container 既 `/tmp` 抄到目前既 working directory，將檔案名改成 `myapp.jar`：\r\n\r\n```bash\r\nkubectl cp "<pod name>:/tmp/app.jar" ./myapp.jar\r\n```\r\n\r\n由 container 既 `/tmp` 抄到 `C:/output`（Windows），將檔案名改成 `myapp.jar`：\r\n\r\n```bash\r\nkubectl cp "<pod name>:/tmp/app.jar" /output/myapp.jar\r\n```\r\n\r\n抄 container 既 `/tmp` 成個 folder 既檔案到目前既 working directory：\r\n\r\n```bash\r\nkubectl cp <pod name>:/tmp/folder ./\r\n```\r\n\r\n抄 container 既 `/tmp` 成個 folder 既檔案到 `C:/output`（Windows）：\r\n\r\n```bash\r\nkubectl cp <pod name>:/tmp/folder /output\r\n```\r\n\r\n---\r\n\r\n## 3.17 將檔案抄入 K8s container\r\n\r\n我地可以將一啲檔案由本地 file system 抄入 K8s pod 既某個 container 既 file system 裡面。\r\n\r\n由目前既 working directory 抄到 container 既 `/tmp`，將檔案名改成 `app.jar`：\r\n\r\n```bash\r\nkubectl cp ./myapp.jar <pod name>:/tmp/app.jar\r\n```\r\n\r\n由 `C:/input`（Windows）抄到 container 既 `/tmp`，將檔案名改成 `app.jar`：\r\n\r\n```bash\r\nkubectl cp /input/myapp.jar <pod name>:/tmp/app.jar\r\n```\r\n\r\n抄目前既 working directory 成個 folder 既檔案抄到 container 既 `/tmp`：\r\n\r\n```bash\r\nkubectl cp ./ <pod name>:/tmp\r\n```\r\n\r\n抄 `C:/input`（Windows）成個 folder 既檔案抄到 container 既 `/tmp`（但 `/tmp` 裡面會多左個 `input` folder）：\r\n\r\n```bash\r\nkubectl cp /input <pod name>:/tmp\r\n```\r\n\r\n之後我地可以 `kubectl exec -it` 入個 container，然後：\r\n\r\n```bash\r\nmv /tmp/input/* /tmp\r\nrmdir /tmp/input\r\n```\r\n\r\n---\r\n\r\n# 4 參考資料\r\n\r\n-   [Kubernetes 官方文檔 - Organizing Cluster Access Using kubeconfig Files](https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/)\r\n-   [Kubernetes 官方文檔 - Command line tool (kubectl)](https://kubernetes.io/docs/reference/kubectl/)\r\n-   [Kubernetes 官方文檔 - kubectl commands](https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands)\r\n-   [Kubectl Command Cheatsheet](https://www.bluematador.com/learn/kubectl-cheatsheet)\r\n-   [Find Out What Container Runtime is Used on a Node](https://kubernetes.io/docs/tasks/administer-cluster/migrating-from-dockershim/find-out-runtime-you-use/)\r\n',vD=`# 1 Azure Service Bus 簡介\r
\r
Microsoft 既 Azure Service Bus（ASB）係一個 message broker 既雲服務，係用黎畀唔同既微服務之間進行異步既溝通（asynchronous communication）。佢同 RabbitMQ 以及 Kafka 相類似。\r
\r
負責發布訊息既微服務會將文字訊息發送到 ASB，然後 ASB 會暫時儲存住呢啲訊息，而訂閱左呢個 ASB 既微服務稍後就會收到訊息。當訂閱方成功接收到訊息，ASB 就會移除呢啲已經傳送既訊息。\r
\r
## 1.1 Messaging entities 概念\r
\r
ASB 有以下既 messaging entities：\r
\r
|   Messaging entity   | 描述|\r
| :------------------: ||\r
|        Queue         | 一條隊列，可以係一個訊息發送對象。任意數量既發布方、任意數量既訂閱方都可以使用同一條隊列收發訊息。                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\r
| Topic、subscriptions | Topic 係一個訊息發送對象，任意數量既發送方都可以發送訊息到同一個 topic；而 subscriptions 係隸屬於 topic，我地可以視佢地為 queues。當個 topic 收到訊息，佢既所有 subscriptions 都會收到同一個訊息。發布方只會將訊息發送到 topic，唔會知道 subscriptions 既存在。一個 topic 可以有任意數量既 subscriptions。視乎需要，任意數量既訂閱方可能會使用同一個 subscription，咁就相等於 consumer group 既概念，係 competing consumers，而同一個訊息只會有一個訂閱方既微服務收到；另一個情況係各自使用獨立既 subscription，咁同一個訊息所有訂閱方既微服務都會收到。 |\r
\r
---\r
\r
# 2 動手寫\r
\r
## 2.1 Maven dependencies\r
\r
\`\`\`xml\r
<parent>\r
	<groupId>org.springframework.boot</groupId>\r
	<artifactId>spring-boot-starter-parent</artifactId>\r
	<version>3.1.2</version>\r
</parent>\r
\r
<dependencyManagement>\r
	<dependencies>\r
		<dependency>\r
			<groupId>org.springframework.cloud</groupId>\r
			<artifactId>spring-cloud-dependencies</artifactId>\r
			<version>2022.0.3</version>\r
			<type>pom</type>\r
			<scope>import</scope>\r
		</dependency>\r
	</dependencies>\r
</dependencyManagement>\r
\r
<dependencies>\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-web</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>com.azure.spring</groupId>\r
		<artifactId>spring-cloud-azure-stream-binder-servicebus</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.apache.commons</groupId>\r
		<artifactId>commons-lang3</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.projectlombok</groupId>\r
		<artifactId>lombok</artifactId>\r
		<scope>provided</scope>\r
	</dependency>\r
</dependencies>\r
\`\`\`\r
\r
---\r
\r
## 2.2 Java code\r
\r
### 2.2.1 新式 function 做法\r
\r
Project structure：\r
\r
-   \`src/main/java\`\r
    -   \`/code\`\r
        -   \`/config\`\r
            -   \`MessageConfig.java\`\r
        -   \`/controller\`\r
            -   \`SampleController.java\`\r
\r
\`MessageConfig.java\`：\r
\r
\`\`\`java\r
@Slf4j\r
@Configuration\r
public class MessageConfig {\r
\r
    // 每秒發送訊息\r
    @Bean\r
    public Supplier<String> supplyBinding() {\r
        return () -> {\r
            final String dateTime = LocalDateTime.now(ZoneId.of("Hongkong")).format(DateTimeFormatter.ofPattern("uuuu-MM-dd HH:mm:ss"));\r
            final String message = String.format("Test msg - %s (%s)", RandomStringUtils.randomAlphanumeric(8), dateTime);\r
            log.info("Sending message: {}", message);\r
            return message;\r
        };\r
    }\r
\r
    @Bean\r
    public Consumer<String> consumeBinding() {\r
        return message -> {\r
            log.info("Successfully received message: {}", message);\r
        };\r
    }\r
}\r
\`\`\`\r
\r
\`SampleController.java\`：\r
\r
\`\`\`java\r
@Slf4j\r
@RestController\r
public class SampleController {\r
\r
    @Autowired\r
    StreamBridge streamBridge;\r
\r
    @GetMapping("/test/{value}")\r
    public ResponseEntity<String> testSend(@PathVariable("value") String value) {\r
        log.info("Sending value {} to topic", value);\r
        streamBridge.send("supplyBinding-out-0", value);\r
        return ResponseEntity.ok("ok");\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
### 2.2.2 舊式 annotation 做法\r
\r
Project structure：\r
\r
-   \`src/main/java\`\r
    -   \`/code\`\r
        -   \`/config\`\r
            -   \`MessageBinding.java\`\r
            -   \`MessageConfig.java\`\r
        -   \`/controller\`\r
            -   \`SampleController.java\`\r
\r
\`MessageBinding.java\`：\r
\r
\`\`\`java\r
public interface MessageBinding {\r
\r
    @Output("supplyBinding-out-0")\r
    MessageChannel supplyBinding();\r
\r
    @Input("consumeBinding-in-0")\r
    SubscribableChannel consumeBinding();\r
}\r
\`\`\`\r
\r
\`MessageConfig.java\`：\r
\r
\`\`\`java\r
@Slf4j\r
@EnableBinding(MessageBinding.class)\r
public class MessageConfig {\r
\r
    @Autowired\r
    MessageBinding messageBinding;\r
\r
    @StreamListener("consumeBinding-in-0")\r
    public void consumeBinding(String msg) {\r
        log.info("Successfully received message: {}", msg);\r
    }\r
}\r
\`\`\`\r
\r
\`SampleController.java\`：\r
\r
\`\`\`java\r
@Slf4j\r
@RestController\r
@EnableBinding(MessageBinding.class)\r
public class SampleController {\r
\r
    @Autowired\r
    MessageBinding messageBinding;\r
\r
    @GetMapping("/test/{value}")\r
    public ResponseEntity<String> testSend(@PathVariable("value") String value) throws Exception {\r
        log.info("Sending message: {}", value);\r
        publish(value);\r
        return ResponseEntity.ok("ok");\r
    }\r
\r
    private void publish(String msg) throws Exception {\r
\r
        log.info("Start publishing message: {}", msg);\r
\r
        try {\r
            if (!messageBinding.supplyBinding().send(MessageBuilder.withPayload(msg).build(), 30_000L)) {\r
                log.error("Failed to publish message. send() returns false.");\r
                throw new Exception("Failed to publish message.");\r
            }\r
\r
            log.info("Successfully published message.");\r
        } catch (Exception e) {\r
            log.error("Failed to publish message.", e);\r
            throw e;\r
        }\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
## 2.3 Application 配置\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
spring:\r
  cloud:\r
    function: # 新式 function 做法\r
      definition: supplyBinding;consumeBinding # 注意：supplyBinding 會每秒發送訊息\r
\r
    stream:\r
      binders:\r
        testBinder1:\r
          type: servicebus\r
          environment:\r
            spring.cloud.azure.servicebus.connection-string: Endpoint=sb://xxxxxx.servicebus.windows.net/;SharedAccessKeyName=my-test-topic-policy;SharedAccessKey=xxxxxx;EntityPath=my-test-topic\r
        testBinder2:\r
          type: servicebus\r
          environment:\r
            spring.cloud.azure.servicebus.connection-string: Endpoint=sb://xxxxxx.servicebus.windows.net/;SharedAccessKeyName=my-test-topic-policy;SharedAccessKey=xxxxxx;EntityPath=my-test-topic\r
\r
      bindings:\r
        supplyBinding-out-0:\r
          destination: my-test-topic\r
          binder: testBinder1\r
        consumeBinding-in-0:\r
          destination: my-test-topic\r
          group: my-test-subscription\r
          binder: testBinder2\r
\r
      servicebus:\r
        bindings:\r
          supplyBinding-out-0:\r
            producer:\r
              requeue-rejected: true\r
              entity-type: topic\r
          consumeBinding-in-0:\r
            consumer:\r
              requeue-rejected: true\r
              auto-complete: true\r
              entity-type: topic\r
\`\`\`\r
\r
---\r
\r
# 3 已知問題\r
\r
## 3.1 方括號包圍 message 導致既 bug\r
\r
當我地用以下 Java code 去發送訊息：\r
\r
\`\`\`java\r
streamBridge.send("supply-out-0", "[hello world]");\r
streamBridge.send("supply-out-0", (Object) "[hello world]", MediaType.TEXT_PLAIN);\r
\`\`\`\r
\r
就會導致以下呢個 exception：\r
\r
\`\`\`plaintext\r
java.lang.IllegalStateException: Failed to convert. Possible bug as the conversion probably shouldn't have been attampted here\r
    at org.springframework.cloud.function.json.JacksonMapper.doFromJson(JacksonMapper.java:70)\r
    at org.springframework.cloud.function.json.JsonMapper.fromJson(JsonMapper.java:94)\r
\`\`\`\r
\r
所以我地要注意 Spring framework 可能會針對某啲格式而去做轉換。\r
\r
參考：\r
\r
-   [How to use StreamBridge to send String message and bypass message conversion?](https://stackoverflow.com/questions/75371351/how-to-use-streambridge-to-send-string-message-and-bypass-message-conversion)\r
\r
---\r
\r
## 3.2 升級 Spring Cloud Stream 4.0.2 既舊配置問題\r
\r
Spring Cloud Stream \`4.x\` 適用於 Spring Boot \`3.x\` 以及 Spring Cloud \`2022.x\`。\r
\r
以下呢個配置黎自 Microsoft 文檔：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
spring:\r
  cloud:\r
    stream:\r
      function:\r
        definition: supplyBinding;consumeBinding\r
\`\`\`\r
\r
參考：[Microsoft 官方文檔 - Sending and receiving messages from/to Service Bus](https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/spring-cloud-stream-support?tabs=SpringCloudAzure5x#sending-and-receiving-messages-fromto-service-bus)\r
\r
根據 Spring team 既開發者 Oleg Zhurakousky 以及 Soby Chacko 所講，其實呢個配置已經 deprecated 左好耐，甚至乎係出左冇耐就 deprecated，而家已經 remove 左，取而代之既係：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
spring:\r
  cloud:\r
    function:\r
      definition: supplyBinding;consumeBinding\r
\`\`\`\r
\r
參考：\r
\r
-   [GitHub - spring-cloud/spring-cloud-stream - #2360](https://github.com/spring-cloud/spring-cloud-stream/issues/2360#issuecomment-1106510116)\r
-   [GitHub - spring-cloud/spring-cloud-stream - #2680](https://github.com/spring-cloud/spring-cloud-stream/issues/2680)\r
\r
否則，當我地升級 \`spring-cloud-stream\` 去 \`4.0.2\`，就會出現呢個 \`WARN\` log，而個 Spring application 亦唔會識得接收或者發送訊息。\r
\r
\`\`\`plaintext\r
Multiple functional beans were found [consume, supply], thus can't determine default function definition. Please use 'spring.cloud.function.definition' property to explicitly define it.\r
\`\`\`\r
\r
Class：\`BeanFactoryAwareFunctionRegistry\`（黎自 \`spring-cloud-function-context 4.0.2\`）\r
\r
註：\r
\r
-   \`spring-cloud-stream 4.0.1\` 冇呢個問題，係 \`spring-cloud-stream 4.0.2\` 先有。\r
\r
---\r
\r
# 4 Unit test\r
\r
\`ControllerTest\`：\r
\r
\`\`\`java\r
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\r
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.log;\r
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\r
\r
@SpringBootTest\r
@RunWith(SpringRunner.class)\r
@AutoConfigureMockMvc\r
public class ControllerTest {\r
\r
    @Autowired MockMvc mvc;\r
\r
    @Autowired SampleController controller;\r
    @Autowired MessageService service;\r
\r
    @Test\r
    public void test_context() {\r
        assertNotNull(controller);\r
        assertNotNull(service);\r
    }\r
\r
    @Test\r
    public void test_getHttp() throws Exception {\r
        mvc.perform(get("/test/dummy"))\r
           .andDo(log())\r
           .andExpect(status().isOk());\r
    }\r
}\r
\`\`\`\r
\r
\`src/test/resources/application.yml\`：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
spring:\r
  cloud:\r
    stream:\r
      binders:\r
        testBinder1:\r
          type: servicebus\r
          environment:\r
            spring.cloud.azure.servicebus.connection-string: Endpoint=sb://dummy.servicebus.windows.net/;SharedAccessKeyName=dummy;SharedAccessKey=dummy # 用 dummy connection string，唔需要 EntityPath（有既話就要 match 返 binding 既 destination）\r
        testBinder2:\r
          type: servicebus\r
          environment:\r
            spring.cloud.azure.servicebus.connection-string: Endpoint=sb://dummy.servicebus.windows.net/;SharedAccessKeyName=dummy;SharedAccessKey=dummy # 用 dummy connection string，唔需要 EntityPath（有既話就要 match 返 binding 既 destination）\r
\r
      bindings:\r
        supplyBinding-out-0:\r
          destination: my-test-topic\r
          binder: testBinder1\r
        consumeBinding-in-0:\r
          destination: my-test-topic\r
          group: my-test-subscription\r
          binder: testBinder2\r
\r
      servicebus:\r
        bindings:\r
          supplyBinding-out-0:\r
            producer:\r
              requeue-rejected: true\r
              entity-type: topic\r
          consumeBinding-in-0:\r
            consumer:\r
              requeue-rejected: true\r
              auto-complete: true\r
              entity-type: topic\r
\`\`\`\r
\r
---\r
\r
# 5 參考資料\r
\r
-   [Microsoft 官方文檔 - Service Bus queues, topics, and subscriptions](https://learn.microsoft.com/en-us/azure/service-bus-messaging/service-bus-queues-topics-subscriptions)\r
-   [Spring Cloud Azure 官方文檔 - Sending and Receiving Messages from/to Service Bus](https://microsoft.github.io/spring-cloud-azure/current/reference/html/index.html#sending-and-receiving-messages-fromto-service-bus)\r
-   [Spring Cloud Stream 官方文檔 - Suppliers (Sources)](https://docs.spring.io/spring-cloud-stream/reference/spring-cloud-stream/producing-and-consuming-messages.html#suppliers-sources)\r
\r
其他：\r
\r
-   [Microsoft 官方文檔 - Azure Service Bus Samples client library for Java](https://learn.microsoft.com/en-us/samples/azure/azure-sdk-for-java/servicebus-samples/)\r
-   [Microsoft 官方文檔 - Send messages to an Azure Service Bus topic and receive messages from subscriptions to the topic (Java)](https://learn.microsoft.com/en-us/azure/service-bus-messaging/service-bus-java-how-to-use-topics-subscriptions)\r
-   [Microsoft 官方文檔 - Spring Cloud Stream with Azure Service Bus](https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/configure-spring-cloud-stream-binder-java-app-with-service-bus)\r
-   [GitHub - Azure/azure-sdk-for-java - SendMessageBatchSample](https://github.com/Azure/azure-sdk-for-java/blob/main/sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/SendMessageBatchSample.java)\r
-   [GitHub - Azure/azure-sdk-for-java - Spring Versions Mapping - Spring Cloud Azure Support Status](https://github.com/Azure/azure-sdk-for-java/wiki/Spring-Versions-Mapping)\r
`,bD=`# 1 JMH 簡介\r
\r
Java Microbenchmark Harness（JMH）係一個用黎做 benchmark Java 程式既一套 library。\r
\r
佢可以話畀我地知一個 Java method：\r
\r
-   平均需要幾長時間去執行（average time）\r
-   一秒鐘執行到幾多次（throughput）\r
\r
## 1.1 使用場景\r
\r
1. 想改善某個 method 既執行速度，例如寫 algorithm。\r
1. 想比較 Java 或者 Maven dependency 版本 upgrade 帶黎既性能差別。\r
\r
---\r
\r
# 2 動手寫\r
\r
Project structure：\r
\r
-   \`src/main/java\`\r
    -   \`/code\`\r
        -   \`/jmh\`\r
            -   \`/benchmarks\`\r
                -   \`AppStartupBenchmark.java\`\r
                -   \`BenchmarkPackageRef.java\`\r
            -   \`JmhApplication.java\`\r
        -   \`ApplicationController.java\`\r
        -   \`MainApplication.java\`\r
-   \`src/main/resources\`\r
    -   \`application.yml\`\r
\r
## 2.1 Maven dependencies\r
\r
\`\`\`xml\r
<parent>\r
	<groupId>org.springframework.boot</groupId>\r
	<artifactId>spring-boot-starter-parent</artifactId>\r
	<version>3.0.6</version>\r
</parent>\r
\r
<dependencyManagement>\r
	<dependencies>\r
		<dependency>\r
			<groupId>org.springframework.cloud</groupId>\r
			<artifactId>spring-cloud-dependencies</artifactId>\r
			<version>2022.0.2</version>\r
			<type>pom</type>\r
			<scope>import</scope>\r
		</dependency>\r
	</dependencies>\r
</dependencyManagement>\r
\r
<dependencies>\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-web</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-actuator</artifactId>\r
	</dependency>\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-devtools</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>commons-io</groupId>\r
		<artifactId>commons-io</artifactId>\r
		<version>2.11.0</version>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.openjdk.jmh</groupId>\r
		<artifactId>jmh-core</artifactId>\r
		<version>1.36</version>\r
	</dependency>\r
	<dependency>\r
		<groupId>org.openjdk.jmh</groupId>\r
		<artifactId>jmh-generator-annprocess</artifactId>\r
		<version>1.36</version>\r
	</dependency>\r
</dependencies>\r
\r
<build>\r
	<plugins>\r
		<plugin>\r
			<groupId>org.springframework.boot</groupId>\r
			<artifactId>spring-boot-maven-plugin</artifactId>\r
			<version>3.0.6</version>\r
			<configuration>\r
				<mainClass>code.jmh.JmhApplication</mainClass> <!-- 只限測試用 -->\r
			</configuration>\r
			<executions>\r
				<execution>\r
					<goals>\r
						<goal>repackage</goal>\r
					</goals>\r
				</execution>\r
			</executions>\r
		</plugin>\r
	</plugins>\r
</build>\r
\`\`\`\r
\r
---\r
\r
## 2.2 Java code\r
\r
\`JmhApplication.java\`：\r
\r
\`\`\`java\r
public class JmhApplication {\r
\r
    public static void main(String [] args) throws Exception {\r
\r
        final File resultFile = createResultFile();\r
\r
        final Options opt = new OptionsBuilder()\r
                .include(BenchmarkPackageRef.class.getPackageName())\r
                .shouldDoGC(true)\r
                .shouldFailOnError(true)\r
                .resultFormat(ResultFormatType.JSON)\r
                .result(resultFile.getAbsolutePath())\r
                .build();\r
\r
        new Runner(opt).run();\r
\r
        printResultFile(resultFile);\r
    }\r
\r
    private static File createResultFile() throws Exception {\r
        try {\r
            final File file = Files.createTempFile("jmh-results", ".json").toFile();\r
            file.deleteOnExit();\r
            System.out.println("Created JMH result file: " + file.getAbsolutePath());\r
\r
            return file;\r
        } catch (Exception e) {\r
            System.err.println("Failed to create result file for JMH.");\r
            throw e;\r
        }\r
    }\r
\r
    private static void printResultFile(File resultFile) throws Exception {\r
        System.out.println("Printing file content of " + resultFile.getAbsolutePath() + ":");\r
        System.out.println(FileUtils.readFileToString(resultFile, "UTF-8"));\r
    }\r
}\r
\`\`\`\r
\r
\`BenchmarkPackageRef.java\`：\r
\r
\`\`\`java\r
public final class BenchmarkPackageRef {\r
\r
    private BenchmarkPackageRef() {}\r
}\r
\`\`\`\r
\r
\`AppStartupBenchmark.java\`：\r
\r
\`\`\`java\r
@Warmup(iterations = 5)\r
@Measurement(iterations = 20)\r
@State(Scope.Benchmark)\r
@BenchmarkMode(Mode.AverageTime)\r
@OutputTimeUnit(TimeUnit.MILLISECONDS)\r
@Threads(1)\r
@Fork(value = 1, jvmArgs = { "-server" })\r
public class AppStartupBenchmark {\r
\r
    ConfigurableApplicationContext context;\r
\r
    @Setup(Level.Invocation)\r
    public void init() {\r
\r
    }\r
\r
    @TearDown(Level.Invocation)\r
    public void finish() {\r
        if (context!=null && context.isRunning()) {\r
            context.close();\r
        }\r
    }\r
\r
    // 我地測試緊 Spring Boot startup 以及 Spring context 初始化\r
    @Benchmark\r
    public void benchmarkAppStartup() {\r
        context = SpringApplication.run(MainApplication.class);\r
        Assert.notNull(context.getBean(MyController.class), "Controller bean should not be null.");\r
    }\r
}\r
\`\`\`\r
\r
\`MainApplication.java\`：\r
\r
\`\`\`java\r
@SpringBootApplication\r
public class MainApplication {\r
\r
    public static void main(String[] args) {\r
        SpringApplication.run(MainApplication.class, args);\r
    }\r
}\r
\`\`\`\r
\r
\`MyController.java\`：\r
\r
\`\`\`java\r
@RestController\r
public class MyController {\r
\r
    @GetMapping\r
    public String helloWorld() {\r
        return "hello world";\r
    }\r
}\r
\`\`\`\r
\r
\`application.yml\`：\r
\r
\`\`\`yaml\r
logging.level.root: ERROR\r
spring.main.banner-mode: off\r
\`\`\`\r
\r
---\r
\r
# 3 執行 benchmark\r
\r
有兩個方式：\r
\r
1. IDE 裡面作為 Java app 咁執行\r
1. Build 左 JAR 檔之後執行\r
\r
## 3.1 IDE 裡面執行\r
\r
（以下適用於 Eclipse）\r
\r
先確保 Eclipse 有安裝到 \`m2e-apt\`，亦都 enable 左 annotation processing。\r
\r
1. Update 個 Maven project。\r
1. 將 \`JmhApplication\` class 作為 Java app 咁執行。\r
\r
---\r
\r
## 3.2 執行 JAR artifact\r
\r
我地要 build 左個 JAR 檔出黎，然後執行佢：\r
\r
\`\`\`bash\r
mvn clean package\r
\`\`\`\r
\r
\`\`\`bash\r
cd target\r
java -jar spring-boot-jmh-1.0.0.jar\r
\`\`\`\r
\r
---\r
\r
# 4 Benchmark 結果樣本\r
\r
註：\r
\r
-   我地用既 benchmark mode 係 average time。\r
    -   所以 score 既單位係 \`ms/op\`，呢個數字係越低越好。\r
    -   每個 iteration 執行既 operations 次數由 JMH 決定。\r
    -   如果 benchmark mode 用 all，佢會用唔同既 benchmark mode 執行同一個 benchmark。\r
\r
## 4.1 Console log\r
\r
\`\`\`plaintext\r
# JMH version: 1.36\r
# VM version: JDK 17.0.7, OpenJDK 64-Bit Server VM, 17.0.7+7-LTS\r
# VM invoker: C:\\Users\\Michael\\Desktop\\Apps\\msjdk17\\bin\\java.exe\r
# VM options: -server\r
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)\r
# Warmup: 5 iterations, 10 s each\r
# Measurement: 20 iterations, 10 s each\r
# Timeout: 10 min per iteration\r
# Threads: 1 thread, will synchronize iterations\r
# Benchmark mode: Average time, time/op\r
# Benchmark: code.jmh.benchmarks.AppStartupBenchmark.benchmarkAppStartup\r
\r
# Run progress: 0.00% complete, ETA 00:04:10\r
# Fork: 1 of 1\r
# Warmup Iteration   1: 220.079 ms/op\r
# Warmup Iteration   2: 129.138 ms/op\r
# Warmup Iteration   3: 105.157 ms/op\r
# Warmup Iteration   4: 97.996 ms/op\r
# Warmup Iteration   5: 89.844 ms/op\r
Iteration   1: 89.442 ms/op\r
Iteration   2: 89.301 ms/op\r
Iteration   3: 87.922 ms/op\r
Iteration   4: 86.586 ms/op\r
Iteration   5: 87.189 ms/op\r
Iteration   6: 85.913 ms/op\r
Iteration   7: 88.044 ms/op\r
Iteration   8: 86.758 ms/op\r
Iteration   9: 86.637 ms/op\r
Iteration  10: 86.204 ms/op\r
Iteration  11: 87.040 ms/op\r
Iteration  12: 87.521 ms/op\r
Iteration  13: 87.171 ms/op\r
Iteration  14: 89.843 ms/op\r
Iteration  15: 85.210 ms/op\r
Iteration  16: 84.815 ms/op\r
Iteration  17: 84.768 ms/op\r
Iteration  18: 88.859 ms/op\r
Iteration  19: 84.887 ms/op\r
Iteration  20: 87.541 ms/op\r
\r
\r
Result "code.jmh.benchmarks.AppStartupBenchmark.benchmarkAppStartup":\r
  87.083 ±(99.9%) 1.334 ms/op [Average]\r
  (min, avg, max) = (84.768, 87.083, 89.843), stdev = 1.536\r
  CI (99.9%): [85.749, 88.416] (assumes normal distribution)\r
\r
\r
# Run complete. Total time: 00:04:55\r
\r
REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on\r
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial\r
experiments, perform baseline and negative tests that provide experimental control, make sure\r
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.\r
Do not assume the numbers tell you what you want them to tell.\r
\r
NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise\r
extra caution when trusting the results, look into the generated code to check the benchmark still\r
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between\r
different JVMs are already problematic, the performance difference caused by different Blackhole\r
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.\r
\r
Benchmark                                Mode  Cnt   Score   Error  Units\r
AppStartupBenchmark.benchmarkAppStartup  avgt   20  87.083 ± 1.334  ms/op\r
\`\`\`\r
\r
---\r
\r
## 4.2 JMH result 檔案\r
\r
<!-- prettier-ignore -->\r
\`\`\`json\r
[\r
    {\r
        "jmhVersion" : "1.36",\r
        "benchmark" : "code.jmh.benchmarks.AppStartupBenchmark.benchmarkAppStartup",\r
        "mode" : "avgt",\r
        "threads" : 1,\r
        "forks" : 1,\r
        "jvm" : "C:\\\\Users\\\\Michael\\\\Desktop\\\\Apps\\\\msjdk17\\\\bin\\\\java.exe",\r
        "jvmArgs" : [\r
            "-server"\r
        ],\r
        "jdkVersion" : "17.0.7",\r
        "vmName" : "OpenJDK 64-Bit Server VM",\r
        "vmVersion" : "17.0.7+7-LTS",\r
        "warmupIterations" : 5,\r
        "warmupTime" : "10 s",\r
        "warmupBatchSize" : 1,\r
        "measurementIterations" : 20,\r
        "measurementTime" : "10 s",\r
        "measurementBatchSize" : 1,\r
        "primaryMetric" : {\r
            "score" : 87.08259406398619,\r
            "scoreError" : 1.3338545207641799,\r
            "scoreConfidence" : [\r
                85.74873954322202,\r
                88.41644858475037\r
            ],\r
            "scorePercentiles" : {\r
                "0.0" : 84.76841401869159,\r
                "50.0" : 87.10552132326006,\r
                "90.0" : 89.42742431372548,\r
                "95.0" : 89.82311887254902,\r
                "99.0" : 89.84320392156863,\r
                "99.9" : 89.84320392156863,\r
                "99.99" : 89.84320392156863,\r
                "99.999" : 89.84320392156863,\r
                "99.9999" : 89.84320392156863,\r
                "100.0" : 89.84320392156863\r
            },\r
            "scoreUnit" : "ms/op",\r
            "rawData" : [\r
                [\r
                    89.44150294117647,\r
                    89.30071666666667,\r
                    87.92223269230769,\r
                    86.58622761904762,\r
                    87.18889134615385,\r
                    85.91300943396226,\r
                    88.0441,\r
                    86.75808476190477,\r
                    86.63733428571429,\r
                    86.20367047619048,\r
                    87.03976476190476,\r
                    87.52096153846153,\r
                    87.17127788461538,\r
                    89.84320392156863,\r
                    85.20977196261683,\r
                    84.81511214953271,\r
                    84.76841401869159,\r
                    88.85933203883495,\r
                    84.88701028037383,\r
                    87.5412625\r
                ]\r
            ]\r
        },\r
        "secondaryMetrics" : {\r
        }\r
    }\r
]\r
\`\`\`\r
\r
---\r
\r
# 5 已知問題\r
\r
## 5.1 ClassNotFoundException：ForkedMain\r
\r
當我地用舊版既 Spring Boot \`2.7.x\` 而又配置左 \`@Fork(value = 1)\` 既話，當我地 build 左個 JAR 檔然後執行佢，就會出現下面既 error。\r
\r
\`\`\`plaintext\r
Error: Could not find or load main class org.openjdk.jmh.runner.ForkedMain\r
Caused by: java.lang.ClassNotFoundException: org.openjdk.jmh.runner.ForkedMain\r
<forked VM failed with exit code 1>\r
<stdout last='20 lines'>\r
</stdout>\r
<stderr last='20 lines'>\r
Error: Could not find or load main class org.openjdk.jmh.runner.ForkedMain\r
Caused by: java.lang.ClassNotFoundException: org.openjdk.jmh.runner.ForkedMain\r
</stderr>\r
\r
Benchmark had encountered error, and fail on error was requested\r
Exception in thread "main" java.lang.reflect.InvocationTargetException\r
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r
        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r
        at java.base/java.lang.reflect.Method.invoke(Method.java:566)\r
        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49)\r
        at org.springframework.boot.loader.Launcher.launch(Launcher.java:108)\r
        at org.springframework.boot.loader.Launcher.launch(Launcher.java:58)\r
        at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:65)\r
Caused by: org.openjdk.jmh.runner.RunnerException: Benchmark caught the exception\r
        at org.openjdk.jmh.runner.Runner.runBenchmarks(Runner.java:575)\r
        at org.openjdk.jmh.runner.Runner.internalRun(Runner.java:310)\r
        at org.openjdk.jmh.runner.Runner.run(Runner.java:209)\r
        at code.jmh.JmhApplication.main(JmhApplication.java:28)\r
        ... 8 more\r
Caused by: org.openjdk.jmh.runner.BenchmarkException: Benchmark error\r
        at org.openjdk.jmh.runner.Runner.doFork(Runner.java:768)\r
        at org.openjdk.jmh.runner.Runner.runSeparate(Runner.java:660)\r
        at org.openjdk.jmh.runner.Runner.runBenchmarks(Runner.java:558)\r
        ... 11 more\r
        Suppressed: java.lang.IllegalStateException: Forked VM failed with exit code 1\r
                ... 14 more\r
\`\`\`\r
\r
最快捷既解決方法係配置 \`@Fork(value = 0)\`，但係 JMH 只係建議喺 debug 既時候唔用 fork。另外唔用 fork 都有個壞處，就係我地會 apply 唔到 JVM args。\r
\r
\`\`\`plaintext\r
# Fork: N/A, test runs in the host VM\r
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***\r
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***\r
\`\`\`\r
\r
---\r
\r
# 6 參考資料\r
\r
-   [Java JMH Benchmark Tutorial](https://mkyong.com/java/java-jmh-benchmark-tutorial/)\r
-   [JMH - Java Microbenchmark Harness](https://jenkov.com/tutorials/java-performance/jmh.html)\r
-   [[Spring, JMH] Howto integrate JMH benchmarks with Spring](https://gist.github.com/msievers/ce80d343fc15c44bea6cbb741dde7e45)\r
`,yD=`# 1 Picocli 用途\r
\r
有時我地會想用寫一個冇 GUI 介面既 CLI 程式去重覆處理一啲野。舉個例，我地想批量處理圖片，為每張圖片加上類似美圖 apps 既濾鏡效果，而為左方便我地比較邊張既效果出到黎會好啲，我地要處理同一批圖片好幾次，每次都要用唔同既參數、配置。當然我地寫個 Java 程式，\`main\` method 裡面寫好曬會針對同一批圖片用上濾鏡一、濾鏡二、濾鏡三等等既處理，每次都開個 IDE 出黎直接改 code 裡面既參數，然後喺 IDE 度執行個程式。不過，假如呢個程式係要畀其他人用，咁就應該要整到似返個 CLI 既工具咁，可以以統一既操作方式，根據當刻用家提供既唔同參數而執行邏輯。仲有，通常 CLI 工具都會自帶內置既 user manual，話畀用家知道有咩參數可以用。\r
\r
Picocli 正正係一個可以畀我地非常方便咁開發 Java CLI 工具既 Maven library。佢提供左唔少 annotations 畀我地定義 CLI 既 options、parameters、subcommand 等等，然後佢會幫我地喺 console output 度 print help（類似 man page 既 user manual）。\r
\r
---\r
\r
# 2 CLI 基礎知識\r
\r
## 2.1 Options、positional parameters\r
\r
一般黎講，CLI 既參數有兩種：\r
\r
|         類別         | 描述                                     |\r
| :------------------: | ---------------------------------------- |\r
|        Option        | Key value pairs 或者 boolean（開／關）。 |\r
| Positional parameter | 需要順次序提供既參數。                   |\r
\r
![](blog/2023-05/picocli/OptionsAndParameters.png)\r
\r
---\r
\r
## 2.2 Options、positional parameters 既次序\r
\r
我地只需要注意 positional parameters 既次序。\r
\r
至於 options，一般都會將佢地擺先過 positional parameters，例如 \`kubectl exec -i -t --container=mycontainer mypod\`，呢度 \`exec\` 係 subcommand，後面以 \`-\` 或者 \`--\` 開頭既都係 options，而最後既 \`mypod\` 係唯一既 positional parameters。\r
\r
不過，我地亦可以將 options 擺喺成句 command 既最後，例如 \`kubectl logs -f mypod --tail=20\`，呢度我地就將 \`--tail\` option 放在喺 positional parameter \`mypod\` 既後面。\r
\r
---\r
\r
## 2.3 Double-dash\r
\r
Double-dash（\`--\`）係用黎分隔 options 以及 positional parameters。\r
\r
舉個例，如果個 positional parameter 以 \`-\` 開頭，就有可能被誤以為係一個 option，咁我地可以喺第一個 positional parameter 既前面加上 \`--\`。\r
\r
---\r
\r
## 2.4 Subcommand\r
\r
舉個 subcommand 既例子：\r
\r
\`\`\`bash\r
kubectl get pods -n my-namespace\r
\`\`\`\r
\r
以上既 \`get\`、\`pods\` 就係 subcommand 以及 sub-subcommand 既例子。\r
\r
---\r
\r
# 3 Maven dependencies\r
\r
\`\`\`xml\r
<dependency>\r
    <groupId>info.picocli</groupId>\r
    <artifactId>picocli</artifactId>\r
    <version>4.7.3</version>\r
</dependency>\r
\`\`\`\r
\r
---\r
\r
# 4 基本例子\r
\r
以下會展示最基本既例子。\r
\r
\`MainCli.java\`：\r
\r
\`\`\`java\r
public class MainCli {\r
\r
    public static void main(String[] args) {\r
\r
        final CommandLine cli = new CommandLine(new MyCommand());\r
        final int exitCode = cli.execute(args);\r
\r
        System.exit(exitCode);\r
    }\r
}\r
\`\`\`\r
\r
\`MyCommand.java\`：\r
\r
\`\`\`java\r
@Command(\r
    name = "my-cli-app",\r
    description = "This app is a CLI tool for testing Picocli.",\r
    sortOptions = false,\r
    showDefaultValues = true,\r
    mixinStandardHelpOptions = true,\r
    showEndOfOptionsDelimiterInUsageHelp = true,\r
    versionProvider = MyVersionProvider.class,\r
)\r
public class MyCommand implements Runnable {\r
\r
    @Option(/* name, description, required, defaultValue, etc */)\r
    String sampleOption;\r
\r
    @Parameters(/* index, description, arity, etc */)\r
    String sampleParameter;\r
\r
    @Override\r
    public void run() {\r
        // log.info(...);\r
    }\r
}\r
\`\`\`\r
\r
註：\r
\r
-   \`MyCommand\` 係一個終點 command，所以需要 implements \`Runnable\`。\r
-   如果執行既時候畀左 \`--help\` option，佢就會自動生成類似 man page 既結果。\r
-   如果執行既時候畀左 \`--version\` option 而又冇畀 \`--help\` option，佢就會用我地自定義既 \`MyVersionProvider\` class 黎生成結果。\r
-   又齊曬 required 既 options 以及 positional parameters，咁佢就會 call 個 \`run()\` method。\r
\r
---\r
\r
# 5 探討 Picocli annotations\r
\r
Picocli 既 \`@Command\`、\`@Option\`、\`@Parameters\` annotations 都有一個 \`description\` attribute，可以畀我地喺 \`--help\` 度詳述佢地既用途。\r
\r
以下我地會透過重現 kubectl CLI 黎學習 Picocli。\r
\r
## 5.1 \`@Command\`\r
\r
### 5.1.1 Top-level command\r
\r
\`\`\`java\r
@Command(\r
    name = "kubectl",\r
    description = "This is a Picocli demo to replicate the 'kubectl' CLI.",\r
    scope = ScopeType.INHERIT,\r
    sortOptions = false,\r
    showDefaultValues = true,\r
    mixinStandardHelpOptions = true,\r
    showEndOfOptionsDelimiterInUsageHelp = true,\r
    versionProvider = MyVersionProvider.class,\r
    subcommands = {\r
        KubectlGetCommand.class,\r
        KubectlDeleteCommand.class,\r
        KubectlLogsCommand.class,\r
    }\r
)\r
public class KubectlCommand {\r
    // 唔計 --help、--version 呢啲特殊既 predefined options，\r
    // 呢個本身唔係一個終點 command，所以唔洗 implements Runnable。\r
}\r
\`\`\`\r
\r
Class definition：\r
\r
-   如果唔係一個終點 command（執行既時候一定要提供 subcommand），就唔洗 implements \`Runnable\`，因為就算定義左 \`run()\` method，佢都唔會 call。\r
-   相反，如果係一個終點 command，就要 implements \`Runnable\`，因為佢會 call 我地定義既 \`run()\` method。\r
\r
一啲重要既 attributes：\r
\r
|               Attribute                | Value          | 解釋                                                                                                         |\r
| :------------------------------------: | -------------- | ------------------------------------------------------------------------------------------------------------ |\r
|                 \`name\`                 | 冇所謂         | Top-level command 既 \`name\` attribute 冇用，因為我地執行既係個 CLI 既檔案名。                                |\r
|             \`description\`              | 冇所謂         | 純粹 \`--help\` 顯示用。                                                                                       |\r
|                \`scope\`                 | \`INHERIT\`      | Subcommands 會 inherit 呢個 @Command annotation 既 attributes。                                              |\r
|             \`sortOptions\`              | \`false\`        | 令 \`--help\` 裡面既 options 以 Java class 裡面啲 fields 既 declaration order 黎排序（默認係以英文字母排序）。 |\r
|          \`showDefaultValues\`           | \`true\`         | 令 \`--help\` 裡面顯示默認值。                                                                                 |\r
|       \`mixinStandardHelpOptions\`       | \`true\`         | 加入 \`--help\`／\`-h\`、\`--version\`／\`-V\` 既 predefined options。                                               |\r
| \`showEndOfOptionsDelimiterInUsageHelp\` | \`true\`         | 令 \`--help\` 裡面顯示 \`--\` 既用途。                                                                           |\r
|           \`versionProvider\`            | 自定義 class   | 用自定義既 class 黎生成 \`--version\` 既結果。                                                                 |\r
|             \`subcommands\`              | 自定義 classes | Subcommand 既自定義 classes。如果係終點 command，就要 implements \`Runnable\`。                                |\r
\r
---\r
\r
### 5.1.2 Subcommand\r
\r
以下係一啲非終點 subcommand 既例子：\r
\r
\`\`\`java\r
@Command(\r
    name = "get",\r
    description = "This is the 'kubectl get' subcommand.",\r
    subcommands = {\r
        KubectlGetPodsCommand.class,\r
        KubectlGetDeploymentsCommand.class,\r
    }\r
)\r
public class KubectlGetCommand {}\r
\`\`\`\r
\r
\`\`\`java\r
@Command(\r
    name = "delete",\r
    description = "This is the 'kubectl delete' command.",\r
    subcommands = {\r
        KubectlDeletePodsCommand.class,\r
        KubectlDeleteDeploymentsCommand.class,\r
    }\r
)\r
public class KubectlDeleteCommand {}\r
\`\`\`\r
\r
以下係一個終點 subcommand 既例子：\r
\r
\`\`\`java\r
@Slf4j\r
@Command(\r
    name = "logs",\r
    description = "This is the 'kubectl logs' command."\r
)\r
public class KubectlLogsCommand implements Runnable {\r
\r
    @Option(names = { "-f", "--follow" }, required = false, defaultValue = "false")\r
    boolean follow;\r
\r
    @Option(names = { "--tail" }, required = false, defaultValue = "-1")\r
    int tail;\r
\r
    @Parameters(index = "0")\r
    String podName;\r
\r
    @Override\r
    public void run() {\r
        log.info("kubectl logs");\r
        log.info("-f: {}", follow);\r
        log.info("--tail: {}", tail);\r
        log.info("Param 0: {}", podName);\r
    }\r
}\r
\`\`\`\r
\r
Command 例子：\r
\r
\`\`\`bash\r
java -jar kubectl.jar logs mypod\r
java -jar kubectl.jar logs -f --tail=20 mypod\r
\`\`\`\r
\r
---\r
\r
### 5.1.3 Sub-subcommand\r
\r
以下都係終點 commands 既例子：\r
\r
\`\`\`java\r
@Command(\r
    name = "pods",\r
    aliases = { "po", "pod" },\r
    description = "This is the 'kubectl get pods' command."\r
)\r
public class KubectlGetPodsCommand implements Runnable {\r
\r
    @Override\r
    public void run() {\r
        System.out.println("kubectl get pods");\r
    }\r
}\r
\`\`\`\r
\r
Command 例子：\r
\r
\`\`\`bash\r
java -jar kubectl.jar get po\r
java -jar kubectl.jar get pod\r
java -jar kubectl.jar get pods\r
\`\`\`\r
\r
\`\`\`java\r
@Slf4j\r
@Command(\r
    name = "pods",\r
    aliases = { "po", "pod" },\r
    description = "This is the 'kubectl delete pods' command."\r
)\r
public class KubectlDeletePodsCommand implements Runnable {\r
\r
    @Parameters(\r
        index = "0",\r
        description = "A list of pod names.",\r
        arity = "1..*"\r
    )\r
    List<String> podNames;\r
\r
    @Override\r
    public void run() {\r
        log.info("kubectl delete pods");\r
        log.info("Param 0: ({} elements) {}", podNames.size(), podNames);\r
    }\r
}\r
\`\`\`\r
\r
Command 例子：\r
\r
\`\`\`bash\r
java -jar kubectl.jar delete po pod1\r
java -jar kubectl.jar delete pod pod1\r
java -jar kubectl.jar delete pods pod1\r
java -jar kubectl.jar delete pods pod1 pod2\r
\`\`\`\r
\r
---\r
\r
## 5.2 \`@Option\`（option）\r
\r
### 5.2.1 必要 option\r
\r
\`\`\`java\r
@Option(\r
    names = { "-i", "--input" },\r
    required = true\r
)\r
String input;\r
\`\`\`\r
\r
---\r
\r
### 5.2.2 非必要 option\r
\r
\`\`\`java\r
@Option(\r
    names = { "-o", "--output" },\r
    required = false\r
)\r
String output;\r
\`\`\`\r
\r
---\r
\r
## 5.3 \`@Parameters\`（positional parameter）\r
\r
例子:\r
\r
\`\`\`java\r
@Parameters(\r
    index = "0",\r
    description = "1st parameter"\r
)\r
String foo;\r
\`\`\`\r
\r
\`\`\`java\r
@Parameters(\r
    index = "1",\r
    description = "2nd parameter"\r
)\r
String bar;\r
\`\`\`\r
\r
\`\`\`java\r
@Parameters(\r
    index = "2",\r
    description = "3rd parameter (multiple values)",\r
    arity = "1..*"\r
)\r
List<String> varargs;\r
\`\`\`\r
\r
### 5.3.1 非必要 positional parameter\r
\r
我地可以設置 \`arity\` 做 \`0..1\`，咁個 positional parameter 就可有可無。\r
\r
\`\`\`java\r
@Parameter(index = "0", arity = "0..1")\r
String foo;\r
\`\`\`\r
\r
---\r
\r
# 6 Data types\r
\r
## 6.1 \`String\`\r
\r
\`\`\`java\r
@Option(\r
    names = { "--foo" },\r
    defaultValue = "foo" // 任意值\r
)\r
String foo;\r
\`\`\`\r
\r
---\r
\r
## 6.2 \`boolean\`\r
\r
\`\`\`java\r
@Option(\r
    names = { "--foo" },\r
    defaultValue = "true" // "true"、"false"\r
)\r
boolean foo;\r
\`\`\`\r
\r
---\r
\r
## 6.3 \`List<String>\`\r
\r
Option、positional parameter 都可以做到 multiple values，用起上黎都係差唔多，默認係用空格分隔開多個值。\r
\r
不過要注意既係，就算用左 array 或者 \`Collection\` types（例如 \`List\`、\`Set\`），我地都要額外設置 \`arity\` 做 \`0..*\`、\`1..*\` 之類（即係值既數量既上下限），去覆蓋佢對 multi-valued types 既 \`arity\` 默認值 \`1\`。\r
\r
除此之外，喺以下既情況下，我地需要設置 \`split\` 去話畀佢知我地會用咩符號黎分隔多個值：\r
\r
-   想用空格以外既符號去分隔多個值，例如 \`,\`、\`;\`。\r
-   喺 \`defaultValue\` 度提供多個值（如果冇設置 \`split\` 既話會當左做一個帶空格既值）。\r
\r
註：\r
\r
-   如果有幾個 options 都係接受多個值，例如 \`--foo 1 2 3 --bar 4 5 6\`，佢會識得分個值係咪其中一個 option 黎，如果係（例子裡面既 \`--bar\`），佢會識得分返開佢地，而唔係當左佢係前面 option（例子裡面既 \`--foo\`）既其中一個值。\r
    -   即使唔係 \`-\` 或者 \`--\` 開頭佢都會識分。\r
-   如果有幾個 positional parameters 都接受多個值既話，測試過係會出問題，即使前面既已經設置左 \`arity\` 數量上限。\r
\r
\`\`\`java\r
@Option(\r
    names = { "--foo" },\r
    defaultValue = "item1 item2 item3",\r
    split = " "\r
)\r
List<String> foo;\r
\`\`\`\r
\r
Command 例子：\r
\r
\`\`\`bash\r
--foo item1\r
--foo item1 item2\r
\`\`\`\r
\r
以下既例子用 \`,\` 去分隔多個值：\r
\r
\`\`\`java\r
@Option(\r
    names = { "--foo" },\r
    defaultValue = "item1,item2,item3", // 要冇 space\r
    split = ","\r
)\r
List<String> foo;\r
\`\`\`\r
\r
Command 例子：\r
\r
\`\`\`bash\r
--foo item1\r
--foo item1,item2\r
\`\`\`\r
\r
---\r
\r
## 6.4 \`enum\`\r
\r
\`\`\`java\r
public static enum MyEnum {\r
    FOO, BAR\r
}\r
\r
@Option(\r
    names = { "--foo" },\r
    defaultValue = "BAR" // 個 enum 既其中一個 constant\r
)\r
MyEnum foo;\r
\`\`\`\r
\r
---\r
\r
# 7 參考資料\r
\r
-   [Picocli 官方文檔 - Quick Guide](https://picocli.info/quick-guide.html)\r
-   [Picocli 官方文檔 - 4. Options and Parameters](https://picocli.info/#_options_and_parameters)\r
-   [Picocli 官方文檔 - 6. Multiple Values](https://picocli.info/#_multiple_values)\r
-   [Picocli 官方文檔 - 6.5 Default Arity](https://picocli.info/#_default_arity)\r
`,kD='# 1 Java module system 簡介\r\n\r\nJava 9 為 Java 加入左 module system（亦稱為 Project Jigsaw），佢可以畀我地喺官方既 JDK 裡面揀選我地需要既 modules 去建立我地既客製化 JRE。\r\n\r\n對一般既 web apps 黎講，呢個功能未必有咩實際作用。\r\n\r\n今時今日，好多公司已經轉曬用 container（Docker 技術）既方式部署 web apps。現時最流行既 JRE Docker images 包括：\r\n\r\n-   Docker Hub 上既 `openjdk`（非 production-ready，並且已經 deprecated）\r\n-   Docker Hub 上既 `azul/zulu-openjdk`（Azul Zulu OpenJDK）\r\n-   Docker Hub 上既 `amazoncorretto`（Amazon Corretto OpenJDK）\r\n-   Microsoft 喺 Microsoft Artifact Registry（MCR）上既 Microsoft OpenJDK\r\n\r\n除左 Microsoft OpenJDK、部分 Java 版本既 `openjdk` 之外，呢啲 OpenJDK 既 distributions 應該都有提供 JRE 既 image tags（實際情況要逐個 distribution、逐個 Java 版本咁去 check）。理論上 JRE 版本裡面唔會包含 JDK 既執行檔，例如 `javac`。否則，如果喺生產環境度部署左基於完整 JDK Docker image 既 Java web apps，就有可能構成安全問題。\r\n\r\n如果我地用既 Docker image 冇提供 JRE 既 image tags，又或者因為某啲 hardening 既需要而想客製化一個 JRE 出黎，咁就需要用到 JDK 裡面既 `jlink` CLI 工具。\r\n\r\n---\r\n\r\n# 2 使用 `jlink` 客製化 JRE Docker image\r\n\r\n## 2.1 建立 Dockerfile\r\n\r\n以下 `Dockerfile` 既內容參考左 [Microsoft 官方教學](https://learn.microsoft.com/en-us/java/openjdk/containers#create-a-custom-java-runtime)：\r\n\r\n```plaintext\r\nFROM mcr.microsoft.com/openjdk/jdk:17-ubuntu as runtime-build\r\n\r\nRUN $JAVA_HOME/bin/jlink \\\r\n--add-modules \\\r\njava.base,\\\r\n<other module 1>,\\\r\n<other module 2> \\\r\n--strip-debug \\\r\n--no-man-pages \\\r\n--no-header-files \\\r\n--compress=2 \\\r\n--output /javaruntime\r\n\r\nFROM ubuntu\r\nENV LANG C.UTF-8\r\nENV JAVA_HOME /usr/lib/jvm/msopenjdk-17-amd64\r\nENV PATH "${JAVA_HOME}/bin:${PATH}"\r\nCOPY --from=runtime-build /javaruntime $JAVA_HOME\r\n\r\nEXPOSE 8080\r\n\r\nRUN mkdir /opt/app\r\nCOPY app.jar /opt/app\r\nCMD ["java", "-jar", "/opt/app/app.jar"]\r\n```\r\n\r\n註：\r\n\r\n-   呢篇 blog 文既 focus 喺 `jlink` 果句 command 度。\r\n-   透過修改 `jlink` command 既 `--add-modules` option，我地可以加減 JRE 既 Java modules，從而喺 build time 控制 Docker image 裡面包含既執行檔。\r\n    -   `--add-modules` option 既 value 係需要包含既 Java modules\r\n        -   有寫明先會包含，否則唔會包含。\r\n        -   Module 名之間以逗號 `,` 分隔，唔可以有任何空格。\r\n\r\n---\r\n\r\n## 2.2 建立 Java web app Docker image\r\n\r\n1. 建立一個全新既空 folder。\r\n1. 將上一步既 `Dockerfile` 放入個 folder 度。\r\n1. 將一個 Spring Boot Java web app 既 artifact 放入個 folder 度，名為 `app.jar`。\r\n1. 執行 `docker image build -t myapp .`。\r\n    - 我地既 Java web app Docker image 既 name 就會係 `myapp`，而完整 tag 名係 `myapp:latest`。\r\n1. 執行 `docker image list` 就會見到個 `myapp` Docker image。\r\n\r\n---\r\n\r\n## 2.3 執行 Java web app\r\n\r\n1. 執行 `docker container run -d --rm --name myapp -p 8080:8080 myapp`。\r\n1. 執行 `docker container list` 就會見到個叫 `myapp` 既 container 行緊。\r\n1. 用 cURL 或者網頁瀏覽器就可以測試到個 Java web app，例如 [http://localhost:8080/actuator/health](http://localhost:8080/actuator/health)。\r\n\r\n---\r\n\r\n# 3 Modules、執行檔\r\n\r\n## 3.1 Module 列表\r\n\r\n我地可以用 `java --list-modules` command：\r\n\r\n```bash\r\ndocker container run --rm openjdk:17 java --list-modules\r\ndocker container run --rm mcr.microsoft.com/openjdk/jdk:17-ubuntu java --list-modules\r\n```\r\n\r\n以下列出 JDK 17 提供既所有 modules（一共有 `70` 個）：\r\n\r\n1. `java.base`\r\n1. `java.compiler`\r\n1. `java.datatransfer`\r\n1. `java.desktop`\r\n1. `java.instrument`\r\n1. `java.logging`\r\n1. `java.management`\r\n1. `java.management.rmi`\r\n1. `java.naming`\r\n1. `java.net.http`\r\n1. `java.prefs`\r\n1. `java.rmi`\r\n1. `java.scripting`\r\n1. `java.se`\r\n1. `java.security.jgss`\r\n1. `java.security.sasl`\r\n1. `java.smartcardio`\r\n1. `java.sql`\r\n1. `java.sql.rowset`\r\n1. `java.transaction.xa`\r\n1. `java.xml`\r\n1. `java.xml.crypto`\r\n1. `jdk.accessibility`\r\n1. `jdk.attach`\r\n1. `jdk.charsets`\r\n1. `jdk.compiler`\r\n1. `jdk.crypto.cryptoki`\r\n1. `jdk.crypto.ec`\r\n1. `jdk.dynalink`\r\n1. `jdk.editpad`\r\n1. `jdk.hotspot.agent`\r\n1. `jdk.httpserver`\r\n1. `jdk.incubator.foreign`\r\n1. `jdk.incubator.vector`\r\n1. `jdk.internal.ed`\r\n1. `jdk.internal.jvmstat`\r\n1. `jdk.internal.le`\r\n1. `jdk.internal.opt`\r\n1. `jdk.internal.vm.ci`\r\n1. `jdk.internal.vm.compiler`\r\n1. `jdk.internal.vm.compiler.management`\r\n1. `jdk.jartool`\r\n1. `jdk.javadoc`\r\n1. `jdk.jcmd`\r\n1. `jdk.jconsole`\r\n1. `jdk.jdeps`\r\n1. `jdk.jdi`\r\n1. `jdk.jdwp.agent`\r\n1. `jdk.jfr`\r\n1. `jdk.jlink`\r\n1. `jdk.jpackage`\r\n1. `jdk.jshell`\r\n1. `jdk.jsobject`\r\n1. `jdk.jstatd`\r\n1. `jdk.localedata`\r\n1. `jdk.management`\r\n1. `jdk.management.agent`\r\n1. `jdk.management.jfr`\r\n1. `jdk.naming.dns`\r\n1. `jdk.naming.rmi`\r\n1. `jdk.net`\r\n1. `jdk.nio.mapmode`\r\n1. `jdk.random`\r\n1. `jdk.sctp`\r\n1. `jdk.security.auth`\r\n1. `jdk.security.jgss`\r\n1. `jdk.unsupported`\r\n1. `jdk.unsupported.desktop`\r\n1. `jdk.xml.dom`\r\n1. `jdk.zipfs`\r\n\r\n---\r\n\r\n## 3.2 執行檔列表\r\n\r\n我地可以用 `ls <JAVA_HOME>/bin` command：\r\n\r\n```bash\r\ndocker container run --rm openjdk:11 ls /usr/local/openjdk-11/bin\r\ndocker container run --rm openjdk:11-jre ls /usr/local/openjdk-11/bin\r\ndocker container run --rm openjdk:17 ls /usr/java/openjdk-17/bin\r\ndocker container run --rm mcr.microsoft.com/openjdk/jdk:17-ubuntu ls /usr/lib/jvm/msopenjdk-17-amd64/bin\r\n```\r\n\r\n以下列出 JDK 17 提供既所有執行檔（一共有 `28` 個）：\r\n\r\n1. `jar`\r\n1. `jarsigner`\r\n1. `java`\r\n1. `javac`\r\n1. `javadoc`\r\n1. `javap`\r\n1. `jcmd`\r\n1. `jconsole`\r\n1. `jdb`\r\n1. `jdeprscan`\r\n1. `jdeps`\r\n1. `jfr`\r\n1. `jhsdb`\r\n1. `jimage`\r\n1. `jinfo`\r\n1. `jlink`\r\n1. `jmap`\r\n1. `jmod`\r\n1. `jpackage`\r\n1. `jps`\r\n1. `jrunscript`\r\n1. `jshell`\r\n1. `jstack`\r\n1. `jstat`\r\n1. `jstatd`\r\n1. `keytool`\r\n1. `rmiregistry`\r\n1. `serialver`\r\n\r\n---\r\n\r\n## 3.3 Modules、執行檔之間既關係\r\n\r\nJava modules 既多少會影響個 JRE 既 `/bin` folder 裡面既執行檔。以下列出 JDK 17 提供既所有 modules 以及執行檔之間既關係。\r\n\r\n### 3.3.1 從 Java modules 既角度\r\n\r\n| #   | Java module                           | 執行檔                                                                                                        |\r\n| --- | ------------------------------------- | ------------------------------------------------------------------------------------------------------------- |\r\n| 1   | `java.base`                           | `java`、`keytool`                                                                                             |\r\n| 2   | `java.compiler`                       | `java`、`keytool`                                                                                             |\r\n| 3   | `java.datatransfer`                   | `java`、`keytool`                                                                                             |\r\n| 4   | `java.desktop`                        | `java`、`keytool`                                                                                             |\r\n| 5   | `java.instrument`                     | `java`、`keytool`                                                                                             |\r\n| 6   | `java.logging`                        | `java`、`keytool`                                                                                             |\r\n| 7   | `java.management`                     | `java`、`keytool`                                                                                             |\r\n| 8   | `java.management.rmi`                 | `java`、`keytool`、`rmiregistry`                                                                              |\r\n| 9   | `java.naming`                         | `java`、`keytool`                                                                                             |\r\n| 10  | `java.net.http`                       | `java`、`keytool`                                                                                             |\r\n| 11  | `java.prefs`                          | `java`、`keytool`                                                                                             |\r\n| 12  | `java.rmi`                            | `java`、`keytool`、`rmiregistry`                                                                              |\r\n| 13  | `java.scripting`                      | `java`、`jrunscript`、`keytool`                                                                               |\r\n| 14  | `java.se`                             | `java`、`jrunscript`、`keytool`、`rmiregistry`                                                                |\r\n| 15  | `java.security.jgss`                  | `java`、`keytool`                                                                                             |\r\n| 16  | `java.security.sasl`                  | `java`、`keytool`                                                                                             |\r\n| 17  | `java.smartcardio`                    | `java`、`keytool`                                                                                             |\r\n| 18  | `java.sql`                            | `java`、`keytool`                                                                                             |\r\n| 19  | `java.sql.rowset`                     | `java`、`keytool`                                                                                             |\r\n| 20  | `java.transaction.xa`                 | `java`、`keytool`                                                                                             |\r\n| 21  | `java.xml`                            | `java`、`keytool`                                                                                             |\r\n| 22  | `java.xml.crypto`                     | `java`、`keytool`                                                                                             |\r\n| 23  | `jdk.accessibility`                   | `java`、`keytool`                                                                                             |\r\n| 24  | `jdk.attach`                          | `java`、`keytool`                                                                                             |\r\n| 25  | `jdk.charsets`                        | `java`、`keytool`                                                                                             |\r\n| 26  | `jdk.compiler`                        | `java`、`javac`、`keytool`、`serialver`                                                                       |\r\n| 27  | `jdk.crypto.cryptoki`                 | `java`、`keytool`                                                                                             |\r\n| 28  | `jdk.crypto.ec`                       | `java`、`keytool`                                                                                             |\r\n| 29  | `jdk.dynalink`                        | `java`、`keytool`                                                                                             |\r\n| 30  | `jdk.editpad`                         | `java`、`keytool`                                                                                             |\r\n| 31  | `jdk.hotspot.agent`                   | `java`、`jhsdb`、`jrunscript`、`keytool`、`rmiregistry`                                                       |\r\n| 32  | `jdk.httpserver`                      | `java`、`keytool`                                                                                             |\r\n| 33  | `jdk.incubator.foreign`               | `java`、`keytool`                                                                                             |\r\n| 34  | `jdk.incubator.vector`                | `java`、`keytool`                                                                                             |\r\n| 35  | `jdk.internal.ed`                     | `java`、`keytool`                                                                                             |\r\n| 36  | `jdk.internal.jvmstat`                | `java`、`keytool`                                                                                             |\r\n| 37  | `jdk.internal.le`                     | `java`、`keytool`                                                                                             |\r\n| 38  | `jdk.internal.opt`                    | `java`、`keytool`                                                                                             |\r\n| 39  | `jdk.internal.vm.ci`                  | `java`、`keytool`                                                                                             |\r\n| 40  | `jdk.internal.vm.compiler`            | `java`、`keytool`                                                                                             |\r\n| 41  | `jdk.internal.vm.compiler.management` | `java`、`keytool`                                                                                             |\r\n| 42  | `jdk.jartool`                         | `jar`、`jarsigner`、`java`、`keytool`                                                                         |\r\n| 43  | `jdk.javadoc`                         | `java`、`javac`、`javadoc`、`keytool`、`serialver`                                                            |\r\n| 44  | `jdk.jcmd`                            | `java`、`jcmd`、`jinfo`、`jmap`、`jps`、`jstack`、`jstat`、`keytool`                                          |\r\n| 45  | `jdk.jconsole`                        | `java`、`jconsole`、`keytool`、`rmiregistry`                                                                  |\r\n| 46  | `jdk.jdeps`                           | `java`、`javac`、`javap`、`jdeprscan`、`jdeps`、`keytool`、`serialver`                                        |\r\n| 47  | `jdk.jdi`                             | `java`、`jdb`、`keytool`                                                                                      |\r\n| 48  | `jdk.jdwp.agent`                      | `java`、`keytool`                                                                                             |\r\n| 49  | `jdk.jfr`                             | `java`、`jfr`、`keytool`                                                                                      |\r\n| 50  | `jdk.jlink`                           | `java`、`javac`、`javap`、`jdeprscan`、`jdeps`、`jimage`、`jlink`、`jmod`、`keytool`、`serialver`             |\r\n| 51  | `jdk.jpackage`                        | `java`、`javac`、`javap`、`jdeprscan`、`jdeps`、`jimage`、`jlink`、`jmod`、`jpackage`、`keytool`、`serialver` |\r\n| 52  | `jdk.jshell`                          | `java`、`javac`、`jdb`、`jshell`、`keytool`、`serialver`                                                      |\r\n| 53  | `jdk.jsobject`                        | `java`、`keytool`                                                                                             |\r\n| 54  | `jdk.jstatd`                          | `java`、`jstatd`、`keytool`、`rmiregistry`                                                                    |\r\n| 55  | `jdk.localedata`                      | `java`、`keytool`                                                                                             |\r\n| 56  | `jdk.management`                      | `java`、`keytool`                                                                                             |\r\n| 57  | `jdk.management.agent`                | `java`、`keytool`、`rmiregistry`                                                                              |\r\n| 58  | `jdk.management.jfr`                  | `java`、`jfr`、`keytool`                                                                                      |\r\n| 59  | `jdk.naming.dns`                      | `java`、`keytool`                                                                                             |\r\n| 60  | `jdk.naming.rmi`                      | `java`、`keytool`、`rmiregistry`                                                                              |\r\n| 61  | `jdk.net`                             | `java`、`keytool`                                                                                             |\r\n| 62  | `jdk.nio.mapmode`                     | `java`、`keytool`                                                                                             |\r\n| 63  | `jdk.random`                          | `java`、`keytool`                                                                                             |\r\n| 64  | `jdk.sctp`                            | `java`、`keytool`                                                                                             |\r\n| 65  | `jdk.security.auth`                   | `java`、`keytool`                                                                                             |\r\n| 66  | `jdk.security.jgss`                   | `java`、`keytool`                                                                                             |\r\n| 67  | `jdk.unsupported`                     | `java`、`keytool`                                                                                             |\r\n| 68  | `jdk.unsupported.desktop`             | `java`、`keytool`                                                                                             |\r\n| 69  | `jdk.xml.dom`                         | `java`、`keytool`                                                                                             |\r\n| 70  | `jdk.zipfs`                           | `java`、`keytool`                                                                                             |\r\n\r\n---\r\n\r\n### 3.3.2 從執行檔既角度\r\n\r\n| #   | 執行檔        | Java modules                                                                                                                              |\r\n| --- | ------------- | ----------------------------------------------------------------------------------------------------------------------------------------- |\r\n| 1   | `jar`         | `jdk.jartool`                                                                                                                             |\r\n| 2   | `jarsigner`   | `jdk.jartool`                                                                                                                             |\r\n| 3   | `java`        | 全部                                                                                                                                      |\r\n| 4   | `javac`       | `jdk.compiler`、`jdk.javadoc`、`jdk.jdeps`、`jdk.jlink`、`jdk.jpackage`、`jdk.jshell`                                                     |\r\n| 5   | `javadoc`     | `jdk.javadoc`                                                                                                                             |\r\n| 6   | `javap`       | `jdk.jdeps`、`jdk.jlink`、`jdk.jpackage`                                                                                                  |\r\n| 7   | `jcmd`        | `jdk.jcmd`                                                                                                                                |\r\n| 8   | `jconsole`    | `jdk.jconsole`                                                                                                                            |\r\n| 9   | `jdb`         | `jdk.jdi`、`jdk.jshell`                                                                                                                   |\r\n| 10  | `jdeprscan`   | `jdk.jdeps`、`jdk.jlink`、`jdk.jpackage`                                                                                                  |\r\n| 11  | `jdeps`       | `jdk.jdeps`、`jdk.jlink`、`jdk.jpackage`                                                                                                  |\r\n| 12  | `jfr`         | `jdk.jfr`、`jdk.management.jfr`                                                                                                           |\r\n| 13  | `jhsdb`       | `jdk.hotspot.agent`                                                                                                                       |\r\n| 14  | `jimage`      | `jdk.jlink`、`jdk.jpackage`                                                                                                               |\r\n| 15  | `jinfo`       | `jdk.jcmd`                                                                                                                                |\r\n| 16  | `jlink`       | `jdk.jlink`、`jdk.jpackage`                                                                                                               |\r\n| 17  | `jmap`        | `jdk.jcmd`                                                                                                                                |\r\n| 18  | `jmod`        | `jdk.jlink`、`jdk.jpackage`                                                                                                               |\r\n| 19  | `jpackage`    | `jdk.jpackage`                                                                                                                            |\r\n| 20  | `jps`         | `jdk.jcmd`                                                                                                                                |\r\n| 21  | `jrunscript`  | `java.scripting`、`java.se`、`jdk.hotspot.agent`                                                                                          |\r\n| 22  | `jshell`      | `jdk.jshell`                                                                                                                              |\r\n| 23  | `jstack`      | `jdk.jcmd`                                                                                                                                |\r\n| 24  | `jstat`       | `jdk.jcmd`                                                                                                                                |\r\n| 25  | `jstatd`      | `jdk.jstatd`                                                                                                                              |\r\n| 26  | `keytool`     | 全部                                                                                                                                      |\r\n| 27  | `rmiregistry` | `java.management.rmi`、`java.rmi`、`java.se`、`jdk.hotspot.agent`、`jdk.jconsole`、`jdk.jstatd`、`jdk.management.agent`、`jdk.naming.rmi` |\r\n| 28  | `serialver`   | `jdk.compiler`、`jdk.javadoc`、`jdk.jdeps`、`jdk.jlink`、`jdk.jpackage`、`jdk.jshell`                                                     |\r\n\r\n---\r\n\r\n# 4 參考資料\r\n\r\n-   [Java 9 Structural Changes in the JDK and JRE](https://www.developer.com/java/java-9-structural-changes-in-the-jdk-and-jre/)\r\n-   [Introduction to Project Jigsaw](https://www.baeldung.com/project-jigsaw-java-modularity)\r\n-   [Microsoft 官方文檔 - Container images for the Microsoft Build of OpenJDK - Create a custom Java runtime](https://learn.microsoft.com/en-us/java/openjdk/containers#create-a-custom-java-runtime)\r\n',SD='# 1 CVE-2023-20860 背景\r\n\r\n今年 Snyk 公佈左一個新既 Spring 安全漏洞，叫做 [SNYK-JAVA-ORGSPRINGFRAMEWORK-3369852](https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORK-3369852)，對應 CVE 資料庫既 [CVE-2023-20860](https://www.cve.org/CVERecord?id=CVE-2023-20860)。\r\n\r\n## 1.1 涉及既 library 版本\r\n\r\n呢個漏洞係同 `org.springframework:spring-webmvc` 有關。有問題既版本包括 `[5.3.0,5.3.26)`、`[6.0.0,6.0.7)`，亦即係：\r\n\r\n-   `5.3.0` 至 `5.3.25`\r\n-   `6.0.0` 至 `6.0.6`\r\n\r\n已修復既版本包括：\r\n\r\n-   `5.3.26` 或以上\r\n-   `6.0.7` 或以上\r\n\r\n註：`6.x` 係用於 Spring Boot `3.x`。\r\n\r\n---\r\n\r\n## 1.2 漏洞涉及既安全問題\r\n\r\n根據 CVE 既描述，當使用左 `mvcRequestMatcher` 配置 Spring Security 既時候用左 un-prefixed double wildcard pattern（`**`），Spring 背後所產生既實際 Spring MVC 配置會同我地既 Spring Security 有出入，最終有可能導致個 Spring app 允許未經授權既訪問。\r\n\r\n---\r\n\r\n# 2 建立測試項目\r\n\r\n## 2.1 Maven dependencies\r\n\r\n-   Maven parent POM：`spring-boot-starter-parent`\r\n-   Dependencies\r\n    -   `spring-boot-starter-web`\r\n    -   `spring-boot-starter-security`\r\n\r\n---\r\n\r\n## 2.2 HTTP APIs\r\n\r\n| Request method | Request path | 測試結果期望                       |\r\n| :------------: | ------------ | ---------------------------------- |\r\n|      GET       | `/public`    | 呢個 endpoint 唔應該需要登入驗證。 |\r\n|      GET       | `/secure`    | 呢個 endpoint 應該需要登入驗證。   |\r\n\r\n---\r\n\r\n## 2.3 寫 Java code\r\n\r\n### 2.3.1 Controller\r\n\r\n`BusinessController.java`：\r\n\r\n```java\r\n@RestController\r\npublic class BusinessController {\r\n\r\n    @GetMapping("public")\r\n    public String _public() {\r\n        return "This is a public endpoint. You should see this without logging in.";\r\n    }\r\n\r\n    @GetMapping("secure")\r\n    public String secure() {\r\n        return "This is a secure endpoint. You should NOT see this without logging in.";\r\n    }\r\n}\r\n```\r\n\r\n---\r\n\r\n### 2.3.2 Spring Security config class\r\n\r\n`SecurityConfiguration.java`：\r\n\r\n```java\r\n@Configuration\r\npublic class SecurityConfiguration {\r\n\r\n    @Bean\r\n    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\r\n        return http\r\n            .authorizeHttpRequests().mvcMatchers("/public").permitAll()\r\n            .and()\r\n            .authorizeHttpRequests().mvcMatchers("/**").authenticated()\r\n            .and()\r\n            .httpBasic()\r\n            .and()\r\n            .build();\r\n    }\r\n}\r\n```\r\n\r\n另一個寫法：\r\n\r\n```java\r\n@Configuration\r\npublic class SecurityConfiguration {\r\n\r\n    @Bean\r\n    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\r\n        return http\r\n            .authorizeHttpRequests()\r\n                .mvcMatchers("/public").permitAll()\r\n                .mvcMatchers("/**").authenticated()\r\n            .and()\r\n            .httpBasic()\r\n            .and()\r\n            .build();\r\n    }\r\n}\r\n```\r\n\r\n再另一個寫法：\r\n\r\n```java\r\n@Configuration\r\npublic class SecurityConfiguration {\r\n\r\n    @Bean\r\n    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\r\n        return http\r\n            .authorizeHttpRequests(authorize -> authorize\r\n                .mvcMatchers("/public").permitAll()\r\n                .mvcMatchers("/**").authenticated())\r\n            .httpBasic()\r\n            .and()\r\n            .build();\r\n    }\r\n}\r\n```\r\n\r\n---\r\n\r\n# 3 測試結果\r\n\r\n## 3.1 使用有漏洞既版本\r\n\r\n以下係有漏洞既版本：\r\n\r\n-   `spring-boot-starter-security 2.7.1`\r\n    -   Spring Security `5.7.2`\r\n-   `spring-webmvc 5.3.21`\r\n\r\n### 3.1.1 測試結果（一）：Permit 部分 endpoints、authenticate 其他 endpoints\r\n\r\n1. `mvcMatchers(<some paths>).permitAll()`\r\n1. `mvcMatchers(<wildcard>).authenticated()`\r\n\r\n| Implementation                       | 解釋                             | 結果                                |\r\n| ------------------------------------ | -------------------------------- | ----------------------------------- |\r\n| Permit `public`、authenticate `**`   | 兩者都冇 `/` 開頭                | ❌ `/secure` 唔需要登入，存在漏洞。 |\r\n| Permit `/public`、authenticate `/**` | 兩者都有 `/` 開頭                | ✅ 符合測試結果期望。               |\r\n| Permit `public`、authenticate `/**`  | 其中一個有 `/` 開頭              | ❌ `/public` 需要登入，過分安全。   |\r\n| Permit `/public`、authenticate `**`  | 其中一個有 `/` 開頭              | ❌ `/secure` 唔需要登入，存在漏洞。 |\r\n| Permit `public`、authenticate `*`    | 兩者都冇 `/` 開頭，單 `*` 字元   | ❌ `/secure` 唔需要登入，存在漏洞。 |\r\n| Permit `/public`、authenticate `/*`  | 兩者都有 `/` 開頭，單 `*` 字元   | ✅ 符合測試結果期望。               |\r\n| Permit `public`、authenticate `/*`   | 其中一個有 `/` 開頭，單 `*` 字元 | ❌ `/public` 需要登入，過分安全。   |\r\n| Permit `/public`、authenticate `*`   | 其中一個有 `/` 開頭，單 `*` 字元 | ❌ `/secure` 唔需要登入，存在漏洞。 |\r\n\r\n---\r\n\r\n### 3.1.2 測試結果（二）：Authenticate 部分 endpoints、permit 其他 endpoints\r\n\r\n1. `mvcMatchers(<some paths>).authenticated()`\r\n1. `mvcMatchers(<wildcard>).permitAll()`\r\n\r\n| Implementation                       | 解釋                             | 結果                                |\r\n| ------------------------------------ | -------------------------------- | ----------------------------------- |\r\n| Authenticate `secure`、permit `**`   | 兩者都冇 `/` 開頭                | ❌ `/secure` 唔需要登入，存在漏洞。 |\r\n| Authenticate `/secure`、permit `/**` | 兩者都有 `/` 開頭                | ✅ 符合測試結果期望。               |\r\n| Authenticate `secure`、permit `/**`  | 其中一個有 `/` 開頭              | ❌ `/secure` 唔需要登入，存在漏洞。 |\r\n| Authenticate `/secure`、permit `**`  | 其中一個有 `/` 開頭              | ✅ 符合測試結果期望。               |\r\n| Authenticate `secure`、permit `*`    | 兩者都冇 `/` 開頭，單 `*` 字元   | ❌ `/secure` 唔需要登入，存在漏洞。 |\r\n| Authenticate `/secure`、permit `/*`  | 兩者都有 `/` 開頭，單 `*` 字元   | ✅ 符合測試結果期望。               |\r\n| Authenticate `secure`、permit `/*`   | 其中一個有 `/` 開頭，單 `*` 字元 | ❌ `/secure` 唔需要登入，存在漏洞。 |\r\n| Authenticate `/secure`、permit `*`   | 其中一個有 `/` 開頭，單 `*` 字元 | ✅ 符合測試結果期望。               |\r\n\r\n---\r\n\r\n## 3.2 使用已修復既版本\r\n\r\n用已修復既 `spring-webmvc` 版本覆蓋項目現有既版本：\r\n\r\n-   `spring-boot-starter-security 2.7.1`\r\n    -   Spring Security (multiple libraries) `5.7.2`\r\n-   `spring-webmvc 5.3.26`\r\n\r\n### 3.2.1 測試結果（一）：Permit 部分 endpoints、authenticate 其他 endpoints\r\n\r\n1. `mvcMatchers(<some paths>).permitAll()`\r\n1. `mvcMatchers(<wildcard>).authenticated()`\r\n\r\n| Implementation                       | Test case                        | 結果                  |\r\n| ------------------------------------ | -------------------------------- | --------------------- |\r\n| Permit `public`、authenticate `**`   | 兩者都冇 `/` 開頭                | ✅ 符合測試結果期望。 |\r\n| Permit `/public`、authenticate `/**` | 兩者都有 `/` 開頭                | ✅ 符合測試結果期望。 |\r\n| Permit `public`、authenticate `/**`  | 其中一個有 `/` 開頭              | ✅ 符合測試結果期望。 |\r\n| Permit `/public`、authenticate `**`  | 其中一個有 `/` 開頭              | ✅ 符合測試結果期望。 |\r\n| Permit `public`、authenticate `*`    | 兩者都冇 `/` 開頭，單 `*` 字元   | ✅ 符合測試結果期望。 |\r\n| Permit `/public`、authenticate `/*`  | 兩者都有 `/` 開頭，單 `*` 字元   | ✅ 符合測試結果期望。 |\r\n| Permit `public`、authenticate `/*`   | 其中一個有 `/` 開頭，單 `*` 字元 | ✅ 符合測試結果期望。 |\r\n| Permit `/public`、authenticate `*`   | 其中一個有 `/` 開頭，單 `*` 字元 | ✅ 符合測試結果期望。 |\r\n\r\n---\r\n\r\n### 3.2.2 測試結果（二）：Authenticate 部分 endpoints、permit 其他 endpoints\r\n\r\n1. `mvcMatchers(<some paths>).authenticated()`\r\n1. `mvcMatchers(<wildcard>).permitAll()`\r\n\r\n| Implementation                       | Test case                        | 結果                  |\r\n| ------------------------------------ | -------------------------------- | --------------------- |\r\n| Authenticate `secure`、permit `**`   | 兩者都冇 `/` 開頭                | ✅ 符合測試結果期望。 |\r\n| Authenticate `/secure`、permit `/**` | 兩者都有 `/` 開頭                | ✅ 符合測試結果期望。 |\r\n| Authenticate `secure`、permit `/**`  | 其中一個有 `/` 開頭              | ✅ 符合測試結果期望。 |\r\n| Authenticate `/secure`、permit `**`  | 其中一個有 `/` 開頭              | ✅ 符合測試結果期望。 |\r\n| Authenticate `secure`、permit `*`    | 兩者都冇 `/` 開頭，單 `*` 字元   | ✅ 符合測試結果期望。 |\r\n| Authenticate `/secure`、permit `/*`  | 兩者都有 `/` 開頭，單 `*` 字元   | ✅ 符合測試結果期望。 |\r\n| Authenticate `secure`、permit `/*`   | 其中一個有 `/` 開頭，單 `*` 字元 | ✅ 符合測試結果期望。 |\r\n| Authenticate `/secure`、permit `*`   | 其中一個有 `/` 開頭，單 `*` 字元 | ✅ 符合測試結果期望。 |\r\n\r\n---\r\n\r\n# 4 參考資料\r\n\r\n-   [Spring 官方文檔 - CVE-2023-20860: Security Bypass With Un-Prefixed Double Wildcard Pattern](https://spring.io/security/cve-2023-20860)\r\n-   [GitHub - limo520/CVE-2023-20860](https://github.com/limo520/CVE-2023-20860/tree/main)\r\n    -   [Cve202320860Application.java](https://github.com/limo520/CVE-2023-20860/blob/main/src/main/java/com/example/cve202320860/Cve202320860Application.java)\r\n    -   [Cve202320860ApplicationTests.java](https://github.com/limo520/CVE-2023-20860/blob/main/src/test/java/com/example/cve202320860/Cve202320860ApplicationTests.java)\r\n',wD='# 1 CVE-2023-34034 背景\r\n\r\n繼上一篇既 [關於 Spring Security 漏洞 CVE-2023-20860](/blog/cve-2023-20860) 之後，Snyk 又再公佈左一個同佢相關既 Spring 安全漏洞，叫做 [SNYK-JAVA-ORGSPRINGFRAMEWORKSECURITY-5777893](https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORKSECURITY-5777893)，對應 CVE 資料庫既 [CVE-2023-34034](https://www.cve.org/CVERecord?id=CVE-2023-34034)。\r\n\r\n同上次漏洞唔同既係所涉及既 library。\r\n\r\n## 1.1 涉及既 library 版本\r\n\r\n呢個漏洞係同 `org.springframework.security:spring-security-config` 有關。有問題既版本包括 `[5.6.0,5.6.12) [5.7.0,5.7.10) [5.8.0,5.8.5) [6.0.0,6.0.5) [6.1.0,6.1.2)`，亦即係：\r\n\r\n-   `5.6.0` 至 `5.6.11`\r\n-   `5.7.0` 至 `5.7.9`\r\n-   `5.8.0` 至 `5.8.4`\r\n-   `6.0.0` 至 `6.0.4`\r\n-   `6.1.0` 至 `6.1.1`\r\n\r\n已修復既版本包括：\r\n\r\n-   `5.6.12` 或以上\r\n-   `5.7.10` 或以上\r\n-   `5.8.5` 或以上\r\n-   `6.0.5` 或以上\r\n-   `6.1.2` 或以上\r\n\r\n註：`6.x` 係用於 Spring Boot `3.x`。\r\n\r\n---\r\n\r\n## 1.2 漏洞涉及既安全問題\r\n\r\n根據 CVE 既描述，當喺 Spring Webflux 項目使用 pattern matching 配置 Spring Security 既時候用左 un-prefixed double wildcard pattern（`**`），Spring 背後所產生既實際 Spring Webflux 配置會同我地既 Spring Security 有出入，最終有可能導致個 Spring app 允許未經授權既訪問。\r\n\r\n---\r\n\r\n# 2 建立測試項目\r\n\r\n## 2.1 Maven dependencies\r\n\r\n-   Maven parent POM：`spring-boot-starter-parent`\r\n-   Dependencies\r\n    -   `spring-boot-starter-webflux`\r\n    -   `spring-boot-starter-security`\r\n\r\n---\r\n\r\n## 2.2 HTTP APIs\r\n\r\n| Request method | Request path | 測試結果期望                       |\r\n| :------------: | ------------ | ---------------------------------- |\r\n|      GET       | `/public`    | 呢個 endpoint 唔應該需要登入驗證。 |\r\n|      GET       | `/secure`    | 呢個 endpoint 應該需要登入驗證。   |\r\n\r\n---\r\n\r\n## 2.3 寫 Java code\r\n\r\n### 2.3.1 Controller\r\n\r\n`BusinessController.java`：\r\n\r\n```java\r\n@RestController\r\npublic class BusinessController {\r\n\r\n    @GetMapping("public")\r\n    public String _public() {\r\n        return "This is a public endpoint. You should see this without logging in.";\r\n    }\r\n\r\n    @GetMapping("secure")\r\n    public String secure() {\r\n        return "This is a secure endpoint. You should NOT see this without logging in.";\r\n    }\r\n}\r\n```\r\n\r\n---\r\n\r\n### 2.3.2 Spring Security config class\r\n\r\n`SecurityConfiguration.java`：\r\n\r\n```java\r\n@Configuration\r\npublic class SecurityConfiguration {\r\n\r\n    @Bean\r\n    public SecurityWebFilterChain securityWebFilterChain(ServerHttpSecurity http) throws Exception {\r\n        return http\r\n            .authorizeExchange().pathMatchers("/public").permitAll()\r\n            .and()\r\n            .authorizeExchange().pathMatchers("/**").authenticated()\r\n            .and()\r\n            .httpBasic()\r\n            .and()\r\n            .build();\r\n    }\r\n}\r\n```\r\n\r\n另一個寫法：\r\n\r\n```java\r\n@Configuration\r\npublic class SecurityConfiguration {\r\n\r\n    @Bean\r\n    public SecurityWebFilterChain securityWebFilterChain(ServerHttpSecurity http) throws Exception {\r\n        return http\r\n            .authorizeExchange()\r\n                .pathMatchers("/public").permitAll()\r\n                .pathMatchers("/**").authenticated()\r\n            .and()\r\n            .httpBasic()\r\n            .and()\r\n            .build();\r\n    }\r\n}\r\n```\r\n\r\n再另一個寫法：\r\n\r\n```java\r\n@Configuration\r\npublic class SecurityConfiguration {\r\n\r\n    @Bean\r\n    public SecurityWebFilterChain securityWebFilterChain(ServerHttpSecurity http) throws Exception {\r\n        return http\r\n            .authorizeExchange(request -> request\r\n                .pathMatchers("/public").permitAll()\r\n                .pathMatchers("/**").authenticated())\r\n            .httpBasic()\r\n            .and()\r\n            .build();\r\n    }\r\n}\r\n```\r\n\r\n---\r\n\r\n# 3 測試結果\r\n\r\n## 3.1 使用有漏洞既版本\r\n\r\n以下係有漏洞既版本：\r\n\r\n-   `spring-boot-starter-security 2.7.1`\r\n    -   Spring Security `5.7.2`\r\n\r\n### 3.1.1 測試結果（一）：Permit 部分 endpoints、authenticate 其他 endpoints\r\n\r\n1. `pathMatchers(<some paths>).permitAll()`\r\n1. `pathMatchers(<wildcard>).authenticated()`\r\n\r\n| Implementation                       | 解釋                             | 結果                              |\r\n| ------------------------------------ | -------------------------------- | --------------------------------- |\r\n| Permit `public`、authenticate `**`   | 兩者都冇 `/` 開頭                | ❌ `/public` 需要登入，過分安全。 |\r\n| Permit `/public`、authenticate `/**` | 兩者都有 `/` 開頭                | ✅ 符合測試結果期望。             |\r\n| Permit `public`、authenticate `/**`  | 其中一個有 `/` 開頭              | ❌ `/public` 需要登入，過分安全。 |\r\n| Permit `/public`、authenticate `**`  | 其中一個有 `/` 開頭              | ✅ 符合測試結果期望。             |\r\n| Permit `public`、authenticate `*`    | 兩者都冇 `/` 開頭，單 `*` 字元   | ❌ `/public` 需要登入，過分安全。 |\r\n| Permit `/public`、authenticate `/*`  | 兩者都有 `/` 開頭，單 `*` 字元   | ✅ 符合測試結果期望。             |\r\n| Permit `public`、authenticate `/*`   | 其中一個有 `/` 開頭，單 `*` 字元 | ❌ `/public` 需要登入，過分安全。 |\r\n| Permit `/public`、authenticate `*`   | 其中一個有 `/` 開頭，單 `*` 字元 | ✅ 符合測試結果期望。             |\r\n\r\n---\r\n\r\n### 3.1.2 測試結果（二）：Authenticate 部分 endpoints、permit 其他 endpoints\r\n\r\n1. `pathMatchers(<some paths>).authenticated()`\r\n1. `pathMatchers(<wildcard>).permitAll()`\r\n\r\n| Implementation                       | 解釋                             | 結果                                |\r\n| ------------------------------------ | -------------------------------- | ----------------------------------- |\r\n| Authenticate `secure`、permit `**`   | 兩者都冇 `/` 開頭                | ❌ `/public` 需要登入，過分安全。   |\r\n| Authenticate `/secure`、permit `/**` | 兩者都有 `/` 開頭                | ✅ 符合測試結果期望。               |\r\n| Authenticate `secure`、permit `/**`  | 其中一個有 `/` 開頭              | ❌ `/secure` 唔需要登入，存在漏洞。 |\r\n| Authenticate `/secure`、permit `**`  | 其中一個有 `/` 開頭              | ❌ `/public` 需要登入，過分安全。   |\r\n| Authenticate `secure`、permit `*`    | 兩者都冇 `/` 開頭，單 `*` 字元   | ❌ `/public` 需要登入，過分安全。   |\r\n| Authenticate `/secure`、permit `/*`  | 兩者都有 `/` 開頭，單 `*` 字元   | ✅ 符合測試結果期望。               |\r\n| Authenticate `secure`、permit `/*`   | 其中一個有 `/` 開頭，單 `*` 字元 | ❌ `/secure` 唔需要登入，存在漏洞。 |\r\n| Authenticate `/secure`、permit `*`   | 其中一個有 `/` 開頭，單 `*` 字元 | ❌ `/public` 需要登入，過分安全。   |\r\n\r\n---\r\n\r\n## 3.2 使用已修復既版本\r\n\r\n要修復今次既漏洞，唔可以淨係覆蓋單一 library 既版本，否則會 start up 唔到個 web app。\r\n\r\n| BOM 既 Maven 配置名                                   |   新版本    | BOM 所管理既 libraries                                                                                                                            |\r\n| ----------------------------------------------------- | :---------: | ------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n| `spring-framework.version`                            |  `5.3.29`   | `spring-core`、`spring-context`、`spring-beans`、`spring-expression`、`spring-aop`、`spring-jcl`、`spring-web`、`spring-webflux`、`spring-webmvc` |\r\n| `spring-security.version`                             |  `5.7.10`   | `spring-security-core`、`spring-security-web`、`spring-security-config`、`spring-security-crypto`                                                 |\r\n| `reactor-bom.version`（只有 Spring Webflux 項目需要） | `2020.0.34` | `rector-core`、`reactor-netty-core`、`reactor-netty-http`                                                                                         |\r\n\r\n### 3.2.1 測試結果（一）：Permit 部分 endpoints、authenticate 其他 endpoints\r\n\r\n1. `pathMatchers(<some paths>).permitAll()`\r\n1. `pathMatchers(<wildcard>).authenticated()`\r\n\r\n| Implementation                       | Test case                        | 結果                  |\r\n| ------------------------------------ | -------------------------------- | --------------------- |\r\n| Permit `public`、authenticate `**`   | 兩者都冇 `/` 開頭                | ✅ 符合測試結果期望。 |\r\n| Permit `/public`、authenticate `/**` | 兩者都有 `/` 開頭                | ✅ 符合測試結果期望。 |\r\n| Permit `public`、authenticate `/**`  | 其中一個有 `/` 開頭              | ✅ 符合測試結果期望。 |\r\n| Permit `/public`、authenticate `**`  | 其中一個有 `/` 開頭              | ✅ 符合測試結果期望。 |\r\n| Permit `public`、authenticate `*`    | 兩者都冇 `/` 開頭，單 `*` 字元   | ✅ 符合測試結果期望。 |\r\n| Permit `/public`、authenticate `/*`  | 兩者都有 `/` 開頭，單 `*` 字元   | ✅ 符合測試結果期望。 |\r\n| Permit `public`、authenticate `/*`   | 其中一個有 `/` 開頭，單 `*` 字元 | ✅ 符合測試結果期望。 |\r\n| Permit `/public`、authenticate `*`   | 其中一個有 `/` 開頭，單 `*` 字元 | ✅ 符合測試結果期望。 |\r\n\r\n---\r\n\r\n### 3.2.2 測試結果（二）：Authenticate 部分 endpoints、permit 其他 endpoints\r\n\r\n1. `pathMatchers(<some paths>).authenticated()`\r\n1. `pathMatchers(<wildcard>).permitAll()`\r\n\r\n| Implementation                       | Test case                        | 結果                  |\r\n| ------------------------------------ | -------------------------------- | --------------------- |\r\n| Authenticate `secure`、permit `**`   | 兩者都冇 `/` 開頭                | ✅ 符合測試結果期望。 |\r\n| Authenticate `/secure`、permit `/**` | 兩者都有 `/` 開頭                | ✅ 符合測試結果期望。 |\r\n| Authenticate `secure`、permit `/**`  | 其中一個有 `/` 開頭              | ✅ 符合測試結果期望。 |\r\n| Authenticate `/secure`、permit `**`  | 其中一個有 `/` 開頭              | ✅ 符合測試結果期望。 |\r\n| Authenticate `secure`、permit `*`    | 兩者都冇 `/` 開頭，單 `*` 字元   | ✅ 符合測試結果期望。 |\r\n| Authenticate `/secure`、permit `/*`  | 兩者都有 `/` 開頭，單 `*` 字元   | ✅ 符合測試結果期望。 |\r\n| Authenticate `secure`、permit `/*`   | 其中一個有 `/` 開頭，單 `*` 字元 | ✅ 符合測試結果期望。 |\r\n| Authenticate `/secure`、permit `*`   | 其中一個有 `/` 開頭，單 `*` 字元 | ✅ 符合測試結果期望。 |\r\n\r\n---\r\n\r\n# 4 參考資料\r\n\r\n-   [Spring 官方文檔 - CVE-2023-34034: WebFlux Security Bypass With Un-Prefixed Double Wildcard Pattern](https://spring.io/security/cve-2023-34034)\r\n-   [Spring 官方文檔 - Dependency versions](https://docs.spring.io/spring-boot/docs/current/reference/html/dependency-versions.html#appendix.dependency-versions)\r\n',xD=`# 1 Java Spring 提供既 HTTP client APIs\r
\r
微服務（又或者 monolith applications）可以透過 HTTP clients 以 HTTP REST calls 既形式連接其他服務，包括獲取、上載、更新、刪除資料。\r
\r
以下係 Java Spring Boot 或者 Spring Cloud 項目可以用到既 HTTP client APIs：\r
\r
1.  Java \`HttpClient\`\r
1.  Spring \`RestTemplate\`\r
1.  Spring Webflux \`WebClient\`\r
1.  Spring 6.1 \`RestClient\`（新）\r
1.  Spring Cloud OpenFeign\r
\r
---\r
\r
# 2 動手寫\r
\r
## 2.1 Java \`HttpClient\`\r
\r
以下係 Java 本身提供既 \`HttpClient\` API。\r
\r
構建 client object：\r
\r
\`\`\`java\r
final HttpClient client = HttpClient.newBuilder()\r
	.version(Version.HTTP_1_1)\r
	.connectTimeout(Duration.ofSeconds(10))\r
	.build();\r
\`\`\`\r
\r
發送 request：\r
\r
\`\`\`java\r
final String requestBody = "{ \\"value\\": \\"123\\" }";\r
\r
final HttpRequest request = HttpRequest.newBuilder()\r
	.version(Version.HTTP_1_1)\r
	.uri(new URI("http://localhost:8081/api/order/123?param1=value&param2=value"))\r
	.POST(BodyPublishers.ofString(requestBody, StandardCharsets.UTF_8))\r
	.header("Authorization", "Basic " + Base64.getEncoder().encodeToString(("username" + ":" + "password").getBytes()))\r
	.header("Content-Type", "application/json")\r
	.header("header1", "header1-value")\r
	.header("header2", "header2-value")\r
	.build();\r
\r
final HttpResponse<String> response = client.send(request, BodyHandlers.ofString(StandardCharsets.UTF_8));\r
\`\`\`\r
\r
\`2xx\`、\`3xx\`、\`4xx\` 或 \`5xx\` responses：\r
\r
\`\`\`java\r
final String responseBody = response.body();\r
final int responseStatusCode = response.statusCode();\r
final boolean isResponse2xx = responseStatusCode >= 200 && responseStatusCode < 300;\r
final boolean isResponse3xx = responseStatusCode >= 300 && responseStatusCode < 400;\r
final boolean isResponse4xx = responseStatusCode >= 400 && responseStatusCode < 500;\r
final boolean isResponse5xx = responseStatusCode >= 500 && responseStatusCode < 600;\r
final Map<String, List<String>> responseHeaders = response.headers().map();\r
\`\`\`\r
\r
---\r
\r
## 2.2 Spring \`RestTemplate\`\r
\r
以下係 Spring 一直以黎都有既 \`RestTemplate\` API。自從 Spring 5，呢個 class 已經係喺 maintenance mode，Spring 建議我地轉用 \`WebClient\`。\r
\r
構建 client object：\r
\r
\`\`\`java\r
final RestTemplate client = new RestTemplateBuilder()\r
	.setConnectTimeout(Duration.ofSeconds(10))\r
	.basicAuthentication("username", "password")\r
	.defaultHeader("header1", "header1-value")\r
	.defaultHeader("header2", "header2-value")\r
	.build();\r
\r
// 如果加入左 jackson-dataformat-xml\r
// 令 RestTemplate 唔好喺 Accept request header 度加入 application/xml 或相關既 values\r
client.getMessageConverters().removeIf(e -> e.getClass()==MappingJackson2XmlHttpMessageConverter.class);\r
\`\`\`\r
\r
發送 request：\r
\r
\`\`\`java\r
final String requestBody = "{ \\"value\\": \\"123\\" }";\r
final HttpHeaders requestHeaders = new HttpHeaders();\r
requestHeaders.set(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE);\r
requestHeaders.set("header1", "header1-value");\r
requestHeaders.set("header2", "header2-value");\r
\r
try {\r
	final ResponseEntity<String> response = client.exchange(\r
		"http://localhost:8081/api/order/{orderId}?param1={param1}&param2={param2}",\r
		HttpMethod.POST,\r
		new HttpEntity<>(requestBody, requestHeaders),\r
		String.class,\r
		"123",\r
		"param1-value",\r
		"param2-value");\r
} catch (RestClientResponseException e) {\r
	// 4xx 或 5xx responses\r
}\r
\`\`\`\r
\r
\`2xx\` 或 \`3xx\` responses：\r
\r
\`\`\`java\r
final String responseBody = response.getBody();\r
final int responseStatusCode = response.getStatusCode().value();\r
final boolean isResponse2xx = response.getStatusCode().is2xxSuccessful();\r
final boolean isResponse3xx = response.getStatusCode().is3xxRedirection();\r
final Map<String, List<String>> responseHeaders = response.getHeaders();\r
\`\`\`\r
\r
\`4xx\` 或 \`5xx\` responses：\r
\r
\`\`\`java\r
} catch (RestClientResponseException e) {\r
	final String responseBody = e.getResponseBodyAsString();\r
	final int responseStatusCode = e.getStatusCode().value();\r
	final boolean isResponse4xx = e.getStatusCode().is4xxClientError();\r
	final boolean isResponse5xx = e.getStatusCode().is5xxServerError();\r
	final Map<String, List<String>> responseHeaders = e.getResponseHeaders();\r
}\r
\`\`\`\r
\r
注意：\r
\r
-   某啲 classpath libraries（Maven dependencies）會影響到 Spring \`RestTemplate\` 幫我地 send HTTP calls 既時候加入既 \`Accept\` request header。\r
    -   創建 Spring \`RestTemplate\` 既時候，佢會因為喺 classpath 存在既 classes 而去推斷 \`Accept\` request header。\r
    -   例如 classpath 度有 \`jackson-dataformat-xml\` 既話，Spring \`RestTemplate\` 就會用左 \`Accept: text/plain, application/xml, text/xml, application/json, application/*+xml, application/*+json, */*\` 既 request header 去 send HTTP calls。\r
    -   如果呢啲 libraries 係必需，咁我地可以透過刪除 Spring \`RestTemplate\` object 裡面既 message converters 去改變佢既 behavior。\r
\r
詳情可以睇返呢篇：[Spring JSON 變 XML response 問題](/blog/spring-resttemplate-trap)。\r
\r
---\r
\r
## 2.3 Spring Webflux \`WebClient\`\r
\r
以下係黎自 Spring Webflux 既 \`WebClient\` API。佢支援 synchronous（blocking）以及 asynchronous（non-blocking）既 HTTP calls。\r
\r
Spring Boot servlet WebMVC 既項目只要加入 Spring Webflux 既 library 就用得到呢個 client。\r
\r
構建 client object：\r
\r
\`\`\`java\r
final HttpClient httpClient = HttpClient.newBuilder()\r
	.version(Version.HTTP_1_1)\r
	.connectTimeout(Duration.ofSeconds(10))\r
	.build();\r
\r
final WebClient client = WebClient.builder()\r
	.clientConnector(new JdkClientHttpConnector(httpClient))\r
	.defaultHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE)\r
	.defaultHeader("header1", "header1-value")\r
	.defaultHeader("header2", "header2-value")\r
	.build();\r
\`\`\`\r
\r
發送 request：\r
\r
\`\`\`java\r
final String requestBody = "{ \\"value\\": \\"123\\" }";\r
\r
try {\r
	final ResponseEntity<String> response = client.post()\r
		.uri("http://localhost:8081/api/order/{orderId}?param1={param1}&param2={param2}", "123", "param1-value", "param2-value")\r
		.headers(headers -> headers.setBasicAuth("username", "password"))\r
		.header(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE)\r
		.header("header1", "header1-value")\r
		.header("header2", "header2-value")\r
		.bodyValue(requestBody)\r
		.retrieve()\r
		.toEntity(String.class)\r
		.block();\r
} catch (WebClientResponseException e) {\r
	// 4xx 或 5xx responses\r
}\r
\`\`\`\r
\r
\`2xx\` 或 \`3xx\` responses：\r
\r
\`\`\`java\r
final String responseBody = response.getBody();\r
final int responseStatusCode = response.getStatusCode().value();\r
final boolean isResponse2xx = response.getStatusCode().is2xxSuccessful();\r
final boolean isResponse3xx = response.getStatusCode().is3xxRedirection();\r
final Map<String, List<String>> responseHeaders = response.getHeaders();\r
\`\`\`\r
\r
\`4xx\` 或 \`5xx\` responses：\r
\r
\`\`\`java\r
} catch (WebClientResponseException e) {\r
	final String responseBody = e.getResponseBodyAsString();\r
	final int responseStatusCode = e.getStatusCode().value();\r
	final boolean isResponse4xx = e.getStatusCode().is4xxClientError();\r
	final boolean isResponse5xx = e.getStatusCode().is5xxServerError();\r
	final Map<String, List<String>> responseHeaders = e.getHeaders();\r
}\r
\`\`\`\r
\r
---\r
\r
## 2.4 Spring 6.1 \`RestClient\`\r
\r
以下係 Spring 6.1 新加入既 \`RestClient\` API。佢支援 synchronous（blocking）既 HTTP calls。\r
\r
用呢個 client 既話，就唔需要再喺 Spring Boot servlet WebMVC 既項目加入 Spring Webflux 既 library。\r
\r
構建 client object：\r
\r
\`\`\`java\r
final RestClient client = RestClient.builder()\r
	.defaultHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE)\r
	.defaultHeader("header1", "header1-value")\r
	.defaultHeader("header2", "header2-value")\r
	.build();\r
\`\`\`\r
\r
發送 request：\r
\r
\`\`\`java\r
final String requestBody = "{ \\"value\\": \\"123\\" }";\r
\r
try {\r
	final ResponseEntity<String> response = client.post()\r
		.uri("http://localhost:8081/api/order/{orderId}?param1={param1}&param2={param2}", "123", "param1-value", "param2-value")\r
		.headers(headers -> headers.setBasicAuth("username", "password"))\r
		.header(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE)\r
		.header("header1", "header1-value")\r
		.header("header2", "header2-value")\r
		.body(requestBody)\r
		.retrieve()\r
		.toEntity(String.class);\r
} catch (RestClientResponseException e) {\r
	// 4xx 或 5xx responses\r
}\r
\`\`\`\r
\r
\`2xx\` 或 \`3xx\` responses：\r
\r
\`\`\`java\r
final String responseBody = response.getBody();\r
final int responseStatusCode = response.getStatusCode().value();\r
final boolean isResponse2xx = response.getStatusCode().is2xxSuccessful();\r
final boolean isResponse3xx = response.getStatusCode().is3xxRedirection();\r
final Map<String, List<String>> responseHeaders = response.getHeaders();\r
\`\`\`\r
\r
\`4xx\` 或 \`5xx\` responses：\r
\r
\`\`\`java\r
} catch (RestClientResponseException e) {\r
	final String responseBody = e.getResponseBodyAsString();\r
	final int responseStatusCode = e.getStatusCode().value();\r
	final boolean isResponse4xx = e.getStatusCode().is4xxClientError();\r
	final boolean isResponse5xx = e.getStatusCode().is5xxServerError();\r
	final Map<String, List<String>> responseHeaders = e.getResponseHeaders();\r
}\r
\`\`\`\r
\r
---\r
\r
## 2.5 Spring Cloud OpenFeign\r
\r
Spring Cloud OpenFeign 將開源既 Feign library（本來係 Netflix，但之後開源成為 OpenFeign）整合到 Spring Cloud framework 裡面。\r
\r
用 Spring Cloud OpenFeign 既好處係佢係 declarative，基本上將需要用到 upstream apps 既 declarative request mappings 搬入黎我地既 downstream app project 就得。\r
\r
構建 client object：\r
\r
\`\`\`java\r
@FeignClient(\r
	name = "fooClient",\r
	configuration = FooFeignConfig.class\r
)\r
public interface FooFeignClient {\r
\r
	// 注意：\r
	// consumes ➜ Content-Type request header\r
	// produces ➜ Accept request header\r
\r
	@PostMapping(path = "/api/order/{orderId}", consumes = MediaType.APPLICATION_JSON_VALUE)\r
	ResponseEntity<String> api(@PathVariable("orderId") String orderId,\r
								@RequestParam(name = "param1", required = false) String param1,\r
								@RequestParam(name = "param2", required = false) String param2,\r
								@RequestBody String body,\r
								@RequestHeader("header1") String header1,\r
								@RequestHeader("header2") String header2);\r
}\r
\`\`\`\r
\r
Basic auth Spring configuration：\r
\r
\`\`\`java\r
// 如果加 @Configuration，呢個 config 就會係所有 Feign clients 既默認 config\r
public class FooFeignConfig {\r
\r
	@Bean\r
	public BasicAuthRequestInterceptor fooBasicAuthInterceptor() {\r
		return new BasicAuthRequestInterceptor("username", "password");\r
	}\r
}\r
\`\`\`\r
\r
Application 配置：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
spring.cloud.openfeign.client.config:\r
  default:\r
    connectTimeout: 10000\r
    loggerLevel: FULL\r
  fooClient:\r
    connectTimeout: 10000\r
    loggerLevel: FULL\r
    url: http://localhost:8081\r
    defaultRequestHeaders:\r
      header1: header1-value\r
      header2: header2-value\r
\r
logging:\r
  level:\r
    my.package.FooFeignClient: DEBUG\r
\`\`\`\r
\r
發送 request：\r
\r
\`\`\`java\r
@Autowired\r
FooFeignClient client;\r
\r
public void sampleCall() {\r
	final String requestBody = "{ \\"value\\": \\"123\\" }";\r
\r
	try {\r
		final ResponseEntity<String> response =\r
			client.api("123", "param1-value", "param2-value", requestBody, "header1-value", "header2-value");\r
	} catch (FeignException e) {\r
		// 3xx、4xx 或 5xx responses\r
	}\r
}\r
\`\`\`\r
\r
\`2xx\` responses：\r
\r
\`\`\`java\r
final String responseBody = response.getBody();\r
final int responseStatusCode = response.getStatusCode().value();\r
final boolean isResponse2xx = response.getStatusCode().is2xxSuccessful();\r
final Map<String, List<String>> responseHeaders = response.getHeaders();\r
\`\`\`\r
\r
\`3xx\`、\`4xx\` 或 \`5xx\` responses：\r
\r
\`\`\`java\r
} catch (FeignException e) {\r
	final String responseBody = e.contentUTF8();\r
	final int responseStatusCode = e.status();\r
	final boolean isResponse3xx = e.status() >= 300 && e.status() < 400;\r
	final boolean isResponse4xx = e.status() >= 400 && e.status() < 500;\r
	final boolean isResponse5xx = e.status() >= 500 && e.status() < 600;\r
	final Map<String, Collection<String>> responseHeaders = e.responseHeaders();\r
}\r
\`\`\`\r
\r
注意：\r
\r
-   需要喺某個 Spring config class 度加上 \`@EnableFeignClients\`，否則唔會生成 Feign client objects。\r
-   Feign clients 裡面既 request mapping methods 既 API contract 應該係要 match 返 target upstream app 既 request mapping methods。\r
    -   \`consumes\` ➜ \`Content-Type\`\r
    -   \`produces\` ➜ \`Accept\`\r
    -   ❌ 唔好以為 \`produces\` 指既係呢個 app 所產生既 request body 既 \`Content-Type\`，咁樣係錯既。\r
-   如果唔畀 \`consumes\` attribute，佢會根據 method signature 自動推斷 \`Content-Type\` request header 既 value。\r
-   就算 Feign client method 既 return type 係 \`ResponseEntity\`，當 response status code 唔係 \`2xx\` 既時候，佢會照 throw exception。\r
    -   ❌ 唔好諗住 return \`ResponseEntity\` 就可以拎到 response status code 然後 apply 自己既 logic，呢個係做唔到既。\r
-   ⚠️ 某啲 Spring Cloud OpenFeign \`4.x\` 版本有個 bug，當我地喺 \`@FeignClient\` 定義左 \`path\` attribute（以免喺 request mapping annotations 度重複 common path prefix），而 target upstream app 既 URL 係喺 application 配置檔度定義，佢就會出 exception \`target values must be absolute.\`，呢個 bug 應該會喺後期版本修復。\r
\r
參考資料：\r
\r
-   [GitHub - spring-cloud/spring-cloud-openfeign - Incorrect resolved url when the FeignClient.path is set and the base url is defined in the properties file](https://github.com/spring-cloud/spring-cloud-openfeign/issues/923)\r
\r
---\r
\r
# 3 參考資料\r
\r
-   [Spring 官方文檔 - REST Clients](https://docs.spring.io/spring-framework/reference/integration/rest-clients.html)\r
`,jD=`# 1 故障\r
\r
要求對方提供故障既基本背景：\r
\r
1. How urgent do you need this issue to be resolved?\r
1. What is the impact of this issue?\r
1. Is there any financial impact because of this issue?\r
1. Is this issue impacting the end users (or business users)?\r
1. In which environments did this issue occur?\r
1. Did this issue occur in production environments?\r
1. When did this issue occur?\r
1. Is this issue recurring? When was the first time it occurred? How often does it occur?\r
1. Is this issue intermittent?\r
1. When was the last time that it worked?\r
1. When was the last time that this issue occurred?\r
\r
要求對方提供系統資料以及檔案：\r
\r
1. Please provide the application logs and the error logs in text files.\r
1. Please provide the source code of this application.\r
1. Please provide the Maven pom.xml file of this application.\r
1. Please provide the configurations (i.e. environment variables, program arguments, config files) of this application.\r
1. Please provide the architecture diagram of this application.\r
1. Please provide the API flow or program flow, and explain where this issue occurred.\r
1. Please provide a minimal, reproducible example that can demonstrate this issue.\r
\r
引導對方：\r
\r
1. Were there recent changes in the application (code / config) that possibly caused this issue?\r
1. Have you tried reverting the recent changes in the application (code / config)? Did it help?\r
1. Were there recent outages in the involved environments? Have you contacted the cloud platform service provider?\r
1. What action was performed when the issue happened?\r
1. What are the conditions for this issue to occur?\r
1. What have you done to troubleshoot this issue? Are there any useful findings or root cause analysis that you could share with us?\r
1. What have you done to attempt to resolve this issue? Is there a workaround?\r
1. Is there another application that works in the same environment? Have you compared the implementation (code / config) with the application that works?\r
1. Is this a new application? Did the previous version of this application work?\r
1. Which component do you suspect to be faulty?\r
1. Please explain why you think that this issue is related to our products.\r
\r
---\r
\r
# 2 新需求\r
\r
1. Please elaborate on the background of this feature request.\r
1. Which parties are requesting for this feature?\r
1. Who are the end users?\r
1. What are the use case scenarios?\r
1. How urgent do you need this feature?\r
1. What is the soft deadline for this feature to be implemented?\r
1. Is there a hard deadline for this feature to be implemented?\r
1. What is the impact, including financial impact, if this feature is not implemented at all?\r
1. What is the impact, including financial impact, if this feature is not implemented on time?\r
1. Will it introduce new costs after this feature is implemented?\r
1. Will there be any impact (functional / non-functional) to other systems if this feature is implemented?\r
1. How do the users do it today?\r
1. Is there any workaround or alternative way to achieve this requirement?\r
1. Who can help us conduct testing (e2e / UAT) once this feature is implemented?\r
`,CD=`# 1 Google 以圖搜尋\r
\r
相信大家都知道 Google 搜尋既其中一個叫做 Google Images 既功能可以幫我地上載圖片去搜尋更多圖片，呢個功能已經存在多年。\r
\r
佢最有用既一個用途係，我地可以上載一張低清圖片，然後 Google Images 會顯示所有相同或相似既圖片結果，然後我地可以喺結果頁面選擇最高清既解像度，Google Images 會以相反次序將結果顯示，一目了然，非常方便。\r
\r
不過，Google 近年就將 Google Images 既以圖搜尋功能轉左用 Google Lens，亦都冇左重要既功能——解像度既選項、排序。\r
\r
---\r
\r
# 2 需求\r
\r
根據而家 Google Lens 搜尋結果頁面既設計，我地係冇任何選項，只能夠撳「More exact matches」既掣去顯示更多搜尋結果。\r
\r
所以我地需要：\r
\r
-   透過自動撳「More exact matches」既掣去顯示所有搜尋結果。\r
-   以解像度既相反次序去排序搜尋結果。\r
-   避免因為頁面自動刷新而失去我地對頁面既改動。\r
\r
---\r
\r
# 3 動手寫\r
\r
## 3.1 顯示所有搜尋結果\r
\r
### 3.1.1 Locate 「More exact matches」掣\r
\r
Locate 「More exact matches」既掣：\r
\r
\`\`\`js\r
const els = [...document.querySelectorAll("div")]\r
	.filter((e) => e.children.length === 0)\r
	.filter((e) => e.innerText === "More exact matches");\r
const el = els[0];\r
\`\`\`\r
\r
解釋：\r
\r
-   因為 Google Lens 既頁面既 DOM elements 都冇 \`id\`，而佢地既 class names 似係 front-end library 生成既隨機值，所以我地只能用個掣既顯示文字去搵返佢個 \`div\` element 出黎。\r
\r
---\r
\r
### 3.1.2 自動撳掣機制\r
\r
\`\`\`js\r
const clickMore = () => {\r
	const els = [...document.querySelectorAll("div")]\r
		.filter((e) => e.children.length === 0)\r
		.filter((e) => e.innerText === "More exact matches");\r
\r
	if (els.length > 0) {\r
		els[0].click();\r
		setTimeout(clickMore, 500);\r
	}\r
};\r
\r
clickMore();\r
\`\`\`\r
\r
解釋：\r
\r
-   考慮到撳掣之後可能會需要一啲時間，所以我地會用 \`setTimeout\` 去每隔一小段時間去一直 check 下個掣存唔存在，然後撳一次。\r
-   如果個掣唔再存在，我地就唔需要再繼續 check。\r
\r
---\r
\r
## 3.2 排序搜尋結果\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const extractWidth = (node) => Number.parseInt(node.innerText.replace(/.*?(\\d+)x(\\d+)/, "$1"));\r
const extractHeight = (node) => Number.parseInt(node.innerText.replace(/.*?(\\d+)x(\\d+)/, '$2'));\r
\r
const sortAllResults = () => {\r
	const newListEl = document.createElement("ul");\r
\r
	const listEl = document.querySelector('ul[aria-label="All results list"]');\r
\r
	[...listEl.children]\r
		.sort((a, b) => {\r
			const aEl = [...a.querySelectorAll('div')].filter(e => e.children.length === 0 || [...e.children].every(o => o.tagName.toLowerCase() === 'span')).filter(e => /.*?(\\d+)x(\\d+)/.test(e.innerText))[0];\r
			const bEl = [...b.querySelectorAll('div')].filter(e => e.children.length === 0 || [...e.children].every(o => o.tagName.toLowerCase() === 'span')).filter(e => /.*?(\\d+)x(\\d+)/.test(e.innerText))[0];\r
\r
			const aArea = aEl ? (extractWidth(aEl) * extractHeight(aEl)) : 0;\r
			const bArea = bEl ? (extractWidth(bEl) * extractHeight(bEl)) : 0;\r
\r
			return bArea - aArea;\r
		})\r
		.forEach(e => {\r
			newListEl.appendChild(e);\r
		});\r
\r
	document.body.replaceChildren(newListEl);\r
};\r
\`\`\`\r
\r
解釋：\r
\r
-   我地會用每張圖片既解像度數字去計出圖片既面積，然後以面積既相反次序去排序搜尋結果。\r
-   我地會將搜尋結果既 \`li\` DOM elements 加到一個新既 \`ul\` list，再將 body 既內容換成呢個新既 \`ul\` list，從而避免因為 parent DOM elements 自動刷新而失去我地對 \`ul\` 既 \`li\` DOM elements 排序既改動。\r
\r
---\r
\r
# 4 包裝成 Chrome extension\r
\r
我地可以寫一個 Chrome extension 去自動執行以上既 script。\r
\r
## 4.1 檔案\r
\r
只需要 \`2\` 個檔案：\r
\r
| 檔案            | 用途                                                                                      |\r
| --------------- | ----------------------------------------------------------------------------------------- |\r
| \`manifest.json\` | 關於呢個 Chrome extension 既基本資訊，例如呢個 Chrome extension 適用於邊啲 URL patterns。 |\r
| \`content.js\`    | 真正要執行既 script。                                                                     |\r
\r
我地要將佢地放埋喺同一個 folder 裡面。\r
\r
### 4.1.1 \`manifest.json\`\r
\r
格式如下：\r
\r
<!-- prettier-ignore -->\r
\`\`\`json\r
{\r
	"name": "Google-Lens-Sort",\r
	"version": "1.0",\r
	"description": "Sort Google Lens image search results",\r
	"content_scripts": [\r
		{\r
			"matches": [\r
				"*://lens.google.com/search*"\r
			],\r
			"js": ["content.js"],\r
			"run_at": "document_idle"\r
		}\r
	],\r
	"manifest_version": 3\r
}\r
\`\`\`\r
\r
註：\r
\r
-   經過測試後，發現只有 \`run_at\` 係 \`document_idle\` 既情況下，我地既 \`content.js\` script 先會喺頁面由 Google Images redirect 去 Google Lens 結果頁之後執行。\r
    -   如果 \`run_at\` 係 \`document_start\`，咁就要先手動 refresh Google Lens 搜尋結果頁，咁個 script 先會執行。\r
\r
---\r
\r
### 4.1.2 \`content.js\`\r
\r
經過優化後，以下係最終既 script。\r
\r
以下既格式其實可以用作 Chrome extensions 既 template。\r
\r
<!-- prettier-ignore -->\r
\`\`\`js\r
const MAX_RUN = Infinity;\r
const DELAY_INCREMENT = 1000;\r
const DELAY_MAX = 1000;\r
var delay = 0;\r
var done = false;\r
\r
const clickMore = () => {\r
	const els = [...document.querySelectorAll('div')]\r
		.filter(e => e.children.length === 0)\r
		.filter(e => e.innerText === 'More exact matches');\r
\r
	if (els.length > 0) {\r
		els[0].click();\r
		console.log("Clicked button 'More exact matches'");\r
		setTimeout(clickMore, 500);\r
	} else if (sortAllResults()) {\r
		done = true;\r
	}\r
};\r
\r
const extractWidth = (node) => Number.parseInt(node.innerText.replace(/.*?(\\d+)x(\\d+)/, '$1'));\r
const extractHeight = (node) => Number.parseInt(node.innerText.replace(/.*?(\\d+)x(\\d+)/, '$2'));\r
\r
/* For troubleshooting, run below in browser console\r
\r
const extractWidth = node => Number.parseInt(node.innerText.replace(/.*?(\\d+)x(\\d+)/, '$1'));\r
[...document.querySelectorAll('ul[aria-label="All results list"] li div')]\r
		.filter(e => e.children.length === 0 || [...e.children].every(o => o.tagName.toLowerCase() === 'span'))\r
		.filter(e => /.*?(\\d+)x(\\d+)/.test(e.innerText))\r
		.toSorted((a, b) => extractWidth(b)-extractWidth(a))\r
		.map(extractWidth)\r
*/\r
\r
const sortAllResults = () => {\r
	const newListEl = document.createElement("ul");\r
	newListEl.setAttribute('aria-label', 'All results list');\r
	newListEl.style.width = '70%';\r
\r
	const listEl = document.querySelector('ul[aria-label="All results list"]');\r
\r
	if (!listEl) {\r
		return;\r
	}\r
\r
	[...listEl.children]\r
		.sort((a, b) => {\r
			const aEl = [...a.querySelectorAll('div')].filter(e => e.children.length === 0 || [...e.children].every(o => o.tagName.toLowerCase() === 'span')).filter(e => /.*?(\\d+)x(\\d+)/.test(e.innerText))[0];\r
			const bEl = [...b.querySelectorAll('div')].filter(e => e.children.length === 0 || [...e.children].every(o => o.tagName.toLowerCase() === 'span')).filter(e => /.*?(\\d+)x(\\d+)/.test(e.innerText))[0];\r
\r
			const aArea = aEl ? (extractWidth(aEl) * extractHeight(aEl)) : 0;\r
			const bArea = bEl ? (extractWidth(bEl) * extractHeight(bEl)) : 0;\r
\r
			return bArea - aArea;\r
		})\r
		.forEach(e => {\r
			newListEl.appendChild(e);\r
		});\r
\r
	document.body.replaceChildren(newListEl);\r
\r
	return true;\r
};\r
\r
const run = () => {\r
	let i = 0;\r
\r
	const _run = () => {\r
		if (i === MAX_RUN) {\r
			return;\r
		}\r
\r
		i++;\r
		console.log('Running iteration ' + i);\r
\r
		if (done) {\r
			return;\r
		} else {\r
			clickMore();\r
		}\r
\r
		setTimeout(_run, delay);\r
		delay = Math.min(delay + DELAY_INCREMENT, DELAY_MAX);\r
	};\r
\r
	_run();\r
};\r
\r
run();\r
\`\`\`\r
\r
---\r
\r
## 4.2 安裝 Chrome extension\r
\r
1. 喺 Chrome 打開 \`chrome://extensions\` 頁面。\r
1. 開啟 Developer mode。\r
1. Load unpacked ➜ 打開裝住 \`manifest.json\` 既 folder。\r
\r
---\r
\r
# 5 測試\r
\r
## 5.1 手動執行\r
\r
我地唔一定要用 Chrome extension 去自動執行我地段 script。\r
\r
喺冇或者禁用左 Chrome extension 既情況下：\r
\r
1. 打開 [Google Images 頁面](https://www.google.com/imghp)。\r
1. 將測試圖片 drag 到圖片上載框內。\r
1. 撳圖片上既「Find image source」掣。\r
1. 打開 Chrome developer tools 既 Console tab。\r
1. 將段 script paste 落去，然後按 Enter 執行。\r
1. 等頁面上既搜尋結果改變。\r
\r
---\r
\r
## 5.2 以 Chrome extension 自動執行\r
\r
喺 Chrome extension 生效既情況下：\r
\r
1. 打開 [Google Images 頁面](https://www.google.com/imghp)。\r
1. 將測試圖片 drag 到圖片上載框內。\r
1. 撳圖片上既「Find image source」掣。\r
1. 等頁面上既搜尋結果改變。\r
`,ID=`# 1 RabbitMQ 簡介\r
\r
RabbitMQ 係一個強大既 messaging broker 工具，可以畀我地用 messaging 黎達到 asynchronous 既 microservice communication，以及做到 event-driven architecture。佢同 Azure Service Bus 以及 Kafka 相類似。\r
\r
負責發布訊息既微服務會將文字訊息發送到 RabbitMQ，然後 RabbitMQ 會暫時儲存住呢啲訊息，而訂閱左呢個 RabbitMQ 既微服務稍後就會收到訊息。當訂閱方成功接收到訊息，RabbitMQ 就會移除呢啲已經傳送既訊息。\r
\r
## 1.1 Messaging entities 概念\r
\r
首先，當我地喺 RabbitMQ 創建 messaging entities，我地一定要將佢地創建喺某一個 virtual host（亦叫 vhost）裡面，而 virtual host 係用黎 group 起有關既 messaging entities，類似係一個 folder 既概念。\r
\r
RabbitMQ 有以下既 messaging entities：\r
\r
| Messaging entity | 描述                                                                                                                                                                                                 |\r
| :--------------: | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
|     Exchange     | Exchange 係一個訊息發送對象。                                                                                                                                                                        |\r
|      Queue       | 一條隊列，可以係一個訊息發送對象。任意數量既發布方、任意數量既訂閱方都可以使用同一條隊列收發訊息。Queue 並唔隸屬於某一個 exchange，而係獨立既存在，而我地要透過 binding 黎將 queue 連繫到 exchange。 |\r
\r
---\r
\r
## 1.2 Exchange 種類\r
\r
|  Exchange 種類   | 描述                                                                                                                                                                                                                                                                                                                                                     |\r
| :--------------: | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| Fanout exchange  | 所有 bind 左既 queues 都收到訊息，用作 broadcasting。類似 Azure Service Bus 既 topic、subscriptions。Queue 依然可以用 routing key bind 落 fanout exchange，但佢會無視 routing key 照發送畀所有 bind 左既 queues。                                                                                                                                        |\r
| Direct exchange  | Queue 可以用特定既 routing key（例如 \`backup.order\`、\`backup.product\`）黎 bind 落 direct exchange，之後就會收到符合呢個 routing key 既訊息。                                                                                                                                                                                                             |\r
|  Topic exchange  | 同 direct exchange 一樣，但佢既 bindings 既 routing key 可以用 \`*\` 代表 exactly 一個任何文字，或者 \`#\` 黎代表任意長度（\`0\` 至 \`N\`）既任何文字，但要注意佢地唔似 RegEx，我地必須用 \`.\` 黎分隔佢地以及其他 routing key 既文字部分，例如 \`backup.#\`。如果個 binding 既 routing key 只係一個 \`#\` 符號，咁個 queue 就會收到黎自個 topic exchange 既所有訊息。 |\r
| Headers exchange | Queue binding 可以有多個特定既 key-value argument match 要求，之後就會收到符合呢啲 key-value arguments 既訊息。                                                                                                                                                                                                                                          |\r
\r
---\r
\r
## 1.3 Queue 種類\r
\r
|  Queue 種類   | 描述                                                                                                                      |\r
| :-----------: | ------------------------------------------------------------------------------------------------------------------------- |\r
| Classic queue | 一般既 queue。                                                                                                            |\r
| Quorum queue  | 係一種新型既 queue 種類，針對需要高數據安全以及可用性既場景，比起 classic mirrored queue 可以應付既錯誤場景更多、更全面。 |\r
|    Stream     | 用 append-only log 既 implementation，類似 Kafka。                                                                        |\r
\r
---\r
\r
# 2 動手寫\r
\r
## 2.1 Maven dependencies\r
\r
\`\`\`xml\r
<parent>\r
	<groupId>org.springframework.boot</groupId>\r
	<artifactId>spring-boot-starter-parent</artifactId>\r
	<version>3.2.2</version>\r
</parent>\r
\r
<dependencyManagement>\r
	<dependencies>\r
		<dependency>\r
			<groupId>org.springframework.cloud</groupId>\r
			<artifactId>spring-cloud-dependencies</artifactId>\r
			<version>2023.0.0</version>\r
			<type>pom</type>\r
			<scope>import</scope>\r
		</dependency>\r
	</dependencies>\r
</dependencyManagement>\r
\r
<dependencies>\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-web</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>com.azure.spring</groupId>\r
		<artifactId>spring-cloud-stream-binder-rabbit</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.apache.commons</groupId>\r
		<artifactId>commons-lang3</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.projectlombok</groupId>\r
		<artifactId>lombok</artifactId>\r
		<scope>provided</scope>\r
	</dependency>\r
</dependencies>\r
\`\`\`\r
\r
---\r
\r
## 2.2 Java code\r
\r
Project structure：\r
\r
-   \`src/main/java\`\r
    -   \`/code\`\r
        -   \`/config\`\r
            -   \`MichaelQueueConsumer.java\`\r
            -   \`MichaelQueueProducer.java\`\r
        -   \`/controller\`\r
            -   \`SampleController.java\`\r
\r
\`MichaelQueueProducer.java\`：\r
\r
\`\`\`java\r
@Slf4j\r
@Configuration\r
public class MichaelQueueProducer {\r
\r
    @Bean\r
    public Supplier<String> michaelProduce() {\r
        return () -> {\r
            final String dateTime = LocalDateTime.now(ZoneId.of("Hongkong")).format(ofPattern("uuuu-MM-dd HH:mm:ss"));\r
            final String message = format("Test msg - %s (%s)", RandomStringUtils.randomAlphanumeric(8), dateTime);\r
            log.info("Sending: {}", message);\r
            return message;\r
        };\r
    }\r
}\r
\`\`\`\r
\r
\`MichaelQueueConsumer.java\`：\r
\r
\`\`\`java\r
@Slf4j\r
@Configuration\r
public class MichaelQueueConsumer {\r
\r
    @Bean\r
    public Consumer<String> michaelConsume() {\r
        return msg -> {\r
            log.info("Received message: {}", msg);\r
        };\r
    }\r
}\r
\`\`\`\r
\r
\`SampleController.java\`：\r
\r
\`\`\`java\r
@RestController\r
public class SampleController {\r
\r
    @Autowired\r
    StreamBridge streamBridge;\r
\r
    @GetMapping\r
    public void send(@RequestParam(name = "msg") String msg) {\r
        streamBridge.send("michaelProduce-out-0", msg);\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
## 2.3 Application 配置\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
spring:\r
  rabbitmq:\r
    host: localhost\r
    port: 5672\r
    username: rmq\r
    password: rmq\r
#    virtual-host: "/"\r
\r
---\r
\r
spring:\r
  cloud:\r
    function:\r
      definition: michaelProduce;michaelConsume # 注意：michaelProduce 會每秒發送訊息\r
    stream:\r
      bindings:\r
        michaelProduce-out-0:\r
          destination: michael-exchange\r
          binder: rabbit\r
        michaelConsume-in-0:\r
          destination: michael-exchange\r
          group: michael-queue\r
          binder: rabbit\r
      rabbit:\r
        bindings:\r
          michaelProduce-out-0:\r
            producer:\r
              exchange-type: fanout # 默認係 topic。如果已經個 exchange 已經存在，咁呢個配置就一定要 match，否則會有 error\r
          michaelConsume-in-0:\r
            consumer:\r
              exchange-type: fanout # 默認係 topic。如果已經個 exchange 已經存在，咁呢個配置就一定要 match，否則會有 error\r
\`\`\`\r
\r
---\r
\r
# 3 測試\r
\r
## 3.1 自動創建 exchange、queue、binding\r
\r
執行個 microservice 之後，我地可以喺 RabbitMQ 既 management 介面見到多左以下既野：\r
\r
-   新增 fanout exchange \`michael-exchange\`\r
-   新增 durable queue \`michael-exchange.michael-queue\`\r
-   \`michael-exchange\` 同 \`michael-exchange.michael-queue\` 之間既 binding，冇任何 routing key 或者 arguments\r
\r
---\r
\r
## 3.2 接收自動發送訊息\r
\r
用左 \`spring.cloud.function.definition\` 註冊既 \`Supplier\` functions 會自動每秒執行，即係每秒都會有一個新訊息發送到 RabbitMQ，所以如果我地既 microservice 有齊發送、接收訊息既功能，我地就可以喺 log 度睇到收發既情況。\r
\r
期望測試結果：\r
\r
-   個 microservice 每秒都會發送一個新訊息。\r
-   個 microservice 發送完訊息之後就即時收到返相同既訊息。\r
\r
---\r
\r
## 3.3 接收手動發送訊息\r
\r
利用我地寫既 REST HTTP API 發送訊息：\r
\r
\`\`\`bash\r
curl localhost:8080/send?msg=foo\r
\`\`\`\r
\r
期望測試結果：\r
\r
-   個 microservice 會收到呢個訊息。\r
-   如果不斷執行呢句 command，個 microservice 就會不斷收到相同既訊息好多次。\r
-   唔會影響個 microservice 接收佢每秒自動發送既訊息。\r
\r
---\r
\r
## 3.4 Competing consumers\r
\r
我地可以喺 port \`8080\`、\`8081\`、\`8082\` 執行 \`3\` 個 instances。\r
\r
-   只有一個 instance 註冊曬 \`Consumer\`、\`Supplier\` functions。\r
-   另外兩個 instances 只註冊 \`Consumer\` function。\r
\r
執行第一個 instance：\r
\r
\`\`\`bash\r
java -jar Spring-Cloud-Stream-RabbitMQ-Demo-1.0.0.jar\r
\`\`\`\r
\r
開個新既 console window，執行第二個 instance：\r
\r
\`\`\`bash\r
java -jar -Dserver.port=8081 -Dspring.cloud.function.definition=michaelConsume Spring-Cloud-Stream-RabbitMQ-Demo-1.0.0.jar\r
\`\`\`\r
\r
開個新既 console window，執行第三個 instance：\r
\r
\`\`\`bash\r
java -jar -Dserver.port=8082 -Dspring.cloud.function.definition=michaelConsume Spring-Cloud-Stream-RabbitMQ-Demo-1.0.0.jar\r
\`\`\`\r
\r
註：\r
\r
-   我地用 \`-D\` 去定義或者覆蓋 \`server.port\` 為 \`8081\`。\r
-   我地用 \`-D\` 去定義或者覆蓋 \`spring.cloud.function.definition\` 為 \`michaelConsume\`。\r
\r
期望測試結果：\r
\r
-   第一個 instance 每秒都會發送一個新訊息。\r
-   每個 instance 都係 exactly 每 \`3\` 秒收到一個訊息（唔係平均）。\r
-   每個 instance 收到既訊息都唔一樣。\r
\r
解釋：\r
\r
-   RabbitMQ 默認既訊息分配策略係 round-robin。喺我地既情況，訊息會順序派發到 instance \`1\` ➜ \`2\` ➜ \`3\` ➜ \`1\` ➜ \`2\` ➜ \`3\`，如此類推。\r
\r
---\r
\r
# 4 已知問題\r
\r
## 4.1 方括號包圍 message 導致既 bug\r
\r
關於呢個問題，可以參考返上一篇：[Spring 項目中訂閱 Azure Service Bus - 3.1 方括號包圍 message 導致既 bug](/blog/spring-azure-service-bus#31-方括號包圍-message-導致既-bug)。\r
\r
---\r
\r
# 5 Debug RabbitMQ\r
\r
我地可以喺需要 debug 既 vhost 上面開啟 RabbitMQ 既 Firehost Tracer 功能。\r
\r
1. 每個 vhost 本身都帶有一個 \`amq.rabbitmq.trace\` 既 topic exchange。我地可以 create 一個 queue，然後用 \`#\` 既 routing key 黎 bind 落去，咁呢個 queue 就會收到個 exchange 既所有 messages。\r
1. 執行 command 為呢個 vhost 開啟 Firehost Tracer 功能。\r
    - \`\`\`bash\r
      rabbitmqctl trace_on -p "<vhost>"\r
      \`\`\`\r
\r
參考資料：\r
\r
-   [Firehose Tracer](https://www.rabbitmq.com/docs/firehose)\r
\r
---\r
\r
# 6 參考資料\r
\r
-   [RabbitMQ 官方文檔 - AMQP 0-9-1 Model Explained](https://rabbitmq.com/tutorials/amqp-concepts.html)\r
-   [RabbitMQ 官方文檔 - Tutorial One (Java) - Introduction](https://rabbitmq.com/tutorials/tutorial-one-java.html)\r
-   [RabbitMQ 官方文檔 - Tutorial Two (Java) - Work Queues](https://rabbitmq.com/tutorials/tutorial-two-java.html)\r
-   [RabbitMQ 官方文檔 - Tutorial Five (Java) - Topics](https://rabbitmq.com/tutorials/tutorial-five-java.html)\r
-   [CloudAMQP - Part 4: RabbitMQ Exchanges, routing keys and bindings](https://www.cloudamqp.com/blog/part4-rabbitmq-for-beginners-exchanges-routing-keys-bindings.html)\r
-   [Spring Cloud Stream 官方文檔 - Suppliers (Sources)](https://docs.spring.io/spring-cloud-stream/reference/spring-cloud-stream/producing-and-consuming-messages.html#suppliers-sources)\r
-   [Spring Cloud Stream 官方文檔 - RabbitMQ Producer Properties](https://docs.spring.io/spring-cloud-stream/reference/rabbit/rabbit_overview/prod-props.html)\r
-   [Spring Cloud Stream 官方文檔 - RabbitMQ Consumer Properties](https://docs.spring.io/spring-cloud-stream/reference/rabbit/rabbit_overview/rabbitmq-consumer-properties.html)\r
-   [RabbitMQ - Topic Exchange 的規則，Routing Key、Binding Key 差異在哪](https://devindeving.blogspot.com/2019/09/rabbitmq-topic-exchange-key.html)\r
`,ED=`# 6 Cucumber\r
\r
Cucumber 係一個專門做 behavior-driven development（BDD）testing 既 library，我地通常會喺用家既角度去測試我地既 Spring Boot 項目既 behaviors。\r
\r
有別於 JUnit、Mocktio 呢啲用黎測試 single layer 既 libraries，BDD testing 既目的係根據用家提供既 user stories（需求場景）去設計 test cases。寫 BDD test cases 既時候，我地會用 natural language（例如英文）去描述每一個 behavior。我地想用 BDD testing 測試既野可以係類似購物落單流程、會員註冊流程既呢啲牽涉多個 Java classes 或者 Spring components 既業務功能。除左複雜既業務流程或者功能，我地都可以用 Cucumber 黎寫 REST API test cases，甚至測試 front-end 功能既 Selenium web tests。\r
\r
Cucumber BDD tests 既描述檔用既係 Gherkin syntax，簡單黎講就係 Given-When-Then 既流程次序，如果寫過 Mockito BDD tests 既話應該唔會對 Given-When-Then 陌生。\r
\r
以下係一個符合 BDD 既例子：\r
\r
<!-- prettier-ignore -->\r
\`\`\`plaintext\r
Feature: Keyword search with Google\r
\r
  Scenario: A Google text search\r
    Given the web browser is displaying the Google Search home page\r
    When I enter "cucumber" as the search keyword\r
	And I click the Search button\r
    Then search results for "cucumber" should be shown\r
\`\`\`\r
\r
## 6.1 Gherkin keywords\r
\r
以下係一啲常用既 Gherkin keywords：\r
\r
| Keyword                                 | 用途                                                                                                                                                                                  |\r
| --------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| \`Feature\`                               | 佢係每個 Cucumber \`.feature\` 檔案既第一句，描述呢個系統功能係大概關於啲乜野。                                                                                                         |\r
| \`Scenario\`／\`Example\`                   | 佢係 under \`Feature\` 下面唔同既 BDD 場景。                                                                                                                                            |\r
| \`Scenario Outline\`／\`Scenario Template\` | 同 \`Scenario\` 既 structure 基本上一樣，但佢係「parameterized」版本既 \`Scenario\`，係實際會執行既 scenario 既 template，需要配合 \`Examples\` 裡面唔同既 test parameters 黎多次執行自己。 |\r
| \`Given\`                                 | 佢係 under \`Scenario\` 或者 \`Scenario Outline\` 既語句，一般係用黎描述 test data setup。                                                                                                |\r
| \`When\`                                  | 佢係 under \`Scenario\` 或者 \`Scenario Outline\` 既語句，一般係用黎描述用家既行為。                                                                                                      |\r
| \`Then\`                                  | 佢係 under \`Scenario\` 或者 \`Scenario Outline\` 既語句，一般係用黎描述期望既結果。                                                                                                      |\r
| \`And\`                                   | 佢係 under \`Scenario\` 或者 \`Scenario Outline\` 既語句，承接上一句既 keyword，例如 \`When\` A \`And\` B、\`Given\` A \`And\` B 以及 \`Then\` A \`And\` B。                                          |\r
| \`Examples\`／\`Scenarios\`                 | 如果用 \`Scenario Outline\` 實現 parameterized test，我地就需要提供 \`Examples\` 黎作為每個實際 scenario 既 test parameters。                                                             |\r
\r
---\r
\r
## 6.2 Maven dependencies\r
\r
\`\`\`xml\r
<parent>\r
	<groupId>org.springframework.boot</groupId>\r
	<artifactId>spring-boot-starter-parent</artifactId>\r
	<version>3.2.3</version>\r
</parent>\r
\r
<dependencyManagement>\r
	<dependencies>\r
		<dependency>\r
			<groupId>io.cucumber</groupId>\r
			<artifactId>cucumber-bom</artifactId>\r
			<version>7.15.0</version>\r
			<type>pom</type>\r
			<scope>import</scope>\r
		</dependency>\r
	</dependencies>\r
</dependencyManagement>\r
\r
<dependencies>\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-web</artifactId>\r
	</dependency>\r
\r
	<!-- database -->\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-data-jpa</artifactId>\r
	</dependency>\r
	<dependency>\r
		<groupId>com.mysql</groupId>\r
		<artifactId>mysql-connector-j</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.projectlombok</groupId>\r
		<artifactId>lombok</artifactId>\r
		<scope>provided</scope>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>org.apache.commons</groupId>\r
		<artifactId>commons-lang3</artifactId>\r
	</dependency>\r
\r
	<!-- testing -->\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-test</artifactId>\r
		<scope>test</scope>\r
	</dependency>\r
	<dependency>\r
		<groupId>com.h2database</groupId>\r
		<artifactId>h2</artifactId>\r
		<scope>test</scope>\r
	</dependency>\r
	<dependency>\r
		<groupId>io.cucumber</groupId>\r
		<artifactId>cucumber-java</artifactId>\r
		<scope>test</scope>\r
	</dependency>\r
	<dependency>\r
		<groupId>io.cucumber</groupId>\r
		<artifactId>cucumber-junit</artifactId>\r
		<scope>test</scope>\r
	</dependency>\r
	<dependency>\r
		<groupId>io.cucumber</groupId>\r
		<artifactId>cucumber-spring</artifactId>\r
		<scope>test</scope>\r
	</dependency>\r
	<dependency>\r
		<groupId>org.junit.vintage</groupId>\r
		<artifactId>junit-vintage-engine</artifactId> <!-- JUnit 4 -->\r
		<scope>test</scope>\r
	</dependency>\r
</dependencies>\r
\`\`\`\r
\r
註：\r
\r
-   我地既 BDD test 會用 H2 database，以免連線到真既 MySQL database。\r
-   我地用左 \`cucumber-bom\` 黎控制 Cucumber test dependencies 既版本號碼。\r
-   我地需要用返 JUnit 4，所以要加 \`junit-vintage-engine\` 既 test dependency。\r
\r
---\r
\r
## 6.3 寫 Java code\r
\r
Project structure：\r
\r
-   \`src/main/java\`\r
    -   \`/code\`\r
        -   \`/controller\`\r
            -   \`UserController.java\`\r
        -   \`/entity\`\r
            -   \`UserEntity.java\`\r
        -   \`/repo\`\r
            -   \`UserRepo.java\`\r
        -   \`/service\`\r
            -   \`UserService.java\`\r
        -   \`MainApplication.java\`\r
-   \`src/test/java\`\r
    -   \`/code\`\r
        -   \`/user\`\r
            -   \`CucumberSpringConfig.java\`\r
            -   \`UserSteps.java\`\r
        -   \`UserTest.java\`\r
-   \`src/test/resources\`\r
    -   \`/features\`\r
        -   \`/user\`\r
            -   \`basic.feature\`\r
\r
\`UserController\`、\`UserEntity\`、\`UserRepo\`、\`UserService\` 都係一啲基本既 Spring components，呢度就唔特別寫出黎。\r
\r
下面寫既 Java classes 係 Cucumber 需要用到既。\r
\r
\`CucumberSpringConfig.java\`：\r
\r
\`\`\`java\r
@CucumberContextConfiguration\r
@SpringBootTest(\r
    classes = MainApplication.class,\r
    webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\r
public class CucumberSpringConfig {\r
\r
}\r
\`\`\`\r
\r
\`UserTest.java\`：\r
\r
\`\`\`java\r
@RunWith(Cucumber.class)\r
@CucumberOptions(\r
    features = {\r
        "src/test/resources/features"\r
    },\r
    glue = "code.user"\r
)\r
public class UserTest {\r
\r
}\r
\`\`\`\r
\r
\`UserSteps.java\`：\r
\r
\`\`\`java\r
@Slf4j\r
public class UserSteps {\r
\r
    @Autowired UserRepo userRepo;\r
    @LocalServerPort int port;\r
    RestClient client = RestClient.builder().build();\r
\r
    List<UserEntity> users;\r
\r
\r
\r
    @Given("{int} users have registered")\r
    public void someNumberOfUsersHaveRegistered(int databaseUserCount) {\r
\r
        // 用呢句黎測試一下 "users" instance field 既 scope，我地會發現每次都係 print null。\r
        System.out.println("Mick: " + users);\r
\r
        userRepo.deleteAll();\r
\r
        IntStream.rangeClosed(1, databaseUserCount)\r
            .mapToObj(this::createTestUser).forEach(userRepo::save);\r
\r
        final long userCount = userRepo.count();\r
\r
        log.info("User table now has {} records.", userCount);\r
    }\r
\r
    @When("I make a request to get all users")\r
    public void makeRequestToGetAllUsers() {\r
        users = client.get().uri(getUrl("/users")).retrieve()\r
                    .body(new ParameterizedTypeReference<>() {});\r
    }\r
\r
    @When("I make a request to get page {int} of all users with page size of {int}")\r
    public void makeRequestToGetPageOfSomeNumberAllUsersWithPageSizeOfSomeNumber(int page, int size) throws Exception {\r
        final JsonNode node = client.get().uri(getUrl(format("/users/paged?page=%d&size=%d", page, size))).retrieve()\r
                    .body(JsonNode.class);\r
        users = new JsonMapper().readerForListOf(UserEntity.class).readValue(node.get("content"));\r
        users.forEach(System.out::println);\r
    }\r
\r
    @Then("the response should give me exactly {int} users")\r
    public void responseShouldReturnSomeNumberOfUsers(int userCount) {\r
        assertEquals(userCount, users.size());\r
    }\r
\r
    @Then("every user is different")\r
    public void everyUserIsDifferent() {\r
        final Set<Long> userIds = users.stream().map(UserEntity::getId).collect(Collectors.toSet());\r
        assertEquals(users.size(), userIds.size());\r
    }\r
\r
\r
\r
    private String getUrl(String path) {\r
        return "http://localhost:" + port + path;\r
    }\r
\r
    private UserEntity createTestUser(int id) {\r
\r
        final UserEntity user = new UserEntity();\r
        user.setName(RandomStringUtils.randomAlphabetic(20));\r
        user.setUserType("NORMAL");\r
        user.setRegisterDatetime(new Timestamp(System.currentTimeMillis()));\r
        user.setEmail(RandomStringUtils.randomAlphabetic(20) + "@example.com");\r
\r
        return user;\r
    }\r
}\r
\`\`\`\r
\r
解釋：\r
\r
-   我地喺 \`UserSteps\` 裡面寫既 \`@Given\`、\`@When\`、\`@Then\` method annotations 既 \`value\` 係對應返我地既 \`.feature\` 檔既 behavior 描述。\r
    -   其實全部 methods annotate 曬做 \`@Given\`、\`@When\`、\`@Then\` 既其中一種都可以，唔需要 exactly match \`.feature\` 檔裡面 scenario 既 keywords。\r
    -   \`@Given\`、\`@When\`、\`@Then\` 可以用 \`{int}\`、\`{string}\` 之類既 placeholders 黎對應返 method arguments。\r
-   我地可以用 instance fields 黎喺同一個 scenario 裡面既 Given-When-Then 之間 share data。\r
    -   除非用到 Spring 既 annotations，否則一般既 instance fields 都會喺 scenario 開始既時候清除（\`null\`），例如 \`UserSteps\` 既 \`List<UserEntity> users\`。\r
\r
---\r
\r
## 6.4 寫 Cucumber \`.feature\` 檔\r
\r
<!-- prettier-ignore -->\r
\`\`\`plaintext\r
Feature: User features\r
\r
  Scenario Outline: Get All - <userCount> users when there are <userCount> users\r
    Given <userCount> users have registered\r
    When I make a request to get all users\r
    Then the response should give me exactly <userCount> users\r
    And every user is different\r
\r
    Examples:\r
      | userCount |\r
      |         0 |\r
      |         1 |\r
      |        10 |\r
\r
  Scenario Outline: Get All (Paged) - <expectedUserCount> users when getting page <page> with size of <size> when there are <userCount> users\r
    Given <userCount> users have registered\r
    When I make a request to get page <page> of all users with page size of <size>\r
    Then the response should give me exactly <expectedUserCount> users\r
    And every user is different\r
\r
    Examples:\r
      | userCount | size | page | expectedUserCount |\r
      |         0 |    0 |    0 |                 0 |\r
      |         1 |    1 |    0 |                 1 |\r
      |         5 |    3 |    0 |                 3 |\r
      |         5 |    3 |    1 |                 2 |\r
      |        50 |   23 |    0 |                23 |\r
      |        50 |   23 |    1 |                23 |\r
      |        50 |   23 |    2 |                 4 |\r
\`\`\`\r
\r
---\r
\r
## 6.5 測試\r
\r
### 6.5.1 Eclipse 執行 JUnit test\r
\r
當我地喺 Eclipse 度用 JUnit 4 執行 \`UserTest\`，就會見到以下 JUnit view 既結果：\r
\r
![](blog/2024-02/java-test-cucumber/Eclipse-JUnit-view.png)\r
\r
---\r
\r
### 6.5.2 Maven CLI\r
\r
我地執行 \`mvn test\` 就會見到以下既結果：\r
\r
![](blog/2024-02/java-test-cucumber/mvn-test-result.png)\r
\r
註：\r
\r
-   Maven Surefire Plugin 有幾個默認既 test class naming patterns，如果我地既 test classes 唔 follow 呢啲 naming patterns，個 plugin 就會無視我地既 test classes。\r
    -   其中一個默認既 naming pattern 係 test class name 要帶有 \`Test\` 既 suffix，就好似我地既 \`UserTest\` 咁。\r
\r
---\r
\r
## 6.6 參考資料\r
\r
-   [BDD 101: Gherkin By Example](https://automationpanda.com/2017/01/27/bdd-101-gherkin-by-example/)\r
-   [Cucumber 官方文檔 - Gherkin Reference](https://cucumber.io/docs/gherkin/reference/)\r
-   [Cucumber 官方文檔 - Step Definitions](https://cucumber.io/docs/cucumber/step-definitions/?lang=java)\r
-   [Maven 官方文檔 - Inclusions and Exclusions of Tests](https://maven.apache.org/surefire/maven-surefire-plugin/examples/inclusion-exclusion.html)\r
-   [Maven 官方文檔 - Using JUnit 5 Platform - Configuring JUnit Platform](https://maven.apache.org/surefire/maven-surefire-plugin/examples/junit-platform.html#configuring-junit-platform)\r
`,TD=`# 1 Jira 簡介\r
\r
Jira 係 Atlassian 公司旗下既一款產品，係一個專門用黎管理 IT 項目既各種「問題」既平台，呢啲同 IT 項目有關既「問題」包括但係不限於：\r
\r
-   開發新功能\r
-   修復程式錯誤\r
-   優化系統（技術負債）\r
\r
註：Jira 既「問題」指既唔係真係有問題（problem），而係比較接近任務既意思，英文通常稱之為 issue、ticket 或者 task。\r
\r
---\r
\r
# 2 不同既 sprint 階段點樣用 Jira\r
\r
我地需要透過 sprint planning、sprint grooming、backlog grooming 等等既討論環節，從中了解 product owner 對黎緊既 sprints 既期望，以及對於自己有信心同能力完成既 issues 同 product owner 達成共識。\r
\r
呢啲 issues 可以黎自 project 既 backlog，亦可以係 ad-hoc 加入既，又或者係之前已經排好喺黎緊既 sprints 要做。\r
\r
## 2.1 Sprint 開始之前\r
\r
開始 sprint 之前（例如 grooming）：\r
\r
-   盡可能將知道既野寫曬喺 description 裡面，並且揀選適合既 priority、epic、fix version 等等。\r
-   可以先開定啲 sub-task issues。\r
-   盡可能填寫準確既 time estimate。\r
    -   如果個 issue 超出一個 sprint 既時間，咁就應該將佢拆成幾個細啲既 issues。\r
-   確保自己今個 sprint 既 issues 唔會超出一個 sprint 既時間。\r
    -   例如一個 sprint 為期 \`2\` 星期，最多就只可以接受 \`60\` 至 \`80\` 小時（每日 \`6\` 至 \`8\` 小時，要計埋有啲時間可能用左黎開會）既工作量既 issues。\r
-   確保 product owner 或者 team lead 同意自己今個 sprint 會處理既 issues。\r
-   確保自己清楚今個 sprint 要做啲乜野，同埋有信心完成曬定好左既 issues，因為當 sprint 開始左之後先至搬走完成唔到既 issues 唔係負責任既表現，亦會整衰個 velocity chart。\r
\r
---\r
\r
## 2.2 當 sprint 開始左\r
\r
-   每日都要更新一下 issue 既 status，亦要善用 comments。邊啲 issues 有處理過既話就 log work 紀錄返工作數時。\r
-   不時檢視下 issue 既 details，例如 priority、fix version 既資料岩唔岩。\r
-   如果處理 issue 既時候發現有 blocker，就要以唔同既溝通渠道 raise 出黎，同埋喺 issue 既 description 或者最後既 comment 度寫清楚。\r
    -   如果有用 Risk Register 或者類似既 Jira plugin，亦都要用果啲方法 mark 好。\r
-   不時檢視下有冇需要開新既 sub-task issues。\r
-   當完成左一個 issue，喺 close issue 之前，先對比一下自己做左既野同 definition of done 有冇分別。\r
-   唔好將唔喺呢個 sprint 完成既 ticket 移到呢個 sprint。\r
-   唔好修改 time estimate，因為有可能會整衰個 velocity chart。\r
\r
---\r
\r
## 2.3 Sprint 臨完結前\r
\r
-   檢視下自己今個 sprint 啲 issues 既 statuses，絕大部分應該都處於已經完成或者即將完成既狀態。\r
-   對於有信心完成既 issues，確保自己準備好需要既 test results、documentation。\r
-   對於冇辦法完成既 issues，要喺 description 或者最後既 comment 寫清楚原因，甚至乎提供埋證據。\r
\r
---\r
\r
## 2.4 Ad-hoc 情況\r
\r
-   當 product owner 提出新 requirements 既時候，就開一個新既 story 或者 task 類型既 issue 喺 backlog。\r
    -   盡可能將知道既野寫曬喺 description 裡面，並且揀選適合既 priority。\r
-   有需要即時處理既 issue 可以加入而家既 sprint；但如果唔係好急，可以放喺下個 sprint。\r
\r
---\r
\r
# 3 Jira issue 既各個部分\r
\r
## 3.1 Description\r
\r
-   背景資料、原因、服務對象、報告問題既人名；\r
-   Internal/external dependencies；\r
-   有邊幾方面既野要做；\r
-   需要做既 testing、UAT 既人名以及程序；\r
-   需要更新既 documentation 或者 release notes；\r
-   完成呢個 issue 既具體條件（definition of done）。\r
\r
---\r
\r
## 3.2 Issue links\r
\r
### 3.2.1 Issue 與 issue 之間\r
\r
我地可以將有關係既 Jira issues link 埋一齊，並且顯示 issues 之間既關係：\r
\r
-   A \`associated with\` B 或者 A \`relates to\` B\r
-   A \`blocks\` B\r
-   A \`created\` B\r
-   A \`depends on\` B\r
-   A \`has to be done before\` B\r
-   A \`has to be finished together with\` B\r
-   A \`has to be done after\` B\r
-   A \`duplicates\` B\r
\r
呢個關係係 bidirectional 既，link 左既另一個 issue 上面都會顯示邊啲 Jira issues link 左佢。\r
\r
---\r
\r
### 3.2.2 Confluence 文檔\r
\r
我地亦可以將 Confluence 文檔 link 落我地既 Jira issue 度。\r
\r
呢個關係係 bidirectional 既，link 左既 Confluence 文檔上面都會顯示邊啲 Jira issues link 左佢。\r
\r
---\r
\r
## 3.3 Activity\r
\r
### 3.3.1 Comments\r
\r
Comments 可以用黎紀錄：\r
\r
-   呢個 issue 進度上既變化；\r
-   處理呢個 issue 果陣發生既大小事，包括 communication、發現到既 problems 或者 blockers 等等；\r
-   Test evidence；\r
-   呢個 issue 既 requirements 或者 deadline 上既改動。\r
\r
註：\r
\r
-   我地可以善用圖片或文本既 attachments 黎提供 testing、communication、blocker 既 evidence。\r
-   Comment 裡面引用圖片既時候，可以入 text mode 將佢改成 \`!<image file name>|thumbnail!\` 既格式，咁圖片就會以縮圖顯示。\r
\r
---\r
\r
### 3.3.2 Work Log\r
\r
Work log 係用黎紀錄我地邊日處理過邊啲 issues，啲數字可以反映喺 dashboard gadget 或者 reports 裡面。\r
\r
---\r
\r
### 3.3.3 History／Activity\r
\r
我地可以喺 history 或者 activity 度睇返邊個人改左啲乜野，包括但係不限於：\r
\r
-   Status 既變化；\r
-   Details 既改變；\r
-   Description 既改動；\r
-   Comment 既增刪。\r
\r
不過如果我地修改左現有既 comment，係冇辦法知道修改前既 comment 內容。\r
\r
---\r
\r
## 3.4 People\r
\r
如果呢個 issue 改由其他人接手處理，咁應該將 assignee 改成其他人。\r
\r
但如果只係短暫地需要其他人幫手，咁就唔應該將 assignee 改黎改去。\r
\r
---\r
\r
## 3.5 Time tracking\r
\r
呢個部分包括：\r
\r
| 術語      | 解釋                                                      |\r
| --------- | --------------------------------------------------------- |\r
| Estimated | 我地預計呢個 issue 需時幾耐，可以用 \`h\`（小時）作為單位。 |\r
| Remaining | 理論上等於 estimated 減 logged。                          |\r
| Logged    | Work Log 度 log 左既工作時數。                            |\r
\r
---\r
\r
## 3.6 Development\r
\r
我地可以將 Bitbucket 既 commits、branches 顯示喺 Jira issue 上面。\r
\r
-   想顯示有關既 commits 既話，commit message 需要包括 Jira issue key，例如 \`ABC-123 Updated app config.\`。\r
-   想顯示有關既 branches 既話，branch 名需要包括 Jira issue key，例如 \`feature/ABC-123-refactoring\`。\r
    -   如果有清除 short-lived branches 既習慣，就應該依賴 commit message 既方法去 link 落個 issue 度。\r
`,MD="# 1 Maven dependency mediation\r\n\r\n相信開發過帶有複雜 dependencies 既 Maven 項目既 Java developers 都可能曾經遇過呢個問題：\r\n\r\n> 我個 Maven 項目有 `2` 個或以上既 direct dependencies，呢啲 dependencies 都係 depend on 一個相同 `groupId` + `artifactId` 但係唔同 `version` 既 Maven library，咁到底我個項目最終會 depend on 呢個 transitive dependency 既邊一個版本號碼？\r\n\r\n答案：\r\n\r\nMaven 3 喺處理一個項目既 nested dependencies 裡面重複 declare 既 dependencies 既時候，會用到 `2` 個 rules 去揀選版本號碼：\r\n\r\n-   Maven 會睇曬呢啲重複既 dependency declarations，揀最接近我地既項目既果個 dependency declaration，然後就用佢既版本號碼。\r\n-   如果喺距離上有平排既情況，Maven 會揀 dependency tree 裡面較先 declare 既果個版本號碼。\r\n\r\n例子：\r\n\r\n-   獨立例子一\r\n    -   我地既項目 `MyLib` 有 `2` 個 direct dependencies，分別係 `Alice` 以及 `Bob`（相同次序）。\r\n        -   `MyLib 1.0` ➜ `Alice 2.0` ➜ `Bob 2.0` ➜ `Charlie 2.0`\r\n        -   `MyLib 1.0` ➜ `Bob 1.0` ➜ `Charlie 1.0`\r\n    -   結果係 Maven 最終會揀 `Charlie 1.0`，因為 `Charlie 1.0` 最接近我地既項目。\r\n-   獨立例子二\r\n    -   我地既項目 `MyLib` 有 `2` 個 direct dependencies，分別係 `Alice` 以及 `Bob`（相同次序）。\r\n        -   `MyLib 1.0` ➜ `Alice 1.0` ➜ `Charlie 1.0`\r\n        -   `MyLib 1.0` ➜ `Bob 2.0` ➜ `Charlie 2.0`\r\n    -   結果係 Maven 最終會揀 `Charlie 1.0`，因為兩個 `Charlie` 既 dependency declarations 同我地項目有相同既距離，而 `Charlie 1.0` 係較先 declare。\r\n\r\n（上面以「➜」表示 direct dependency。）\r\n\r\n當我地明白左「距離」既原理之後，我地就會知道點解：\r\n\r\n-   當我地想將我地既 Maven 項目用到既某啲 transitive dependencies 既版本號碼升級，我地會將呢啲 dependencies 連同特定既版本號碼直接 declare 喺我地項目之下作為一個 direct dependency，簡單咁做到覆蓋版本號碼既效果。\r\n-   有啲情況下，當我地移動左我地既 Maven 項目既 direct dependencies 既次序之後，我地個程式既 behaviors 會唔同左，咁應該係因為某啲 transitive dependencies 既版本號碼改變左。\r\n\r\n註：\r\n\r\n-   Maven 係唔會理版本號碼本身既值。佢唔會因為一個版本號碼 lexicographically 大過另一個就揀大啲果個。\r\n\r\n參考資料：\r\n\r\n-   [Maven 官方文檔 - Introduction to the Dependency Mechanism - Transitive Dependencies](https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#transitive-dependencies)\r\n-   [Using Maven’s Bill of Materials (BOM) - How Does Maven Resolve Version Conflicts?](https://reflectoring.io/maven-bom/#how-does-maven-resolve-version-conflicts)\r\n\r\n---\r\n\r\n# 2 Maven Shade Plugin\r\n\r\nMaven 項目既 `pom.xml` 既默認 packaging type 係 `jar`，而喺默認情況下，Maven JAR Plugin 喺 build 我地既 JAR 檔既時候：\r\n\r\n-   佢只會將我地既 Maven 項目裡面既 Java bytecode `.class` 檔抄入去。\r\n-   我地既 Maven 項目既所有 dependencies 以及 transitive dependencies 既資訊只會以一個 XML 檔案既形式存在，而佢地既 Java bytecode `.class` 檔係唔會被抄入去最終既 JAR 檔裡面，原因係要避免重複打包呢啲檔案。\r\n\r\n喺少數情況下，我地既 Maven 項目用到既 dependencies 之間可能會出現唔兼容既情況，而唔兼容既原因係佢地一定既 implementations 只係兼容特定版本號碼既 dependencies。\r\n\r\n舉個獨立既例子：\r\n\r\n-   我地既項目 `MyLib` 有 `2` 個 direct dependencies，分別係 `Alice` 以及 `Bob`（相同次序）。\r\n    -   `MyLib 1.0` ➜ `Alice 1.0` ➜ `Charlie 1.0`\r\n    -   `MyLib 1.0` ➜ `Bob 2.0` ➜ `Charlie 2.0`\r\n    -   根據我地對 Maven 揀選 transitive dependency 版本號碼既理解，我地知道 Maven 最終會揀 `Charlie 1.0`。\r\n-   `Charlie 2.0` introduce 左 breaking changes，佢好多野都同 `Charlie 1.0` 有差異。\r\n    -   差異既例子\r\n        -   Classes、enums、annotations 等等既野有增減。\r\n        -   Classes 既 method signatures 或者 enums、annotations 等等既野裡面既內容有增減。\r\n    -   因為呢個原因，`Alice 1.0` 同 `Charlie 1.0` 兼容，但係同 `Charlie 2.0` 唔兼容。\r\n    -   因為呢個原因，`Bob 2.0` 同 `Charlie 2.0` 兼容，但係同 `Charlie 1.0` 唔兼容。\r\n\r\n其實無論 Maven 最終揀左邊個版本號碼既 `Charlie` 都好，我地個程式都會存在住 runtime errors（例如 `NoSuchMethodError`），導致我地既程式冇辦法執行。\r\n\r\n為左解決呢個問題，我地可以用 Maven Shade Plugin 去將 dependencies 。\r\n\r\n## 2.1 簡單既例子\r\n\r\n`Charlie 1.0` 既 project setup：\r\n\r\n-   `pom.xml` 裡面冇任何 dependency，亦冇任何 build plugin。\r\n-   只有一個 class：`src/main/java/code/Calculator.java`\r\n    -   ```java\r\n        public class Calculator {\r\n        	public int sum(int a, int b) { return a + b; }\r\n        }\r\n        ```\r\n\r\n`Charlie 2.0` 既 project setup：\r\n\r\n-   `pom.xml` 裡面冇任何 dependency，亦冇任何 build plugin。\r\n-   只有一個 class：`src/main/java/code/Calculator.java`\r\n    -   ```java\r\n        public class Calculator {\r\n        	public int sum(int a, int b, int c) { return a + b + c; }\r\n        }\r\n        ```\r\n\r\n`Alice 1.0` 既 project setup：\r\n\r\n-   `pom.xml` 裡面只有一個 `Charlie 1.0` 既 dependency，冇任何 build plugin。\r\n-   只有一個 class：`src/main/java/code/impl/AliceImpl.java`\r\n    -   ```java\r\n        public class AliceImpl {\r\n        	public int sum(int a, int b) { return new Calculator().sum(a, b); }\r\n        }\r\n        ```\r\n\r\n`Bob 2.0` 既 project setup：\r\n\r\n-   `pom.xml` 裡面只有一個 `Charlie 2.0` 既 dependency，冇任何 build plugin。\r\n-   只有一個 class：`src/main/java/code/impl/BobImpl.java`\r\n    -   ```java\r\n        public class BobImpl {\r\n        	public int sum(int a, int b, int c) { return new Calculator().sum(a, b, c); }\r\n        }\r\n        ```\r\n\r\n`MyLib 1.0` 既 project setup：\r\n\r\n-   `pom.xml` 裡面有 `Alice 1.0` 以及 `Bob 2.0` 既 dependencies（相同次序），同埋一個 `spring-boot-maven-plugin` 既 build plugin。\r\n-   只有一個 class：`src/main/java/code/Main.java`\r\n    -   ```java\r\n        public class Main {\r\n        	public static void main(String[] args) {\r\n        		System.out.println(new AliceImpl().sum(1, 2) + new BobImpl().sum(1, 2, 3));\r\n        	}\r\n        }\r\n        ```\r\n\r\n如果我地既 `MyLib` Maven 項目直接 depend on `Alice 1.0` 或者 `Bob 2.0`，咁佢就注定會因為最終揀左 `Charlie 1.0` 而缺少 `Charlie 2.0` 裡面既 `Calculator` class 既 method definition 之後導致 `NoSuchMethodError` runtime error：\r\n\r\n```plaintext\r\nException in thread \"main\" java.lang.NoSuchMethodError: 'int code.Calculator.sum(int, int, int)'\r\n	at code.impl.BobImpl.sum(BobImpl.java:8)\r\n	at code.Main.main(Main.java:10)\r\n```\r\n\r\n要解決呢個問題，我地可以 shade `Alice 1.0` 或者 `Bob 2.0`，甚至 shade 曬佢地。\r\n\r\n要 shade `Alice 1.0`，我地需要創建一個 `Alice-shaded 1.0` 既 library，而佢既 project setup：\r\n\r\n-   `pom.xml` 裡面只有一個 `Alice 1.0` 既 dependency，同埋一個 `maven-shade-plugin` 既 build plugin。\r\n-   `src/main/java` 裡面冇任何野。\r\n\r\n要 shade `Bob 2.0`，我地需要創建一個 `Bob-shaded 2.0` 既 library，而佢既 project setup：\r\n\r\n-   `pom.xml` 裡面只有一個 `Bob 2.0` 既 dependency，同埋一個 `maven-shade-plugin` 既 build plugin。\r\n-   `src/main/java` 裡面冇任何野。\r\n\r\n以下係 `Alice-shaded 1.0` 既 `pom.xml`：\r\n\r\n```xml\r\n<dependencies>\r\n	<dependency>\r\n		<groupId>com.michael</groupId>\r\n		<artifactId>alice</artifactId>\r\n		<version>1.0</version>\r\n	</dependency>\r\n</dependencies>\r\n\r\n<build>\r\n	<plugins>\r\n		<plugin>\r\n			<groupId>org.apache.maven.plugins</groupId>\r\n			<artifactId>maven-shade-plugin</artifactId>\r\n			<version>3.5.2</version>\r\n			<configuration>\r\n				<relocations>\r\n					<relocation>\r\n						<pattern>code</pattern>\r\n						<shadedPattern>alice.code</shadedPattern>\r\n					</relocation>\r\n				</relocations>\r\n			</configuration>\r\n			<executions>\r\n				<execution>\r\n					<phase>package</phase>\r\n					<goals>\r\n						<goal>shade</goal>\r\n					</goals>\r\n				</execution>\r\n			</executions>\r\n		</plugin>\r\n	</plugins>\r\n</build>\r\n```\r\n\r\n`Bob-shaded 2.0` 既 `pom.xml` 同上面 `Alice-shaded 1.0` 既 `pom.xml` 基本上一樣，我地只需要將 `alice` 既字眼換成 `bob`。\r\n\r\n建立好呢兩個項目之後，\r\n\r\n1. 我地要將 `Alice-shaded 1.0` 以及 `Bob-shaded 2.0` build 到 Maven repository。\r\n    - 想快速測試既話可以先 `mvn install` 到本地 Maven repository。\r\n1. 我地要將 `MyLib` 既兩個 dependencies 換成呢兩個 shade 左既版本。\r\n    - 我地會見到 `MyLib` 而家唔再有 `Charlie` 既 dependency。\r\n    - 我地而家會有 `alice.code.Calculator` 以及 `bob.code.Calculator` 兩個唔同 packages 既 classes。\r\n1. 我地要喺 `Main` class 將 import statements 改成 `alice.code.impl.AliceImpl` 以及 `bob.code.impl.BobImpl`。\r\n1. 當我地執行 `MyLib` 既 `Main` class 既時候，就會見到 console print `9`（即係 `(1 + 2) + (1 + 2 + 3)` 既結果）。\r\n\r\n註：\r\n\r\n-   如果 `Charlie`、`Alice` 或者 `Bob` 有其他 dependencies，咁 `Alice-shaded 1.0` 以及 `Bob-shaded 2.0` 既 Maven Shade Plugin 會自動將佢地既 Java bytecode `.class` 檔抄曬入 JAR 檔，但如果需要改變 package 名，就需要再寫多幾段 relocation 配置。\r\n\r\n參考資料：\r\n\r\n-   [Maven 官方文檔 - Maven Shade Plugin - Relocating Classes](https://maven.apache.org/plugins/maven-shade-plugin/examples/class-relocation.html)\r\n\r\n---\r\n\r\n# 3 Maven profiles\r\n\r\nSpring Boot 可以畀我地用唔同 profiles 既 YAML 或者 Java Properties 檔案作為配置檔，但係如果我地將本地開發既 `application-local.yml` 或者 `application-local.properties` 檔放左落 `src/main/resources` 裡面，Maven CLI 打包出黎既 JAR 檔裡面就會包括埋呢啲本地開發用既檔案。\r\n\r\n一個比較有系統既做法係用 Maven profiles：\r\n\r\n-   我地可以喺 Eclipse IDE 裡面揀我地想用既 Maven profile 去 build 個 Maven project。\r\n-   我地可以用 Maven CLI 指定 Maven profile 去 build 或者 run 我地個 Maven project。\r\n-   只要有 set 岩默認既 Maven profile，同埋啲檔案完全分開擺放，咁呢個方法就唔會影響到 production build。\r\n\r\n下面係 Maven profiles 既其中一個用法：\r\n\r\n```xml\r\n<project>\r\n\r\n	<!-- 一般 project metadata -->\r\n\r\n	<!-- properties -->\r\n\r\n	<!-- parent POM -->\r\n\r\n	<!-- dependencyManagement -->\r\n\r\n	<!-- dependencies -->\r\n\r\n	<!-- build -->\r\n\r\n	<profiles>\r\n		<profile>\r\n			<id>local</id>\r\n			<build>\r\n				<resources>\r\n					<resource>\r\n						<directory>src/main/resources/local</directory>\r\n					</resource>\r\n				</resources>\r\n			</build>\r\n			<dependencies>\r\n				<dependency>\r\n					<groupId>com.h2database</groupId>\r\n					<artifactId>h2</artifactId>\r\n				</dependency>\r\n			</dependencies>\r\n		</profile>\r\n\r\n		<profile>\r\n			<id>cloud</id>\r\n			<activation>\r\n				<activeByDefault>true</activeByDefault>\r\n			</activation>\r\n			<build>\r\n				<resources>\r\n					<resource>\r\n						<directory>src/main/resources/cloud</directory>\r\n					</resource>\r\n				</resources>\r\n			</build>\r\n			<dependencies>\r\n				<dependency>\r\n					<groupId>com.microsoft.sqlserver</groupId>\r\n					<artifactId>mssql-jdbc</artifactId>\r\n				</dependency>\r\n			</dependencies>\r\n		</profile>\r\n	</profiles>\r\n\r\n</project>\r\n```\r\n\r\n然後可以喺 `src/main/resources/local` 以及 `src/main/resources/cloud` 既 folders 裡面放帶有唔同配置既 `application.yml`、`logback.xml` 等等。\r\n\r\n| 工具        | 指定 Maven profile 既方式                                                                      |\r\n| ----------- | ---------------------------------------------------------------------------------------------- |\r\n| Eclipse IDE | Right click 個 project > Maven > Select Maven Profiles...                                      |\r\n| Maven CLI   | 用 `-P` 既 CLI option，例如 `mvn clean package -P cloud`、`mvn clean spring-boot:run -P local` |\r\n",AD=`# 1 Railway 簡介\r
\r
今時今日，有越黎越多既免費 PaaS 雲服務畀我地揀，包括 front-end 網頁、back-end apps、PaaS 部署服務，例如 GitHub Pages、Heroku（而家已經冇左免費 plan）、Render 等等，而呢篇文章既主角 Railway 就提供左免登入既免費 DB PaaS 雲服務。\r
\r
呢啲免費既網上服務可以畀我地更容易咁開發 hobby project apps、整 demo／PoC／prototyping。\r
\r
## 1.1 支援既 DB PaaS\r
\r
1. MySQL\r
1. PostgreSQL\r
1. MongoDB\r
1. Redis\r
\r
參考資料：\r
\r
-   [Railway 官方文檔 - Database Services](https://docs.railway.app/guides/databases)\r
\r
---\r
\r
## 1.2 限制\r
\r
-   每個免費既 DB PaaS 既數據上限只有 500 MB。\r
-   Temp project 會喺 24 小時後自動刪除。\r
\r
---\r
\r
# 2 創建、測試 DB PaaS 服務\r
\r
先去 Railway 既官網主頁 [https://railway.app](https://railway.app) 開新 project（唔洗登入）。\r
\r
![](blog/2024-02/railway-free-db-paas/railway-start-new-project.png)\r
\r
然後揀我地想創建既 DB PaaS 服務。\r
\r
![](blog/2024-02/railway-free-db-paas/railway-select-database-service.png)\r
\r
一鍵就可以創建我地想要既 DB PaaS 服務。\r
\r
## 2.1 MySQL\r
\r
先去 Variables 頁面度睇下我地既 host、port、username、password、database。\r
\r
![](blog/2024-02/railway-free-db-paas/railway-mysql-env-vars.png)\r
\r
之後我地可以用 HeidiSQL 程式去 connect，會見到已經有一個叫 \`railway\` 既 database。\r
\r
![](blog/2024-02/railway-free-db-paas/railway-mysql-connect.png)\r
\r
成功 connect 到既話，我地就可以行啲 SQL statements 去初始化 table data。\r
\r
![](blog/2024-02/railway-free-db-paas/railway-mysql-create-table.png)\r
\r
![](blog/2024-02/railway-free-db-paas/railway-mysql-check-table-data.png)\r
\r
---\r
\r
## 2.2 PostgreSQL\r
\r
先去 Variables 頁面度睇下我地既 host、port、username、password、database。\r
\r
![](blog/2024-02/railway-free-db-paas/railway-postgresql-env-vars.png)\r
\r
之後我地可以用 HeidiSQL 程式去 connect（記得揀 database，因為 connect 左之後唔可以轉，只能用 \`public\`）。\r
\r
![](blog/2024-02/railway-free-db-paas/railway-postgresql-connect.png)\r
\r
成功 connect 到既話，我地就可以行啲 SQL statements 去初始化 table data。\r
\r
![](blog/2024-02/railway-free-db-paas/railway-postgresql-create-table.png)\r
\r
![](blog/2024-02/railway-free-db-paas/railway-postgresql-check-table-data.png)\r
\r
---\r
\r
## 2.3 MongoDB\r
\r
![](blog/2024-02/railway-free-db-paas/railway-mongodb-env-vars.png)\r
\r
之後我地可以用 MongoDB Compass 程式去 connect。\r
\r
![](blog/2024-02/railway-free-db-paas/railway-mongodb-connect.png)\r
\r
成功 connect 到既話，我地可以用 app 創建 database、collection 以及 documents。\r
\r
![](blog/2024-02/railway-free-db-paas/railway-mongodb-check-collection-data.png)\r
\r
---\r
\r
## 2.4 Redis\r
\r
![](blog/2024-02/railway-free-db-paas/railway-redis-env-vars.png)\r
\r
之後我地可以用 \`redis-cli\` npm package 去 connect。\r
\r
![](blog/2024-02/railway-free-db-paas/railway-redis-connect.png)\r
\r
成功 connect 到既話，我地可以用 app 創建 key data。\r
\r
![](blog/2024-02/railway-free-db-paas/railway-redis-check-key-data.png)\r
`,PD=`# 1 Bruno 簡介\r
\r
Bruno 同 Postman、Insomnia、HTTPie Desktop 之類既帶有 UI 既 HTTP API 測試軟件一樣，都可以幫我地測試 HTTP APIs，亦提供 pre-request、test 既功能。\r
\r
唔同既係，佢有以下既特點：\r
\r
-   只有離線模式，唔打算提供 cloud sync 功能，唔似 Postman 咁係咁迫我地註冊帳號。\r
-   完全適合 version control。\r
    -   一改完就已經保存左落本地檔案裡面，唔洗好似 Postman 咁要下下都 export collection。\r
    -   每一個 request 都對應一個 \`.bru\` 檔案，格式係佢自己既 Bru markup language，係一隻好易理解既 markup language。\r
    -   唔似得 Postman 既 JSON 格式咁改完好難用 Git diff。\r
-   冇 Postman 冇意義既 workspace 概念。\r
-   有 portable 版本，唔似得 Postman 咁一定要安裝程式。\r
\r
---\r
\r
# 2 安裝\r
\r
我地可以下載 portable 版本。\r
\r
下載網址：\r
\r
-   [Bruno 官網 - Downloads](https://www.usebruno.com/downloads)\r
-   [usebruno/bruno GitHub - Releases](https://github.com/usebruno/bruno/releases)\r
\r
---\r
\r
# 3 使用\r
\r
## 3.1 建立 collection\r
\r
左上角 Collections > Create Collection。\r
\r
我地需要揀選 local file system 既一個 folder，Bruno 會將我地之後建立既 HTTP requests 都保存喺呢個 folder 度。\r
\r
---\r
\r
## 3.2 建立 environment\r
\r
建立完 collection 之後，我地就可以建立 environment。\r
\r
Bruno 既 environments 係跟住個 collection 既。\r
\r
右上角 No Environment > Configure > Create，之後可以加：\r
\r
| Key    | Value                   |\r
| ------ | ----------------------- |\r
| \`HOST\` | \`http://localhost:8080\` |\r
\r
---\r
\r
## 3.3 建立 HTTP requests\r
\r
因為我地已經有 \`HOST\` 既 environment variable，咁我地既 request URL 就可以咁寫：\r
\r
\`\`\`plaintext\r
{{HOST}}/api/greeting\r
\`\`\`\r
\r
### 3.3.1 Pre-request script\r
\r
我地可以用 pre-request script 黎生成 request 數據。\r
\r
例如 request body 裡面既 JSON fields 想用隨機數據既話，可以咁寫：\r
\r
\`\`\`json\r
{\r
	"a": "{{a}}",\r
	"b": "{{b}}"\r
}\r
\`\`\`\r
\r
然後 Script > Pre Request 可以寫 JavaScript：\r
\r
\`\`\`js\r
bru.setVar("a", require("uuid").v4());\r
bru.setVar("b", require("nanoid").nanoid());\r
\`\`\`\r
\r
![](/blog/2024-03/bruno-http-api-test/pre-request-script.png)\r
\r
---\r
\r
### 3.3.2 Post-response script\r
\r
我地可以用 post-response script 黎將 response 既數據儲存喺 environment 既 variables 再用喺其他 requests，例如喺需要用 OAuth 拎左 access token 再用 Bearer token 做 authorization 去 call 受保護既 HTTP APIs 既情況下就可以用呢個方法。\r
\r
Script > Post Response 可以寫 JavaScript：\r
\r
\`\`\`js\r
bru.setEnvVar("AUTH_TOKEN", res.body.access_token);\r
\`\`\`\r
\r
---\r
\r
### 3.3.3 Assert\r
\r
如果想簡單咁測試下 HTTP response body 既 JSON fields，我地可以用 assert。\r
\r
Bruno 提供左 \`res\` object，裡面有幾個有用既 fields：\r
\r
-   \`res.status\`\r
-   \`res.headers\`\r
-   \`res.body\`\r
\r
Assert 支援唔同既 operators，包括 \`equals\`、\`length\`、\`matches\`、\`isString\` 等等。\r
\r
![](/blog/2024-03/bruno-http-api-test/assert.png)\r
\r
Assert 既 values 亦可以填 variables。\r
\r
![](/blog/2024-03/bruno-http-api-test/assert-with-variables.png)\r
\r
---\r
\r
### 3.3.4 Tests\r
\r
如果 assert 功能唔夠用，咁其實 Bruno 同 Postman 一樣，都可以用內置既 Chai.js 黎寫 test cases。\r
\r
測試 HTTP response status code：\r
\r
\`\`\`js\r
test("should be 200", function () {\r
	expect(res.status).to.equal(200);\r
});\r
\`\`\`\r
\r
測試 HTTP response body 既 fields：\r
\r
\`\`\`js\r
test("fields should be strings", function () {\r
	expect(res.body.a).to.eq(bru.getVar("a"));\r
	expect(res.body.b).to.eq(bru.getVar("b"));\r
});\r
\`\`\`\r
\r
我地可以用返 pre-request script 度 declare 既 variables 黎測試 response body。\r
\r
---\r
\r
## 3.4 保存／匯出 collection\r
\r
因為當我地建立新 requests 既時候，Bruno 已經會幫我地保存落檔案裡面，所以我地唔需要任何匯出操作。\r
\r
Folder structure 會係咁：\r
\r
![](/blog/2024-03/bruno-http-api-test/folder-structure.png)\r
\r
\`.bru\` 檔案格式大概係咁：\r
\r
\`\`\`plaintext\r
meta {\r
  name: Get Data\r
  type: http\r
  seq: 2\r
}\r
\r
get {\r
  url: {{HOST}}/test\r
  body: none\r
  auth: none\r
}\r
\r
assert {\r
  res.status: eq 200\r
  res.body.a: eq {{a}}\r
  res.body.b: eq {{b}}\r
}\r
\r
tests {\r
  test("fields should match variables", function () {\r
  	expect(res.body.a).to.eq(bru.getVar("a"));\r
  	expect(res.body.b).to.eq(bru.getVar("b"));\r
  });\r
}\r
\`\`\`\r
\r
---\r
\r
## 3.5 打開／匯入 collection\r
\r
我地只需要去左上角 Collections > Open Collection。\r
\r
---\r
\r
## 3.6 Collection 整體功能\r
\r
### 3.6.1 Collection tests\r
\r
有啲 common 既 tests 可以喺個 collection 上面寫，咁就唔洗每個 request 都重複寫一次。\r
\r
![](/blog/2024-03/bruno-http-api-test/folder-structure.png)\r
\r
---\r
\r
### 3.6.2 執行 collection 既所有 requests\r
\r
Right click 個 collection > Settings > 右上角 Runner。\r
\r
![](/blog/2024-03/bruno-http-api-test/runner.png)\r
\r
---\r
\r
### 3.6.3 查看 variables\r
\r
我地有時候可能需要睇下而家既 variable values 係乜野。\r
\r
Right click 個 collection > Settings > 右上角 Variables。\r
\r
![](/blog/2024-03/bruno-http-api-test/check-variables.png)\r
\r
---\r
\r
# 4 參考資料\r
\r
-   [Bruno 官網](https://www.usebruno.com)\r
-   [Bruno 官網 - Manifesto](https://www.usebruno.com/manifesto)\r
-   [Bruno 官網 - Vars](https://docs.usebruno.com/scripting/vars)\r
-   [Bruno 官網 - Inbuilt Libraries](https://docs.usebruno.com/scripting/inbuilt-libraries)\r
-   [Bruno 官網 - Testing](https://docs.usebruno.com/testing/introduction)\r
-   [Bruno 官網 - Assertions](https://docs.usebruno.com/testing/assertions)\r
-   [Bruno 官網 - JavaScript API Reference](https://docs.usebruno.com/testing/javascript-reference)\r
`,RD=`# 1 Commands\r
\r
## 1.1 列出目錄所有檔案\r
\r
\`\`\`bash\r
ls -la\r
ls -la /tmp\r
\`\`\`\r
\r
解釋：\r
\r
| 輸出部分         | 解釋                                                                                                                         |\r
| ---------------- | ---------------------------------------------------------------------------------------------------------------------------- |\r
| 第 \`1\` 個位      | 如果係目錄，會顯示 \`d\`，否則 \`-\`。                                                                                           |\r
| 之後 \`9\` 個位    | 權限。如果有曬既話係 \`rwxrwxrwx\`，如果任何一個冇權限會顯示 \`-\`。分別係 user、group、owner 各自既 read、write、execute 權限。 |\r
| 之後既數字       | Hard links 既數量。                                                                                                          |\r
| 之後既部分       | Owner user name。                                                                                                            |\r
| 之後既部分       | Group name。                                                                                                                 |\r
| 之後既數字       | 檔案大小（以 bytes 計）。                                                                                                    |\r
| 之後既日期、時間 | 最後修改日期、時間。                                                                                                         |\r
| 之後既部分       | 檔案名稱。\`.\` 係目前既目錄；\`..\` 係 parent 目錄。                                                                            |\r
\r
---\r
\r
## 1.2 查詢當前位置\r
\r
\`\`\`bash\r
pwd\r
\`\`\`\r
\r
---\r
\r
## 1.3 查詢當前使用者\r
\r
查詢當前 user：\r
\r
\`\`\`bash\r
whoami\r
\`\`\`\r
\r
查詢當前詳細身份（user ID、user name、group ID、group name）：\r
\r
\`\`\`bash\r
id\r
\`\`\`\r
\r
---\r
\r
## 1.4 列出所有 environment variables\r
\r
\`\`\`bash\r
env\r
\`\`\`\r
\r
---\r
\r
## 1.5 臨時設置 environment variable\r
\r
\`\`\`bash\r
export env1=foo\r
\`\`\`\r
\r
或者讀取檔案：\r
\r
\`\`\`bash\r
source env.txt\r
\`\`\`\r
\r
---\r
\r
## 1.6 列出所有 mount points\r
\r
\`\`\`bash\r
mount\r
\`\`\`\r
\r
---\r
\r
## 1.7 列出現時 CPU、memory 資源使用情況\r
\r
\`\`\`bash\r
top\r
\`\`\`\r
\r
註：\r
\r
-   VSZ 既意思係 virtual memory size。\r
\r
---\r
\r
## 1.8 進入某個目錄\r
\r
進入 root 目錄：\r
\r
\`\`\`bash\r
cd /\r
\`\`\`\r
\r
進入其他目錄：\r
\r
\`\`\`bash\r
cd /path/to/folder\r
\`\`\`\r
\r
註：\r
\r
-   如果目錄係以 \`/\` 開頭，例如 \`/path/to/folder\`，就係提供緊 absolute path；否則就係提供緊當前位置既 relative path。\r
\r
---\r
\r
## 1.9 創建新檔案\r
\r
\`\`\`bash\r
touch test.txt\r
\`\`\`\r
\r
---\r
\r
## 1.10 將少量文字寫入檔案\r
\r
\`\`\`bash\r
echo "foo" test.txt\r
\`\`\`\r
\r
---\r
\r
## 1.11 顯示檔案內容\r
\r
顯示所有內容：\r
\r
\`\`\`bash\r
cat test.txt\r
\`\`\`\r
\r
以分頁顯示內容：\r
\r
\`\`\`bash\r
more test.txt\r
\`\`\`\r
\r
### 1.11.1 用搜尋關鍵字過濾檔案內容\r
\r
\`\`\`bash\r
cat test.txt | grep "foo"\r
\`\`\`\r
\r
\`\`\`bash\r
more test.txt | grep "foo"\r
\`\`\`\r
\r
---\r
\r
## 1.12 修改檔案內容\r
\r
用 vi Editor 打開檔案、顯示內容：\r
\r
\`\`\`bash\r
vi test.txt\r
\`\`\`\r
\r
保存，然後退出 vi Editor：\r
\r
\`\`\`bash\r
:wq!\r
\`\`\`\r
\r
唔保存，然後退出 vi Editor：\r
\r
\`\`\`bash\r
:q!\r
\`\`\`\r
\r
---\r
\r
## 1.13 比較兩個檔案內容\r
\r
\`\`\`bash\r
diff foo.txt bar.txt\r
\`\`\`\r
\r
---\r
\r
## 1.14 創建目錄\r
\r
創建目錄以及所有未創建既 parent directories：\r
\r
\`\`\`bash\r
mkdir -p /path/to/folder\r
\`\`\`\r
\r
---\r
\r
## 1.15 刪除檔案、目錄\r
\r
\`\`\`bash\r
rm /path/to/file\r
\`\`\`\r
\r
Recursively 刪除目錄以及內裡既所有檔案（⚠️ 用既時候一定要好小心）：\r
\r
\`\`\`bash\r
rm -rf /path/to/folder\r
\`\`\`\r
\r
---\r
\r
## 1.16 查詢所有 users、groups\r
\r
查詢所有 users：\r
\r
\`\`\`bash\r
cat /etc/passwd\r
\`\`\`\r
\r
查詢所有 groups：\r
\r
\`\`\`bash\r
cat /etc/group\r
\`\`\`\r
\r
---\r
\r
## 1.17 修改檔案、目錄擁有者\r
\r
只修改檔案既 owner：\r
\r
\`\`\`bash\r
chown myuser test.txt\r
\`\`\`\r
\r
只修改檔案既 group：\r
\r
\`\`\`bash\r
chown :mygroup test.txt\r
\`\`\`\r
\r
修改檔案既 owner、group：\r
\r
\`\`\`bash\r
chown myuser:mygroup test.txt\r
\`\`\`\r
\r
修改目錄以及裡面既所有檔案既 owner、group：\r
\r
\`\`\`bash\r
chown -R myuser:mygroup /path/to/folder\r
\`\`\`\r
\r
---\r
\r
## 1.18 修改檔案、目錄權限\r
\r
\`\`\`bash\r
chmod 0777 test.txt\r
\`\`\`\r
\r
註：\r
\r
-   上面既數字 \`0777\` 分別係 special、owner、group、public 既權限，而因為 read、write、execute 可以組成 \`8\` 種情況，所以係一個 \`8\` 進制既 \`4\` 位數。\r
    -   \`777\` 同 \`0777\` 既結果係一樣。\r
    -   我地可以用 [Unix Permissions Calculator](https://rubendougall.co.uk/projects/permissions-calculator/) 去計個數字。\r
\r
| 數字 | 權限                             |\r
| ---- | -------------------------------- |\r
| \`0\`  | 冇任何權限。                     |\r
| \`1\`  | 只有 execute 權限。              |\r
| \`2\`  | 只有 write 權限。                |\r
| \`3\`  | 只有 write、execute 權限。       |\r
| \`4\`  | 只有 read 權限。                 |\r
| \`5\`  | 只有 read、execute 權限。        |\r
| \`6\`  | 只有 read、write 權限。          |\r
| \`7\`  | 有曬 read、write、execute 權限。 |\r
\r
記法：\r
\r
-   只需要記得 read、write、execute 呢 \`3\` 種權限既次序。\r
    -   因為有 \`3\` 個 boolean，所以就要用 \`2\` 既 \`3\` 次方，即係有 \`8\` 個唔同既組合情況。\r
    -   Read 係右至左第三個權限，所以係 \`2\` 既 \`2\` 次方，即係 \`4\`。\r
    -   Write 係右至左第二個權限，所以係 \`2\` 既 \`1\` 次方，即係 \`2\`。\r
    -   Execute 係右至左第一個權限，所以係 \`2\` 既 \`0\` 次方，即係 \`1\`。\r
    -   之後如果要計數字出黎，只需要將我地需要既權限所對應既數字加起黎就得，反之亦然。\r
\r
---\r
\r
## 1.19 測試連線\r
\r
可以測試 host、port：\r
\r
\`\`\`bash\r
nc -vz google.com 443\r
\`\`\`\r
\r
---\r
\r
## 1.20 查詢指令安裝位置\r
\r
\`\`\`bash\r
which java\r
\`\`\`\r
\r
\`\`\`bash\r
whereis java\r
\`\`\`\r
\r
---\r
\r
## 1.21 查詢 Linux 版本\r
\r
查詢 Linux distribution 以及版本號碼：\r
\r
\`\`\`bash\r
cat /etc/os-release\r
\`\`\`\r
\r
---\r
\r
# 2 參考資料\r
\r
-   [Red Hat - Linux file permissions explained](https://www.redhat.com/sysadmin/linux-file-permissions-explained)\r
-   [Red Hat - How to manage Linux permissions for users, groups, and others](https://www.redhat.com/sysadmin/manage-permissions)\r
-   [Red Hat - Linux permissions: SUID, SGID, and sticky bit](https://www.redhat.com/sysadmin/suid-sgid-sticky-bit)\r
`,DD=`# 1 可靠訊息傳遞問題\r
\r
喺 distributed systems 既世界裡面，好多時候都會用到 messaging services（message brokers）黎達到 asynchronous 既 microservice communication。\r
\r
不過，只要有任何 architecture 上既改變，都會衍生一啲新既困難，就好似每加多一樣 infrastructure 或者 middleware 入我地既 architecture，我地既 architecture 裡面就會有多一樣野可以出錯或者需要我地持續 maintain。而當我地用左 messaging services（brokers），就會出現一啲難題，例如如果 producer microservice 喺 update 完佢既 database 之後因為某啲原因而唔能夠成功發送訊息（或者話係個 broker 接收失敗），又或者 consumer microservice 收到訊息之後既處理過程出錯，咁點算呢？我地既 data 會唔會爛左呢？我地希望透過 messaging design patterns 去解決傳遞訊息既時候可能會遇到既突發情況，從而達至可靠既訊息傳遞。\r
\r
---\r
\r
# 2 訊息傳遞既唔同情況\r
\r
訊息傳遞可以有幾多種唔同既結果：\r
\r
-   成功——訊息完全正常，帶有正常既格式、正確既數據，而且 producer、messaging broker、consumer 全部都運作正常。\r
-   失敗——訊息完全正常，帶有正常既格式、正確既數據，但係 producer、messaging broker、consumer 全部或者部分出錯。\r
-   失敗——因為訊息本身有問題（稱之為 poison message），例如係帶有 consumer microservice 冇辦法理解既格式或者錯誤既數據。\r
\r
---\r
\r
# 3 訊息傳遞保證\r
\r
喺講 design patterns 之前，我地要先思考下訊息傳遞可以有幾多種保證（message delivery guarantees）。\r
\r
| 訊息傳遞保證  | 描述                                                 | 解釋                                                                                                                                                                                                           |\r
| ------------- | ---------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| Exactly once  | 每個訊息一定會被傳遞一次。                           | 最理想當然係咁，但當我地考慮到任何野喺任何時候都有低機率會出錯，咁就知道其實實際上係好難（甚至冇可能）實現到呢個保證。                                                                                         |\r
| At least once | 每個訊息至少會被傳遞一次，亦有可能會被傳遞多過一次。 | 呢個保證係可以接受既次選，但係接收左訊息之後，我地既處理過程一定要係 idempotent，即係同一段 code 執行多過一次既結果都係一樣（主要係 database 裡面既 data）。當遇到有問題既訊息，呢個保證會令到個 MQ 長期塞住。 |\r
| At most once  | 每個訊息最多會被傳遞一次，亦有可能冇被傳遞。         | 呢個純粹係 best effort 盡做，所以係一個唔可靠既保證。                                                                                                                                                          |\r
\r
---\r
\r
# 4 Outbox pattern\r
\r
Outbox pattern 可以做到 at least once 既訊息傳遞保證，確保最終一定可以發送到訊息。\r
\r
通常 producer microservices 都唔會只係發送訊息，佢地通常都會先做一輪 database 讀寫，最後先會發送訊息去通知 downstream microservices。因為呢兩個步驟唔係 atomic，如果 database 讀寫成功，但係發送訊息失敗，咁就好可能會令業務出現問題。\r
\r
其中一個可能性係 messaging service 出現問題（但 network 冇問題），令到呢一刻唔能夠發送訊息，就算有 retry 都未必可以喺短期內成功發送到訊息去 messaging service 度。\r
\r
因為係 at least once 既訊息傳遞，我地唔可以因為重複處理相同既訊息而令到數據出錯，例如業務上重複扣除客戶戶口既錢。咁所以：\r
\r
-   Consumer microservices 要識得 deduplicate 訊息；\r
-   或者 consumer microservices 喺接收到訊息之後既處理過程一定要係 idempotent。\r
\r
註：\r
\r
-   就算 messaging service 識得 deduplicate 都冇用，因為 consumer microservices 可能會喺向 messaging service 發送確認既時候出錯，咁就會令到 consumer microservices 接收多過一次相同既訊息。\r
\r
## 4.1 實現方式\r
\r
我地需要用到一個 RDBMS database table 去保存需要發送既訊息，並且利用 RDBMS databases 既 ACID 特性，令到 database 讀寫、發送訊息呢兩個步驟變到 atomic。\r
\r
以下係具體既流程：\r
\r
1. Producer microservice 收到 request。\r
1. Producer microservice 開始一個 database transaction。\r
1. Producer microservice 讀寫 database 去更新一啲業務數據。\r
1. Producer microservice 將需要發送既訊息保存喺 outbox table。\r
1. Producer microservice 完成個 database transaction。\r
\r
另外亦都需要有一個定期重複執行既 schedule，producer microservice 要定期發送所有未發送既訊息：\r
\r
1. Producer microservice 查詢 outbox table 裡面未發送既 records。\r
1. Producer microservice 發送一個或多個訊息到 messaging service。\r
1. Producer microservice 等 messaging service 確認所有訊息成功發送（publisher acknowledgements／confirms）。\r
1. Producer microservice 開始一個 database transaction。\r
1. Producer microservice soft delete 或者 hard delete outbox table record(s)。\r
1. Producer microservice 完成個 database transaction。\r
\r
註：\r
\r
-   視乎情況，發送訊息既時候有可能需要注意 message ordering。\r
-   如果有任何出錯，一定要 throw exception。\r
    -   如果發送訊息既時候出現 exception，都唔一定需要影響到處理其他 surrogate keys 既 records。\r
-   如果利用 batch publishing 既方式發送訊息，而唔係逐個訊息咁發送，咁個 messaging service 一係要保證到 atomicity（全部成功或者全部失敗）。\r
    -   如果我地對 message ordering 有要求，而個 messaging service 唔保證 atomicity，咁 consumer microservice 處理既訊息次序就有可能會亂曬。\r
\r
---\r
\r
## 4.2 所有有可能出錯既情況\r
\r
我地需要考慮到任何步驟都有出錯既機會，我地注重既係對數據一致性既影響。\r
\r
註：\r
\r
-   「出錯」可以係 runtime exception，亦可以係成個 microservice instance 或者 messaging service 重新啟動或者死機。\r
-   一旦出錯，就會跳過所有後續既步驟。\r
\r
| 出錯情況                                                             | 對數據一致性既影響                                                                                                                                                                                                                 |\r
| -------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| Producer microservice 收到 request 之前出錯。                        | ✅ 如果只有一個 instance，咁好可能會影響業務運作，但就對數據一致性冇任何影響。                                                                                                                                                     |\r
| Producer microservice 收到 request 之後出錯。                        | ✅ 個 request 固然會失敗，但係因為未寫入過任何數據，所以對數據一致性冇任何影響。                                                                                                                                                   |\r
| Producer microservice 開始一個 database transaction 之後出錯。       | ✅ 個 request 固然會失敗，而 database 會自動 rollback transaction，最終係冇任何數據上既改動，亦對數據一致性冇影響。                                                                                                                |\r
| Producer microservice 讀寫 database 去更新一啲業務數據之後出錯。     | ✅ 個 request 固然會失敗，但係 database 會自動 rollback transaction，最終係冇任何數據上既改動，亦對數據一致性冇影響。                                                                                                              |\r
| Producer microservice 將需要發送既訊息保存喺 outbox table 之後出錯。 | ✅ 個 request 固然會失敗，但係 database 會自動 rollback transaction，最終係冇任何數據上既改動，亦對數據一致性冇影響。                                                                                                              |\r
| Producer microservice 完成個 database transaction 之後出錯。         | ✅ 因為已經完成 database transaction，所有數據已經保存妥當，所以對數據一致性冇影響。但因為個 request 失敗左，upstream microservice 可能會 retry 個 request，只要呢個 producer microservice 既處理過程係 idempotent，咁就唔成問題。 |\r
\r
至於定期發送訊息既 schedule：\r
\r
| 出錯情況                                                                                                                                 | 對數據一致性既影響                                                                                                                                                                                                                                     |\r
| ---------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r
| Producer microservice 查詢 outbox table 裡面未發送既 records 之前出錯。                                                                  | ✅ 因為乜都未做過，所以對數據一致性冇影響。                                                                                                                                                                                                            |\r
| Producer microservice 查詢 outbox table 裡面未發送既 records 之後出錯。                                                                  | ✅ 因為乜都未做過，所以對數據一致性冇影響。                                                                                                                                                                                                            |\r
| Producer microservice 發送單一訊息既時候出錯，導致訊息發送唔到。                                                                         | ✅ 因為冇發送到訊息，所以對數據一致性冇影響。                                                                                                                                                                                                          |\r
| Producer microservice 發送單一訊息到 messaging service 既時候出錯，導致訊息發送左，但係收唔到 messaging service 既確認。                 | ✅ 因為有可能已經成功發送左訊息，但係冇更新到 outbox table，咁之後一定會再次發送相同既訊息，如果個 messaging service 支援 deduplication 又或者個 consumer microservice 識得 deduplicate 或者係 idempotent 既處理過程就冇問題，所以對數據一致性冇影響。 |\r
| Producer microservice 發送單一訊息到 messaging service 之後出錯，導致訊息發送左，而又收到 messaging service 既確認，但係之後出錯。       | ✅ 因為已經發送左訊息，但係冇更新到 outbox table，咁之後一定會再次發送相同既訊息，如果個 messaging service 支援 deduplication 又或者個 consumer microservice 識得 deduplicate 或者係 idempotent 既處理過程就冇問題，所以對數據一致性冇影響。           |\r
| Producer microservice batch 發送多個訊息到 messaging service 之間出錯。                                                                  | ✅ 用得 batch publishing，我地就期望個 messaging service 有 atomicity guarantee，如果失敗既話就會係個 batch 裡面全部訊息發送失敗，個 messaging service 唔會保存呢個 batch 裡面既任何一個訊息。因為等同於冇發送到訊息，所以對數據一致性冇影響。         |\r
| Producer microservice batch 發送多個訊息到 messaging service 既時候出錯，導致訊息發送左，但係收唔到 messaging service 既確認。           | ✅ 因為有可能已經成功發送左訊息，但係冇更新到 outbox table，咁之後一定會再次發送相同既訊息，如果個 messaging service 支援 deduplication 又或者個 consumer microservice 識得 deduplicate 或者係 idempotent 既處理過程就冇問題，所以對數據一致性冇影響。 |\r
| Producer microservice batch 發送多個訊息到 messaging service 之後出錯，導致訊息發送左，而又收到 messaging service 既確認，但係之後出錯。 | ✅ 因為已經發送左訊息，但係冇更新到 outbox table，咁之後一定會再次發送相同既訊息，如果個 messaging service 支援 deduplication 又或者個 consumer microservice 識得 deduplicate 或者係 idempotent 既處理過程就冇問題，所以對數據一致性冇影響。           |\r
| Producer microservice 開始一個 database transaction 之後出錯。                                                                           | ✅ 因為已經發送左訊息，但係冇更新到 outbox table，咁之後一定會再次發送相同既訊息，如果個 messaging service 支援 deduplication 又或者個 consumer microservice 識得 deduplicate 或者係 idempotent 既處理過程就冇問題，所以對數據一致性冇影響。           |\r
| Producer microservice soft delete 或者 hard delete outbox table record(s) 之後出錯。                                                     | ✅ 因為已經發送左訊息，但係冇更新到 outbox table，咁之後一定會再次發送相同既訊息，如果個 messaging service 支援 deduplication 又或者個 consumer microservice 識得 deduplicate 或者係 idempotent 既處理過程就冇問題，所以對數據一致性冇影響。           |\r
| Producer microservice 完成個 database transaction 之後出錯。                                                                             | ✅ 因為所有訊息已經成功發送，而且已經完成 database transaction，所有數據已經保存妥當，所以對數據一致性冇影響。                                                                                                                                         |\r
\r
---\r
\r
# 5 Inbox pattern\r
\r
Inbox pattern 雖然有啲似 outbox pattern，但佢就冇 outbox pattern 既必要性。\r
\r
Outbox pattern 之所以重要，係因為：\r
\r
-   唔用 outbox pattern 而發送訊息失敗既話，咁可能就咩都冇，需要發送既訊息從此就會漏左；\r
-   用左 outbox pattern 就可以保證我地想發送既訊息最終都一定會發送到。\r
\r
如果冇 inbox pattern，都唔係唔得既，只係 consumer microservices 就要喺成功完成所有業務邏輯之後先至可以向 messaging service 確認訊息接收成功（acknowledgement），而確認既過程都有可能會出錯，咁即係無論 producer microservices 發送訊息係 at least once，或者 consumer microservices 接收訊息係 at least once，我地既 consumer microservices 都一定要有 idempotent 既處理過程。\r
\r
## 5.1 實現方式\r
\r
我地需要用到一個 RDBMS database table 去 mark 低未完成以及已經完成處理既訊息，並且利用 RDBMS databases 既 ACID 特性，令到完成處理訊息、database 讀寫呢兩個步驟變到 atomic。\r
\r
以下係具體既流程：\r
\r
1. Consumer microservice 訂閱 messaging service。\r
1. Consumer microservice 接收到新訊息。\r
1. Consumer microservice 開始一個 database transaction。\r
1. Consumer microservice 將需要處理既訊息保存喺 inbox table。\r
1. Consumer microservice 完成個 database transaction。\r
1. Consumer microservice 向 messaging service 確認訊息接收（consumer acknowledgements）。\r
\r
另外亦都需要有一個定期重複執行既 schedule，consumer microservice 要定期處理所有接收左既訊息：\r
\r
1. Consumer microservice 查詢 inbox table 未處理既 records。\r
1. Consumer microservice 開始一個 database transaction。\r
1. Consumer microservice soft delete 或者 hard delete inbox table record(s)。\r
1. Consumer microservice 讀寫 database 去更新一啲業務數據。\r
1. Consumer microservice 完成個 database transaction。\r
\r
註：\r
\r
-   如果想利用個 inbox table 幫我地 deduplicate 重複接收既相同訊息，咁我地處理既時候就唔可以 hard delete inbox table records，因為成個 record 刪左就會冇辦法知道邊啲係已經接收過。\r
\r
---\r
\r
## 5.2 所有有可能出錯既情況\r
\r
我地需要考慮到任何步驟都有出錯既機會，我地注重既係對數據一致性既影響。\r
\r
註：\r
\r
-   「出錯」可以係 runtime exception，亦可以係成個 microservice instance 或者 messaging service 重新啟動或者死機。\r
-   一旦出錯，就會跳過所有後續既步驟。\r
\r
| 出錯情況                                                                                          | 對數據一致性既影響                                                                                                                                                                                                          |\r
| ------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| Consumer microservice 訂閱 messaging service 之前出錯。                                           | ✅ 如果只有一個 instance，咁好可能會影響業務運作，但就對數據一致性冇任何影響。                                                                                                                                              |\r
| Consumer microservice 訂閱 messaging service 之後出錯。                                           | ✅ 如果只有一個 instance，咁好可能會影響業務運作，但就對數據一致性冇任何影響。                                                                                                                                              |\r
| Consumer microservice 接收到新訊息之後出錯。                                                      | ✅ 因為已經接收左訊息，但係冇更新到 inbox table，咁之後一定會再次接收相同既訊息，如果個 consumer microservice 係 idempotent 既處理過程就冇問題，所以對數據一致性冇影響。                                                    |\r
| Consumer microservice 開始一個 database transaction 之後出錯。                                    | ✅ 因為 database 會自動 rollback transaction，咁之後一定會再次接收相同既訊息，如果個 consumer microservice 係 idempotent 既處理過程就冇問題，所以對數據一致性冇影響。                                                       |\r
| Consumer microservice 將需要處理既訊息保存喺 inbox table 之後出錯。                               | ✅ 因為已經接收左訊息，而 database 會自動 rollback transaction，咁之後一定會再次接收相同既訊息，如果個 consumer microservice 係 idempotent 既處理過程就冇問題，所以對數據一致性冇影響。                                     |\r
| Consumer microservice 完成個 database transaction 之後出錯，冇向 messaging service 確認訊息接收。 | ✅ 因為已經完成 database transaction，但係冇向 messaging service 確認到訊息接收，咁之後一定會再次接收相同既訊息，如果個 consumer microservice 係 idempotent 既處理過程就冇問題，所以對數據一致性冇影響。                    |\r
| Consumer microservice 向 messaging service 確認訊息接收既時候出錯。                               | ✅ 因為已經完成 database transaction，但係有可能冇確認到訊息接收，咁之後可能會再次接收相同既訊息，如果個 inbox table 識得 deduplicate 或者 consumer microservice 係 idempotent 既處理過程就冇問題，所以對數據一致性冇影響。 |\r
| Consumer microservice 向 messaging service 確認訊息接收之後出錯。                                 | ✅ 因為已經完成 database transaction，所有數據已經保存妥當，而且已經確認接收，所以之後唔會接收重複既訊息，亦對數據一致性冇影響。                                                                                            |\r
\r
至於定期處理訊息既 schedule：\r
\r
| 出錯情況                                                                            | 對數據一致性既影響                                                                        |\r
| ----------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------- |\r
| Consumer microservice 查詢 inbox table 未處理既 records 之前出錯。                  | ✅ 因為乜都未做過，所以對數據一致性冇影響。                                               |\r
| Consumer microservice 查詢 inbox table 未處理既 records 之後出錯。                  | ✅ 因為乜都未做過，所以對數據一致性冇影響。                                               |\r
| Consumer microservice 開始一個 database transaction 之後出錯。                      | ✅ Database 會自動 rollback transaction，最終係冇任何數據上既改動，亦對數據一致性冇影響。 |\r
| Consumer microservice soft delete 或者 hard delete inbox table record(s) 之後出錯。 | ✅ Database 會自動 rollback transaction，最終係冇任何數據上既改動，亦對數據一致性冇影響。 |\r
| Consumer microservice 讀寫 database 去更新一啲業務數據之後出錯。                    | ✅ Database 會自動 rollback transaction，最終係冇任何數據上既改動，亦對數據一致性冇影響。 |\r
| Consumer microservice 完成個 database transaction 之後出錯。                        | ✅ 因為已經完成 database transaction，所有數據已經保存妥當，所以對數據一致性冇影響。      |\r
\r
---\r
\r
# 6 考慮事項\r
\r
-   我地既 microservices 既處理過程需要做到 idempotent。如果做唔到，數據就有機會因為各種 retry 機制而終有一日出錯。\r
-   考慮到 consumer microservice 可能會重複收到相同既訊息，如果佢既處理過程冇辦法做到 idempotent，咁就要考慮從個 inbox table 入手。\r
    -   Upstream microservice 發送畀 producer microservice 既 HTTP request 既 header 可以加入一個隨機既 UUID。而次選既方法係 producer microservice 根據 HTTP request body 某啲數據去計算一個 hash，但係會有機會誤判。\r
    -   Producer microservice 可以用呢個 value 作為訊息既 ID。\r
    -   Consumer microservice 既 inbox table 要有一個 \`message_id\` 既 column，然後整一個 unique index 落呢個 column 度。\r
    -   Consumer microservice 收到訊息之後，會將佢放落 inbox table，如果已經存在相同訊息 ID 既 record，就會出現 unique index violation 既 exception，但係 consumer microservice 需要 ignore 呢個 exception，照樣向 messaging service 確認已經成功接收訊息，否則下次又會重新收到相同既訊息。\r
    -   Consumer microservice 成功處理完訊息之後，只可以 soft delete inbox table 既 records，因為 hard delete 既話就會失去 unique index 幫我地 deduplicate 訊息既作用。\r
-   如果用左 outbox pattern 以及 inbox pattern，仲有冇需要用 messaging service 收發訊息黎取代 HTTP requests？\r
    -   我地的確可以用返 HTTP requests，因為有 database 既 inbox table 裝住未處理既數據，咁就一樣可以做到 asynchronous processing。\r
    -   不過，HTTP requests 只能做到單一 consumer instance；相反，messaging service 可以畀我地做到 consumer groups，同一個 message 被多個 consumers 處理。\r
    -   另外，如果我地想用 horizontal autoscaling 去維持多個 consumer microservice instances 去達到 high availability，而如果我地一定要維持返 message ordering，咁用 HTTP requests 既話就冇辦法指定邊一個 consumer microservice instance，咁就冇辦法確保到 requests 一定係順序完成處理；相反，如果我地用 RabbitMQ 既話可以用 single active consumer，或者 Kafka 既話用 partition，確保只會有一個 consumer microservice instance 接收到訊息，咁訊息接收次序就會同訊息發送次序一樣。\r
\r
---\r
\r
# 7 參考資料\r
\r
-   [Microservices 101: Transactional Outbox and Inbox](https://softwaremill.com/microservices-101/)\r
    -   > Very often, the recipient service can cope without the inbox. If the task doesn’t take long to finish or completes a predictable amount of time, it can just ack the message after processing. Otherwise, it might be worthwhile to spend some effort to implement the pattern.\r
-   [Outbox, Inbox patterns and delivery guarantees explained](https://event-driven.io/en/outbox_inbox_patterns_and_delivery_guarantees_explained/)\r
-   [AWS Prescriptive Guidance - Transactional outbox pattern](https://docs.aws.amazon.com/prescriptive-guidance/latest/cloud-design-patterns/transactional-outbox.html)\r
-   [Handling Failure Successfully in RabbitMQ](https://medium.com/codait/handling-failure-successfully-in-rabbitmq-22ffa982b60f)\r
-   [Microservice architecture [Outbox pattern]](https://www.linkedin.com/pulse/microservice-architecture-outbox-pattern-hugo-tota/)\r
-   [Every Programmer Should Know #1: Idempotency](https://www.berkansasmaz.com/every-programmer-should-know-idempotency/)\r
    > Simply, it is possible to make a POST request idempotent by including a unique identifier in the request body or header, which can be used to identify and prevent duplicate requests.\r
    >\r
    > Many approaches can be used to determine whether a request is a copy of an earlier request. For example, it may be possible to derive a synthetic token based on the parameters in the request. You can derive a hash of existing parameters and assume that any request with the same parameters from the same caller is a duplicate. On the surface, this seems to simplify both the customer experience and service implementation. Any request that looks exactly like a previous request is considered a duplicate request. However, this approach is unlikely to work in all situations. For example, let's say you order a meal, and when your next-door neighbor orders the same meal, are these requests repeated or are they two different requests? Or after you place an order, your friend calls and says he's hungry, and when you re-create the same order a short time later, will we treat them as renewed requests? Is this scenario very similar to the client retrying the service because of the network latency we just mentioned? It’s possible that the caller actually wants two identical meals.\r
    >\r
    > The generally preferred approach is to include a unique caller-supplied client request identifier in the API contract. Requests from the same caller with the same customer request identifier can be considered duplicate requests and handled accordingly. A unique caller-supplied client request identifier for idempotent operations satisfies this need.\r
`,OD=`# 1 Spring Boot 項目\r
\r
## 1.1 Maven dependencies\r
\r
\`\`\`xml\r
<parent>\r
	<groupId>org.springframework.boot</groupId>\r
	<artifactId>spring-boot-starter-parent</artifactId>\r
	<version>3.2.4</version>\r
</parent>\r
\r
<dependencies>\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-web</artifactId>\r
	</dependency>\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-actuator</artifactId>\r
	</dependency>\r
</dependencies>\r
\`\`\`\r
\r
---\r
\r
## 1.2 Main class\r
\r
\`\`\`java\r
@SpringBootApplication\r
public class MainApplication {\r
\r
    public static void main(String[] args) {\r
        SpringApplication.run(MainApplication.class, args);\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
## 1.3 Application 配置\r
\r
\`application.yml\`：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
management:\r
  endpoints:\r
    web:\r
      exposure:\r
        include: health,info,env,beans,loggers\r
\r
# 等目前既 HTTP requests 完成曬之後先會 shutdown，等候時間上限 60 秒\r
server:\r
  shutdown: graceful\r
spring:\r
  lifecycle:\r
    timeout-per-shutdown-phase: 60s\r
\`\`\`\r
\r
---\r
\r
# 2 Dockerfile\r
\r
關於 OpenJDK 用 \`jlink\` command 保留有需要既 modules，可以睇返呢篇：[客製化 JRE](/blog/custom-jre)。\r
\r
## 2.1 只有 OpenJDK 既 Dockerfile\r
\r
\`\`\`plaintext\r
FROM mcr.microsoft.com/openjdk/jdk:17-ubuntu AS jre-stage\r
\r
RUN jlink \\\r
 --add-modules \\\r
java.base,\\\r
java.compiler,\\\r
java.datatransfer,\\\r
java.desktop,\\\r
java.instrument,\\\r
java.logging,\\\r
java.management,\\\r
java.management.rmi,\\\r
java.naming,\\\r
java.net.http,\\\r
java.prefs,\\\r
java.rmi,\\\r
java.scripting,\\\r
java.se,\\\r
java.security.jgss,\\\r
java.security.sasl,\\\r
java.smartcardio,\\\r
java.sql,\\\r
java.sql.rowset,\\\r
java.transaction.xa,\\\r
java.xml,\\\r
java.xml.crypto,\\\r
jdk.accessibility,\\\r
jdk.charsets,\\\r
jdk.crypto.cryptoki,\\\r
jdk.crypto.ec,\\\r
jdk.dynalink,\\\r
jdk.httpserver,\\\r
jdk.internal.ed,\\\r
jdk.internal.le,\\\r
jdk.internal.vm.ci,\\\r
jdk.internal.vm.compiler,\\\r
jdk.internal.vm.compiler.management,\\\r
jdk.jdwp.agent,\\\r
jdk.jfr,\\\r
jdk.jsobject,\\\r
jdk.localedata,\\\r
jdk.management,\\\r
jdk.management.agent,\\\r
jdk.management.jfr,\\\r
jdk.naming.dns,\\\r
jdk.naming.rmi,\\\r
jdk.net,\\\r
jdk.nio.mapmode,\\\r
jdk.random,\\\r
jdk.sctp,\\\r
jdk.security.auth,\\\r
jdk.security.jgss,\\\r
jdk.unsupported,\\\r
jdk.xml.dom,\\\r
jdk.zipfs \\\r
 --strip-debug \\\r
 --no-man-pages \\\r
 --no-header-files \\\r
 --compress=2 \\\r
 --output /javaruntime\r
\r
\r
\r
FROM ubuntu:22.04\r
\r
# VOLUME /tmp\r
EXPOSE 8080\r
\r
RUN mkdir -m 445 /app && mkdir -m 445 /app/jre\r
WORKDIR /app\r
\r
RUN addgroup --system mygroup && adduser --system --shell /bin/false --ingroup mygroup myuser\r
USER myuser\r
\r
ENV PATH "/app/jre/bin:$PATH"\r
COPY --from=jre-stage  --chown=root:root --chmod=445 /javaruntime /app/jre\r
\r
# CMD "java" "-jar" "app.jar"\r
ENTRYPOINT ["java", "-jar", "app.jar"]\r
\r
COPY --chown=root:root --chmod=444 /target/app.jar app.jar\r
\`\`\`\r
\r
### 2.1.1 Build script\r
\r
我地可以配合以下既 build script：\r
\r
\`\`\`bash\r
CALL mvn clean package\r
\r
PUSHD target\r
REN *.jar app.jar\r
POPD\r
\r
docker image build -t spring-boot-3-docker-test -f Dockerfile-openjdk.txt .\r
\`\`\`\r
\r
註：將 Dockerfile 保存做 \`Dockerfile-openjdk.txt\`。\r
\r
---\r
\r
## 2.2 行埋 Maven build 既 Dockerfile\r
\r
\`\`\`plaintext\r
FROM maven:3.9.6-eclipse-temurin-17 AS mvn-stage\r
RUN mkdir /project\r
COPY . /project\r
WORKDIR /project\r
RUN mvn clean package && mv /project/target/*.jar /project/target/app.jar\r
\r
\r
\r
FROM mcr.microsoft.com/openjdk/jdk:17-ubuntu AS jre-stage\r
\r
RUN jlink \\\r
 --add-modules \\\r
java.base,\\\r
java.compiler,\\\r
java.datatransfer,\\\r
java.desktop,\\\r
java.instrument,\\\r
java.logging,\\\r
java.management,\\\r
java.management.rmi,\\\r
java.naming,\\\r
java.net.http,\\\r
java.prefs,\\\r
java.rmi,\\\r
java.scripting,\\\r
java.se,\\\r
java.security.jgss,\\\r
java.security.sasl,\\\r
java.smartcardio,\\\r
java.sql,\\\r
java.sql.rowset,\\\r
java.transaction.xa,\\\r
java.xml,\\\r
java.xml.crypto,\\\r
jdk.accessibility,\\\r
jdk.charsets,\\\r
jdk.crypto.cryptoki,\\\r
jdk.crypto.ec,\\\r
jdk.dynalink,\\\r
jdk.httpserver,\\\r
jdk.internal.ed,\\\r
jdk.internal.le,\\\r
jdk.internal.vm.ci,\\\r
jdk.internal.vm.compiler,\\\r
jdk.internal.vm.compiler.management,\\\r
jdk.jdwp.agent,\\\r
jdk.jfr,\\\r
jdk.jsobject,\\\r
jdk.localedata,\\\r
jdk.management,\\\r
jdk.management.agent,\\\r
jdk.management.jfr,\\\r
jdk.naming.dns,\\\r
jdk.naming.rmi,\\\r
jdk.net,\\\r
jdk.nio.mapmode,\\\r
jdk.random,\\\r
jdk.sctp,\\\r
jdk.security.auth,\\\r
jdk.security.jgss,\\\r
jdk.unsupported,\\\r
jdk.xml.dom,\\\r
jdk.zipfs \\\r
 --strip-debug \\\r
 --no-man-pages \\\r
 --no-header-files \\\r
 --compress=2 \\\r
 --output /javaruntime\r
\r
\r
\r
FROM ubuntu:22.04\r
\r
# VOLUME /tmp\r
EXPOSE 8080\r
\r
RUN mkdir -m 445 /app && mkdir -m 445 /app/jre\r
WORKDIR /app\r
\r
RUN addgroup --system mygroup && adduser --system --shell /bin/false --ingroup mygroup myuser\r
USER myuser\r
\r
ENV PATH "/app/jre/bin:$PATH"\r
COPY --from=jre-stage  --chown=root:root --chmod=445 /javaruntime /app/jre\r
\r
# CMD "java" "-jar" "app.jar"\r
ENTRYPOINT ["java", "-jar", "app.jar"]\r
\r
COPY --from=mvn-stage --chown=root:root --chmod=444 /project/target/app.jar app.jar\r
\`\`\`\r
\r
### 2.2.1 Build script\r
\r
\`\`\`bash\r
docker image build -t spring-boot-3-docker-test -f Dockerfile-maven-and-openjdk.txt .\r
\`\`\`\r
\r
註：將 Dockerfile 保存做 \`Dockerfile-maven-and-openjdk.txt\`。\r
\r
---\r
\r
## 2.3 詳細解釋\r
\r
-   我地需要用到 Docker 既 multi-stage build 功能黎完成一啲事前準備功夫。\r
    -   包括：\r
        -   用 \`jlink\` 客製化 OpenJDK，淨係保留對我地有用既 Java modules。\r
        -   用 \`mvn\` 打包個 Spring Boot 項目既 JAR 檔。\r
    -   呢啲事前準備功夫可以用 intermediate stages 黎達成，而呢啲 stages 所產生出黎既 containers 同最後既 Docker image 冇關係。\r
    -   我地可以將 intermediate stages 裡面既 output 檔案抄去最終既 Docker image 度。\r
    -   真正既 base image 係 \`ubuntu\`。\r
-   \`VOLUME\` instruction 係用黎定義我地個 Docker image 可能有啲需要保存既用戶數據。\r
    -   Docker Desktop 既 behavior 係會自動建立 anonymous volume(s)，但如果我地用 \`docker container run\` 執行並且加左 \`--rm\`，咁個 container 結束既時候，Docker 就會自動刪除相關既 anonymous volume(s)。\r
    -   如果喺 cloud 既 Kubernetes 上面運行，而 \`readOnlyFilesystem\` 設置左係 \`true\`，而 containerd 又設置左 \`ignore_image_defined_volumes\` 係 \`true\`，咁呢個 \`VOLUME\` instruction 會被無視。\r
        -   喺個 Docker container 裡面執行 \`mount\` command 可以睇到 \`Dockerfile\` 既 \`VOLUME\` instructions 有冇令 volume mounts 生效到。\r
-   \`EXPOSE\` instruction 係用黎定義我地個 app 會行喺咩 port 上面。\r
-   \`RUN\` instruction 係用黎執行任意既 Linux commands。\r
    -   為左減少 layers 既數量，我地要盡量將啲 commands 放到一個 \`RUN\` instruction 裡面，用 \`&&\` 黎串連多個 commands，咁 Docker 就只會為呢一個 \`RUN\` instruction 增加一個 layer。\r
-   \`mkdir -m <permission>\` 係用黎創建目錄，同時改變埋目錄既權限。\r
-   \`WORKDIR\` instruction 會改變 container 既 working directory，影響後續 \`RUN\`、\`CMD\`、\`ENTRYPOINT\`、\`COPY\` 以及 \`ADD\` instructions 既 working directory。\r
    -   \`docker container exec\` 或者 \`kubectl exec\` 入去個 container 之後最初既 working directory 會係 \`WORKDIR\` instruction 定義既 path。\r
    -   用 \`pwd\` command 可以顯示 working directory。\r
    -   正因為咁，所以最後一句 \`COPY\` instruction 會將 \`app.jar\` 抄到去個 \`ubuntu\` base image 既 \`/app\`（working directory）。\r
-   \`addgroup\`、\`adduser\` 係用黎新增 group、新增 user。\r
    -   加黎完全係為左安全需要。\r
    -   因為 Docker 默認會用 \`root\` user 黎做曬所有野，我地唔希望個 Docker container 用一個有好大權限既 user。\r
-   \`USER\` instruction 會切換 user，影響後續既 \`RUN\` instructions，亦會影響 runtime 既時候執行 \`CMD\` 或者 \`ENTRYPOINT\` 既 user。\r
    -   基於安全考慮，user 唔應該用默認既 \`root\`，否則就有好多權限。\r
-   \`ENV\` instructions 係用黎設置 environment variable。\r
    -   我地要重新設置 \`PATH\` environment variable 係因為我地只係 base 左 \`ubuntu\` image，再將 OpenJDK 既 binaries 抄入去。如果唔設置 \`PATH\` 既話，\`ubuntu\` 就唔知道可以喺 \`/app/jre/bin\` 度 lookup \`java\` 執行檔。\r
        -   修改 \`PATH\` 比較正路既做法係將要加入既 path 放喺左邊，然後用 \`:\` 同現時既 paths 分隔。放喺左邊既原因係如果有兩個或以上既 paths 存在相同既執行檔，咁 Linux 會用最左邊果個，亦即係話擺喺左邊既呢個方法喺呢個情況下會比較有效。\r
-   \`COPY\` instruction 可以幫我地抄檔案或者目錄。\r
    -   \`--from\` 會幫我地由之前既 stage 既 file system 抄 \`/javaruntime\` 裡面啲野去 \`ubuntu\` 既 \`/app/jre\` 裡面。\r
    -   如果冇 \`--from\`，就會由本地既 working directory 抄入去。\r
    -   可以用 \`--chown\` 順便做埋 \`chown\`，將 owner、group 改做 \`<user>:<group>\`。\r
    -   可以用 \`--chmod\` 順便做埋 \`chmod\`，修改權限。\r
        -   例如將權限改做 \`445\`，咁 owner、group 只可以 read，而 public（其他 users 或者 groups）只可以 read、execute。\r
-   \`#\` 係用黎寫 comment，咁果句就唔會生效。\r
-   我地可以用 \`CMD\` 或者 \`ENTRYPOINT\` instruction 黎話畀 Docker 知 Docker container 執行既時候應該行咩 commands。\r
    -   \`CMD\` 可以被覆蓋。\r
    -   \`ENTRYPOINT\` 唔可以被覆蓋，一定會執行。\r
-   關於權限，我地既 OpenJDK、\`app.jar\` 既 owner、group 都係 \`root\`，但因為我地用左 \`USER\` instruction 切換左做 \`myuser\`，而呢個 user 屬於另一個叫 \`mygroup\` 既 group，所以佢地需要開放權限畀 public，咁 \`myuser\` 先可以用到佢地。\r
    -   \`myuser\` 需要 OpenJDK 既 read、execute 權限。\r
    -   \`myuser\` 需要 \`app.jar\` 既 read 權限，唔需要 execute 權限係因為佢唔係直接執行 \`app.jar\`，而係透過 OpenJDK 裡面既 \`java\`。\r
\r
---\r
\r
# 3 執行\r
\r
## 3.1 Docker Desktop\r
\r
\`\`\`bash\r
docker container run --rm -p 8080:8080 spring-boot-3-docker-test\r
\`\`\`\r
\r
Read-only file system 模式：\r
\r
\`\`\`bash\r
docker container run --rm -p 8080:8080 --read-only spring-boot-3-docker-test\r
\`\`\`\r
\r
註：\r
\r
-   用左 \`--read-only\` 既話，一定要令到 \`/tmp\` 有 volume mount，從而令 \`/tmp\` 可以寫入。\r
    -   否則，如果 Spring Boot 既 embedded Tomcat 喺 runtime 既時候創建唔到目錄或者寫入唔到落 temp folder 既話，就會令成個 Spring Boot microservice 啟動失敗。\r
    -   用 Docker Desktop 既話可以利用 Dockerfile 既 \`VOLUME /tmp\` instruction。\r
\r
---\r
\r
## 3.2 Kubernetes\r
\r
我地可以開啟 Docker Desktop 內置既 Kubernetes 功能，或者用某個 cloud provider 既 Kubernetes 服務。\r
\r
關於 \`kubectl\` CLI 既 commands 可以睇返呢篇：[kubectl 基本操作](/blog/kubectl-basics)。\r
\r
### 3.2.1 單獨 \`Pod\`\r
\r
\`k8s-pod.yml\`：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
apiVersion: v1\r
kind: Pod\r
metadata:\r
  name: spring-boot-3-docker-test\r
spec:\r
  terminationGracePeriodSeconds: 60 # 唔可以少過 Spring Boot 既 graceful shutdown 時限配置\r
  containers:\r
  - name: spring-boot-3-docker-test\r
    image: spring-boot-3-docker-test:latest\r
    imagePullPolicy: Never # 只限本地測試用\r
    securityContext:\r
      readOnlyRootFilesystem: true # 安全需要\r
    ports:\r
    - containerPort: 8080\r
    startupProbe:\r
      httpGet:\r
        path: /actuator/health/liveness\r
        port: 8080\r
      initialDelaySeconds: 5\r
      periodSeconds: 5\r
      failureThreshold: 30\r
    livenessProbe:\r
      httpGet:\r
        path: /actuator/health/liveness\r
        port: 8080\r
      initialDelaySeconds: 5\r
      periodSeconds: 10\r
      failureThreshold: 3\r
    readinessProbe:\r
      httpGet:\r
        path: /actuator/health/readiness\r
        port: 8080\r
      initialDelaySeconds: 5\r
      periodSeconds: 10\r
      failureThreshold: 3\r
    args: # 示範用 command line arguments 黎改變 Spring Boot behaviors\r
    - --logging.level.root=DEBUG\r
\r
# 用 emptyDir 方法，令 /tmp 可以寫入\r
    volumeMounts:\r
    - name: empty-tmp-dir\r
      mountPath: /tmp\r
  volumes:\r
  - name: empty-tmp-dir\r
    emptyDir: {}\r
\`\`\`\r
\r
保存左個檔案之後執行：\r
\r
\`\`\`bash\r
kubectl apply -f k8s-pod.yml\r
\`\`\`\r
\r
之後 port-forward 個 K8s \`Pod\`：\r
\r
\`\`\`bash\r
kubectl port-forward spring-boot-3-docker-test 8080\r
\`\`\`\r
\r
---\r
\r
### 3.2.2 \`Deployment\`\r
\r
\`k8s-deployment.yml\`：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
apiVersion: apps/v1\r
kind: Deployment\r
metadata:\r
  name: spring-boot-3-docker-test-deployment\r
spec:\r
  replicas: 2 # 呢個會係固定數量\r
  selector:\r
    matchLabels:\r
      app: spring-boot-3-docker-test\r
  template:\r
    metadata:\r
      labels:\r
        app: spring-boot-3-docker-test\r
    spec:\r
      terminationGracePeriodSeconds: 60 # 唔可以少過 Spring Boot 既 graceful shutdown 時限配置\r
      containers:\r
      - name: spring-boot-3-docker-test\r
        image: spring-boot-3-docker-test:latest\r
        imagePullPolicy: Never # 只限本地測試用\r
        securityContext:\r
          readOnlyRootFilesystem: true # 安全需要\r
        ports:\r
        - containerPort: 8080\r
        startupProbe:\r
          httpGet:\r
            path: /actuator/health/liveness\r
            port: 8080\r
          initialDelaySeconds: 5\r
          periodSeconds: 5\r
          failureThreshold: 30\r
        livenessProbe:\r
          httpGet:\r
            path: /actuator/health/liveness\r
            port: 8080\r
          initialDelaySeconds: 5\r
          periodSeconds: 10\r
          failureThreshold: 3\r
        readinessProbe:\r
          httpGet:\r
            path: /actuator/health/readiness\r
            port: 8080\r
          initialDelaySeconds: 5\r
          periodSeconds: 10\r
          failureThreshold: 3\r
        args: # 示範用 command line arguments 黎改變 Spring Boot behaviors\r
        - --logging.level.root=DEBUG\r
    \r
# 用 emptyDir 方法，令 /tmp 可以寫入\r
        volumeMounts:\r
        - name: empty-tmp-dir\r
          mountPath: /tmp\r
      volumes:\r
      - name: empty-tmp-dir\r
        emptyDir: {}\r
\`\`\`\r
\r
保存左個檔案之後執行：\r
\r
\`\`\`bash\r
kubectl apply -f k8s-deployment.yml\r
\`\`\`\r
\r
之後 port-forward 個 K8s \`Deployment\`：\r
\r
\`\`\`bash\r
kubectl port-forward deployment/spring-boot-3-docker-test-deployment 8080\r
\`\`\`\r
\r
---\r
\r
## 3.3 測試\r
\r
可以檢查下 Spring Boot Actuator 既 HTTP REST endpoints：\r
\r
\`\`\`bash\r
curl http://localhost:8080/actuator/health\r
curl http://localhost:8080/actuator/health/liveness\r
curl http://localhost:8080/actuator/health/readiness\r
curl http://localhost:8080/actuator/info\r
curl http://localhost:8080/actuator/env\r
curl http://localhost:8080/actuator/beans\r
curl http://localhost:8080/actuator/loggers\r
\`\`\`\r
\r
---\r
\r
## 3.4 詳細解釋\r
\r
-   Spring Boot 本身具備 cloud awareness。\r
    -   喺呢個測試項目裡面，我地用左 Spring Boot Actuator，而個 Spring Boot microservice 又喺 Kubernetes 上面運行。\r
    -   Spring Boot 會 check 到有 \`KUBERNETES_SERVICE_HOST\`、\`KUBERNETES_SERVICE_PORT\` 呢兩個 environment variables。\r
    -   所以 Spring Boot 就知道佢而家喺 Kubernetes 上面行緊，就會自動 expose \`/actuator/health/liveness\`、\`/actuator/health/readiness\` 呢兩個 HTTP REST endpoints。\r
-   我地配置 Kubernetes 既 \`terminationGracePeriodSeconds\` 秒數唔應該少過我地配置既 Spring Boot graceful shutdown 既 \`spring.lifecycle.timeout-per-shutdown-phase\` 配置時限。\r
    -   Spring Boot 默認係會即時 shutdown，無視未完成既 HTTP requests。\r
        -   我地當然唔想有 HTTP requests 突然被中斷，所以我地要指示 Spring Boot 用 graceful shutdown 方式，並且將 shutdown timeout 設置到一個合理既數值。\r
            -   將 \`server.shutdown\` 設置做 \`graceful\`。\r
            -   \`spring.lifecycle.timeout-per-shutdown-phase\` 既默認值係 \`30\` 秒。\r
        -   設置好之後，Spring Boot 會等到當時未完成既 HTTP requests 都完成曬或者到左 shutdown timeout 既時限先至 shutdown。\r
    -   Kubernetes 都有默認 \`30\` 秒既 \`terminationGracePeriodSeconds\` 配置。\r
        -   如果我地有配置到比 \`30\` 秒長既 Spring Boot shutdown timeout，咁我地都要配置埋 Kubernetes 果個。\r
    -   例子／測試方法\r
        1. 我地既 Spring Boot microservice 可以 expose 一個會 \`Thread.sleep(100_000)\`（暫停 \`100\` 秒）既 HTTP REST endpoint。\r
        1. 然後設置 Spring Boot graceful shutdown、shutdown timeout 做 \`120\` 秒。\r
        1. 重新 build 個 Spring Boot Docker image。\r
        1. 然後喺部署 Kubernetes 既 YAML 配置檔度設置 termination grace period 做 \`120\` 秒。\r
        1. 用 \`kubectl apply\` 部署個 Spring Boot microservice 既 K8s \`Deployment\`。\r
        1. 我地 port-forward 其中一個 \`Pod\`，然後用 Postman 或者 Bruno 去 call 個新 endpoint。\r
        1. 我地即刻執行 \`kubectl rollout restart deployment spring-boot-3-docker-test-deployment\`。\r
        1. 我地會見到 Postman 或者 Bruno 可以執行個 HTTP request 長達 \`120\` 秒，到成功返回 HTTP response 之後 Kubernetes 先會結束個 \`Pod\`，然後用新既去取代佢。\r
-   Kubernetes 提供左唔同既 probes 配置去驗證個 \`Pod\` 到底正唔正常。\r
    -   佢可以持續咁自動 call 個 \`Pod\` 既一啲 HTTP endpoints。\r
        -   成功既定義係 HTTP response status code 要係 \`200\` 至 \`399\`。\r
    -   Probes\r
        -   如果 startup probe 既 HTTP endpoint fail 左，Kubernetes 就會回收個 \`Pod\`。\r
        -   如果 liveness probe 既 HTTP endpoint fail 左，Kubernetes 就會回收個 \`Pod\`。\r
        -   如果 readiness probe 既 HTTP endpoint fail 左，Kubernetes 就會唔畀 traffic 去呢個 \`Pod\` 度。\r
    -   \`initialDelaySeconds\` 係初始化既時候，Kubernetes 應該等幾耐先開始驗證。\r
    -   \`periodSeconds\` 係初始化完成之後，Kubernetes 每隔幾耐需要驗證。\r
    -   \`failureThreshold\` 可以允許幾次失敗。\r
-   Spring Boot Actuator 提供左對應 Kubernetes liveness、readiness probes 既 HTTP REST endpoints。\r
    -   \`/actuator/health/liveness\` 可以用落 Kubernetes 既 liveness probe。\r
    -   \`/actuator/health/readiness\` 可以用落 Kubernetes 既 readiness probe。\r
        -   呢個 endpoint 返回 HTTP response status code \`200\` 既話，即係表示個 HTTP server 已經準備好接受 HTTP requests。\r
    -   Liveness endpoint 返回正面既結果，唔代表 readiness endpoint 會返回正面既結果，因為個 HTTP server 未必準備好接受 HTTP requests。\r
    -   如果 readiness endpoint 返回正面既結果，咁 liveness endpoint 都應該返回正面既結果。\r
-   Spring Boot Actuator 冇提供對應 Kubernetes startup probe 既 startup endpoint。\r
    -   有兩個解決方法：\r
        1. 我地可以用返 Spring Boot Actuator 既 liveness endpoint 作為 Kubernetes startup probe，然後配置一個好大既 \`failureThreshold\`，例如 \`30\` 次，配合短既 \`periodSeconds\`，例如 \`5\` 秒（即係最長 \`2.5\` 分鐘）。\r
            - 呢個做法等於延續 Kubernetes liveness probe 既驗證時間。\r
        1. 我地可以為 Kubernetes liveness、readiness probes 配置一個好大既 \`initialDelaySeconds\`，例如 \`180\` 秒，但呢個時間係固定既，時間越長就越會增加 scaling 既成本。\r
-   我地可以用 K8s \`Deployment\` 既 \`replicas\` 配置黎定義需要既 \`Pod\` 數量。\r
    -   用呢個方法得到既 \`Pod\` 數量係固定既，唔會因應 \`Pod\` container 既 CPU、memory 情況而自動增加減少。\r
        -   比較好既做法係用 K8s \`HorizontalPodAutoscaler\`。\r
    -   Kubernetes 會幫我地管理 \`Pod\`，盡可能保持我地要求既 \`Pod\` 數量。\r
    -   Kubernetes 會幫我地自動創建一個 K8s \`ReplicaSet\`。\r
\r
---\r
\r
## 3.5 注意事項\r
\r
-   設置左 \`readOnlyRootFilesystem\` 做 \`true\` 既話，一定要令到 \`/tmp\` 有 volume mount，從而令 \`/tmp\` 可以寫入。\r
    -   否則，如果 Spring Boot 既 embedded Tomcat 喺 runtime 既時候創建唔到目錄或者寫入唔到落 temp folder 既話，就會令成個 Spring Boot microservice 啟動失敗。\r
    -   用 Docker Desktop 既 Kubernetes 既話，有兩個方法：\r
        1. 用 Kubernetes 正路既 \`emptyDir\` 方法。\r
        1. Dockerfile 用 \`VOLUME /tmp\` instruction。\r
    -   用 cloud 既 Kubernetes 既話，有兩個方法：\r
        1. 用 Kubernetes 正路既 \`emptyDir\` 方法。\r
        1. Dockerfile 用 \`VOLUME /tmp\` instruction，但 containerd 既 \`ignore_image_defined_volumes\` 一定要配合佢而設置做 \`false\`。\r
\r
---\r
\r
# 4 附錄\r
\r
## 4.1 Snyk Java Dockerfile best practices\r
\r
![](/blog/2024-03/spring-boot-dockerfile/snyk-best-practices.png)\r
\r
---\r
\r
## 4.2 Kubernetes pod lifecycle\r
\r
![](/blog/2024-03/spring-boot-dockerfile/k8s-probes.jpg)\r
\r
---\r
\r
## 4.3 Read-only file system \`/tmp\` 寫入問題\r
\r
以下係如果我地冇整好 volume mount 落 \`/tmp\` 會造成既 startup error：\r
\r
\`\`\`plaintext\r
Caused by: org.springframework.boot.web.server.WebServerException: Unable to create tempDir. java.io.tmpdir is set to /tmp\r
        at org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir(AbstractConfigurableWebServerFactory.java:241)\r
        at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:202)\r
        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)\r
        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)\r
        ... 15 common frames omitted\r
Caused by: java.nio.file.FileSystemException: /tmp/tomcat.8080.9381430298818445978: Read-only file system\r
        at java.base/sun.nio.fs.UnixException.translateToIOException(Unknown Source)\r
        at java.base/sun.nio.fs.UnixException.rethrowAsIOException(Unknown Source)\r
        at java.base/sun.nio.fs.UnixException.rethrowAsIOException(Unknown Source)\r
        at java.base/sun.nio.fs.UnixFileSystemProvider.createDirectory(Unknown Source)\r
        at java.base/java.nio.file.Files.createDirectory(Unknown Source)\r
        at java.base/java.nio.file.TempFileHelper.create(Unknown Source)\r
        at java.base/java.nio.file.TempFileHelper.createTempDirectory(Unknown Source)\r
        at java.base/java.nio.file.Files.createTempDirectory(Unknown Source)\r
        at org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir(AbstractConfigurableWebServerFactory.java:235)\r
        ... 18 common frames omitted\r
\`\`\`\r
\r
---\r
\r
# 5 參考資料\r
\r
-   [Docker 官網 - Dockerfile reference](https://docs.docker.com/reference/dockerfile/)\r
-   [Docker 官網 - Multi-stage builds](https://docs.docker.com/build/building/multi-stage/)\r
-   [Snyk - 10 best practices to build a Java container with Docker](https://snyk.io/blog/best-practices-to-build-java-containers-with-docker/)\r
-   [Microsoft 官方文檔 - Container images for the Microsoft Build of OpenJDK - Create a custom Java runtime](https://learn.microsoft.com/en-us/java/openjdk/containers#create-a-custom-java-runtime)\r
-   [Spring Boot 官方文檔 - Production-ready Features - 2.10.2. Application Lifecycle and Probe States](https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html#actuator.endpoints.kubernetes-probes.lifecycle)\r
-   [Adding health checks with Liveness, Readiness, and Startup probes](https://andrewlock.net/deploying-asp-net-core-applications-to-kubernetes-part-6-adding-health-checks-with-liveness-readiness-and-startup-probes/)\r
-   [Kubernetes 官方文檔 - Configure Liveness, Readiness and Startup Probes](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)\r
-   [Kubernetes 官方文檔 - Volumes - emptyDir](https://kubernetes.io/docs/concepts/storage/volumes/#emptydir)\r
`,LD=`# 1 Spring Boot 3 既 micrometer tracing\r
\r
Spring Boot 3 既其中一個比較大既改變，就係唔再支援 Spring Boot Sleuth（又或者話 Spring Boot Sleuth 唔支援 Spring Boot 3）。\r
\r
根據 [Spring Cloud Sleuth 官方文檔](https://docs.spring.io/spring-cloud-sleuth/docs/current/reference/html/)：\r
\r
> !!!! IMPORTANT !!!!\r
>\r
> Spring Cloud Sleuth’s last minor version is 3.1. You can check the 3.1.x branch for the latest commits.\r
> Spring Cloud Sleuth will not work with Spring Boot 3.x onward. The last major version of Spring Boot that Sleuth will support is 2.x.\r
>\r
> The core of this project got moved to [Micrometer Tracing](https://micrometer.io/docs/tracing) project and the instrumentations will be moved to [Micrometer](https://micrometer.io/) and all respective projects (no longer all instrumentations will be done in a single repository.\r
>\r
> You can check the [Micrometer Tracing migration guide](https://github.com/micrometer-metrics/tracing/wiki/Spring-Cloud-Sleuth-3.1-Migration-Guide) to learn how to migrate from Spring Cloud Sleuth to Micrometer Tracing.\r
\r
即係話，如果我地想繼續喺 HTTP requests 度加入 trace ID、span ID，我地要改用 micrometer tracing。\r
\r
---\r
\r
# 2 定義\r
\r
喺 distributed tracing 裡面，我地有 trace ID、span ID 呢兩個 terms。\r
\r
## 2.1 Trace ID\r
\r
Trace ID 代表緊一個 distributed 既 request workflow，而呢個 request 會訪問好幾個 back-end microservices。利用同一個 trace ID 可以幫我地串連呢啲 back-end microservices，方便我地將同一個 request 既所有 microservices 既所有 application logs 搵出黎 troubleshoot 或者 debug。\r
\r
進入一個新既 request workflow 既第一個 microservice 會負責生成 trace ID，然後當佢 send HTTP request 去佢既 downstream microservice 既時候，佢會喺個 HTTP request 加入一個 \`traceparent\` request header，而個 header value 既格式應該要符合 W3C 既 Trace Context 標準。\r
\r
---\r
\r
## 2.2 Span ID\r
\r
Span ID 代表緊一個 request workflow 裡面既其中一小個 operation，係某一個 microservice 既某一個 operation unit。\r
\r
---\r
\r
# 3 動手寫\r
\r
## 3.1 Maven dependencies\r
\r
所有 microservices 都要有以下既 Maven dependencies：\r
\r
\`\`\`xml\r
<parent>\r
	<groupId>org.springframework.boot</groupId>\r
	<artifactId>spring-boot-starter-parent</artifactId>\r
	<version>3.2.3</version>\r
</parent>\r
\r
<dependency>\r
	<groupId>io.micrometer</groupId>\r
	<artifactId>micrometer-registry-prometheus</artifactId>\r
</dependency>\r
<dependency>\r
	<groupId>io.micrometer</groupId>\r
	<artifactId>micrometer-tracing-bridge-brave</artifactId>\r
</dependency>\r
\r
<dependency>\r
	<groupId>net.logstash.logback</groupId>\r
	<artifactId>logstash-logback-encoder</artifactId>\r
	<version>7.2</version>\r
</dependency>\r
\`\`\`\r
\r
如果需要用 \`WebClient\` 去 call downstream microservice 既話就加：\r
\r
\`\`\`xml\r
<dependency>\r
	<groupId>org.springframework</groupId>\r
	<artifactId>spring-webflux</artifactId>\r
</dependency>\r
\`\`\`\r
\r
如果需要用 OpenFeign 去 call downstream microservice 既話就加：\r
\r
\`\`\`xml\r
<dependency>\r
	<groupId>org.springframework.cloud</groupId>\r
	<artifactId>spring-cloud-starter-openfeign</artifactId>\r
</dependency>\r
<dependency>\r
	<groupId>io.github.openfeign</groupId>\r
	<artifactId>feign-micrometer</artifactId>\r
</dependency>\r
\`\`\`\r
\r
---\r
\r
## 3.2 寫 Java code\r
\r
### 3.2.1 Spring \`RestTemplate\`\r
\r
如果要令到 \`RestTemplate\` 識得喺 request header 度 forward micrometer tracing 既 data 去 downstream microservice 度，就要用 \`RestTemplateBuilder\` bean 去創建 \`RestTemplate\`：\r
\r
\`\`\`java\r
@Configuration\r
public class RestTemplateConfig {\r
\r
    @Bean\r
    RestTemplate restTemplate(RestTemplateBuilder builder) {\r
\r
        final RestTemplate restTemplate = builder\r
            .setConnectTimeout(Duration.ofSeconds(10))\r
            .basicAuthentication("username", "password")\r
            .defaultHeader("header1", "header1-value")\r
            .defaultHeader("header2", "header2-value")\r
            .build();\r
\r
        // 如果加入左 jackson-dataformat-xml\r
        // 令 RestTemplate 唔好喺 Accept request header 度加入 application/xml 或相關既 values\r
        restTemplate.getMessageConverters()\r
            .removeIf(e -> e.getClass()==MappingJackson2XmlHttpMessageConverter.class);\r
\r
        return restTemplate;\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
### 3.2.2 Spring Webflux \`WebClient\`\r
\r
如果要令到 \`WebClient\` 識得喺 request header 度 forward micrometer tracing 既 data 去 downstream microservice 度，就要用 \`WebClient.Builder\` bean 去創建 \`WebClient\`：\r
\r
\`\`\`java\r
@Configuration\r
public class WebClientConfig {\r
\r
    @Bean\r
    WebClient webClient(WebClient.Builder builder) {\r
\r
        final HttpClient httpClient = HttpClient.newBuilder()\r
            .version(Version.HTTP_1_1)\r
            .connectTimeout(Duration.ofSeconds(10))\r
            .build();\r
\r
        final WebClient client = builder\r
                .clientConnector(new JdkClientHttpConnector(httpClient))\r
                .defaultHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE)\r
                .defaultHeader("header1", "header1-value")\r
                .defaultHeader("header2", "header2-value")\r
                .build();\r
\r
        return client;\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
### 3.2.3 Spring 6.1 \`RestClient\`\r
\r
如果要令到 \`RestClient\` 識得喺 request header 度 forward micrometer tracing 既 data 去 downstream microservice 度，就要用 \`RestClient.Builder\` bean 去創建 \`RestClient\`：\r
\r
\`\`\`java\r
@Configuration\r
public class RestClientConfig {\r
\r
    @Bean\r
    RestClient restClient(RestClient.Builder builder) {\r
\r
        final RestClient client = builder\r
                .defaultHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON_VALUE)\r
                .defaultHeader("header1", "header1-value")\r
                .defaultHeader("header2", "header2-value")\r
                .build();\r
\r
        return client;\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
### 3.2.4 Spring Cloud OpenFeign\r
\r
如果要令到 OpenFeign 識得喺 request header 度 forward micrometer tracing 既 data 去目標既 microservice 度，只需要喺 \`pom.xml\` 加入 \`io.github.openfeign:feign-micrometer\` 既 Maven dependency。\r
\r
呢個 dependency 既版本由以下既 dependency management BOMs 控制。\r
\r
-   \`org.springframework.cloud:spring-cloud-dependencies\`\r
    -   \`org.springframework.cloud:spring-cloud-openfeign-dependencies\`\r
        -   \`io.github.openfeign:feign-bom\`\r
\r
---\r
\r
## 3.3 Logback 配置\r
\r
最後一步，我地需要喺 \`logback.xml\` 裡面加入 trace ID 以及 span ID 既 MDC fields，咁喺 application logs 度就可以睇到佢地。\r
\r
因為係 distributed microservices 既關係，我地如果用好似 ELK 咁既 centralized logging platform 既話，一定要可以分得到唔同既 microservices 既 logs，咁就要喺 \`logback.xml\` 既 encoders 度配置好：\r
\r
-   Host name，可以直接用 \`\${HOSTNAME:-}\` 或者 \`\${hostname:-}\`。\r
-   Spring application name，可以加入以下既配置，之後就可以用 \`\${app_name:-}\`：\r
    -   \`\`\`xml\r
        <!-- 喺 configuration 裡面 -->\r
        <springProperty scope="context" name="app_name" source="spring.application.name" />\r
        \`\`\`\r
\r
詳情可以睇返呢篇：[Spring 項目使用 ELK 做 logging](/blog/spring-boot-elk-logging)。\r
\r
### 3.3.1 自定義 encoder pattern\r
\r
如果要喺自定義既 encoder pattern 裡面加入 trace ID 以及 span ID，我地可以用：\r
\r
-   \`%X{traceId:-}\`\r
-   \`%X{spanId:-}\`\r
\r
例子：\r
\r
\`\`\`xml\r
<!-- 喺 appender 裡面 -->\r
<encoder>\r
	<pattern>[\${hostname:-} \${app_name:-}] [%X{traceId:-} %X{spanId:-}] %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} (%file:%line\\) - %msg%n</pattern>\r
</encoder>\r
\`\`\`\r
\r
註：\r
\r
-   呢度既 \`:-\` 係用黎分隔 key、value 既字符，佢既前面係 MDC key，後面係 value。\r
    -   佢同 Spring 既 \`:\` 一樣意思，只不過係 Logback 揀左用 \`:-\`。\r
    -   \`%X{key:-}\` 既意思係如果 \`key\` 呢個 MDC key 未有 data 既話就會出 empty string（唔好誤以為會出 \`-\`）。\r
    -   \`%X{key:-foo}\` 既意思係如果 \`key\` 呢個 MDC key 未有 data 既話就會出 \`foo\`。\r
\r
---\r
\r
### 3.3.2 Logstash Logback Encoder\r
\r
如果係用 Logstash Logback Encoder，亦即係 \`net.logstash.logback:logstash-logback-encoder\` 既 Maven dependency，咁我地就要用佢既 \`includeMdcKeyName\` XML element 去加入 trace ID 以及 span ID：\r
\r
\`\`\`xml\r
<!-- 喺 appender 裡面 -->\r
<encoder class="net.logstash.logback.encoder.LogstashEncoder">\r
	<includeContext>false</includeContext>\r
	<includeMdcKeyName>traceId</includeMdcKeyName>\r
	<includeMdcKeyName>spanId</includeMdcKeyName>\r
	<customFields>{ "host": "\${hostname:-}", "app_name": "\${app_name:-}" }</customFields>\r
</encoder>\r
\`\`\`\r
\r
加左之後，每一個 log entry 既 JSON data 裡面都會多左 \`traceId\` 以及 \`spanId\` 既 key-value pairs。\r
\r
---\r
\r
# 4 測試\r
\r
## 4.1 本地測試\r
\r
1. 我地需要 set up 至少兩個 Spring Boot microservices。\r
1. 全部 microservices 都要 expose 至少一個 HTTP REST endpoints。\r
1. 除左最後一個只會被 call 但唔會 initiate call 既 microservice，我地要為所有作為 upstream 既其他 microservices 寫 HTTP call 既 code。\r
    - HTTP REST call flow：Service A ➜ Service B ➜ Service C 等等。\r
    - HTTP REST call 既 implementation 可以係 \`RestTemplate\`、\`WebClient\`、\`RestClient\` 或者 OpenFeign。\r
1. 用 cURL call Service A 既 HTTP REST endpoint。\r
1. 檢查所有 microservices 既 console logs。\r
    - 應該會見到只有一個 \`32\` 個位長度 alphanumeric 既 trace ID。\r
    - 應該會見到每個 microservice 都有啲唔同既 \`16\` 個位長度 alphanumeric 既 span IDs。\r
1. 再用 cURL call Service A 既 HTTP REST endpoint。\r
1. 再檢查所有 microservices 既 console logs。\r
    - 應該會見到一個完全唔同既 trace ID。\r
    - 應該會見到每個 microservice 又有啲唔同既 span IDs。\r
\r
---\r
\r
## 4.2 測試發送 logs 去 ELK\r
\r
1. 我地需要 set up 至少兩個 Spring Boot microservices。\r
1. 我地要配置好全部 microservices 既 \`logback.xml\`，將 \`<appender>\` 既 \`<destination>\` 配置為 \`127.0.0.1:5000\`，咁啲 logs 就會發送到本地部署既 Logstash。\r
1. 全部 microservices 都要 expose 至少一個 HTTP REST endpoints。\r
1. 除左最後一個只會被 call 但唔會 initiate call 既 microservice，我地要為所有作為 upstream 既其他 microservices 寫 HTTP call 既 code。\r
    - HTTP REST call flow：Service A ➜ Service B ➜ Service C 等等。\r
    - HTTP REST call 既 implementation 可以係 \`RestTemplate\`、\`WebClient\`、\`RestClient\` 或者 OpenFeign。\r
1. 用 cURL call Service A 既 HTTP REST endpoint。\r
1. 打開 [http://localhost:5601](http://localhost:5601) 檢查我地喺 Kibana 既 data view。\r
    - 應該會見到只有一個 \`32\` 個位長度 alphanumeric 既 trace ID。\r
    - 應該會見到每個 microservice 都有啲唔同既 \`16\` 個位長度 alphanumeric 既 span IDs。\r
1. 再用 cURL call Service A 既 HTTP REST endpoint。\r
1. 再打開 [http://localhost:5601](http://localhost:5601) 檢查我地喺 Kibana 既 data view。\r
    - 應該會見到一個完全唔同既 trace ID。\r
    - 應該會見到每個 microservice 又有啲唔同既 span IDs。\r
1. 我地可以撳落 \`traceId\` column 既某一個 cell value 隔籬既 \`⊕\` 號（「Filter for this traceId」），咁就可以睇曬所有同呢個 trace ID 有關係既 logs。\r
\r
![](blog/2024-03/spring-boot-micrometer-tracing/kibana-search-logs-with-traceId.png)\r
\r
---\r
\r
# 5 參考資料\r
\r
-   [Spring 官方 blog - Observability with Spring Boot 3](https://spring.io/blog/2022/10/12/observability-with-spring-boot-3)\r
-   [Spring 官方文檔 - Observability Support](https://docs.spring.io/spring-framework/reference/integration/observability.html)\r
-   [GitHub - logfellow/logstash-logback-encoder - Logstash Logback Encoder - MDC fields](https://github.com/logfellow/logstash-logback-encoder?tab=readme-ov-file#mdc-fields)\r
-   [OpenTelemetry - Traces](https://opentelemetry.io/docs/concepts/signals/traces/)\r
-   [GitHub - w3c/trace-context - Trace Context HTTP Request Headers Format](https://github.com/w3c/trace-context/blob/main/spec/20-http_request_header_format.md)\r
`,_D=`# 1 Snyk 簡介\r
\r
Snyk 係一間英國既資訊安全公司，而家喺 Forbes Cloud 100 排頭 20 名內。\r
\r
佢最有用既一個資訊安全產品係佢既 Snyk Vulnerability Database。\r
\r
我地可以用 Snyk CLI 黎掃瞄一個 project，例如 Java Maven project，佢會將個 project 裡面既 Maven dependencies 拎去 check 下佢既 online 資料庫，睇下有冇 CVE，而如果有既話，佢會建議我地升級某個新版本既 dependency 去解決到個 CVE。\r
\r
個人自用既話，Snyk 係免費既，亦唔需要信用卡去註冊新帳號。\r
\r
---\r
\r
# 2 使用步驟\r
\r
## 2.1 準備 Java Maven 項目\r
\r
先準備一個 Java Maven project，我地可以用任何一個現成既 Spring Boot project。\r
\r
\`pom.xml\`：\r
\r
\`\`\`xml\r
<?xml version="1.0" encoding="UTF-8"?>\r
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\r
	<modelVersion>4.0.0</modelVersion>\r
\r
	<groupId>com.michael</groupId>\r
	<artifactId>Spring-Boot-3-Snyk-Test</artifactId>\r
	<version>1.0.0</version>\r
	<packaging>jar</packaging>\r
\r
	<name>Spring-Boot-3-Snyk-Test</name>\r
	<description>Spring-Boot-3-Snyk-Test</description>\r
\r
	<properties>\r
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r
		<java.version>17</java.version>\r
		<javac.source>17</javac.source>\r
		<javac.target>17</javac.target>\r
		<maven.compiler.target>17</maven.compiler.target>\r
		<maven.compiler.source>17</maven.compiler.source>\r
\r
		<start-class>code.MainApplication</start-class>\r
	</properties>\r
\r
	<parent>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-parent</artifactId>\r
		<version>3.2.4</version>\r
	</parent>\r
\r
	<dependencies>\r
		<dependency>\r
			<groupId>org.springframework.boot</groupId>\r
			<artifactId>spring-boot-starter-web</artifactId>\r
		</dependency>\r
		<dependency>\r
			<groupId>org.springframework.boot</groupId>\r
			<artifactId>spring-boot-starter-actuator</artifactId>\r
		</dependency>\r
	</dependencies>\r
\r
	<build>\r
		<plugins>\r
			<plugin>\r
				<groupId>org.springframework.boot</groupId>\r
				<artifactId>spring-boot-maven-plugin</artifactId>\r
				<executions>\r
					<execution>\r
						<goals>\r
							<goal>repackage</goal>\r
						</goals>\r
					</execution>\r
				</executions>\r
			</plugin>\r
		</plugins>\r
	</build>\r
</project>\r
\`\`\`\r
\r
---\r
\r
## 2.2 註冊 Snyk 帳號\r
\r
Snyk 只係畀用以下既第三方帳號既 OAuth 註冊方式：\r
\r
-   GitHub\r
-   Google\r
-   Docker ID\r
-   等等\r
\r
我地可以用 GitHub，之後喺 GitHub OAuth 版頁上面 authorize Snyk app。\r
\r
如果想 revoke 返呢個 OAuth authorization，可以登入 GitHub > Settings > Integrations 下面既 Applications > Authorized OAuth Apps > Snyk Login > Revoke。\r
\r
---\r
\r
## 2.3 取得 Snyk token\r
\r
登入 [https://app.snyk.io](https://app.snyk.io) > 左下角 email > Account settings > General > Auth Token > KEY 下面撳 click to show。\r
\r
---\r
\r
## 2.4 用 Snyk Docker image\r
\r
有齊 Maven project 以及 Snyk token，就可以用 Snyk 既 Docker image 黎掃瞄我地既 project。\r
\r
喺執行任何 command 之前，都要先設定好 Snyk token：\r
\r
\`\`\`bash\r
set SNYK_TOKEN=XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\r
\`\`\`\r
\r
### 2.4.1 \`snyk test\`\r
\r
\`\`\`bash\r
docker container run --rm --env SNYK_TOKEN -v "%CD%:/app" snyk/snyk:maven-3-jdk-17\r
\`\`\`\r
\r
亦可以指定埋 \`snyk test\` command：\r
\r
\`\`\`bash\r
docker container run --rm --env SNYK_TOKEN -v "%CD%:/app" snyk/snyk:maven-3-jdk-17 snyk test\r
\`\`\`\r
\r
我地可以喺 CLI console output 度睇到 Snyk 幫我地搵到既所有 CVE。\r
\r
![](blog/2024-04/java-snyk-scan/snyk-test-console-output.png)\r
\r
---\r
\r
### 2.4.2 \`snyk monitor\`\r
\r
如果想將 Maven project 既數據上載到 Snyk 網站，然後喺 Snyk 網站度睇詳細既 CVE 測試結果，就可以用 \`snyk monitor\` command：\r
\r
\`\`\`bash\r
docker container run --rm --env SNYK_TOKEN -v "%CD%:/app" snyk/snyk:maven-3-jdk-17 snyk monitor\r
\`\`\`\r
\r
我地可以喺 CLI console output 度搵到 Snyk 幫我地上載左既 snapshot report 既 URL。\r
\r
![](blog/2024-04/java-snyk-scan/snyk-monitor-console-output.png)\r
\r
喺瀏覽器打開佢就會見到詳細既 report（需要登入）：\r
\r
![](blog/2024-04/java-snyk-scan/snyk-monitor-snapshot-report-webpage.png)\r
\r
---\r
\r
# 3 參考資料\r
\r
-   [Snyk CLI cheat sheet](https://snyk.io/blog/snyk-cli-cheat-sheet/)\r
`,ND=`# 1 RabbitMQ 簡介\r
\r
可以睇返呢篇：[Spring 項目中訂閱 RabbitMQ](/blog/spring-cloud-stream-rabbitmq)\r
\r
---\r
\r
# 2 啟動 RabbitMQ\r
\r
我地可以用 Docker Desktop，然後利用 RabbitMQ 既官方 Docker image 執行 Docker container。\r
\r
Command 可以喺呢篇搵到：[Docker 基本操作 - 3.3.7 RabbitMQ](/blog/docker-basics#337-rabbitmq)。\r
\r
---\r
\r
# 3 動手玩\r
\r
## 3.1 建立 virtual host\r
\r
RabbitMQ 支援 multi-tenant，我地可以用 virtual host 黎 group 起相關既 resources。\r
\r
1. 去 Admin > Virtual Hosts。\r
1. 打開「Add a new virtual host」。\r
1. 輸入 Name，例如「rabbitmq-basics」。\r
1. 撳「Add virtual host」。\r
1. Refresh 頁面。\r
1. 右上角 > 揀新建立既 virtual host。\r
\r
完成之後，我地就可以喺呢個新既 virtual host 度玩啦！\r
\r
---\r
\r
## 3.2 測試 queue\r
\r
### 3.2.1 建立 queue\r
\r
1. 去 Queues and Streams。\r
1. 打開「Add a new queue」。\r
1. 我地可以揀 Virtual host、Type，亦可以由得佢用默認值。\r
1. 輸入 Name，例如 \`my-queue\`。\r
1. Durability 由得佢用默認既 \`Durable\` 就得。\r
1. Arguments 可以唔輸入。\r
1. 撳「Add queue」。\r
\r
完成之後，會見到有一個 queue：\r
\r
-   Name：\`my-queue\`\r
-   Type：\`classic\`\r
-   Features：\r
    -   \`D\` 係 durable。\r
    -   \`Args\` 裡面有 \`x-queue-type: classic\`。\r
-   State：\`idle\`\r
-   Messages：\`0\`\r
\r
---\r
\r
### 3.2.2 直接發送訊息到 queue\r
\r
1. 撳「my-queue」。\r
1. 打開「Publish message」。\r
1. Delivery mode 由得佢用默認既 \`1 - Non-persistent\` 就得。\r
1. Headers、Properties 可以唔輸入。\r
1. Payload 係我地想發送既 message body，可以輸入 \`foo\`。\r
1. Payload encoding 由得佢用默認既 \`String (default)\` 就得。\r
1. 撳「Publish message」。\r
1. 如果發送成功，佢會彈出灰色底既 popup，寫住「Message published.」，撳「Close」就得。\r
\r
---\r
\r
### 3.2.3 接收訊息\r
\r
1. 打開「Get messages」。\r
1. 將 Ack mode 改成 \`Automatic ack\`。\r
1. Encoding 由得佢用默認既 \`Auto string / base64\` 就得。\r
1. Messages 影響接收既訊息數量，可以改成 \`10\`，就算多過實際存在既訊息數量都冇問題。\r
1. 撳「Get Message(s)」。\r
\r
之後佢會顯示我地既「foo」訊息：\r
\r
-   Exchange：\`(AMQP default)\`\r
-   Routing key：\`my-queue\`\r
-   Redelivered：\`○\`（白色代表 \`false\`，requeue 既訊息先會係 \`true\`）\r
-   Properties\r
    -   delivery_mode：\`1\`\r
    -   headers：N/A\r
-   Payload：\`foo\`\r
\r
如果我地再撳「Get Message(s)」，佢就會彈出灰色底既 popup，寫住「Queue is empty」，咁係因為先前既訊息已經 acknowledge 左。\r
\r
---\r
\r
### 3.2.4 Requeue 訊息\r
\r
1. 重複上面既發送、接收步驟。\r
    - 喺接收既步驟，Ack mode 揀「Nack message requeue true」或者「Reject requeue true」。\r
\r
結果：\r
\r
1. 第一次接收訊息既時候，我地會見到 Redelivered 係「○」（\`false\`），因為呢個訊息係第一次接收。\r
1. 第二次接收訊息既時候，我地會見到 Redelivered 係「●」（\`true\`），因為呢個訊息喺第一次接收之後被 requeue，而家接收既係第二次傳遞同一個訊息。\r
\r
---\r
\r
## 3.3 測試 direct exchange\r
\r
### 3.3.1 建立 direct exchange\r
\r
1. 去 Exchanges。\r
1. 打開「Add a new exchange」。\r
1. 輸入 Name，例如 \`my-direct-exchange\`。\r
1. Type 揀「direct」。\r
1. 我地可以揀 Virtual host、Durability、Auto delete、Internal，亦可以由得佢用默認值。\r
1. Arguments 可以唔輸入。\r
1. 撳「Add exchange」。\r
\r
---\r
\r
### 3.3.2 建立 queue\r
\r
1. 可以參考返上面建立 queue 既步驟。\r
    - Name 可以輸入 \`my-direct-queue\`。\r
\r
---\r
\r
### 3.3.3 建立 binding\r
\r
1. 撳「my-direct-queue」。\r
1. 打開「Bindings (1)」。\r
1. From exchange 輸入 \`my-direct-exchange\`。\r
1. Routing key 輸入 \`foo\`。\r
1. Arguments 可以唔輸入。\r
1. 撳「Bind」。\r
\r
---\r
\r
### 3.3.4 發送、接收訊息\r
\r
1. 去「my-direct-exchange」度發送訊息。\r
    1. Routing key 輸入 \`foo\`（要同 binding key 一樣）。\r
    1. Headers、Properties 可以唔輸入。\r
    1. 輸入 Payload，例如 \`my message content\`。\r
1. 去「my-direct-queue」度接收訊息。\r
    1. 會收到 \`1\` 個訊息。\r
\r
如果我地發送既時候唔用 \`foo\` 作為 routing key（唔輸入，或者輸入另一個值），佢就會彈出黃色底既 popup，寫住「Message published, but not routed.」，咁係因為冇一個 binding 既 binding key 係 match 到呢個 routing key。\r
\r
---\r
\r
## 3.4 測試 fanout exchange\r
\r
### 3.4.1 建立 fanout exchange\r
\r
1. 去 Exchanges。\r
1. 打開「Add a new exchange」。\r
1. 輸入 Name，例如 \`my-fanout-exchange\`。\r
1. Type 揀「fanout」。\r
1. 我地可以揀 Virtual host、Durability、Auto delete、Internal，亦可以由得佢用默認值。\r
1. Arguments 可以唔輸入。\r
1. 撳「Add exchange」。\r
\r
---\r
\r
### 3.4.2 建立 queue\r
\r
1. 可以參考返上面建立 queue 既步驟。\r
    - Name 可以輸入 \`my-fanout-queue\`。\r
\r
---\r
\r
### 3.4.3 建立 binding\r
\r
1. 撳「my-fanout-queue」。\r
1. 打開「Bindings (1)」。\r
1. From exchange 輸入 \`my-fanout-exchange\`。\r
1. Routing key 輸入 \`foo\`，或者唔輸入都得。\r
1. Arguments 可以唔輸入。\r
1. 撳「Bind」。\r
\r
---\r
\r
### 3.4.4 發送、接收訊息\r
\r
1. 去「my-fanout-exchange」度發送訊息。\r
    1. Routing key、Headers、Properties 可以唔輸入。\r
    1. 輸入 Payload，例如 \`my message content\`。\r
1. 去「my-fanout-queue」度接收訊息。\r
    1. 會收到 \`1\` 個訊息。\r
\r
我地發送既時候用咩作為 routing key（輸入 \`foo\`、唔輸入，或者輸入另一個值），都一樣可以發送到訊息，咁係因為 fanout exchange 唔會理 routing key 或者 binding key。\r
\r
---\r
\r
## 3.5 測試 headers exchange\r
\r
### 3.5.1 建立 headers exchange\r
\r
1. 去 Exchanges。\r
1. 打開「Add a new exchange」。\r
1. 輸入 Name，例如 \`my-headers-exchange\`。\r
1. Type 揀「headers」。\r
1. 我地可以揀 Virtual host、Durability、Auto delete、Internal，亦可以由得佢用默認值。\r
1. Arguments 可以唔輸入。\r
1. 撳「Add exchange」。\r
\r
---\r
\r
### 3.5.2 建立 queue\r
\r
1. 可以參考返上面建立 queue 既步驟。\r
    - Name 可以輸入 \`my-headers-queue\`。\r
\r
---\r
\r
### 3.5.3 建立 binding\r
\r
1. 撳「my-headers-queue」。\r
1. 打開「Bindings (1)」。\r
1. From exchange 輸入 \`my-headers-exchange\`。\r
1. Routing key 唔洗輸入。\r
1. Arguments 輸入：\r
    - \`h1\` = \`foo\`（\`String\`）\r
    - \`h2\` = \`bar\`（\`String\`）\r
1. 撳「Bind」。\r
\r
---\r
\r
### 3.5.4 發送、接收訊息\r
\r
1. 去「my-headers-exchange」度發送訊息。\r
    1. Routing key、Properties 可以唔輸入。\r
    1. Headers 輸入：\r
        - \`h1\` = \`foo\`（\`String\`）\r
        - \`h2\` = \`bar\`（\`String\`）\r
    1. 輸入 Payload，例如 \`my message content\`。\r
1. 去「my-headers-queue」度接收訊息。\r
    1. 會收到 \`1\` 個訊息。\r
\r
如果我地發送既時候，headers 一定要 match 曬 binding 既 arguments，只要有任何一個唔 match，佢都會彈出黃色底既 popup，寫住「Message published, but not routed.」，咁係因為冇一個 binding 既 arguments 係 match 到呢個訊息既 headers。\r
\r
---\r
\r
## 3.6 測試 topic exchange\r
\r
### 3.6.1 建立 topic exchange\r
\r
1. 去 Exchanges。\r
1. 打開「Add a new exchange」。\r
1. 輸入 Name，例如 \`my-topic-exchange\`。\r
1. Type 揀「topic」。\r
1. 我地可以揀 Virtual host、Durability、Auto delete、Internal，亦可以由得佢用默認值。\r
1. Arguments 可以唔輸入。\r
1. 撳「Add exchange」。\r
\r
---\r
\r
### 3.6.2 建立 queue\r
\r
1. 可以參考返上面建立 queue 既步驟。\r
    - Name 可以輸入 \`my-topic-queue\`。\r
\r
---\r
\r
### 3.6.3 建立 binding\r
\r
1. 撳「my-topic-queue」。\r
1. 打開「Bindings (1)」。\r
1. From exchange 輸入 \`my-topic-exchange\`。\r
1. Routing key 輸入 \`foo.#\`。\r
1. Arguments 可以唔輸入。\r
1. 撳「Bind」。\r
\r
---\r
\r
### 3.6.4 發送、接收訊息\r
\r
1. 去「my-topic-exchange」度發送訊息。\r
    1. Routing key 輸入 \`foo.123\`（要係一個 match 到 \`foo.#\` 接受既值）。\r
    1. Headers、Properties 可以唔輸入。\r
    1. 輸入 Payload，例如 \`my message content\`。\r
1. 去「my-topic-queue」度接收訊息。\r
    1. 會收到 \`1\` 個訊息。\r
\r
如果我地發送既時候唔用 match 到個 binding key 既值作為 routing key（唔輸入，或者輸入唔 match 既值），佢就會彈出黃色底既 popup，寫住「Message published, but not routed.」，咁係因為冇一個 binding 既 binding key 係 match 到呢個 routing key。\r
\r
✅ \`foo.#\` binding key 接受既 routing key 例子：\r
\r
-   \`foo\`、\`foo.\`、\`foo..\`、\`foo.#\`、\`foo.1\`、\`foo.a\`、\`foo.abc\`\r
\r
❌ \`foo.#\` binding key 唔接受既 routing key 例子：\r
\r
-   唔輸入\r
-   \`bar.\`、\`bar.123\`\r
\r
---\r
\r
## 3.7 測試 dead letter exchange\r
\r
### 3.7.1 建立 business exchange\r
\r
-   Name：\`biz-exchange\`\r
-   Type：\`direct\`\r
\r
---\r
\r
### 3.7.2 建立 business queue\r
\r
-   Name：\`biz-queue\`\r
-   Arguments\r
    -   \`x-dead-letter-exchange\`：\`my-dlx\`\r
    -   \`x-dead-letter-routing-key\`：\`my-dlkey\`\r
\r
---\r
\r
### 3.7.3 建立 business binding\r
\r
-   Exchange：\`biz-exchange\`\r
-   Queue：\`biz-queue\`\r
-   Binding key：\`biz-key\`\r
\r
---\r
\r
### 3.7.4 建立 dead letter exchange\r
\r
-   Name：\`my-dlx\`\r
-   Type：\`direct\`\r
\r
---\r
\r
### 3.7.5 建立 dead letter queue\r
\r
-   Name：\`my-dlq\`\r
-   Arguments（可選）\r
    -   \`x-dead-letter-exchange\`：\`biz-exchange\`（\`String\`）\r
    -   \`x-dead-letter-routing-key\`：\`biz-key\`（\`String\`）\r
    -   \`x-message-ttl\`：\`10000\`（\`Number\`）（等於 \`10\` 秒）\r
\r
---\r
\r
### 3.7.6 建立 dead letter binding\r
\r
-   Exchange：\`my-dlx\`\r
-   Queue：\`my-dlq\`\r
-   Binding key：\`my-dlkey\`\r
\r
---\r
\r
### 3.7.7 發送、接收訊息\r
\r
1. 去「biz-exchange」度發送訊息。\r
    1. Routing key 輸入 \`biz-key\`。\r
    1. Headers、Properties 可以唔輸入。\r
    1. 輸入 Payload，例如 \`my message content\`。\r
1. 去「biz-queue」度接收訊息。\r
    1. Ack mode 揀「Reject requeue false」。\r
    1. 會收到 \`1\` 個訊息。\r
1. 去「my-dlq」度接收訊息。\r
    1. Ack mode 揀「Nack message requeue true」。\r
    1. 會收到 \`1\` 個訊息。\r
\r
如果 dead letter queue 有設定度可選既 arguments：\r
\r
1. 等幾秒（message TTL 係 \`10\` 秒）。\r
1. 去「biz-queue」度接收訊息。\r
    1. Ack mode 揀「Nack message requeue true」。\r
    1. 會收到 \`1\` 個訊息。\r
\r
解釋：\r
\r
-   上面既例子可以達到 retry dead letter queue 裡面既訊息既效果。\r
    -   當訊息喺「biz-queue」度接收失敗，被轉移到「my-dlx」然後再到「my-dlq」之後，經過一段時間，當 message TTL 過期既時候，訊息又會自動被轉移到「biz-exchange」然後再到「biz-queue」。\r
\r
---\r
\r
# 4 筆記\r
\r
## 4.1 Exchange 選項\r
\r
| 選項         | 解釋                                                                                                                                     |\r
| ------------ | ---------------------------------------------------------------------------------------------------------------------------------------- |\r
| Durable      | 個 exchange 會喺 RabbitMQ 重新啟動之後都繼續存在。                                                                                       |\r
| Auto-delete  | 當最後一個 binding 被解除，RabbitMQ 就會自動刪除呢個 exchange。                                                                          |\r
| Direct type  | Binding key 會係 exact match。                                                                                                           |\r
| Fanout type  | 唔需要 binding key，就算提供左都冇用，所有 bind 左既 queues 都必定會收到所有訊息。                                                       |\r
| Headers type | 用特定既 key-value arguments 黎 match。                                                                                                  |\r
| Topic type   | Binding key 可以係 exact match，亦可以運用 wildcard characters——\`*\` 代表 wildcard 單字；\`#\` 代表 wildcard 任意長度（\`0\` 至 \`N\`）既文字。 |\r
\r
---\r
\r
## 4.2 Queue 選項\r
\r
| 選項                                                     | 解釋                                                                                                                                                                                                              |\r
| -------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| Durable                                                  | 個 queue 會喺 RabbitMQ 重新啟動之後都繼續存在。                                                                                                                                                                   |\r
| Auto-delete                                              | 當最後一個 consumer cancel 或者 disconnect 左，RabbitMQ 就會自動刪除呢個 queue。                                                                                                                                  |\r
| Exclusive                                                | 當佢所屬既 connection close 左，RabbitMQ 就會自動刪除呢個 queue。                                                                                                                                                 |\r
| Message TTL（\`x-message-ttl\` arg）                       | Queue level 既 time-to-live，一個訊息如果超過呢個時間就會 expire，consumers 唔會收到已經 expire 左既訊息。如果有 dead letter exchange 既 args，當訊息喺 head 位置，RabbitMQ 就會將佢轉移去 dead letter exchange。 |\r
| Auto-expire（\`x-expires\` arg）                           | 數值係 millisecond 數字（\`5000\` 等於 \`5\` 秒）。當冇任何 consumer 連接住呢個 queue（一建立 queue 既時候都算），RabbitMQ 就會開始計時，一到左時間，RabbitMQ 就會自動刪除呢個 queue。                                |\r
| Single active consumer（\`x-single-active-consumer\` arg） | 如果我地既訊息一定要按入 queue 既先後次序處理，如果想保持住多個相同 consumer 既 app instances，咁我地可以用 single active consumer 選項，咁所有訊息都只會傳遞到同一個 consumer，保證處理訊息既先後次序。          |\r
| Dead letter exchange（\`x-dead-letter-exchange\`）         | 如果傳遞失敗，RabbitMQ 可能會將佢轉移到呢個 dead letter exchange。                                                                                                                                                |\r
| Dead letter routing key（\`x-dead-letter-routing-key\`）   | RabbitMQ 將訊息轉移到 dead letter exchange 既時候會用既 routing key。                                                                                                                                             |\r
\r
---\r
\r
## 4.3 Binding 選項\r
\r
| 選項                            | 解釋                                                                                                                                                                                                                     |\r
| ------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\r
| Binding key（或者 routing key） | 提供 filter 訊息既作用。一個訊息如果要由 exchange \`X1\` 去到 queue \`Q1\`，呢個訊息既 routing key 一定要 match 到 \`Q1\` 同 \`X1\` 之間既 binding 既 binding key。我地應該根據 exchange type 去輸入符合我地需要既 binding key。 |\r
| Arguments                       | 用喺 headers exchange 既 bindings 度，只有 match 到曬所有 arguments 既值既訊息先會 route 到去個 queue 度。                                                                                                               |\r
\r
---\r
\r
## 4.4 訊息發送選項\r
\r
| 選項          | 解釋                                                                                                                               |\r
| ------------- | ---------------------------------------------------------------------------------------------------------------------------------- |\r
| Delivery mode | Persistent（\`1\`）會先寫落 persistent storage（disk），如果 RabbitMQ crash 左既話都會喺返度。Non-persistent（\`2\`）就唔會寫落 disk。 |\r
\r
---\r
\r
## 4.5 訊息接收選項\r
\r
| 選項   | 解釋                                                                      |\r
| ------ | ------------------------------------------------------------------------- |\r
| Reject | 係 AMQP 既標準，用黎拒絕單一訊息。                                        |\r
| Nack   | Negative acknowledgement 係 RabbitMQ 獨有既功能，可以同時拒絕對多個訊息。 |\r
\r
---\r
\r
# 5 參考資料\r
\r
-   [RabbitMQ 官方文檔 - Negative Acknowledgements](https://www.rabbitmq.com/docs/nack)\r
-   [RabbitMQ 官方文檔 - Time-to-Live and Expiration](https://www.rabbitmq.com/docs/ttl)\r
-   [RabbitMQ 官方文檔 - Dead Letter Exchanges](https://www.rabbitmq.com/docs/dlx)\r
`,BD='# 1 Java app 配置方式\r\n\r\n純 Java apps 既配置方式有以下幾種：\r\n\r\n-   Environment variables\r\n    -   `JAVA_TOOL_OPTIONS`\r\n-   System properties\r\n-   Command line arguments\r\n-   自定義檔案\r\n\r\n因為係純 Java apps 既關係，所以係由開發者決定個程式要由以上邊一度地方讀取配置，以及配置既優先次序。\r\n\r\n簡單黎講：\r\n\r\n-   開發者可以令個程式只由以上既其中一度地方讀取配置，唔理會其他地方既配置。\r\n-   開發者為左令個程式既配置更加方便、更有彈性，可以支援幾種方式黎讀取配置。\r\n    -   開發者要自己寫讀取配置既邏輯，包括優先次序。\r\n\r\n---\r\n\r\n# 2 Spring Boot 配置方式\r\n\r\nSpring Boot 作為一個全面既 application framework，提供左一個讀取配置既規範。\r\n\r\nSpring Boot 原生支援既配置方式包括以下幾種（按照優先次序排列）：\r\n\r\n1.  Command line arguments\r\n1.  System properties\r\n1.  Environment variables\r\n    -   `JAVA_TOOL_OPTIONS`\r\n1.  `application` 檔（副檔名（按照優先次序）：`properties`、`yml`、`yaml`）\r\n\r\n另外仲有 Spring Cloud Config，可以睇返呢篇：[Spring Cloud Config——使用獨立既 Git 配置 repo](/blog/spring-cloud-config-git)。\r\n\r\n當然，作為一個 Java app，我地都仲可以用自定義檔案既方式。\r\n\r\n## 2.1 配置方式詳解\r\n\r\n| 配置方式                                      | 描述                                                                                                                                                                                                                                             | 例子                                                                                             |\r\n| --------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------ |\r\n| Command line arguments                        | 執行 `java` 既果句 command 裡面 JAR 檔名後面既所有野都係屬於 command line arguments，但 Spring Boot 只會認帶有 `--` prefix 既 arguments。Java app 既 main method 要 pass `args` 入 Spring，即係 `SpringApplication.run(MainClass.class, args)`。 | `java -jar app.jar --server.port=8081`                                                           |\r\n| System properties                             | 執行 `java` 既果句 command 裡面既所有 `-D` options，唔可以放喺 JAR 檔名既後面。如果有幾個相同既 property 名既 `-D` options，則後者優先。                                                                                                         | `java -Dlogging.level.root=ERROR -Dlogging.level.org.springframework.context=DEBUG -jar app.jar` |\r\n| Environment variables                         | 有好多方式去設置佢地，如果計手動既話，就係執行 `java` command 之前既所有設置 environment variables 既 commands。                                                                                                                                 | Windows：`set server.port=8081`；Linux：`export server.port=8081` 或者 `source env.txt`。        |\r\n| `JAVA_TOOL_OPTIONS`                           | 係 Java 比較特殊既 environment variable，因為佢會變成 system properties。如果冇辦法用 `-D`（例如改唔到 Dockerfile 既 `ENTRYPOINT`），咁就可以用佢。可以用 `java -version` 檢查。執行 `java` command 之後都會顯示。                               | Windows：`set "JAVA_TOOL_OPTIONS=-Xmx1024m -Dserver.port=8081"`。                                |\r\n| `application.yml`、`application-dev.yml` 等等 | 係 Spring Boot 默認會讀取既配置檔案，檔案內容既格式可以係 YAML 或者 Java properties（同副檔名一致）。                                                                                                                                            | YAML：`server.port: 8081`；Java properties：`server.port=8081`                                   |\r\n\r\n---\r\n\r\n# 3 參考資料\r\n\r\n-   [Spring 官方文檔 - 2. Externalized Configuration](https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config)\r\n',HD=`# 1 JMeter 簡介\r
\r
Apache JMeter 係一款專門做 API performance testing 既工具，佢可以用 multithreading 去模擬多個 users（或者 downstream clients）同時 request 需要測試既 HTTP APIs，然後佢會紀錄低 HTTP response、throughput、耗時等等既數據。\r
\r
## 1.1 下載 JMeter\r
\r
[JMeter 官網 - Download Apache JMeter](https://jmeter.apache.org/download_jmeter.cgi)\r
\r
---\r
\r
# 2 動手做\r
\r
## 2.1 建立 Spring Boot web microservice\r
\r
### 2.1.1 Maven dependencies\r
\r
我地會加入 Spring Security 去令個 microservice 既 HTTP requests respond 得慢啲。\r
\r
\`\`\`xml\r
<parent>\r
	<groupId>org.springframework.boot</groupId>\r
	<artifactId>spring-boot-starter-parent</artifactId>\r
	<version>3.2.5</version>\r
</parent>\r
\r
<dependencies>\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-web</artifactId>\r
	</dependency>\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-security</artifactId>\r
	</dependency>\r
</dependencies>\r
\`\`\`\r
\r
---\r
\r
### 2.1.2 寫 Java code\r
\r
\`SampleController.java\`：\r
\r
\`\`\`java\r
@RestController\r
@RequestMapping("/test")\r
public class SampleController {\r
\r
    @GetMapping("/uppercase/{value}")\r
    public String uppercase(@PathVariable(name = "value", required = true) String value) {\r
        return value.toUpperCase();\r
    }\r
\r
    @GetMapping("/lowercase/{value}")\r
    public String lowercase(@PathVariable(name = "value", required = true) String value) {\r
        return value.toLowerCase();\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
### 2.1.3 Application 配置\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
spring:\r
  security:\r
    user:\r
      name: username\r
      password: password\r
\`\`\`\r
\r
---\r
\r
## 2.2 建立 JMeter JMX 檔\r
\r
我地會用 JMeter 既介面幫我地建立 JMX 檔，我地會將個 JMX 檔保存做 \`jmeter.jmx\`。\r
\r
### 2.2.1 新增 thread group\r
\r
1. Right-click \`Test Plan\` > Add > Threads (Users) > Thread Group。\r
1. 將 Number of Threads (users) 改成 \`50\`。\r
1. 將 Ramp-up period (seconds) 改成 \`0\`。\r
1. 將 Loop count 改成 \`20\`。\r
\r
---\r
\r
### 2.2.2 新增 HTTP authorization manager\r
\r
因為我地有用到 Spring Security 去做 basic authentication，所以我地要加入 HTTP authorization manager：\r
\r
1. Right-click \`Thread Group\` > Add > Config Element > HTTP Authorization Manager。\r
1. 撳下面「Add」。\r
1. Username 輸入 \`username\`。\r
1. Password 輸入 \`password\`。\r
\r
---\r
\r
### 2.2.3 新增 user parameters\r
\r
我地可以用 user parameters 黎定義 variables。\r
\r
1. Right-click \`Thread Group\` > Add > Pre Processors > User Parameters。\r
1. 撳下面「Add Variable」。\r
1. Name 輸入 \`uppercaseTestInputValue\`。\r
1. User_1 輸入 \`\${__RandomString(10, abcdefghijklmnopqrstuvwxyz)}\`。\r
1. 撳下面「Add Variable」。\r
1. Name 輸入 \`lowercaseTestInputValue\`。\r
1. User_1 輸入 \`\${__RandomString(10, ABCDEFGHIJKLMNOPQRSTUVWXYZ)}\`。\r
\r
註：\r
\r
-   我地應該用 user parameters 而唔係 user-defined variables。\r
    -   因為 user parameters 喺每次 HTTP request 都會 reset；相反，user-defined variables 一直都會維持一樣既 values。\r
\r
---\r
\r
### 2.2.4 新增 HTTP requests\r
\r
我地會喺 HTTP requests 裡面用返之前定義既 user parameters 作為隨機既測試數據。\r
\r
-   新增測試 \`/test/uppercase/{value}\` 既 HTTP request。\r
    1. Right-click \`Thread Group\` > Add > Sampler > HTTP Request。\r
    1. 將 Name 改成 \`/test/uppercase/{value}\`。\r
    1. Protocol 輸入 \`http\`。\r
    1. Server Name or IP 輸入 \`localhost\`。\r
    1. Port Number 輸入 \`8080\`。\r
    1. Path 輸入 \`/test/uppercase/\${uppercaseTestInputValue}\`。\r
-   新增測試 \`/test/lowercase/{value}\` 既 HTTP request。\r
    1. Right-click \`/test/uppercase/{value}\` > Duplicate。\r
    1. 將 Name 改成 \`/test/lowercase/{value}\`。\r
    1. 將 Path 改成 \`/test/lowercase/\${lowercaseTestInputValue}\`。\r
\r
---\r
\r
### 2.2.5 新增 view results tree\r
\r
1. Right-click \`Thread Group\` > Add > Listener > View Results Tree。\r
\r
---\r
\r
### 2.2.6 新增 summary report\r
\r
1. Right-click \`Thread Group\` > Add > Listener > Summary Report。\r
\r
---\r
\r
# 3 測試\r
\r
我地配置左：\r
\r
-   \`50\` 個 users\r
-   \`20\` 個 loops\r
-   \`2\` 個 HTTP requests\r
\r
總共就會發起 \`50 × 20 × 2\` 即係 \`2000\` 個 HTTP requests。\r
\r
## 3.1 用介面執行\r
\r
1. 撳上面 menu bar 下一行既綠色「▶️」掣開始 performance testing。\r
1. 等佢運行一陣。\r
1. 檢視 Views Results Tree，我地會見到所有 HTTP responses 都係綠色，即係成功。\r
1. 檢視 Summary Report，我地會見到「TOTAL」既 throughput 係 \`254.2/sec\`。\r
\r
![](blog/2024-05/jmeter-perf-test/jmeter-view-results-tree.png)\r
\r
![](blog/2024-05/jmeter-perf-test/jmeter-summary-report.png)\r
\r
---\r
\r
## 3.2 用 command 執行\r
\r
\`\`\`bash\r
mkdir "output"\r
jmeter -n -t "jmeter.jmx" -l "./output/result.jtl" -e -o "./output/dashboard"\r
\`\`\`\r
\r
執行完之後，JMeter 會生成：\r
\r
-   HTML dashboard 檔案，我地可以用瀏覽器打開睇。\r
-   JTL 檔案，係包含所有 HTTP requests（喺我地既情況就係 \`2000\` 個）既結果既 raw data，裡面係 CSV 格式。\r
\r
![](blog/2024-05/jmeter-perf-test/jmeter-command-line-console.png)\r
\r
![](blog/2024-05/jmeter-perf-test/jmeter-dashboard-html-folder-structure.png)\r
\r
![](blog/2024-05/jmeter-perf-test/jmeter-dashboard-html-report.png)\r
\r
---\r
\r
# 4 參考資料\r
\r
-   [JMeter 官方文檔 - Building a Web Test Plan](https://jmeter.apache.org/usermanual/build-web-test-plan.html)\r
-   [JMeter 官方文檔 - Full list of command-line options](https://jmeter.apache.org/usermanual/get-started.html#options)\r
-   [JMeter 官方文檔 - Functions and Variables](https://jmeter.apache.org/usermanual/functions.html)\r
-   [JMeter 官方文檔 - User Parameters](https://jmeter.apache.org/usermanual/component_reference.html#User_Parameters)\r
-   [How to generate Dashboard Report in JMeter](https://jmetervn.com/2017/01/04/how-to-generate-dashboard-report-in-jmeter/)\r
-   [StackOverflow - How can I generate Test result (CSV) file and JTL file in jmeter?](https://stackoverflow.com/questions/39509071/how-can-i-generate-test-result-csvfile-and-jtl-file-in-jmeter)\r
-   [StackOverflow - JMeter understanding ramp-up](https://stackoverflow.com/questions/17288545/jmeter-understanding-ramp-up)\r
`,qD=`# 1 Nexus 簡介\r
\r
Nexus 係 Sonatype 公司既一個 artifact repository manager 產品，可以畀我地儲存唔同 package managers 既 artifacts，包括：\r
\r
-   Maven artifacts，例如 BOM、JAR、plugin、archetype\r
-   npm artifacts\r
-   Docker image artifacts\r
\r
官網：[Sonatype Nexus repository](https://www.sonatype.com/products/sonatype-nexus-repository)\r
\r
## 1.1 關於 repositories\r
\r
根據 Nexus 既默認 repositories 既設定：\r
\r
| Repository        | 類型     | 描述                                                                                                                                      |\r
| ----------------- | -------- | ----------------------------------------------------------------------------------------------------------------------------------------- |\r
| \`maven-central\`   | \`proxy\`  | Nexus 會幫我地自動 proxy 去 Maven Central public repository 度下載 artifacts，同埋幫我地 cache 低呢啲 artifacts 喺 Nexus 既儲存空間裡面。 |\r
| \`maven-public\`    | \`group\`  | 呢個 repository group 默認包括 \`maven-central\`、\`maven-releases\` 以及 \`maven-snapshots\`。                                                 |\r
| \`maven-releases\`  | \`hosted\` | 一個儲存 Maven artifacts 既 Nexus 儲存空間，會儲存正式版本（冇 \`-SNAPSHOT\` suffix 既版本號碼）既 Maven artifacts。                        |\r
| \`maven-snapshots\` | \`hosted\` | 一個儲存 Maven artifacts 既 Nexus 儲存空間，會儲存帶有 \`-SNAPSHOT\` suffix 既版本號碼既 Maven artifacts。                                  |\r
\r
---\r
\r
# 2 步驟\r
\r
## 2.1 建立 Nexus server\r
\r
### 2.1.1 啟動 Nexus server\r
\r
我地可以用 Sonatype Nexus 既 Docker image：\r
\r
\`\`\`bash\r
docker container run -d --rm -p 8081:8081 -v "C:/docker-data/nexus:/nexus-data" --name nexus sonatype/nexus3:latest\r
\`\`\`\r
\r
執行完之後，要等佢幾分鐘去啟動。\r
\r
---\r
\r
### 2.1.2 設置 admin 帳號\r
\r
第一次建立 Nexus server 既話，我地需要改 admin 帳號既密碼。\r
\r
1. 初始密碼可以喺 Docker container 裡面既 \`/nexus-data/admin.password\` 檔案度搵到。\r
    - \`\`\`bash\r
      docker container exec nexus cat /nexus-data/admin.password\r
      \`\`\`\r
1. 喺瀏覽器開啟 [http://localhost:8081](http://localhost:8081)。\r
1. 輸入個初始密碼，然後輸入新密碼：\`password\`。\r
1. 可以揀「Enable anonymous access」。\r
\r
之後就完成。\r
\r
---\r
\r
## 2.2 本地 user-specific Maven settings 配置\r
\r
將下面既檔案放喺 \`%USERPROFILE%/.m2/settings.xml\`：\r
\r
\`\`\`xml\r
<settings xmlns="http://maven.apache.org/SETTINGS/1.2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r
  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.2.0 http://maven.apache.org/xsd/settings-1.2.0.xsd">\r
\r
	<servers>\r
		<server>\r
			<id>nexus-maven</id>\r
			<username>admin</username> <!-- Nexus 既登入帳號 -->\r
			<password>password</password> <!-- Nexus 既登入密碼 -->\r
		</server>\r
		<server>\r
			<id>nexus-snapshots</id>\r
			<username>admin</username> <!-- Nexus 既登入帳號 -->\r
			<password>password</password> <!-- Nexus 既登入密碼 -->\r
		</server>\r
		<server>\r
			<id>nexus-releases</id>\r
			<username>admin</username> <!-- Nexus 既登入帳號 -->\r
			<password>password</password> <!-- Nexus 既登入密碼 -->\r
		</server>\r
	</servers>\r
\r
</settings>\r
\`\`\`\r
\r
---\r
\r
## 2.3 Maven 測試項目\r
\r
我地可以建立一個 Maven Java library 測試項目。\r
\r
\`pom.xml\` 例子：\r
\r
\`\`\`xml\r
<?xml version="1.0" encoding="UTF-8"?>\r
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\r
	<modelVersion>4.0.0</modelVersion>\r
\r
	<groupId>com.michael</groupId>\r
	<artifactId>my-lib</artifactId>\r
	<version>1.0.0</version>\r
	<packaging>jar</packaging>\r
\r
	<name>my-lib</name>\r
	<description>my-lib</description>\r
\r
	<properties>\r
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r
		<java.version>17</java.version>\r
		<javac.source>17</javac.source>\r
		<javac.target>17</javac.target>\r
		<maven.compiler.target>17</maven.compiler.target>\r
		<maven.compiler.source>17</maven.compiler.source>\r
	</properties>\r
\r
	<dependencies>\r
		<dependency>\r
			<groupId>org.apache.commons</groupId>\r
			<artifactId>commons-lang3</artifactId>\r
			<version>3.14.0</version>\r
		</dependency>\r
	</dependencies>\r
\r
	<!-- 影響 mvn compile 會喺邊度 pull artifacts -->\r
	<repositories>\r
		<repository>\r
			<id>nexus-maven</id>\r
			<url>http://localhost:8081/repository/maven-public</url>\r
		</repository>\r
	</repositories>\r
\r
	<!-- 影響 mvn deploy 會 upload 呢個 artifact 去邊度 -->\r
	<distributionManagement>\r
		<snapshotRepository>\r
			<id>nexus-snapshots</id>\r
			<url>http://localhost:8081/repository/maven-snapshots</url>\r
		</snapshotRepository>\r
		<repository>\r
			<id>nexus-releases</id>\r
			<url>http://localhost:8081/repository/maven-releases</url>\r
		</repository>\r
	</distributionManagement>\r
</project>\r
\`\`\`\r
\r
之後寫啲 Java code 就得。\r
\r
---\r
\r
## 2.4 測試\r
\r
### 2.4.1 測試上載正式版本\r
\r
1. 建立好個 Maven Java library 測試項目。\r
1. 刪除本地 Maven repo 既 \`%USERPROFILE%/.m2/repository/org/apache/commons/commons-lang3/3.14.0\`，令 Maven 要重新下載佢既 artifact。\r
1. 喺個 Maven Java library 測試項目裡面執行 \`mvn clean deploy\`。\r
1. Maven CLI 既 console log 會顯示：\r
    - \`\`\`plaintext\r
      Downloaded from nexus-maven: http://localhost:8081/repository/maven-public/org/apache/commons/commons-lang3/3.14.0/commons-lang3-3.14.0.pom\r
      Downloaded from nexus-maven: http://localhost:8081/repository/maven-public/org/apache/commons/commons-lang3/3.14.0/commons-lang3-3.14.0.jar\r
      ...\r
      Uploaded to nexus-releases: http://localhost:8081/repository/maven-releases/com/michael/my-lib/1.0.0/my-lib-1.0.0.jar\r
      Uploaded to nexus-releases: http://localhost:8081/repository/maven-releases/com/michael/my-lib/1.0.0/my-lib-1.0.0.pom\r
      Uploaded to nexus-releases: http://localhost:8081/repository/maven-releases/com/michael/my-lib/maven-metadata.xml\r
      \`\`\`\r
1. 檢查 \`maven-central\` 以及 \`maven-releases\` 有冇多左 JAR artifacts 以及 POM 檔。\r
    - 喺瀏覽器開啟 [Nexus maven-central 介面](http://localhost:8081/#browse/browse:maven-central) 或者 [maven-central index page](http://localhost:8081/service/rest/repository/browse/maven-central/)，然後檢查：\r
        - \`/org/apache/commons/commons-lang3/3.14.0\`\r
            - \`commons-lang3-3.14.0.jar\`\r
            - \`commons-lang3-3.14.0.pom\`\r
    - 喺瀏覽器開啟 [Nexus maven-releases 介面](http://localhost:8081/#browse/browse:maven-releases) 或者 [maven-releases index page](http://localhost:8081/service/rest/repository/browse/maven-releases/)，然後檢查：\r
        - \`/com/michael/my-lib\`\r
            - \`/1.0.0\`\r
                - \`my-lib-1.0.0.jar\`\r
                - \`my-lib-1.0.0.pom\`\r
            - \`maven-metadata.xml\`\r
1. 如果再執行 \`mvn clean deploy\` 既話，Maven CLI 會失敗，咁係因為 Nexus 唔畀我地 overwrite 正式版本既 artifacts。\r
\r
---\r
\r
### 2.4.2 測試上載 \`SNAPSHOT\` 版本\r
\r
1. 將個 Maven Java library 測試項目既 \`pom.xml\` 裡面既 \`<version>\` 改成 \`1.0.0-SNAPSHOT\`。\r
1. 喺個 Maven Java library 測試項目裡面執行 \`mvn clean deploy\`。\r
1. Maven CLI 既 console log 會顯示：\r
    - \`\`\`plaintext\r
      Uploaded to nexus-snapshots: http://localhost:8081/repository/maven-snapshots/com/michael/my-lib/1.0.0-SNAPSHOT/my-lib-1.0.0-20240512.140606-1.jar\r
      Uploaded to nexus-snapshots: http://localhost:8081/repository/maven-snapshots/com/michael/my-lib/1.0.0-SNAPSHOT/my-lib-1.0.0-20240512.140606-1.pom\r
      Uploaded to nexus-snapshots: http://localhost:8081/repository/maven-snapshots/com/michael/my-lib/1.0.0-SNAPSHOT/maven-metadata.xml\r
      Uploaded to nexus-snapshots: http://localhost:8081/repository/maven-snapshots/com/michael/my-lib/maven-metadata.xml\r
      \`\`\`\r
1. 檢查 \`maven-snapshots\` 有冇多左 JAR artifacts 以及 POM 檔。\r
    - 喺瀏覽器開啟 [Nexus maven-snapshots 介面](http://localhost:8081/#browse/browse:maven-snapshots) 或者 [maven-snapshots index page](http://localhost:8081/service/rest/repository/browse/maven-snapshots/)，然後檢查：\r
        - \`/com/michael/my-lib\`\r
            - \`/1.0.0-SNAPSHOT\`\r
                - \`/1.0.0-20240512.140606-1\`\r
                    - \`my-lib-1.0.0-20240512.140606-1.jar\`\r
                    - \`my-lib-1.0.0-20240512.140606-1.pom\`\r
                - \`maven-metadata.xml\`\r
            - \`maven-metadata.xml\`\r
1. 如果再執行 \`mvn clean deploy\` 既話，Maven CLI 都會成功上載到，咁係因為再次上載既檔案名會同之前上載既唔同。\r
    - \`SNAPSHOT\` 版本既 artifact 檔案名包含左 timestamp，而且數字部分亦會自動 increment，例如 \`1.0.0-20240512.141015-2\`。\r
    - 對用呢個 artifact 作為 dependency 既 Maven 項目黎講，dependency 版本號碼都一樣係 \`1.0.0-SNAPSHOT\`。\r
    - 如果更新左同一個 artifact 既 \`SNAPSHOT\` 版本，喺 downstream projects 執行 \`mvn clean compile\` 之前：\r
        - 最好既方法：先手動刪除本地 Maven repo 既 cache，令 Maven 要重新下載呢個 \`SNAPSHOT\` 版本最新既 artifact；\r
        - 次選既方法：用 Maven CLI 既 \`-U\` option。\r
\r
---\r
\r
# 3 參考資料\r
\r
-   [Docker Hub - sonatype/nexus3](https://hub.docker.com/r/sonatype/nexus3/)\r
-   [Maven 官方文檔 - Settings (user-specific configuration)](https://maven.apache.org/ref/3.9.6/maven-settings/settings.html)\r
-   [Force Repository Update with Maven](https://www.baeldung.com/maven-force-update)\r
`,FD=`# 1 Vite 簡介\r
\r
幾年前，ReactJS 既開發者應該都會用 Create-React-App 呢一個 npm module 作為 React 項目既 template 項目生成器，不過 Create-React-App 已經超過 2 年冇更新，可以被視為已死既項目。\r
\r
Vite 係由 VueJS 既原作者創立。因為 VueJS 既興起，Vite 近年取而代之，成為左主流既建立 React 項目既 template 項目生成器。\r
\r
Vite 有以下既組件：\r
\r
| 組件          | 用途                |\r
| ------------- | ------------------- |\r
| \`create-vite\` | 新 SPA 項目既生成器 |\r
| \`vite\`        | Build scripts       |\r
\r
## 1.1 Vite 既優點\r
\r
用過 Vite 就會發現佢有唔少比起 Create-React-App 絕對既好處：\r
\r
| 方面                                                 | Create-React-App                              | Vite                                                          |\r
| ---------------------------------------------------- | --------------------------------------------- | ------------------------------------------------------------- |\r
| 生成出黎既項目既 \`node_modules\` 裡面既檔案、目錄數量 | 4000+ 檔案、5000+ 目錄                        | 300+ 檔案、50+ 目錄                                           |\r
| Module bundler                                       | Webpack                                       | 較快既 Rollup                                                 |\r
| ReactJS transpiler                                   | Babel                                         | 較快既 \`@vitejs/plugin-react\` 或者 \`@vitejs/plugin-react-swc\` |\r
| Build scripts                                        | 非常笨重、已經超過 2 年冇更新既 React Scripts | 輕量既 Vite                                                   |\r
\r
以下係 Create-React-App 生成出黎既 ReactJS 項目既 \`node_modules\`：\r
\r
![](/blog/2024-05/react-with-vite/node-modules-of-project-generated-by-create-react-app.png)\r
\r
以下係 Create-Vite 生成出黎既 ReactJS 項目既 \`node_modules\`：\r
\r
![](/blog/2024-05/react-with-vite/node-modules-of-project-generated-by-vite.png)\r
\r
註：\r
\r
-   Create-React-App 之所以生成出黎既 ReactJS 項目有 npm modules，完全係因為 React Scripts 引入左大量既 transitive dependencies。\r
\r
---\r
\r
# 2 動手做\r
\r
## 2.1 安裝 Create-Vite\r
\r
\`\`\`bash\r
npm i -g create-vite\r
\`\`\`\r
\r
---\r
\r
## 2.2 生成 ReactJS 項目\r
\r
創建一個新 folder，然後喺裡面執行：\r
\r
\`\`\`bash\r
create-vite my-react-app-vite\r
\`\`\`\r
\r
我地既項目名係 \`my-react-app-vite\`。\r
\r
之後需要揀一啲選項：\r
\r
1. React\r
1. JavaScript + SWC\r
\r
---\r
\r
## 2.3 執行 ReactJS 項目\r
\r
喺生成出黎既 ReactJS 項目既 project root folder 度執行：\r
\r
\`\`\`bash\r
npm i\r
\`\`\`\r
\r
等佢下載所有 npm modules，之後就可以執行：\r
\r
\`\`\`bash\r
npm run dev\r
\`\`\`\r
\r
然後喺本地瀏覽器打開 [http://localhost:5173](http://localhost:5173)。\r
\r
但如果想 LAN 既其他裝置（例如手機、平板）既瀏覽器都可以連接到，就要執行：\r
\r
\`\`\`bash\r
npm run dev -- --host\r
\`\`\`\r
\r
OS 既防火牆 allow 左 \`node.exe\` 之後，可以喺 LAN 既其他裝置打開 [http://192.168.1.X:5173](http://192.168.1.X:5173)。\r
\r
---\r
\r
## 2.4 部署到 GitHub Pages\r
\r
### 2.4.1 創建 GitHub repository\r
\r
1. 登入 GitHub，然後新增一個 public repository。\r
1. 喺本地 \`git clone\` 呢個新既 Git repo。\r
1. 將 \`.git\` 檔案搬到我地用 Create-Vite 建立既項目既 project root folder 裡面。\r
\r
---\r
\r
### 2.4.2 喺 ReactJS 項目加入 gh-pages\r
\r
喺 ReactJS 項目既 project root folder 執行：\r
\r
\`\`\`bash\r
npm i gh-pages\r
\`\`\`\r
\r
之後喺 \`package.json\` 加入 \`homepage\`，個 URL 後面既 path 係岩岩創建既 Git repo 名：\r
\r
\`\`\`json\r
{\r
	"homepage": "http://blackr1234.github.io/my-react-app-vite"\r
}\r
\`\`\`\r
\r
然後喺 \`package.json\` 既 \`scripts\` field 裡面加入 \`predeploy\` 以及 \`deploy\`：\r
\r
\`\`\`json\r
{\r
	"scripts": {\r
		"dev": "vite",\r
		"build": "vite build",\r
		"preview": "vite preview",\r
\r
		"predeploy": "npm run build",\r
		"deploy": "gh-pages -d dist"\r
	}\r
}\r
\`\`\`\r
\r
註：\r
\r
-   \`predeploy\` 呢個 script 名係 \`deploy\` 既 pre script，而 pre script 係 npm 提供既功能。\r
    -   Pre script 會喺佢「pre」既對象既 script 執行之前執行。\r
    -   \`predeploy\` 會喺 \`deploy\` 執行之前執行。\r
-   部署流程：\r
    1.  \`predeploy\` script 會幫我地執行 \`npm run build\`，而 \`npm run build\` 對應 \`build\` script，會執行 \`vite build\`，生成 \`dist\` folder。\r
    1.  \`deploy\` script 會執行 \`gh-pages\` 既邏輯，將 \`-d\` 既 \`dist\` folder 部署上我地 Git repo 作為 GitHub Pages。\r
\r
---\r
\r
### 2.4.3 修改 Vite 配置\r
\r
我地要將 base path 寫落 \`vite.config.js\`：\r
\r
\`\`\`js\r
import { defineConfig } from "vite";\r
import react from "@vitejs/plugin-react-swc";\r
\r
export default defineConfig({\r
	base: "/my-react-app-vite", // 要加呢個 config\r
	plugins: [react()],\r
});\r
\`\`\`\r
\r
---\r
\r
### 2.4.4 部署 ReactJS 項目到 GitHub Pages\r
\r
喺 ReactJS 項目既 project root folder 執行：\r
\r
\`\`\`bash\r
npm run deploy\r
\`\`\`\r
\r
---\r
\r
# 3 檢視結果\r
\r
## 3.1 Source map\r
\r
Production build 唔應該有 source map，我地可以睇下 \`dist\` folder 裡面有冇 source map。\r
\r
答案係冇既，因為 Vite 默認既 \`build.sourcemap\` 配置係 \`false\`，所以 Vite 打包 \`dist\` folder 既時候默認係唔會生成 source map。\r
\r
---\r
\r
## 3.2 GitHub Pages 網站\r
\r
等一陣，GitHub Pages 會 host 我地既網站：\r
\r
[https://blackr1234.github.io/my-react-app-vite/](https://blackr1234.github.io/my-react-app-vite/)\r
\r
---\r
\r
# 4 參考資料\r
\r
-   [Vite 官方文檔 - Configuring Vite](https://vitejs.dev/config/)\r
-   [Vite 官方文檔 - Deploying a Static Site - GitHub Pages](https://vitejs.dev/guide/static-deploy#github-pages)\r
-   [Vite 官方文檔 - Build Options - build.sourcemap](https://vitejs.dev/config/build-options#build-sourcemap)\r
-   [Maximize Performance: How SWC Enhances Vite and React](https://www.dhiwise.com/post/maximize-performance-how-swc-enhances-vite-and-react)\r
-   [Deploying to GitHub Pages using gh-pages](https://blog.seancoughlin.me/deploying-to-github-pages-using-gh-pages)\r
-   [NPM 官方文檔 - scripts - Pre & Post Scripts](https://docs.npmjs.com/cli/v10/using-npm/scripts#pre--post-scripts)\r
-   [StackOverflow - What is the difference between "vite" and "vite preview"?](https://stackoverflow.com/questions/71703933/what-is-the-difference-between-vite-and-vite-preview)\r
-   [What are source maps?](https://web.dev/articles/source-maps)\r
    -   [What are source maps? - Generate source maps](https://web.dev/articles/source-maps#generate)\r
`,JD=`# 1 OpenAPI 簡介\r
\r
OpenAPI Specification（OAS）係由 Swagger Specification 演變出黎既一套 HTTP API 格式規範，係開發者之間表達 HTTP APIs 既其中一個標準。\r
\r
喺 2015，SmartBear 公司收購左開源既 Swagger Specification，然後喺 2015 年年尾，SmartBear 將 Swagger Specification 捐左畀 Linux Foundation 旗下既 OpenAPI Initiative 公司，亦將佢改名成 OpenAPI Specification，亦即係 Swagger \`2.0\` ➜ OpenAPI \`3.0.0\`。\r
\r
至於 Swagger UI 就係一個工具，準確黎講係一個網頁既介面，畀我地好容易咁測試到我地寫既 HTTP endpoints。\r
\r
## 1.1 API-first 開發方式\r
\r
API-first 就係以 API 主導既開發方式，我地會先寫 API contract，亦即係 Swagger/OpenAPI Specification，然後再寫 code。\r
\r
---\r
\r
## 1.2 Cloud platforms 對 OpenAPI Specification 既支援\r
\r
以下係熱門既 cloud platforms 既 API import 功能支援既 OpenAPI Specification 版本：\r
\r
| Cloud platforms                | 支援既 OpenAPI Specification 版本 |\r
| ------------------------------ | --------------------------------- |\r
| Amazon AWS API Gateway         | \`2.0\`、\`3.0\`                      |\r
| Microsoft Azure API Management | \`2.0\`、\`3.0\`、\`3.1\`               |\r
| Google Cloud API Gateway       | \`2.0\`                             |\r
| Alibaba Cloud API Gateway      | \`2.0\`、\`3.0\`                      |\r
\r
參考資料：\r
\r
-   [Amazon 官方文檔 - AWS API Gateway - Configuring a REST API using OpenAPI](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api.html)\r
-   [Azure 官方文檔 - Azure API Management - API import restrictions and known issues](https://learn.microsoft.com/en-us/azure/api-management/api-management-api-import-restrictions#openapi-specifications)\r
-   [Google 官方文檔 - Google Cloud API Gateway - OpenAPI overview](https://cloud.google.com/api-gateway/docs/openapi-overview)\r
-   [Alibaba 官方文檔 - Alibaba Cloud API Gateway - Import OAS-compliant APIs](https://www.alibabacloud.com/help/en/api-gateway/user-guide/use-the-standard-oas-to-import-multiple-apis-at-a-time)\r
\r
---\r
\r
# 2 動手寫\r
\r
我地會寫一個有齊曬模擬既 CRUD endpoints 既 Spring Boot MVC 項目。\r
\r
## 2.1 Maven dependencies\r
\r
\`\`\`xml\r
<?xml version="1.0" encoding="UTF-8"?>\r
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\r
	<modelVersion>4.0.0</modelVersion>\r
\r
	<groupId>com.michael</groupId>\r
	<artifactId>Spring-Boot-3-OpenAPI-Code-Gen-MVC-Demo</artifactId>\r
	<version>1.0.0</version>\r
	<packaging>jar</packaging>\r
\r
	<name>Spring-Boot-3-OpenAPI-Code-Gen-MVC-Demo</name>\r
	<description>Spring-Boot-3-OpenAPI-Code-Gen-MVC-Demo</description>\r
\r
	<properties>\r
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r
		<java.version>17</java.version>\r
		<javac.source>17</javac.source>\r
		<javac.target>17</javac.target>\r
		<maven.compiler.target>17</maven.compiler.target>\r
		<maven.compiler.source>17</maven.compiler.source>\r
\r
		<start-class>code.MainApplication</start-class>\r
	</properties>\r
\r
	<parent>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-parent</artifactId>\r
		<version>3.2.5</version>\r
	</parent>\r
\r
	<dependencies>\r
		<dependency>\r
			<groupId>org.springframework.boot</groupId>\r
			<artifactId>spring-boot-starter-web</artifactId>\r
		</dependency>\r
\r
		<!-- Swagger UI -->\r
		<dependency>\r
			<groupId>org.springdoc</groupId>\r
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>\r
			<version>2.5.0</version>\r
		</dependency>\r
\r
		<!-- OpenAPI generator Maven plugin 會生成用到佢既 Java code -->\r
		<dependency>\r
			<groupId>org.openapitools</groupId>\r
			<artifactId>jackson-databind-nullable</artifactId>\r
			<version>0.2.6</version>\r
		</dependency>\r
\r
		<dependency>\r
			<groupId>net.logstash.logback</groupId>\r
			<artifactId>logstash-logback-encoder</artifactId>\r
			<version>7.4</version>\r
		</dependency>\r
\r
		<dependency>\r
			<groupId>org.apache.commons</groupId>\r
			<artifactId>commons-lang3</artifactId>\r
		</dependency>\r
\r
		<dependency>\r
			<groupId>org.projectlombok</groupId>\r
			<artifactId>lombok</artifactId>\r
			<scope>provided</scope>\r
		</dependency>\r
	</dependencies>\r
\r
	<build>\r
		<plugins>\r
			<plugin>\r
				<groupId>org.springframework.boot</groupId>\r
				<artifactId>spring-boot-maven-plugin</artifactId>\r
				<executions>\r
					<execution>\r
						<goals>\r
							<goal>repackage</goal>\r
						</goals>\r
					</execution>\r
				</executions>\r
			</plugin>\r
\r
			<!-- OpenAPI generator Maven plugin -->\r
			<plugin>\r
				<groupId>org.openapitools</groupId>\r
				<artifactId>openapi-generator-maven-plugin</artifactId>\r
				<version>7.5.0</version>\r
				<executions>\r
					<execution>\r
						<goals>\r
							<goal>generate</goal>\r
						</goals>\r
						<configuration>\r
							<inputSpec>\${project.basedir}/src/main/resources/openapi.yml</inputSpec>\r
							<generatorName>spring</generatorName>\r
\r
							<configOptions>\r
								<apiPackage>code.api</apiPackage>\r
								<modelPackage>code.model</modelPackage>\r
								<useSpringBoot3>true</useSpringBoot3>\r
\r
								<!-- 我地可以用 delegatePattern -->\r
								<delegatePattern>true</delegatePattern>\r
\r
								<!-- 或者用 interfaceOnly -->\r
								<interfaceOnly>true</interfaceOnly>\r
							</configOptions>\r
						</configuration>\r
					</execution>\r
				</executions>\r
			</plugin>\r
		</plugins>\r
	</build>\r
</project>\r
\`\`\`\r
\r
註：\r
\r
-   OpenAPI generator Maven plugin 提供兩種生成 Java model code 既方式。\r
    -   \`delegatePattern\`\r
    -   \`interfaceOnly\`\r
\r
---\r
\r
## 2.2 寫 Swagger/OpenAPI Specification\r
\r
因為係 API-first 既開發方式，所以我地寫 Java code 之前要先寫 Swagger/OpenAPI Specification 檔案。\r
\r
\`src/main/resources/openapi.yml\`：\r
\r
<!-- prettier-ignore -->\r
\`\`\`yaml\r
openapi: 3.0.0\r
info:\r
  version: 1.0.0\r
  title: Spring-Boot-3-OpenAPI-Code-Gen-MVC-Demo\r
  description: OpenAPI for Spring-Boot-3-OpenAPI-Code-Gen-MVC-Demo\r
paths:\r
  /users:\r
    get:\r
      operationId: getUsers\r
      summary: Get all users\r
      description: Get all users.\r
      responses:\r
        '200':\r
          description: OK\r
          content:\r
            application/json:\r
              schema:\r
                type: array\r
                items:\r
                  $ref: '#/components/schemas/UserDto'\r
    post:\r
      operationId: createUser\r
      summary: Create user by ID\r
      description: Create a user of the given ID.\r
      requestBody:\r
        required: true\r
        description: User object (JSON).\r
        content:\r
          application/json:\r
            schema:\r
              $ref: '#/components/schemas/UserDto'\r
      responses:\r
        '200':\r
          description: OK\r
          content:\r
            application/json:\r
              schema:\r
                $ref: '#/components/schemas/UserDto'\r
  /users/{userId}:\r
    get:\r
      operationId: getUser\r
      summary: Get user by ID\r
      description: Get a user of the given ID.\r
      parameters:\r
        - name: userId\r
          in: path\r
          required: true\r
          description: User ID.\r
          schema:\r
            type : long\r
      responses:\r
        '200':\r
          description: OK\r
          content:\r
            application/json:\r
              schema:\r
                $ref: '#/components/schemas/UserDto'\r
    put:\r
      operationId: updateUser\r
      summary: Update user by ID\r
      description: Update a user of the given ID.\r
      parameters:\r
        - name: userId\r
          in: path\r
          required: true\r
          description: User ID.\r
          schema:\r
            type : long\r
      requestBody:\r
        required: true\r
        description: User object (JSON).\r
        content:\r
          application/json:\r
            schema:\r
              $ref: '#/components/schemas/UserDto'\r
      responses:\r
        '200':\r
          description: OK\r
          content:\r
            application/json:\r
              schema:\r
                $ref: '#/components/schemas/UserDto'\r
    delete:\r
      operationId: deleteUser\r
      summary: Delete user by ID\r
      description: Delete a user of the given ID.\r
      parameters:\r
        - name: userId\r
          in: path\r
          required: true\r
          description: User ID.\r
          schema:\r
            type : long\r
      responses:\r
        '200':\r
          description: OK\r
          content:\r
            application/json:\r
              schema:\r
                $ref: '#/components/schemas/UserDto'\r
components:\r
  schemas:\r
    UserDto:\r
      type: object\r
      properties:\r
        id:\r
          type: long\r
        firstName:\r
          type: string\r
        lastName:\r
          type: string\r
\`\`\`\r
\r
---\r
\r
## 2.3 寫 Java code\r
\r
無論係 \`interfaceOnly\` 或者係 \`delegatePattern\`，都係用一樣既 main class。\r
\r
\`MainApplication.java\`：\r
\r
\`\`\`java\r
@SpringBootApplication\r
public class MainApplication {\r
\r
    public static void main(String[] args) {\r
        SpringApplication.run(MainApplication.class, args);\r
    }\r
}\r
\`\`\`\r
\r
### 2.3.1 \`interfaceOnly\` 版本\r
\r
Project structure：\r
\r
-   \`src/main/java\`\r
    -   \`/code\`\r
        -   \`MainApplication.java\`\r
        -   \`UsersController.java\`\r
-   \`target/generated-sources/openapi/src/main/java\`（由 OpenAPI generator Maven plugin 生成）\r
    -   \`/code\`\r
        -   \`/api\`\r
            -   \`ApiUtil.java\`\r
            -   \`UsersApi.java\`\r
        -   \`/model\`\r
            -   \`UserDto.java\`\r
\r
\`UsersController.java\`：\r
\r
\`\`\`java\r
@Slf4j\r
@RestController\r
public class UsersController implements UsersApi {\r
\r
    @Override\r
    public ResponseEntity<List<UserDto>> getUsers() {\r
        log.info("getUsers");\r
        return ResponseEntity.ok(Arrays.asList(randomUser(), randomUser()));\r
    }\r
\r
    @Override\r
    public ResponseEntity<UserDto> getUser(Long userId) {\r
        log.info("getUser");\r
        return ResponseEntity.ok(randomUser());\r
    }\r
\r
    @Override\r
    public ResponseEntity<UserDto> createUser(UserDto user) {\r
        log.info("createUser");\r
        return ResponseEntity.ok(user);\r
    }\r
\r
    @Override\r
    public ResponseEntity<UserDto> updateUser(Long userId, UserDto user) {\r
        log.info("updateUser");\r
        return ResponseEntity.ok(user);\r
    }\r
\r
    @Override\r
    public ResponseEntity<UserDto> deleteUser(Long userId) {\r
        log.info("deleteUser");\r
        return ResponseEntity.ok(randomUser());\r
    }\r
\r
\r
\r
    private UserDto randomUser() {\r
        final UserDto user = new UserDto();\r
        user.setId(new Random().nextLong(100));\r
        user.setFirstName(RandomStringUtils.randomAlphabetic(10));\r
        user.setLastName(RandomStringUtils.randomAlphabetic(10));\r
        return user;\r
    }\r
}\r
\`\`\`\r
\r
註：\r
\r
-   \`UsersApi\` 係由 OpenAPI generator Maven plugin 生成既 Java interface。\r
-   \`UserDto\` 係由 OpenAPI generator Maven plugin 生成既 Java class。\r
\r
---\r
\r
### 2.3.2 \`delegatePattern\` 版本\r
\r
Project structure：\r
\r
-   \`src/main/java\`\r
    -   \`/code\`\r
        -   \`MainApplication.java\`\r
        -   \`UsersApiDelegateImpl.java\`\r
-   \`target/generated-sources/openapi/src/main/java\`（由 OpenAPI generator Maven plugin 生成）\r
    -   \`/code\`\r
        -   \`/api\`\r
            -   \`ApiUtil.java\`\r
            -   \`UsersApi.java\`\r
            -   \`UsersApiController.java\`\r
            -   \`UsersApiDelegate.java\`\r
        -   \`/model\`\r
            -   \`UserDto.java\`\r
    -   \`/org\`（唔重要，因為我地唔會用裡面既野）\r
        -   \`/openapitools\`\r
            -   \`/configuration\`\r
                -   \`HomeController.java\`\r
                -   \`SpringDocConfiguration.java\`\r
            -   \`OpenApiGeneratorApplication.java\`\r
            -   \`RFC3339DateFormat.java\`\r
\r
\`UsersApiDelegateImpl.java\`：\r
\r
\`\`\`java\r
@Slf4j\r
@Component\r
public class UsersApiDelegateImpl implements UsersApiDelegate {\r
\r
    @Override\r
    public ResponseEntity<List<UserDto>> getUsers() {\r
        log.info("getUsers");\r
        return ResponseEntity.ok(Arrays.asList(randomUser(), randomUser()));\r
    }\r
\r
    @Override\r
    public ResponseEntity<UserDto> getUser(Long userId) {\r
        log.info("getUser");\r
        return ResponseEntity.ok(randomUser());\r
    }\r
\r
    @Override\r
    public ResponseEntity<UserDto> createUser(UserDto user) {\r
        log.info("createUser");\r
        return ResponseEntity.ok(user);\r
    }\r
\r
    @Override\r
    public ResponseEntity<UserDto> updateUser(Long userId, UserDto user) {\r
        log.info("updateUser");\r
        return ResponseEntity.ok(user);\r
    }\r
\r
    @Override\r
    public ResponseEntity<UserDto> deleteUser(Long userId) {\r
        log.info("deleteUser");\r
        return ResponseEntity.ok(randomUser());\r
    }\r
\r
\r
\r
    private UserDto randomUser() {\r
        final UserDto user = new UserDto();\r
        user.setId(new Random().nextLong(100));\r
        user.setFirstName(RandomStringUtils.randomAlphabetic(10));\r
        user.setLastName(RandomStringUtils.randomAlphabetic(10));\r
        return user;\r
    }\r
}\r
\`\`\`\r
\r
註：\r
\r
-   \`UsersApiDelegate\` 係由 OpenAPI generator Maven plugin 生成既 Java interface。\r
-   \`UserDto\` 係由 OpenAPI generator Maven plugin 生成既 Java class。\r
\r
---\r
\r
# 3 測試\r
\r
## 3.1 cURL\r
\r
列出所有 users：\r
\r
\`\`\`bash\r
curl -X GET http://localhost:8080/users\r
\`\`\`\r
\r
列出一個 user：\r
\r
\`\`\`bash\r
curl -X GET http://localhost:8080/users/1234\r
\`\`\`\r
\r
新增一個 user：\r
\r
\`\`\`bash\r
curl -X POST http://localhost:8080/users -H "Content-Type: application/json" -d "{ \\"id\\": 123, \\"firstName\\": \\"Michael\\", \\"lastName\\": \\"Chung\\" }"\r
\`\`\`\r
\r
更新一個 user：\r
\r
\`\`\`bash\r
curl -X PUT http://localhost:8080/users/1234 -H "Content-Type: application/json" -d "{ \\"id\\": 123, \\"firstName\\": \\"Michael\\", \\"lastName\\": \\"Chung\\" }"\r
\`\`\`\r
\r
刪除一個 user：\r
\r
\`\`\`bash\r
curl -X DELETE http://localhost:8080/users/1234\r
\`\`\`\r
\r
---\r
\r
## 3.2 Swagger UI\r
\r
1. 喺瀏覽器打開 [http://localhost:8080/swagger-ui.html](http://localhost:8080/swagger-ui.html)。\r
1. 佢會自動 redirect 去 [http://localhost:8080/swagger-ui/index.html](http://localhost:8080/swagger-ui/index.html)。\r
1. 打開其中一個 API。\r
1. 撳「Test it out」。\r
1. 輸入必填既 request 資訊（如有）。\r
    - Path variables\r
    - Request parameters\r
    - Request body\r
1. 撳「Execute」。\r
\r
![](blog/2024-05/spring-boot-openapi/swagger-ui.png)\r
\r
---\r
\r
## 3.3 取得 OpenAPI Specification 檔案\r
\r
Swagger UI 亦會 expose 以下既 HTTP endpoints 畀我地拎到我地 microservice 既 OpenAPI Specification 檔案，我地只需要喺瀏覽器打開以下既 URLs：\r
\r
| 格式 | URL                                                                              |\r
| ---- | -------------------------------------------------------------------------------- |\r
| JSON | [http://localhost:8080/v3/api-docs](http://localhost:8080/v3/api-docs)           |\r
| YAML | [http://localhost:8080/v3/api-docs.yaml](http://localhost:8080/v3/api-docs.yaml) |\r
\r
---\r
\r
# 4 筆記\r
\r
## 4.1 OpenAPI generator Maven plugin 配置\r
\r
| \`configOptions\` 配置 | 解釋                                                                                                                                                  |\r
| -------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| \`apiPackage\`         | 喺邊個 Java package 去生成 Java API interfaces/classes。                                                                                              |\r
| \`modelPackage\`       | 喺邊個 Java package 去生成 Java model classes。                                                                                                       |\r
| \`useSpringBoot3\`     | 用黎控制生成既項目以及 Java code 係咪 Spring Boot \`3.x\`。如果係既話，會生成 \`jakarta\` 而唔係 \`javax\` package 既 import statements。                   |\r
| \`interfaceOnly\`      | 會生成 Java API interface 畀我地 override 佢既所有 method body。                                                                                      |\r
| \`delegatePattern\`    | 相比起 \`interfaceOnly\`，會生成額外既 Spring controller class（\`@Controller\`）以及叫 delegate 既 Java interface 畀我地 override 佢既所有 method body。 |\r
\r
### 4.1.1 OpenAPI generator Maven plugin - \`interfaceOnly\`\r
\r
-   會生成 Java API interface。\r
    -   每個 method 都會有 \`@RequestMapping\`，return type 係 \`ResponseEntity\`。\r
    -   我地要 override 佢既所有 method body，否則默認會 return \`HttpStatus.NOT_IMPLEMENTED\`。\r
\r
---\r
\r
### 4.1.2 OpenAPI generator Maven plugin - \`delegatePattern\`\r
\r
-   會生成叫 delegate 既 Java interface。\r
    -   我地要 override 佢既所有 method body，否則默認會 return \`HttpStatus.NOT_IMPLEMENTED\`。\r
-   會生成 Java API interface。\r
    -   每個 method 都會有 \`@RequestMapping\`，return type 係 \`ResponseEntity\`，默認會 return delegate 既 method 既 result。\r
-   會生成 Spring controller class。\r
    -   Class level 會有：\r
        -   \`@Controller\`\r
        -   \`@RequestMapping("\${openapi.xxx.base-path:}")\`（\`xxx\` 黎自個 OpenAPI Specification 既 \`info.title\` field）。\r
    -   佢 implement 左個 Java API interface，所以 Spring Boot 就會 expose 黎自個 Java API interface 既 \`@RequestMapping\` 既 HTTP endpoints。\r
-   會生成 main class 以及其他唔係太有用既 Java classes。\r
\r
---\r
\r
## 4.2 OpenAPI Specification fields\r
\r
| OpenAPI Specification field         | 用途                                                                                                                                                                                                  |\r
| ----------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r
| \`openapi\`                           | OpenAPI Specification 既版本號碼。                                                                                                                                                                    |\r
| \`paths\`                             | 每個 expose 既 HTTP endpoint path 既配置。                                                                                                                                                            |\r
| HTTP endpoint path（e.g. \`/users\`） | 裡面係佢支援既每個 HTTP request method 既配置。                                                                                                                                                       |\r
| \`operationId\`（e.g. \`getUsers\`）    | 會影響 reference 呢個 API operation 既 ID，對 OpenAPI generator Maven plugin 黎講會影響生成出黎既 Java method name。                                                                                  |\r
| \`schema\`                            | Data type，可以係 OpenAPI 本身支援 basic data types，可以用 \`$ref\` 黎 reference \`components.schemas\` 裡面既自定義 data types，亦可以係 array（再用 \`items\` field 表示 array elements 既 data type）。 |\r
| \`requestBody\`                       | HTTP request body 既配置。                                                                                                                                                                            |\r
| \`parameters\`                        | HTTP request body 以外既配置，例如 path variables（要用 \`in: path\`）、request parameters（亦叫 query strings，要用 \`in: query\`）、request headers（要用 \`in: header\`）。                              |\r
| \`response\`                          | HTTP response 每個支援既 HTTP status code 既配置。                                                                                                                                                    |\r
| \`components.schemas\`                | 自定義既 data types，對 OpenAPI generator Maven plugin 黎講會影響生成出黎既 Java model classes。                                                                                                      |\r
\r
---\r
\r
# 5 參考資料\r
\r
-   [Swagger/OpenAPI 官方文檔 - Basic Structure](https://swagger.io/docs/specification/basic-structure/)\r
-   [Swagger/OpenAPI 官方文檔 - Describing Parameters](https://swagger.io/docs/specification/describing-parameters/)\r
-   [Swagger/OpenAPI 官方文檔 - Data Types](https://swagger.io/docs/specification/data-models/data-types/)\r
-   [Documentation for the spring Generator](https://openapi-generator.tech/docs/generators/spring/)\r
    -   [Config options](https://openapi-generator.tech/docs/generators/spring/#config-options)\r
`,zD=`# 1 何謂 Maven shared libraries\r
\r
顧名思義，Maven shared libraries 就係可以畀唔同 Maven projects 共用既 Maven libraries。一般黎講，shared libraries 都會提供一啲有特定用途既 public API classes。\r
\r
## 1.1 3rd party Maven library 例子\r
\r
-   Apache Commons Lang\r
-   Apache Commons IO\r
-   Google Guava\r
\r
---\r
\r
# 2 Best practices\r
\r
-   所有 public 既 Java classes 都要寫 Javadoc，因為用家可能會睇。\r
-   所有 public 既 Java methods 都要寫 Javadoc，因為用家可能會睇。\r
-   應該提供埋包含 Java source code 既 JAR 檔。\r
-   應該提供埋包含 Javadoc HTML 既 JAR 檔。\r
-   應該要寫 unit tests，最好有 full code coverage，覆蓋到所有或者大部分 branches（conditions），亦要出到 report，喺 CI/CD pipeline 平台（例如 Jenkins、GitHub Actions）上面睇到。\r
\r
---\r
\r
# 3 動手寫\r
\r
Project structure：\r
\r
-   \`src\`\r
    -   \`/main/java\`\r
        -   \`/code\`\r
            -   \`MickMathUtils.java\`\r
    -   \`/test/java\`\r
        -   \`/code\`\r
            -   \`MickMathUtilsTest.java\`\r
-   \`pom.xml\`\r
\r
## 3.1 Maven POM\r
\r
如果需要將 artifact 上載到某個 remote Maven repository，可以參考呢篇：[自建 Nexus Maven repo](/blog/nexus-maven-repo)。\r
\r
\`\`\`xml\r
<?xml version="1.0" encoding="UTF-8"?>\r
<project xmlns="http://maven.apache.org/POM/4.0.0"\r
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\r
	<modelVersion>4.0.0</modelVersion>\r
\r
	<groupId>com.michael</groupId>\r
	<artifactId>mick-math-lib</artifactId>\r
	<version>1.0.0</version>\r
	<packaging>jar</packaging>\r
\r
	<name>mick-math-lib</name>\r
	<description>This is Michael's shared library for Math calculations.</description>\r
\r
	<properties>\r
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r
		<java.version>17</java.version>\r
		<javac.source>17</javac.source>\r
		<javac.target>17</javac.target>\r
		<maven.compiler.target>17</maven.compiler.target>\r
		<maven.compiler.source>17</maven.compiler.source>\r
	</properties>\r
\r
	<dependencies>\r
		<dependency>\r
			<groupId>junit</groupId>\r
			<artifactId>junit</artifactId>\r
			<version>4.13.2</version>\r
			<scope>test</scope>\r
		</dependency>\r
	</dependencies>\r
\r
	<build>\r
		<plugins>\r
			<plugin>\r
				<groupId>org.apache.maven.plugins</groupId>\r
				<artifactId>maven-source-plugin</artifactId>\r
				<version>3.3.1</version>\r
				<executions>\r
					<execution>\r
						<id>attach-sources</id>\r
						<phase>package</phase>\r
						<goals>\r
							<goal>jar-no-fork</goal>\r
						</goals>\r
					</execution>\r
				</executions>\r
			</plugin>\r
\r
			<plugin>\r
				<groupId>org.apache.maven.plugins</groupId>\r
				<artifactId>maven-javadoc-plugin</artifactId>\r
				<version>3.6.3</version>\r
				<executions>\r
					<execution>\r
						<id>attach-javadoc</id>\r
						<phase>package</phase>\r
						<goals>\r
							<goal>jar</goal>\r
						</goals>\r
					</execution>\r
				</executions>\r
			</plugin>\r
\r
			<plugin>\r
				<groupId>org.jacoco</groupId>\r
				<artifactId>jacoco-maven-plugin</artifactId>\r
				<version>0.8.12</version>\r
				<executions>\r
					<execution>\r
						<goals>\r
							<goal>prepare-agent</goal>\r
						</goals>\r
					</execution>\r
					<execution>\r
						<id>jacoco-coverage</id>\r
						<phase>test</phase>\r
						<goals>\r
							<goal>report</goal>\r
						</goals>\r
					</execution>\r
				</executions>\r
			</plugin>\r
		</plugins>\r
	</build>\r
</project>\r
\`\`\`\r
\r
---\r
\r
## 3.2 寫 Java code\r
\r
喺寫 code 既同時，都要寫埋 Javadoc（\`/** */\` 裡面既野）。\r
\r
\`MickMathUtils.java\`：\r
\r
\`\`\`java\r
package code;\r
\r
/**\r
 * A very simple math utility class.\r
 *\r
 * @author Michael\r
 */\r
public class MickMathUtils {\r
\r
    /**\r
     * Adds the two given values and returns the sum.\r
     *\r
     * @param a the fist addend (a.k.a. augend)\r
     * @param b the second addend\r
     * @return the sum\r
     */\r
    public int add(int a, int b) {\r
        return a + b;\r
    }\r
\r
    /**\r
     * Divides a value by another and returns the quotient.\r
     *\r
     * @param a the dividend\r
     * @param b the divisor\r
     * @return the quotient\r
     * @throws IllegalArgumentException if the divisor is zero\r
     */\r
    public int divide(int a, int b) throws IllegalArgumentException {\r
\r
        if (b == 0) {\r
            throw new IllegalArgumentException("Divisor cannot be zero!");\r
        }\r
\r
        return a / b;\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
# 4 Unit testing\r
\r
我地會寫足以達到 100% code coverage 既 unit tests。要達到 100% code coverage，必須覆蓋到所有 if-else logical conditions。\r
\r
## 4.1 寫 JUnit test class\r
\r
\`MickMathUtilsTest.java\`：\r
\r
\`\`\`java\r
package code;\r
\r
import org.junit.Assert;\r
import org.junit.Test;\r
\r
public class MickMathUtilsTest {\r
\r
    @Test\r
    public void test_add() {\r
        final int sum = new MickMathUtils().add(2, 5);\r
        Assert.assertEquals("Incorrect sum", 7, sum);\r
    }\r
\r
    @Test\r
    public void test_divide() {\r
        final int product = new MickMathUtils().divide(10, 2);\r
        Assert.assertEquals("Incorrect quotient", 5, product);\r
    }\r
\r
    @Test\r
    public void test_divide_byZero() {\r
        try {\r
            new MickMathUtils().divide(10, 0);\r
            Assert.fail();\r
        } catch (IllegalArgumentException e) {\r
            // expected\r
        }\r
    }\r
}\r
\`\`\`\r
\r
---\r
\r
## 4.2 Eclipse IDE JUnit code coverage\r
\r
開發既時候，我地可以利用 Eclipse IDE，喺執行 JUnit unit testing 既時候睇到 unit test 既 code coverage：\r
\r
![](blog/2024-05/write-maven-shared-lib/eclipse-junit-full-code-coverage.png)\r
\r
---\r
\r
# 5 本地安裝／上載 remote repo\r
\r
執行 command 安裝到本地 Maven repo：\r
\r
\`\`\`bash\r
mvn clean test install\r
\`\`\`\r
\r
或者上載埋去 remote repo：\r
\r
\`\`\`bash\r
mvn clean test install deploy\r
\`\`\`\r
\r
![](/blog/2024-05/write-maven-shared-lib/local-maven-repo-shared-lib.png)\r
\r
## 5.1 Jacoco coverage report\r
\r
執行完 \`mvn test\` 就會生成到 Jacoco coverage HTML report。\r
\r
我地可以打開 \`target/site/jacoco/index.html\`：\r
\r
![](blog/2024-05/write-maven-shared-lib/jacoco-coverage-report.png)\r
\r
---\r
\r
# 6 喺另一個項目使用 shared library\r
\r
我地會寫一個 Spring Boot web application 項目去用我地寫左既 Maven shared library。\r
\r
## 6.1 Maven dependencies\r
\r
\`\`\`xml\r
<parent>\r
	<groupId>org.springframework.boot</groupId>\r
	<artifactId>spring-boot-starter-parent</artifactId>\r
	<version>3.2.5</version>\r
</parent>\r
\r
<dependencies>\r
	<dependency>\r
		<groupId>org.springframework.boot</groupId>\r
		<artifactId>spring-boot-starter-web</artifactId>\r
	</dependency>\r
\r
	<dependency>\r
		<groupId>com.michael</groupId>\r
		<artifactId>mick-math-lib</artifactId>\r
		<version>1.0.0</version>\r
	</dependency>\r
</dependencies>\r
\`\`\`\r
\r
---\r
\r
## 6.2 寫 Java code\r
\r
\`MyController.java\`：\r
\r
\`\`\`java\r
@RestController\r
public class MyController {\r
\r
    @GetMapping("/add")\r
    public int add(@RequestParam("a") int a, @RequestParam("b") int b) {\r
        return new MickMathUtils().add(a, b);\r
    }\r
\r
    @GetMapping("/divide")\r
    public int divide(@RequestParam("a") int a, @RequestParam("b") int b) {\r
        return new MickMathUtils().divide(a, b);\r
    }\r
}\r
\`\`\`\r
\r
### 6.2.1 檢視 shared library Java source code\r
\r
Ctrl + click 落 \`MickMathUtils\` 既話，Eclipse IDE 會帶我地去 \`MickMathUtils.class\`，而因為有 \`mick-math-lib-1.0.0-sources.jar\`，就可以顯示到原本既 Java source code，唔需要用到 decompiler。\r
\r
![](blog/2024-05/write-maven-shared-lib/eclipse-check-shared-lib-java-source.png)\r
\r
---\r
\r
### 6.2.2 檢視 shared library Javadoc\r
\r
因為有 \`mick-math-lib-1.0.0-javadoc.jar\`，我地可以叫 Eclipse IDE 喺瀏覽器開個 Javadoc 網頁出黎。\r
\r
Package Explorer > 個 Spring Boot web app project > Maven Dependencies > \`mick-math-lib-1.0.0.jar\` > rick-click > Maven > Open Javadoc。\r
\r
![](blog/2024-05/write-maven-shared-lib/eclipse-check-shared-lib-javadoc.png)\r
\r
---\r
\r
# 7 參考資料\r
\r
-   [Maven – JaCoCo code coverage example](https://mkyong.com/maven/maven-jacoco-code-coverage-example/)\r
`;function UD(e,n){const r={};return(e[e.length-1]===""?[...e,""]:e).join((r.padRight?" ":"")+","+(r.padLeft===!1?"":" ")).trim()}const WD=/^[$_\p{ID_Start}][$_\u{200C}\u{200D}\p{ID_Continue}]*$/u,VD=/^[$_\p{ID_Start}][-$_\u{200C}\u{200D}\p{ID_Continue}]*$/u,$D={};function iv(e,n){return($D.jsx?VD:WD).test(e)}const GD=/[ \t\n\f\r]/g;function KD(e){return typeof e=="object"?e.type==="text"?ov(e.value):!1:ov(e)}function ov(e){return e.replace(GD,"")===""}class gs{constructor(n,r,t){this.property=n,this.normal=r,t&&(this.space=t)}}gs.prototype.property={};gs.prototype.normal={};gs.prototype.space=null;function tS(e,n){const r={},t={};let a=-1;for(;++a<e.length;)Object.assign(r,e[a].property),Object.assign(t,e[a].normal);return new gs(r,t,n)}function Id(e){return e.toLowerCase()}class ir{constructor(n,r){this.property=n,this.attribute=r}}ir.prototype.space=null;ir.prototype.boolean=!1;ir.prototype.booleanish=!1;ir.prototype.overloadedBoolean=!1;ir.prototype.number=!1;ir.prototype.commaSeparated=!1;ir.prototype.spaceSeparated=!1;ir.prototype.commaOrSpaceSeparated=!1;ir.prototype.mustUseProperty=!1;ir.prototype.defined=!1;let YD=0;const ne=Ta(),qe=Ta(),aS=Ta(),N=Ta(),Ce=Ta(),ci=Ta(),On=Ta();function Ta(){return 2**++YD}const Ed=Object.freeze(Object.defineProperty({__proto__:null,boolean:ne,booleanish:qe,commaOrSpaceSeparated:On,commaSeparated:ci,number:N,overloadedBoolean:aS,spaceSeparated:Ce},Symbol.toStringTag,{value:"Module"})),Vu=Object.keys(Ed);class _g extends ir{constructor(n,r,t,a){let i=-1;if(super(n,r),sv(this,"space",a),typeof t=="number")for(;++i<Vu.length;){const o=Vu[i];sv(this,Vu[i],(t&Ed[o])===Ed[o])}}}_g.prototype.defined=!0;function sv(e,n,r){r&&(e[n]=r)}const QD={}.hasOwnProperty;function Ri(e){const n={},r={};let t;for(t in e.properties)if(QD.call(e.properties,t)){const a=e.properties[t],i=new _g(t,e.transform(e.attributes||{},t),a,e.space);e.mustUseProperty&&e.mustUseProperty.includes(t)&&(i.mustUseProperty=!0),n[t]=i,r[Id(t)]=t,r[Id(i.attribute)]=t}return new gs(n,r,e.space)}const iS=Ri({space:"xlink",transform(e,n){return"xlink:"+n.slice(5).toLowerCase()},properties:{xLinkActuate:null,xLinkArcRole:null,xLinkHref:null,xLinkRole:null,xLinkShow:null,xLinkTitle:null,xLinkType:null}}),oS=Ri({space:"xml",transform(e,n){return"xml:"+n.slice(3).toLowerCase()},properties:{xmlLang:null,xmlBase:null,xmlSpace:null}});function sS(e,n){return n in e?e[n]:n}function lS(e,n){return sS(e,n.toLowerCase())}const cS=Ri({space:"xmlns",attributes:{xmlnsxlink:"xmlns:xlink"},transform:lS,properties:{xmlns:null,xmlnsXLink:null}}),uS=Ri({transform(e,n){return n==="role"?n:"aria-"+n.slice(4).toLowerCase()},properties:{ariaActiveDescendant:null,ariaAtomic:qe,ariaAutoComplete:null,ariaBusy:qe,ariaChecked:qe,ariaColCount:N,ariaColIndex:N,ariaColSpan:N,ariaControls:Ce,ariaCurrent:null,ariaDescribedBy:Ce,ariaDetails:null,ariaDisabled:qe,ariaDropEffect:Ce,ariaErrorMessage:null,ariaExpanded:qe,ariaFlowTo:Ce,ariaGrabbed:qe,ariaHasPopup:null,ariaHidden:qe,ariaInvalid:null,ariaKeyShortcuts:null,ariaLabel:null,ariaLabelledBy:Ce,ariaLevel:N,ariaLive:null,ariaModal:qe,ariaMultiLine:qe,ariaMultiSelectable:qe,ariaOrientation:null,ariaOwns:Ce,ariaPlaceholder:null,ariaPosInSet:N,ariaPressed:qe,ariaReadOnly:qe,ariaRelevant:null,ariaRequired:qe,ariaRoleDescription:Ce,ariaRowCount:N,ariaRowIndex:N,ariaRowSpan:N,ariaSelected:qe,ariaSetSize:N,ariaSort:null,ariaValueMax:N,ariaValueMin:N,ariaValueNow:N,ariaValueText:null,role:null}}),XD=Ri({space:"html",attributes:{acceptcharset:"accept-charset",classname:"class",htmlfor:"for",httpequiv:"http-equiv"},transform:lS,mustUseProperty:["checked","multiple","muted","selected"],properties:{abbr:null,accept:ci,acceptCharset:Ce,accessKey:Ce,action:null,allow:null,allowFullScreen:ne,allowPaymentRequest:ne,allowUserMedia:ne,alt:null,as:null,async:ne,autoCapitalize:null,autoComplete:Ce,autoFocus:ne,autoPlay:ne,blocking:Ce,capture:null,charSet:null,checked:ne,cite:null,className:Ce,cols:N,colSpan:null,content:null,contentEditable:qe,controls:ne,controlsList:Ce,coords:N|ci,crossOrigin:null,data:null,dateTime:null,decoding:null,default:ne,defer:ne,dir:null,dirName:null,disabled:ne,download:aS,draggable:qe,encType:null,enterKeyHint:null,fetchPriority:null,form:null,formAction:null,formEncType:null,formMethod:null,formNoValidate:ne,formTarget:null,headers:Ce,height:N,hidden:ne,high:N,href:null,hrefLang:null,htmlFor:Ce,httpEquiv:Ce,id:null,imageSizes:null,imageSrcSet:null,inert:ne,inputMode:null,integrity:null,is:null,isMap:ne,itemId:null,itemProp:Ce,itemRef:Ce,itemScope:ne,itemType:Ce,kind:null,label:null,lang:null,language:null,list:null,loading:null,loop:ne,low:N,manifest:null,max:null,maxLength:N,media:null,method:null,min:null,minLength:N,multiple:ne,muted:ne,name:null,nonce:null,noModule:ne,noValidate:ne,onAbort:null,onAfterPrint:null,onAuxClick:null,onBeforeMatch:null,onBeforePrint:null,onBeforeToggle:null,onBeforeUnload:null,onBlur:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onContextLost:null,onContextMenu:null,onContextRestored:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnded:null,onError:null,onFocus:null,onFormData:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLanguageChange:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadEnd:null,onLoadStart:null,onMessage:null,onMessageError:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRejectionHandled:null,onReset:null,onResize:null,onScroll:null,onScrollEnd:null,onSecurityPolicyViolation:null,onSeeked:null,onSeeking:null,onSelect:null,onSlotChange:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnhandledRejection:null,onUnload:null,onVolumeChange:null,onWaiting:null,onWheel:null,open:ne,optimum:N,pattern:null,ping:Ce,placeholder:null,playsInline:ne,popover:null,popoverTarget:null,popoverTargetAction:null,poster:null,preload:null,readOnly:ne,referrerPolicy:null,rel:Ce,required:ne,reversed:ne,rows:N,rowSpan:N,sandbox:Ce,scope:null,scoped:ne,seamless:ne,selected:ne,shadowRootClonable:ne,shadowRootDelegatesFocus:ne,shadowRootMode:null,shape:null,size:N,sizes:null,slot:null,span:N,spellCheck:qe,src:null,srcDoc:null,srcLang:null,srcSet:null,start:N,step:null,style:null,tabIndex:N,target:null,title:null,translate:null,type:null,typeMustMatch:ne,useMap:null,value:qe,width:N,wrap:null,writingSuggestions:null,align:null,aLink:null,archive:Ce,axis:null,background:null,bgColor:null,border:N,borderColor:null,bottomMargin:N,cellPadding:null,cellSpacing:null,char:null,charOff:null,classId:null,clear:null,code:null,codeBase:null,codeType:null,color:null,compact:ne,declare:ne,event:null,face:null,frame:null,frameBorder:null,hSpace:N,leftMargin:N,link:null,longDesc:null,lowSrc:null,marginHeight:N,marginWidth:N,noResize:ne,noHref:ne,noShade:ne,noWrap:ne,object:null,profile:null,prompt:null,rev:null,rightMargin:N,rules:null,scheme:null,scrolling:qe,standby:null,summary:null,text:null,topMargin:N,valueType:null,version:null,vAlign:null,vLink:null,vSpace:N,allowTransparency:null,autoCorrect:null,autoSave:null,disablePictureInPicture:ne,disableRemotePlayback:ne,prefix:null,property:null,results:N,security:null,unselectable:null}}),ZD=Ri({space:"svg",attributes:{accentHeight:"accent-height",alignmentBaseline:"alignment-baseline",arabicForm:"arabic-form",baselineShift:"baseline-shift",capHeight:"cap-height",className:"class",clipPath:"clip-path",clipRule:"clip-rule",colorInterpolation:"color-interpolation",colorInterpolationFilters:"color-interpolation-filters",colorProfile:"color-profile",colorRendering:"color-rendering",crossOrigin:"crossorigin",dataType:"datatype",dominantBaseline:"dominant-baseline",enableBackground:"enable-background",fillOpacity:"fill-opacity",fillRule:"fill-rule",floodColor:"flood-color",floodOpacity:"flood-opacity",fontFamily:"font-family",fontSize:"font-size",fontSizeAdjust:"font-size-adjust",fontStretch:"font-stretch",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",glyphName:"glyph-name",glyphOrientationHorizontal:"glyph-orientation-horizontal",glyphOrientationVertical:"glyph-orientation-vertical",hrefLang:"hreflang",horizAdvX:"horiz-adv-x",horizOriginX:"horiz-origin-x",horizOriginY:"horiz-origin-y",imageRendering:"image-rendering",letterSpacing:"letter-spacing",lightingColor:"lighting-color",markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",navDown:"nav-down",navDownLeft:"nav-down-left",navDownRight:"nav-down-right",navLeft:"nav-left",navNext:"nav-next",navPrev:"nav-prev",navRight:"nav-right",navUp:"nav-up",navUpLeft:"nav-up-left",navUpRight:"nav-up-right",onAbort:"onabort",onActivate:"onactivate",onAfterPrint:"onafterprint",onBeforePrint:"onbeforeprint",onBegin:"onbegin",onCancel:"oncancel",onCanPlay:"oncanplay",onCanPlayThrough:"oncanplaythrough",onChange:"onchange",onClick:"onclick",onClose:"onclose",onCopy:"oncopy",onCueChange:"oncuechange",onCut:"oncut",onDblClick:"ondblclick",onDrag:"ondrag",onDragEnd:"ondragend",onDragEnter:"ondragenter",onDragExit:"ondragexit",onDragLeave:"ondragleave",onDragOver:"ondragover",onDragStart:"ondragstart",onDrop:"ondrop",onDurationChange:"ondurationchange",onEmptied:"onemptied",onEnd:"onend",onEnded:"onended",onError:"onerror",onFocus:"onfocus",onFocusIn:"onfocusin",onFocusOut:"onfocusout",onHashChange:"onhashchange",onInput:"oninput",onInvalid:"oninvalid",onKeyDown:"onkeydown",onKeyPress:"onkeypress",onKeyUp:"onkeyup",onLoad:"onload",onLoadedData:"onloadeddata",onLoadedMetadata:"onloadedmetadata",onLoadStart:"onloadstart",onMessage:"onmessage",onMouseDown:"onmousedown",onMouseEnter:"onmouseenter",onMouseLeave:"onmouseleave",onMouseMove:"onmousemove",onMouseOut:"onmouseout",onMouseOver:"onmouseover",onMouseUp:"onmouseup",onMouseWheel:"onmousewheel",onOffline:"onoffline",onOnline:"ononline",onPageHide:"onpagehide",onPageShow:"onpageshow",onPaste:"onpaste",onPause:"onpause",onPlay:"onplay",onPlaying:"onplaying",onPopState:"onpopstate",onProgress:"onprogress",onRateChange:"onratechange",onRepeat:"onrepeat",onReset:"onreset",onResize:"onresize",onScroll:"onscroll",onSeeked:"onseeked",onSeeking:"onseeking",onSelect:"onselect",onShow:"onshow",onStalled:"onstalled",onStorage:"onstorage",onSubmit:"onsubmit",onSuspend:"onsuspend",onTimeUpdate:"ontimeupdate",onToggle:"ontoggle",onUnload:"onunload",onVolumeChange:"onvolumechange",onWaiting:"onwaiting",onZoom:"onzoom",overlinePosition:"overline-position",overlineThickness:"overline-thickness",paintOrder:"paint-order",panose1:"panose-1",pointerEvents:"pointer-events",referrerPolicy:"referrerpolicy",renderingIntent:"rendering-intent",shapeRendering:"shape-rendering",stopColor:"stop-color",stopOpacity:"stop-opacity",strikethroughPosition:"strikethrough-position",strikethroughThickness:"strikethrough-thickness",strokeDashArray:"stroke-dasharray",strokeDashOffset:"stroke-dashoffset",strokeLineCap:"stroke-linecap",strokeLineJoin:"stroke-linejoin",strokeMiterLimit:"stroke-miterlimit",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",tabIndex:"tabindex",textAnchor:"text-anchor",textDecoration:"text-decoration",textRendering:"text-rendering",transformOrigin:"transform-origin",typeOf:"typeof",underlinePosition:"underline-position",underlineThickness:"underline-thickness",unicodeBidi:"unicode-bidi",unicodeRange:"unicode-range",unitsPerEm:"units-per-em",vAlphabetic:"v-alphabetic",vHanging:"v-hanging",vIdeographic:"v-ideographic",vMathematical:"v-mathematical",vectorEffect:"vector-effect",vertAdvY:"vert-adv-y",vertOriginX:"vert-origin-x",vertOriginY:"vert-origin-y",wordSpacing:"word-spacing",writingMode:"writing-mode",xHeight:"x-height",playbackOrder:"playbackorder",timelineBegin:"timelinebegin"},transform:sS,properties:{about:On,accentHeight:N,accumulate:null,additive:null,alignmentBaseline:null,alphabetic:N,amplitude:N,arabicForm:null,ascent:N,attributeName:null,attributeType:null,azimuth:N,bandwidth:null,baselineShift:null,baseFrequency:null,baseProfile:null,bbox:null,begin:null,bias:N,by:null,calcMode:null,capHeight:N,className:Ce,clip:null,clipPath:null,clipPathUnits:null,clipRule:null,color:null,colorInterpolation:null,colorInterpolationFilters:null,colorProfile:null,colorRendering:null,content:null,contentScriptType:null,contentStyleType:null,crossOrigin:null,cursor:null,cx:null,cy:null,d:null,dataType:null,defaultAction:null,descent:N,diffuseConstant:N,direction:null,display:null,dur:null,divisor:N,dominantBaseline:null,download:ne,dx:null,dy:null,edgeMode:null,editable:null,elevation:N,enableBackground:null,end:null,event:null,exponent:N,externalResourcesRequired:null,fill:null,fillOpacity:N,fillRule:null,filter:null,filterRes:null,filterUnits:null,floodColor:null,floodOpacity:null,focusable:null,focusHighlight:null,fontFamily:null,fontSize:null,fontSizeAdjust:null,fontStretch:null,fontStyle:null,fontVariant:null,fontWeight:null,format:null,fr:null,from:null,fx:null,fy:null,g1:ci,g2:ci,glyphName:ci,glyphOrientationHorizontal:null,glyphOrientationVertical:null,glyphRef:null,gradientTransform:null,gradientUnits:null,handler:null,hanging:N,hatchContentUnits:null,hatchUnits:null,height:null,href:null,hrefLang:null,horizAdvX:N,horizOriginX:N,horizOriginY:N,id:null,ideographic:N,imageRendering:null,initialVisibility:null,in:null,in2:null,intercept:N,k:N,k1:N,k2:N,k3:N,k4:N,kernelMatrix:On,kernelUnitLength:null,keyPoints:null,keySplines:null,keyTimes:null,kerning:null,lang:null,lengthAdjust:null,letterSpacing:null,lightingColor:null,limitingConeAngle:N,local:null,markerEnd:null,markerMid:null,markerStart:null,markerHeight:null,markerUnits:null,markerWidth:null,mask:null,maskContentUnits:null,maskUnits:null,mathematical:null,max:null,media:null,mediaCharacterEncoding:null,mediaContentEncodings:null,mediaSize:N,mediaTime:null,method:null,min:null,mode:null,name:null,navDown:null,navDownLeft:null,navDownRight:null,navLeft:null,navNext:null,navPrev:null,navRight:null,navUp:null,navUpLeft:null,navUpRight:null,numOctaves:null,observer:null,offset:null,onAbort:null,onActivate:null,onAfterPrint:null,onBeforePrint:null,onBegin:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnd:null,onEnded:null,onError:null,onFocus:null,onFocusIn:null,onFocusOut:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadStart:null,onMessage:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onMouseWheel:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRepeat:null,onReset:null,onResize:null,onScroll:null,onSeeked:null,onSeeking:null,onSelect:null,onShow:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnload:null,onVolumeChange:null,onWaiting:null,onZoom:null,opacity:null,operator:null,order:null,orient:null,orientation:null,origin:null,overflow:null,overlay:null,overlinePosition:N,overlineThickness:N,paintOrder:null,panose1:null,path:null,pathLength:N,patternContentUnits:null,patternTransform:null,patternUnits:null,phase:null,ping:Ce,pitch:null,playbackOrder:null,pointerEvents:null,points:null,pointsAtX:N,pointsAtY:N,pointsAtZ:N,preserveAlpha:null,preserveAspectRatio:null,primitiveUnits:null,propagate:null,property:On,r:null,radius:null,referrerPolicy:null,refX:null,refY:null,rel:On,rev:On,renderingIntent:null,repeatCount:null,repeatDur:null,requiredExtensions:On,requiredFeatures:On,requiredFonts:On,requiredFormats:On,resource:null,restart:null,result:null,rotate:null,rx:null,ry:null,scale:null,seed:null,shapeRendering:null,side:null,slope:null,snapshotTime:null,specularConstant:N,specularExponent:N,spreadMethod:null,spacing:null,startOffset:null,stdDeviation:null,stemh:null,stemv:null,stitchTiles:null,stopColor:null,stopOpacity:null,strikethroughPosition:N,strikethroughThickness:N,string:null,stroke:null,strokeDashArray:On,strokeDashOffset:null,strokeLineCap:null,strokeLineJoin:null,strokeMiterLimit:N,strokeOpacity:N,strokeWidth:null,style:null,surfaceScale:N,syncBehavior:null,syncBehaviorDefault:null,syncMaster:null,syncTolerance:null,syncToleranceDefault:null,systemLanguage:On,tabIndex:N,tableValues:null,target:null,targetX:N,targetY:N,textAnchor:null,textDecoration:null,textRendering:null,textLength:null,timelineBegin:null,title:null,transformBehavior:null,type:null,typeOf:On,to:null,transform:null,transformOrigin:null,u1:null,u2:null,underlinePosition:N,underlineThickness:N,unicode:null,unicodeBidi:null,unicodeRange:null,unitsPerEm:N,values:null,vAlphabetic:N,vMathematical:N,vectorEffect:null,vHanging:N,vIdeographic:N,version:null,vertAdvY:N,vertOriginX:N,vertOriginY:N,viewBox:null,viewTarget:null,visibility:null,width:null,widths:null,wordSpacing:null,writingMode:null,x:null,x1:null,x2:null,xChannelSelector:null,xHeight:N,y:null,y1:null,y2:null,yChannelSelector:null,z:null,zoomAndPan:null}}),eO=/^data[-\w.:]+$/i,lv=/-[a-z]/g,nO=/[A-Z]/g;function rO(e,n){const r=Id(n);let t=n,a=ir;if(r in e.normal)return e.property[e.normal[r]];if(r.length>4&&r.slice(0,4)==="data"&&eO.test(n)){if(n.charAt(4)==="-"){const i=n.slice(5).replace(lv,aO);t="data"+i.charAt(0).toUpperCase()+i.slice(1)}else{const i=n.slice(4);if(!lv.test(i)){let o=i.replace(nO,tO);o.charAt(0)!=="-"&&(o="-"+o),n="data"+o}}a=_g}return new a(t,n)}function tO(e){return"-"+e.toLowerCase()}function aO(e){return e.charAt(1).toUpperCase()}const iO={classId:"classID",dataType:"datatype",itemId:"itemID",strokeDashArray:"strokeDasharray",strokeDashOffset:"strokeDashoffset",strokeLineCap:"strokeLinecap",strokeLineJoin:"strokeLinejoin",strokeMiterLimit:"strokeMiterlimit",typeOf:"typeof",xLinkActuate:"xlinkActuate",xLinkArcRole:"xlinkArcrole",xLinkHref:"xlinkHref",xLinkRole:"xlinkRole",xLinkShow:"xlinkShow",xLinkTitle:"xlinkTitle",xLinkType:"xlinkType",xmlnsXLink:"xmlnsXlink"},oO=tS([oS,iS,cS,uS,XD],"html"),Ng=tS([oS,iS,cS,uS,ZD],"svg");function sO(e){return e.join(" ").trim()}var pS={},cv=/\/\*[^*]*\*+([^/*][^*]*\*+)*\//g,lO=/\n/g,cO=/^\s*/,uO=/^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/,pO=/^:\s*/,dO=/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/,mO=/^[;\s]*/,gO=/^\s+|\s+$/g,fO=`
`,uv="/",pv="*",ia="",hO="comment",vO="declaration",bO=function(e,n){if(typeof e!="string")throw new TypeError("First argument must be a string");if(!e)return[];n=n||{};var r=1,t=1;function a(g){var y=g.match(lO);y&&(r+=y.length);var k=g.lastIndexOf(fO);t=~k?g.length-k:t+g.length}function i(){var g={line:r,column:t};return function(y){return y.position=new o(g),c(),y}}function o(g){this.start=g,this.end={line:r,column:t},this.source=n.source}o.prototype.content=e;function s(g){var y=new Error(n.source+":"+r+":"+t+": "+g);if(y.reason=g,y.filename=n.source,y.line=r,y.column=t,y.source=e,!n.silent)throw y}function l(g){var y=g.exec(e);if(y){var k=y[0];return a(k),e=e.slice(k.length),y}}function c(){l(cO)}function u(g){var y;for(g=g||[];y=p();)y!==!1&&g.push(y);return g}function p(){var g=i();if(!(uv!=e.charAt(0)||pv!=e.charAt(1))){for(var y=2;ia!=e.charAt(y)&&(pv!=e.charAt(y)||uv!=e.charAt(y+1));)++y;if(y+=2,ia===e.charAt(y-1))return s("End of comment missing");var k=e.slice(2,y-2);return t+=2,a(k),e=e.slice(y),t+=2,g({type:hO,comment:k})}}function d(){var g=i(),y=l(uO);if(y){if(p(),!l(pO))return s("property missing ':'");var k=l(dO),f=g({type:vO,property:dv(y[0].replace(cv,ia)),value:k?dv(k[0].replace(cv,ia)):ia});return l(mO),f}}function m(){var g=[];u(g);for(var y;y=d();)y!==!1&&(g.push(y),u(g));return g}return c(),m()};function dv(e){return e?e.replace(gO,ia):ia}var yO=af&&af.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(pS,"__esModule",{value:!0});var kO=yO(bO);function SO(e,n){var r=null;if(!e||typeof e!="string")return r;var t=(0,kO.default)(e),a=typeof n=="function";return t.forEach(function(i){if(i.type==="declaration"){var o=i.property,s=i.value;a?n(o,s,i):s&&(r=r||{},r[o]=s)}}),r}var mv=pS.default=SO;const wO=mv.default||mv,dS=mS("end"),Bg=mS("start");function mS(e){return n;function n(r){const t=r&&r.position&&r.position[e]||{};if(typeof t.line=="number"&&t.line>0&&typeof t.column=="number"&&t.column>0)return{line:t.line,column:t.column,offset:typeof t.offset=="number"&&t.offset>-1?t.offset:void 0}}}function xO(e){const n=Bg(e),r=dS(e);if(n&&r)return{start:n,end:r}}function vo(e){return!e||typeof e!="object"?"":"position"in e||"type"in e?gv(e.position):"start"in e||"end"in e?gv(e):"line"in e||"column"in e?Td(e):""}function Td(e){return fv(e&&e.line)+":"+fv(e&&e.column)}function gv(e){return Td(e&&e.start)+"-"+Td(e&&e.end)}function fv(e){return e&&typeof e=="number"?e:1}class mn extends Error{constructor(n,r,t){super(),typeof r=="string"&&(t=r,r=void 0);let a="",i={},o=!1;if(r&&("line"in r&&"column"in r?i={place:r}:"start"in r&&"end"in r?i={place:r}:"type"in r?i={ancestors:[r],place:r.position}:i={...r}),typeof n=="string"?a=n:!i.cause&&n&&(o=!0,a=n.message,i.cause=n),!i.ruleId&&!i.source&&typeof t=="string"){const l=t.indexOf(":");l===-1?i.ruleId=t:(i.source=t.slice(0,l),i.ruleId=t.slice(l+1))}if(!i.place&&i.ancestors&&i.ancestors){const l=i.ancestors[i.ancestors.length-1];l&&(i.place=l.position)}const s=i.place&&"start"in i.place?i.place.start:i.place;this.ancestors=i.ancestors||void 0,this.cause=i.cause||void 0,this.column=s?s.column:void 0,this.fatal=void 0,this.file,this.message=a,this.line=s?s.line:void 0,this.name=vo(i.place)||"1:1",this.place=i.place||void 0,this.reason=this.message,this.ruleId=i.ruleId||void 0,this.source=i.source||void 0,this.stack=o&&i.cause&&typeof i.cause.stack=="string"?i.cause.stack:"",this.actual,this.expected,this.note,this.url}}mn.prototype.file="";mn.prototype.name="";mn.prototype.reason="";mn.prototype.message="";mn.prototype.stack="";mn.prototype.column=void 0;mn.prototype.line=void 0;mn.prototype.ancestors=void 0;mn.prototype.cause=void 0;mn.prototype.fatal=void 0;mn.prototype.place=void 0;mn.prototype.ruleId=void 0;mn.prototype.source=void 0;const Hg={}.hasOwnProperty,jO=new Map,CO=/[A-Z]/g,IO=/-([a-z])/g,EO=new Set(["table","tbody","thead","tfoot","tr"]),TO=new Set(["td","th"]),gS="https://github.com/syntax-tree/hast-util-to-jsx-runtime";function MO(e,n){if(!n||n.Fragment===void 0)throw new TypeError("Expected `Fragment` in options");const r=n.filePath||void 0;let t;if(n.development){if(typeof n.jsxDEV!="function")throw new TypeError("Expected `jsxDEV` in options when `development: true`");t=NO(r,n.jsxDEV)}else{if(typeof n.jsx!="function")throw new TypeError("Expected `jsx` in production options");if(typeof n.jsxs!="function")throw new TypeError("Expected `jsxs` in production options");t=_O(r,n.jsx,n.jsxs)}const a={Fragment:n.Fragment,ancestors:[],components:n.components||{},create:t,elementAttributeNameCase:n.elementAttributeNameCase||"react",evaluater:n.createEvaluater?n.createEvaluater():void 0,filePath:r,ignoreInvalidStyle:n.ignoreInvalidStyle||!1,passKeys:n.passKeys!==!1,passNode:n.passNode||!1,schema:n.space==="svg"?Ng:oO,stylePropertyNameCase:n.stylePropertyNameCase||"dom",tableCellAlignToStyle:n.tableCellAlignToStyle!==!1},i=fS(a,e,void 0);return i&&typeof i!="string"?i:a.create(e,a.Fragment,{children:i||void 0},void 0)}function fS(e,n,r){if(n.type==="element")return AO(e,n,r);if(n.type==="mdxFlowExpression"||n.type==="mdxTextExpression")return PO(e,n);if(n.type==="mdxJsxFlowElement"||n.type==="mdxJsxTextElement")return DO(e,n,r);if(n.type==="mdxjsEsm")return RO(e,n);if(n.type==="root")return OO(e,n,r);if(n.type==="text")return LO(e,n)}function AO(e,n,r){const t=e.schema;let a=t;n.tagName.toLowerCase()==="svg"&&t.space==="html"&&(a=Ng,e.schema=a),e.ancestors.push(n);const i=vS(e,n.tagName,!1),o=BO(e,n);let s=Fg(e,n);return EO.has(n.tagName)&&(s=s.filter(function(l){return typeof l=="string"?!KD(l):!0})),hS(e,o,i,n),qg(o,s),e.ancestors.pop(),e.schema=t,e.create(n,i,o,r)}function PO(e,n){if(n.data&&n.data.estree&&e.evaluater){const t=n.data.estree.body[0];return t.type,e.evaluater.evaluateExpression(t.expression)}Qo(e,n.position)}function RO(e,n){if(n.data&&n.data.estree&&e.evaluater)return e.evaluater.evaluateProgram(n.data.estree);Qo(e,n.position)}function DO(e,n,r){const t=e.schema;let a=t;n.name==="svg"&&t.space==="html"&&(a=Ng,e.schema=a),e.ancestors.push(n);const i=n.name===null?e.Fragment:vS(e,n.name,!0),o=HO(e,n),s=Fg(e,n);return hS(e,o,i,n),qg(o,s),e.ancestors.pop(),e.schema=t,e.create(n,i,o,r)}function OO(e,n,r){const t={};return qg(t,Fg(e,n)),e.create(n,e.Fragment,t,r)}function LO(e,n){return n.value}function hS(e,n,r,t){typeof r!="string"&&r!==e.Fragment&&e.passNode&&(n.node=t)}function qg(e,n){if(n.length>0){const r=n.length>1?n:n[0];r&&(e.children=r)}}function _O(e,n,r){return t;function t(a,i,o,s){const c=Array.isArray(o.children)?r:n;return s?c(i,o,s):c(i,o)}}function NO(e,n){return r;function r(t,a,i,o){const s=Array.isArray(i.children),l=Bg(t);return n(a,i,o,s,{columnNumber:l?l.column-1:void 0,fileName:e,lineNumber:l?l.line:void 0},void 0)}}function BO(e,n){const r={};let t,a;for(a in n.properties)if(a!=="children"&&Hg.call(n.properties,a)){const i=qO(e,a,n.properties[a]);if(i){const[o,s]=i;e.tableCellAlignToStyle&&o==="align"&&typeof s=="string"&&TO.has(n.tagName)?t=s:r[o]=s}}if(t){const i=r.style||(r.style={});i[e.stylePropertyNameCase==="css"?"text-align":"textAlign"]=t}return r}function HO(e,n){const r={};for(const t of n.attributes)if(t.type==="mdxJsxExpressionAttribute")if(t.data&&t.data.estree&&e.evaluater){const i=t.data.estree.body[0];i.type;const o=i.expression;o.type;const s=o.properties[0];s.type,Object.assign(r,e.evaluater.evaluateExpression(s.argument))}else Qo(e,n.position);else{const a=t.name;let i;if(t.value&&typeof t.value=="object")if(t.value.data&&t.value.data.estree&&e.evaluater){const s=t.value.data.estree.body[0];s.type,i=e.evaluater.evaluateExpression(s.expression)}else Qo(e,n.position);else i=t.value===null?!0:t.value;r[a]=i}return r}function Fg(e,n){const r=[];let t=-1;const a=e.passKeys?new Map:jO;for(;++t<n.children.length;){const i=n.children[t];let o;if(e.passKeys){const l=i.type==="element"?i.tagName:i.type==="mdxJsxFlowElement"||i.type==="mdxJsxTextElement"?i.name:void 0;if(l){const c=a.get(l)||0;o=l+"-"+c,a.set(l,c+1)}}const s=fS(e,i,o);s!==void 0&&r.push(s)}return r}function qO(e,n,r){const t=rO(e.schema,n);if(!(r==null||typeof r=="number"&&Number.isNaN(r))){if(Array.isArray(r)&&(r=t.commaSeparated?UD(r):sO(r)),t.property==="style"){let a=typeof r=="object"?r:FO(e,String(r));return e.stylePropertyNameCase==="css"&&(a=JO(a)),["style",a]}return[e.elementAttributeNameCase==="react"&&t.space?iO[t.property]||t.property:t.attribute,r]}}function FO(e,n){const r={};try{wO(n,t)}catch(a){if(!e.ignoreInvalidStyle){const i=a,o=new mn("Cannot parse `style` attribute",{ancestors:e.ancestors,cause:i,ruleId:"style",source:"hast-util-to-jsx-runtime"});throw o.file=e.filePath||void 0,o.url=gS+"#cannot-parse-style-attribute",o}}return r;function t(a,i){let o=a;o.slice(0,2)!=="--"&&(o.slice(0,4)==="-ms-"&&(o="ms-"+o.slice(4)),o=o.replace(IO,UO)),r[o]=i}}function vS(e,n,r){let t;if(!r)t={type:"Literal",value:n};else if(n.includes(".")){const a=n.split(".");let i=-1,o;for(;++i<a.length;){const s=iv(a[i])?{type:"Identifier",name:a[i]}:{type:"Literal",value:a[i]};o=o?{type:"MemberExpression",object:o,property:s,computed:!!(i&&s.type==="Literal"),optional:!1}:s}t=o}else t=iv(n)&&!/^[a-z]/.test(n)?{type:"Identifier",name:n}:{type:"Literal",value:n};if(t.type==="Literal"){const a=t.value;return Hg.call(e.components,a)?e.components[a]:a}if(e.evaluater)return e.evaluater.evaluateExpression(t);Qo(e)}function Qo(e,n){const r=new mn("Cannot handle MDX estrees without `createEvaluater`",{ancestors:e.ancestors,place:n,ruleId:"mdx-estree",source:"hast-util-to-jsx-runtime"});throw r.file=e.filePath||void 0,r.url=gS+"#cannot-handle-mdx-estrees-without-createevaluater",r}function JO(e){const n={};let r;for(r in e)Hg.call(e,r)&&(n[zO(r)]=e[r]);return n}function zO(e){let n=e.replace(CO,WO);return n.slice(0,3)==="ms-"&&(n="-"+n),n}function UO(e,n){return n.toUpperCase()}function WO(e){return"-"+e.toLowerCase()}const $u={action:["form"],cite:["blockquote","del","ins","q"],data:["object"],formAction:["button","input"],href:["a","area","base","link"],icon:["menuitem"],itemId:null,manifest:["html"],ping:["a","area"],poster:["video"],src:["audio","embed","iframe","img","input","script","source","track","video"]},VO={};function Jg(e,n){const r=VO,t=typeof r.includeImageAlt=="boolean"?r.includeImageAlt:!0,a=typeof r.includeHtml=="boolean"?r.includeHtml:!0;return bS(e,t,a)}function bS(e,n,r){if($O(e)){if("value"in e)return e.type==="html"&&!r?"":e.value;if(n&&"alt"in e&&e.alt)return e.alt;if("children"in e)return hv(e.children,n,r)}return Array.isArray(e)?hv(e,n,r):""}function hv(e,n,r){const t=[];let a=-1;for(;++a<e.length;)t[a]=bS(e[a],n,r);return t.join("")}function $O(e){return!!(e&&typeof e=="object")}const vv=document.createElement("i");function zg(e){const n="&"+e+";";vv.innerHTML=n;const r=vv.textContent;return r.charCodeAt(r.length-1)===59&&e!=="semi"||r===n?!1:r}function Xn(e,n,r,t){const a=e.length;let i=0,o;if(n<0?n=-n>a?0:a+n:n=n>a?a:n,r=r>0?r:0,t.length<1e4)o=Array.from(t),o.unshift(n,r),e.splice(...o);else for(r&&e.splice(n,r);i<t.length;)o=t.slice(i,i+1e4),o.unshift(n,0),e.splice(...o),i+=1e4,n+=1e4}function Kn(e,n){return e.length>0?(Xn(e,e.length,0,n),e):n}const bv={}.hasOwnProperty;function yS(e){const n={};let r=-1;for(;++r<e.length;)GO(n,e[r]);return n}function GO(e,n){let r;for(r in n){const a=(bv.call(e,r)?e[r]:void 0)||(e[r]={}),i=n[r];let o;if(i)for(o in i){bv.call(a,o)||(a[o]=[]);const s=i[o];KO(a[o],Array.isArray(s)?s:s?[s]:[])}}}function KO(e,n){let r=-1;const t=[];for(;++r<n.length;)(n[r].add==="after"?e:t).push(n[r]);Xn(e,0,0,t)}function kS(e,n){const r=Number.parseInt(e,n);return r<9||r===11||r>13&&r<32||r>126&&r<160||r>55295&&r<57344||r>64975&&r<65008||(r&65535)===65535||(r&65535)===65534||r>1114111?"�":String.fromCodePoint(r)}function hr(e){return e.replace(/[\t\n\r ]+/g," ").replace(/^ | $/g,"").toLowerCase().toUpperCase()}const hn=Zt(/[A-Za-z]/),un=Zt(/[\dA-Za-z]/),YO=Zt(/[#-'*+\--9=?A-Z^-~]/);function Zl(e){return e!==null&&(e<32||e===127)}const Md=Zt(/\d/),QO=Zt(/[\dA-Fa-f]/),XO=Zt(/[!-/:-@[-`{-~]/);function Y(e){return e!==null&&e<-2}function xe(e){return e!==null&&(e<0||e===32)}function oe(e){return e===-2||e===-1||e===32}const Zc=Zt(new RegExp("\\p{P}|\\p{S}","u")),wa=Zt(/\s/);function Zt(e){return n;function n(r){return r!==null&&r>-1&&e.test(String.fromCharCode(r))}}function Di(e){const n=[];let r=-1,t=0,a=0;for(;++r<e.length;){const i=e.charCodeAt(r);let o="";if(i===37&&un(e.charCodeAt(r+1))&&un(e.charCodeAt(r+2)))a=2;else if(i<128)/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(i))||(o=String.fromCharCode(i));else if(i>55295&&i<57344){const s=e.charCodeAt(r+1);i<56320&&s>56319&&s<57344?(o=String.fromCharCode(i,s),a=1):o="�"}else o=String.fromCharCode(i);o&&(n.push(e.slice(t,r),encodeURIComponent(o)),t=r+a+1,o=""),a&&(r+=a,a=0)}return n.join("")+e.slice(t)}function pe(e,n,r,t){const a=t?t-1:Number.POSITIVE_INFINITY;let i=0;return o;function o(l){return oe(l)?(e.enter(r),s(l)):n(l)}function s(l){return oe(l)&&i++<a?(e.consume(l),s):(e.exit(r),n(l))}}const ZO={tokenize:e4};function e4(e){const n=e.attempt(this.parser.constructs.contentInitial,t,a);let r;return n;function t(s){if(s===null){e.consume(s);return}return e.enter("lineEnding"),e.consume(s),e.exit("lineEnding"),pe(e,n,"linePrefix")}function a(s){return e.enter("paragraph"),i(s)}function i(s){const l=e.enter("chunkText",{contentType:"text",previous:r});return r&&(r.next=l),r=l,o(s)}function o(s){if(s===null){e.exit("chunkText"),e.exit("paragraph"),e.consume(s);return}return Y(s)?(e.consume(s),e.exit("chunkText"),i):(e.consume(s),o)}}const n4={tokenize:r4},yv={tokenize:t4};function r4(e){const n=this,r=[];let t=0,a,i,o;return s;function s(v){if(t<r.length){const x=r[t];return n.containerState=x[1],e.attempt(x[0].continuation,l,c)(v)}return c(v)}function l(v){if(t++,n.containerState._closeFlow){n.containerState._closeFlow=void 0,a&&h();const x=n.events.length;let I=x,S;for(;I--;)if(n.events[I][0]==="exit"&&n.events[I][1].type==="chunkFlow"){S=n.events[I][1].end;break}f(t);let E=x;for(;E<n.events.length;)n.events[E][1].end=Object.assign({},S),E++;return Xn(n.events,I+1,0,n.events.slice(x)),n.events.length=E,c(v)}return s(v)}function c(v){if(t===r.length){if(!a)return d(v);if(a.currentConstruct&&a.currentConstruct.concrete)return g(v);n.interrupt=!!(a.currentConstruct&&!a._gfmTableDynamicInterruptHack)}return n.containerState={},e.check(yv,u,p)(v)}function u(v){return a&&h(),f(t),d(v)}function p(v){return n.parser.lazy[n.now().line]=t!==r.length,o=n.now().offset,g(v)}function d(v){return n.containerState={},e.attempt(yv,m,g)(v)}function m(v){return t++,r.push([n.currentConstruct,n.containerState]),d(v)}function g(v){if(v===null){a&&h(),f(0),e.consume(v);return}return a=a||n.parser.flow(n.now()),e.enter("chunkFlow",{contentType:"flow",previous:i,_tokenizer:a}),y(v)}function y(v){if(v===null){k(e.exit("chunkFlow"),!0),f(0),e.consume(v);return}return Y(v)?(e.consume(v),k(e.exit("chunkFlow")),t=0,n.interrupt=void 0,s):(e.consume(v),y)}function k(v,x){const I=n.sliceStream(v);if(x&&I.push(null),v.previous=i,i&&(i.next=v),i=v,a.defineSkip(v.start),a.write(I),n.parser.lazy[v.start.line]){let S=a.events.length;for(;S--;)if(a.events[S][1].start.offset<o&&(!a.events[S][1].end||a.events[S][1].end.offset>o))return;const E=n.events.length;let T=E,B,C;for(;T--;)if(n.events[T][0]==="exit"&&n.events[T][1].type==="chunkFlow"){if(B){C=n.events[T][1].end;break}B=!0}for(f(t),S=E;S<n.events.length;)n.events[S][1].end=Object.assign({},C),S++;Xn(n.events,T+1,0,n.events.slice(E)),n.events.length=S}}function f(v){let x=r.length;for(;x-- >v;){const I=r[x];n.containerState=I[1],I[0].exit.call(n,e)}r.length=v}function h(){a.write([null]),i=void 0,a=void 0,n.containerState._closeFlow=void 0}}function t4(e,n,r){return pe(e,e.attempt(this.parser.constructs.document,n,r),"linePrefix",this.parser.constructs.disable.null.includes("codeIndented")?void 0:4)}function ec(e){if(e===null||xe(e)||wa(e))return 1;if(Zc(e))return 2}function eu(e,n,r){const t=[];let a=-1;for(;++a<e.length;){const i=e[a].resolveAll;i&&!t.includes(i)&&(n=i(n,r),t.push(i))}return n}const Ad={name:"attention",tokenize:i4,resolveAll:a4};function a4(e,n){let r=-1,t,a,i,o,s,l,c,u;for(;++r<e.length;)if(e[r][0]==="enter"&&e[r][1].type==="attentionSequence"&&e[r][1]._close){for(t=r;t--;)if(e[t][0]==="exit"&&e[t][1].type==="attentionSequence"&&e[t][1]._open&&n.sliceSerialize(e[t][1]).charCodeAt(0)===n.sliceSerialize(e[r][1]).charCodeAt(0)){if((e[t][1]._close||e[r][1]._open)&&(e[r][1].end.offset-e[r][1].start.offset)%3&&!((e[t][1].end.offset-e[t][1].start.offset+e[r][1].end.offset-e[r][1].start.offset)%3))continue;l=e[t][1].end.offset-e[t][1].start.offset>1&&e[r][1].end.offset-e[r][1].start.offset>1?2:1;const p=Object.assign({},e[t][1].end),d=Object.assign({},e[r][1].start);kv(p,-l),kv(d,l),o={type:l>1?"strongSequence":"emphasisSequence",start:p,end:Object.assign({},e[t][1].end)},s={type:l>1?"strongSequence":"emphasisSequence",start:Object.assign({},e[r][1].start),end:d},i={type:l>1?"strongText":"emphasisText",start:Object.assign({},e[t][1].end),end:Object.assign({},e[r][1].start)},a={type:l>1?"strong":"emphasis",start:Object.assign({},o.start),end:Object.assign({},s.end)},e[t][1].end=Object.assign({},o.start),e[r][1].start=Object.assign({},s.end),c=[],e[t][1].end.offset-e[t][1].start.offset&&(c=Kn(c,[["enter",e[t][1],n],["exit",e[t][1],n]])),c=Kn(c,[["enter",a,n],["enter",o,n],["exit",o,n],["enter",i,n]]),c=Kn(c,eu(n.parser.constructs.insideSpan.null,e.slice(t+1,r),n)),c=Kn(c,[["exit",i,n],["enter",s,n],["exit",s,n],["exit",a,n]]),e[r][1].end.offset-e[r][1].start.offset?(u=2,c=Kn(c,[["enter",e[r][1],n],["exit",e[r][1],n]])):u=0,Xn(e,t-1,r-t+3,c),r=t+c.length-u-2;break}}for(r=-1;++r<e.length;)e[r][1].type==="attentionSequence"&&(e[r][1].type="data");return e}function i4(e,n){const r=this.parser.constructs.attentionMarkers.null,t=this.previous,a=ec(t);let i;return o;function o(l){return i=l,e.enter("attentionSequence"),s(l)}function s(l){if(l===i)return e.consume(l),s;const c=e.exit("attentionSequence"),u=ec(l),p=!u||u===2&&a||r.includes(l),d=!a||a===2&&u||r.includes(t);return c._open=!!(i===42?p:p&&(a||!d)),c._close=!!(i===42?d:d&&(u||!p)),n(l)}}function kv(e,n){e.column+=n,e.offset+=n,e._bufferIndex+=n}const o4={name:"autolink",tokenize:s4};function s4(e,n,r){let t=0;return a;function a(m){return e.enter("autolink"),e.enter("autolinkMarker"),e.consume(m),e.exit("autolinkMarker"),e.enter("autolinkProtocol"),i}function i(m){return hn(m)?(e.consume(m),o):m===64?r(m):c(m)}function o(m){return m===43||m===45||m===46||un(m)?(t=1,s(m)):c(m)}function s(m){return m===58?(e.consume(m),t=0,l):(m===43||m===45||m===46||un(m))&&t++<32?(e.consume(m),s):(t=0,c(m))}function l(m){return m===62?(e.exit("autolinkProtocol"),e.enter("autolinkMarker"),e.consume(m),e.exit("autolinkMarker"),e.exit("autolink"),n):m===null||m===32||m===60||Zl(m)?r(m):(e.consume(m),l)}function c(m){return m===64?(e.consume(m),u):YO(m)?(e.consume(m),c):r(m)}function u(m){return un(m)?p(m):r(m)}function p(m){return m===46?(e.consume(m),t=0,u):m===62?(e.exit("autolinkProtocol").type="autolinkEmail",e.enter("autolinkMarker"),e.consume(m),e.exit("autolinkMarker"),e.exit("autolink"),n):d(m)}function d(m){if((m===45||un(m))&&t++<63){const g=m===45?d:p;return e.consume(m),g}return r(m)}}const fs={tokenize:l4,partial:!0};function l4(e,n,r){return t;function t(i){return oe(i)?pe(e,a,"linePrefix")(i):a(i)}function a(i){return i===null||Y(i)?n(i):r(i)}}const SS={name:"blockQuote",tokenize:c4,continuation:{tokenize:u4},exit:p4};function c4(e,n,r){const t=this;return a;function a(o){if(o===62){const s=t.containerState;return s.open||(e.enter("blockQuote",{_container:!0}),s.open=!0),e.enter("blockQuotePrefix"),e.enter("blockQuoteMarker"),e.consume(o),e.exit("blockQuoteMarker"),i}return r(o)}function i(o){return oe(o)?(e.enter("blockQuotePrefixWhitespace"),e.consume(o),e.exit("blockQuotePrefixWhitespace"),e.exit("blockQuotePrefix"),n):(e.exit("blockQuotePrefix"),n(o))}}function u4(e,n,r){const t=this;return a;function a(o){return oe(o)?pe(e,i,"linePrefix",t.parser.constructs.disable.null.includes("codeIndented")?void 0:4)(o):i(o)}function i(o){return e.attempt(SS,n,r)(o)}}function p4(e){e.exit("blockQuote")}const wS={name:"characterEscape",tokenize:d4};function d4(e,n,r){return t;function t(i){return e.enter("characterEscape"),e.enter("escapeMarker"),e.consume(i),e.exit("escapeMarker"),a}function a(i){return XO(i)?(e.enter("characterEscapeValue"),e.consume(i),e.exit("characterEscapeValue"),e.exit("characterEscape"),n):r(i)}}const xS={name:"characterReference",tokenize:m4};function m4(e,n,r){const t=this;let a=0,i,o;return s;function s(p){return e.enter("characterReference"),e.enter("characterReferenceMarker"),e.consume(p),e.exit("characterReferenceMarker"),l}function l(p){return p===35?(e.enter("characterReferenceMarkerNumeric"),e.consume(p),e.exit("characterReferenceMarkerNumeric"),c):(e.enter("characterReferenceValue"),i=31,o=un,u(p))}function c(p){return p===88||p===120?(e.enter("characterReferenceMarkerHexadecimal"),e.consume(p),e.exit("characterReferenceMarkerHexadecimal"),e.enter("characterReferenceValue"),i=6,o=QO,u):(e.enter("characterReferenceValue"),i=7,o=Md,u(p))}function u(p){if(p===59&&a){const d=e.exit("characterReferenceValue");return o===un&&!zg(t.sliceSerialize(d))?r(p):(e.enter("characterReferenceMarker"),e.consume(p),e.exit("characterReferenceMarker"),e.exit("characterReference"),n)}return o(p)&&a++<i?(e.consume(p),u):r(p)}}const Sv={tokenize:f4,partial:!0},wv={name:"codeFenced",tokenize:g4,concrete:!0};function g4(e,n,r){const t=this,a={tokenize:I,partial:!0};let i=0,o=0,s;return l;function l(S){return c(S)}function c(S){const E=t.events[t.events.length-1];return i=E&&E[1].type==="linePrefix"?E[2].sliceSerialize(E[1],!0).length:0,s=S,e.enter("codeFenced"),e.enter("codeFencedFence"),e.enter("codeFencedFenceSequence"),u(S)}function u(S){return S===s?(o++,e.consume(S),u):o<3?r(S):(e.exit("codeFencedFenceSequence"),oe(S)?pe(e,p,"whitespace")(S):p(S))}function p(S){return S===null||Y(S)?(e.exit("codeFencedFence"),t.interrupt?n(S):e.check(Sv,y,x)(S)):(e.enter("codeFencedFenceInfo"),e.enter("chunkString",{contentType:"string"}),d(S))}function d(S){return S===null||Y(S)?(e.exit("chunkString"),e.exit("codeFencedFenceInfo"),p(S)):oe(S)?(e.exit("chunkString"),e.exit("codeFencedFenceInfo"),pe(e,m,"whitespace")(S)):S===96&&S===s?r(S):(e.consume(S),d)}function m(S){return S===null||Y(S)?p(S):(e.enter("codeFencedFenceMeta"),e.enter("chunkString",{contentType:"string"}),g(S))}function g(S){return S===null||Y(S)?(e.exit("chunkString"),e.exit("codeFencedFenceMeta"),p(S)):S===96&&S===s?r(S):(e.consume(S),g)}function y(S){return e.attempt(a,x,k)(S)}function k(S){return e.enter("lineEnding"),e.consume(S),e.exit("lineEnding"),f}function f(S){return i>0&&oe(S)?pe(e,h,"linePrefix",i+1)(S):h(S)}function h(S){return S===null||Y(S)?e.check(Sv,y,x)(S):(e.enter("codeFlowValue"),v(S))}function v(S){return S===null||Y(S)?(e.exit("codeFlowValue"),h(S)):(e.consume(S),v)}function x(S){return e.exit("codeFenced"),n(S)}function I(S,E,T){let B=0;return C;function C(J){return S.enter("lineEnding"),S.consume(J),S.exit("lineEnding"),R}function R(J){return S.enter("codeFencedFence"),oe(J)?pe(S,O,"linePrefix",t.parser.constructs.disable.null.includes("codeIndented")?void 0:4)(J):O(J)}function O(J){return J===s?(S.enter("codeFencedFenceSequence"),q(J)):T(J)}function q(J){return J===s?(B++,S.consume(J),q):B>=o?(S.exit("codeFencedFenceSequence"),oe(J)?pe(S,$,"whitespace")(J):$(J)):T(J)}function $(J){return J===null||Y(J)?(S.exit("codeFencedFence"),E(J)):T(J)}}}function f4(e,n,r){const t=this;return a;function a(o){return o===null?r(o):(e.enter("lineEnding"),e.consume(o),e.exit("lineEnding"),i)}function i(o){return t.parser.lazy[t.now().line]?r(o):n(o)}}const Gu={name:"codeIndented",tokenize:v4},h4={tokenize:b4,partial:!0};function v4(e,n,r){const t=this;return a;function a(c){return e.enter("codeIndented"),pe(e,i,"linePrefix",5)(c)}function i(c){const u=t.events[t.events.length-1];return u&&u[1].type==="linePrefix"&&u[2].sliceSerialize(u[1],!0).length>=4?o(c):r(c)}function o(c){return c===null?l(c):Y(c)?e.attempt(h4,o,l)(c):(e.enter("codeFlowValue"),s(c))}function s(c){return c===null||Y(c)?(e.exit("codeFlowValue"),o(c)):(e.consume(c),s)}function l(c){return e.exit("codeIndented"),n(c)}}function b4(e,n,r){const t=this;return a;function a(o){return t.parser.lazy[t.now().line]?r(o):Y(o)?(e.enter("lineEnding"),e.consume(o),e.exit("lineEnding"),a):pe(e,i,"linePrefix",5)(o)}function i(o){const s=t.events[t.events.length-1];return s&&s[1].type==="linePrefix"&&s[2].sliceSerialize(s[1],!0).length>=4?n(o):Y(o)?a(o):r(o)}}const y4={name:"codeText",tokenize:w4,resolve:k4,previous:S4};function k4(e){let n=e.length-4,r=3,t,a;if((e[r][1].type==="lineEnding"||e[r][1].type==="space")&&(e[n][1].type==="lineEnding"||e[n][1].type==="space")){for(t=r;++t<n;)if(e[t][1].type==="codeTextData"){e[r][1].type="codeTextPadding",e[n][1].type="codeTextPadding",r+=2,n-=2;break}}for(t=r-1,n++;++t<=n;)a===void 0?t!==n&&e[t][1].type!=="lineEnding"&&(a=t):(t===n||e[t][1].type==="lineEnding")&&(e[a][1].type="codeTextData",t!==a+2&&(e[a][1].end=e[t-1][1].end,e.splice(a+2,t-a-2),n-=t-a-2,t=a+2),a=void 0);return e}function S4(e){return e!==96||this.events[this.events.length-1][1].type==="characterEscape"}function w4(e,n,r){let t=0,a,i;return o;function o(p){return e.enter("codeText"),e.enter("codeTextSequence"),s(p)}function s(p){return p===96?(e.consume(p),t++,s):(e.exit("codeTextSequence"),l(p))}function l(p){return p===null?r(p):p===32?(e.enter("space"),e.consume(p),e.exit("space"),l):p===96?(i=e.enter("codeTextSequence"),a=0,u(p)):Y(p)?(e.enter("lineEnding"),e.consume(p),e.exit("lineEnding"),l):(e.enter("codeTextData"),c(p))}function c(p){return p===null||p===32||p===96||Y(p)?(e.exit("codeTextData"),l(p)):(e.consume(p),c)}function u(p){return p===96?(e.consume(p),a++,u):a===t?(e.exit("codeTextSequence"),e.exit("codeText"),n(p)):(i.type="codeTextData",c(p))}}class x4{constructor(n){this.left=n?[...n]:[],this.right=[]}get(n){if(n<0||n>=this.left.length+this.right.length)throw new RangeError("Cannot access index `"+n+"` in a splice buffer of size `"+(this.left.length+this.right.length)+"`");return n<this.left.length?this.left[n]:this.right[this.right.length-n+this.left.length-1]}get length(){return this.left.length+this.right.length}shift(){return this.setCursor(0),this.right.pop()}slice(n,r){const t=r??Number.POSITIVE_INFINITY;return t<this.left.length?this.left.slice(n,t):n>this.left.length?this.right.slice(this.right.length-t+this.left.length,this.right.length-n+this.left.length).reverse():this.left.slice(n).concat(this.right.slice(this.right.length-t+this.left.length).reverse())}splice(n,r,t){const a=r||0;this.setCursor(Math.trunc(n));const i=this.right.splice(this.right.length-a,Number.POSITIVE_INFINITY);return t&&Yi(this.left,t),i.reverse()}pop(){return this.setCursor(Number.POSITIVE_INFINITY),this.left.pop()}push(n){this.setCursor(Number.POSITIVE_INFINITY),this.left.push(n)}pushMany(n){this.setCursor(Number.POSITIVE_INFINITY),Yi(this.left,n)}unshift(n){this.setCursor(0),this.right.push(n)}unshiftMany(n){this.setCursor(0),Yi(this.right,n.reverse())}setCursor(n){if(!(n===this.left.length||n>this.left.length&&this.right.length===0||n<0&&this.left.length===0))if(n<this.left.length){const r=this.left.splice(n,Number.POSITIVE_INFINITY);Yi(this.right,r.reverse())}else{const r=this.right.splice(this.left.length+this.right.length-n,Number.POSITIVE_INFINITY);Yi(this.left,r.reverse())}}}function Yi(e,n){let r=0;if(n.length<1e4)e.push(...n);else for(;r<n.length;)e.push(...n.slice(r,r+1e4)),r+=1e4}function jS(e){const n={};let r=-1,t,a,i,o,s,l,c;const u=new x4(e);for(;++r<u.length;){for(;r in n;)r=n[r];if(t=u.get(r),r&&t[1].type==="chunkFlow"&&u.get(r-1)[1].type==="listItemPrefix"&&(l=t[1]._tokenizer.events,i=0,i<l.length&&l[i][1].type==="lineEndingBlank"&&(i+=2),i<l.length&&l[i][1].type==="content"))for(;++i<l.length&&l[i][1].type!=="content";)l[i][1].type==="chunkText"&&(l[i][1]._isInFirstContentOfListItem=!0,i++);if(t[0]==="enter")t[1].contentType&&(Object.assign(n,j4(u,r)),r=n[r],c=!0);else if(t[1]._container){for(i=r,a=void 0;i--&&(o=u.get(i),o[1].type==="lineEnding"||o[1].type==="lineEndingBlank");)o[0]==="enter"&&(a&&(u.get(a)[1].type="lineEndingBlank"),o[1].type="lineEnding",a=i);a&&(t[1].end=Object.assign({},u.get(a)[1].start),s=u.slice(a,r),s.unshift(t),u.splice(a,r-a+1,s))}}return Xn(e,0,Number.POSITIVE_INFINITY,u.slice(0)),!c}function j4(e,n){const r=e.get(n)[1],t=e.get(n)[2];let a=n-1;const i=[],o=r._tokenizer||t.parser[r.contentType](r.start),s=o.events,l=[],c={};let u,p,d=-1,m=r,g=0,y=0;const k=[y];for(;m;){for(;e.get(++a)[1]!==m;);i.push(a),m._tokenizer||(u=t.sliceStream(m),m.next||u.push(null),p&&o.defineSkip(m.start),m._isInFirstContentOfListItem&&(o._gfmTasklistFirstContentOfListItem=!0),o.write(u),m._isInFirstContentOfListItem&&(o._gfmTasklistFirstContentOfListItem=void 0)),p=m,m=m.next}for(m=r;++d<s.length;)s[d][0]==="exit"&&s[d-1][0]==="enter"&&s[d][1].type===s[d-1][1].type&&s[d][1].start.line!==s[d][1].end.line&&(y=d+1,k.push(y),m._tokenizer=void 0,m.previous=void 0,m=m.next);for(o.events=[],m?(m._tokenizer=void 0,m.previous=void 0):k.pop(),d=k.length;d--;){const f=s.slice(k[d],k[d+1]),h=i.pop();l.push([h,h+f.length-1]),e.splice(h,2,f)}for(l.reverse(),d=-1;++d<l.length;)c[g+l[d][0]]=g+l[d][1],g+=l[d][1]-l[d][0]-1;return c}const C4={tokenize:T4,resolve:E4},I4={tokenize:M4,partial:!0};function E4(e){return jS(e),e}function T4(e,n){let r;return t;function t(s){return e.enter("content"),r=e.enter("chunkContent",{contentType:"content"}),a(s)}function a(s){return s===null?i(s):Y(s)?e.check(I4,o,i)(s):(e.consume(s),a)}function i(s){return e.exit("chunkContent"),e.exit("content"),n(s)}function o(s){return e.consume(s),e.exit("chunkContent"),r.next=e.enter("chunkContent",{contentType:"content",previous:r}),r=r.next,a}}function M4(e,n,r){const t=this;return a;function a(o){return e.exit("chunkContent"),e.enter("lineEnding"),e.consume(o),e.exit("lineEnding"),pe(e,i,"linePrefix")}function i(o){if(o===null||Y(o))return r(o);const s=t.events[t.events.length-1];return!t.parser.constructs.disable.null.includes("codeIndented")&&s&&s[1].type==="linePrefix"&&s[2].sliceSerialize(s[1],!0).length>=4?n(o):e.interrupt(t.parser.constructs.flow,r,n)(o)}}function CS(e,n,r,t,a,i,o,s,l){const c=l||Number.POSITIVE_INFINITY;let u=0;return p;function p(f){return f===60?(e.enter(t),e.enter(a),e.enter(i),e.consume(f),e.exit(i),d):f===null||f===32||f===41||Zl(f)?r(f):(e.enter(t),e.enter(o),e.enter(s),e.enter("chunkString",{contentType:"string"}),y(f))}function d(f){return f===62?(e.enter(i),e.consume(f),e.exit(i),e.exit(a),e.exit(t),n):(e.enter(s),e.enter("chunkString",{contentType:"string"}),m(f))}function m(f){return f===62?(e.exit("chunkString"),e.exit(s),d(f)):f===null||f===60||Y(f)?r(f):(e.consume(f),f===92?g:m)}function g(f){return f===60||f===62||f===92?(e.consume(f),m):m(f)}function y(f){return!u&&(f===null||f===41||xe(f))?(e.exit("chunkString"),e.exit(s),e.exit(o),e.exit(t),n(f)):u<c&&f===40?(e.consume(f),u++,y):f===41?(e.consume(f),u--,y):f===null||f===32||f===40||Zl(f)?r(f):(e.consume(f),f===92?k:y)}function k(f){return f===40||f===41||f===92?(e.consume(f),y):y(f)}}function IS(e,n,r,t,a,i){const o=this;let s=0,l;return c;function c(m){return e.enter(t),e.enter(a),e.consume(m),e.exit(a),e.enter(i),u}function u(m){return s>999||m===null||m===91||m===93&&!l||m===94&&!s&&"_hiddenFootnoteSupport"in o.parser.constructs?r(m):m===93?(e.exit(i),e.enter(a),e.consume(m),e.exit(a),e.exit(t),n):Y(m)?(e.enter("lineEnding"),e.consume(m),e.exit("lineEnding"),u):(e.enter("chunkString",{contentType:"string"}),p(m))}function p(m){return m===null||m===91||m===93||Y(m)||s++>999?(e.exit("chunkString"),u(m)):(e.consume(m),l||(l=!oe(m)),m===92?d:p)}function d(m){return m===91||m===92||m===93?(e.consume(m),s++,p):p(m)}}function ES(e,n,r,t,a,i){let o;return s;function s(d){return d===34||d===39||d===40?(e.enter(t),e.enter(a),e.consume(d),e.exit(a),o=d===40?41:d,l):r(d)}function l(d){return d===o?(e.enter(a),e.consume(d),e.exit(a),e.exit(t),n):(e.enter(i),c(d))}function c(d){return d===o?(e.exit(i),l(o)):d===null?r(d):Y(d)?(e.enter("lineEnding"),e.consume(d),e.exit("lineEnding"),pe(e,c,"linePrefix")):(e.enter("chunkString",{contentType:"string"}),u(d))}function u(d){return d===o||d===null||Y(d)?(e.exit("chunkString"),c(d)):(e.consume(d),d===92?p:u)}function p(d){return d===o||d===92?(e.consume(d),u):u(d)}}function bo(e,n){let r;return t;function t(a){return Y(a)?(e.enter("lineEnding"),e.consume(a),e.exit("lineEnding"),r=!0,t):oe(a)?pe(e,t,r?"linePrefix":"lineSuffix")(a):n(a)}}const A4={name:"definition",tokenize:R4},P4={tokenize:D4,partial:!0};function R4(e,n,r){const t=this;let a;return i;function i(m){return e.enter("definition"),o(m)}function o(m){return IS.call(t,e,s,r,"definitionLabel","definitionLabelMarker","definitionLabelString")(m)}function s(m){return a=hr(t.sliceSerialize(t.events[t.events.length-1][1]).slice(1,-1)),m===58?(e.enter("definitionMarker"),e.consume(m),e.exit("definitionMarker"),l):r(m)}function l(m){return xe(m)?bo(e,c)(m):c(m)}function c(m){return CS(e,u,r,"definitionDestination","definitionDestinationLiteral","definitionDestinationLiteralMarker","definitionDestinationRaw","definitionDestinationString")(m)}function u(m){return e.attempt(P4,p,p)(m)}function p(m){return oe(m)?pe(e,d,"whitespace")(m):d(m)}function d(m){return m===null||Y(m)?(e.exit("definition"),t.parser.defined.push(a),n(m)):r(m)}}function D4(e,n,r){return t;function t(s){return xe(s)?bo(e,a)(s):r(s)}function a(s){return ES(e,i,r,"definitionTitle","definitionTitleMarker","definitionTitleString")(s)}function i(s){return oe(s)?pe(e,o,"whitespace")(s):o(s)}function o(s){return s===null||Y(s)?n(s):r(s)}}const O4={name:"hardBreakEscape",tokenize:L4};function L4(e,n,r){return t;function t(i){return e.enter("hardBreakEscape"),e.consume(i),a}function a(i){return Y(i)?(e.exit("hardBreakEscape"),n(i)):r(i)}}const _4={name:"headingAtx",tokenize:B4,resolve:N4};function N4(e,n){let r=e.length-2,t=3,a,i;return e[t][1].type==="whitespace"&&(t+=2),r-2>t&&e[r][1].type==="whitespace"&&(r-=2),e[r][1].type==="atxHeadingSequence"&&(t===r-1||r-4>t&&e[r-2][1].type==="whitespace")&&(r-=t+1===r?2:4),r>t&&(a={type:"atxHeadingText",start:e[t][1].start,end:e[r][1].end},i={type:"chunkText",start:e[t][1].start,end:e[r][1].end,contentType:"text"},Xn(e,t,r-t+1,[["enter",a,n],["enter",i,n],["exit",i,n],["exit",a,n]])),e}function B4(e,n,r){let t=0;return a;function a(u){return e.enter("atxHeading"),i(u)}function i(u){return e.enter("atxHeadingSequence"),o(u)}function o(u){return u===35&&t++<6?(e.consume(u),o):u===null||xe(u)?(e.exit("atxHeadingSequence"),s(u)):r(u)}function s(u){return u===35?(e.enter("atxHeadingSequence"),l(u)):u===null||Y(u)?(e.exit("atxHeading"),n(u)):oe(u)?pe(e,s,"whitespace")(u):(e.enter("atxHeadingText"),c(u))}function l(u){return u===35?(e.consume(u),l):(e.exit("atxHeadingSequence"),s(u))}function c(u){return u===null||u===35||xe(u)?(e.exit("atxHeadingText"),s(u)):(e.consume(u),c)}}const H4=["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hr","html","iframe","legend","li","link","main","menu","menuitem","nav","noframes","ol","optgroup","option","p","param","search","section","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"],xv=["pre","script","style","textarea"],q4={name:"htmlFlow",tokenize:U4,resolveTo:z4,concrete:!0},F4={tokenize:V4,partial:!0},J4={tokenize:W4,partial:!0};function z4(e){let n=e.length;for(;n--&&!(e[n][0]==="enter"&&e[n][1].type==="htmlFlow"););return n>1&&e[n-2][1].type==="linePrefix"&&(e[n][1].start=e[n-2][1].start,e[n+1][1].start=e[n-2][1].start,e.splice(n-2,2)),e}function U4(e,n,r){const t=this;let a,i,o,s,l;return c;function c(j){return u(j)}function u(j){return e.enter("htmlFlow"),e.enter("htmlFlowData"),e.consume(j),p}function p(j){return j===33?(e.consume(j),d):j===47?(e.consume(j),i=!0,y):j===63?(e.consume(j),a=3,t.interrupt?n:w):hn(j)?(e.consume(j),o=String.fromCharCode(j),k):r(j)}function d(j){return j===45?(e.consume(j),a=2,m):j===91?(e.consume(j),a=5,s=0,g):hn(j)?(e.consume(j),a=4,t.interrupt?n:w):r(j)}function m(j){return j===45?(e.consume(j),t.interrupt?n:w):r(j)}function g(j){const ge="CDATA[";return j===ge.charCodeAt(s++)?(e.consume(j),s===ge.length?t.interrupt?n:O:g):r(j)}function y(j){return hn(j)?(e.consume(j),o=String.fromCharCode(j),k):r(j)}function k(j){if(j===null||j===47||j===62||xe(j)){const ge=j===47,ce=o.toLowerCase();return!ge&&!i&&xv.includes(ce)?(a=1,t.interrupt?n(j):O(j)):H4.includes(o.toLowerCase())?(a=6,ge?(e.consume(j),f):t.interrupt?n(j):O(j)):(a=7,t.interrupt&&!t.parser.lazy[t.now().line]?r(j):i?h(j):v(j))}return j===45||un(j)?(e.consume(j),o+=String.fromCharCode(j),k):r(j)}function f(j){return j===62?(e.consume(j),t.interrupt?n:O):r(j)}function h(j){return oe(j)?(e.consume(j),h):C(j)}function v(j){return j===47?(e.consume(j),C):j===58||j===95||hn(j)?(e.consume(j),x):oe(j)?(e.consume(j),v):C(j)}function x(j){return j===45||j===46||j===58||j===95||un(j)?(e.consume(j),x):I(j)}function I(j){return j===61?(e.consume(j),S):oe(j)?(e.consume(j),I):v(j)}function S(j){return j===null||j===60||j===61||j===62||j===96?r(j):j===34||j===39?(e.consume(j),l=j,E):oe(j)?(e.consume(j),S):T(j)}function E(j){return j===l?(e.consume(j),l=null,B):j===null||Y(j)?r(j):(e.consume(j),E)}function T(j){return j===null||j===34||j===39||j===47||j===60||j===61||j===62||j===96||xe(j)?I(j):(e.consume(j),T)}function B(j){return j===47||j===62||oe(j)?v(j):r(j)}function C(j){return j===62?(e.consume(j),R):r(j)}function R(j){return j===null||Y(j)?O(j):oe(j)?(e.consume(j),R):r(j)}function O(j){return j===45&&a===2?(e.consume(j),Q):j===60&&a===1?(e.consume(j),ee):j===62&&a===4?(e.consume(j),X):j===63&&a===3?(e.consume(j),w):j===93&&a===5?(e.consume(j),z):Y(j)&&(a===6||a===7)?(e.exit("htmlFlowData"),e.check(F4,te,q)(j)):j===null||Y(j)?(e.exit("htmlFlowData"),q(j)):(e.consume(j),O)}function q(j){return e.check(J4,$,te)(j)}function $(j){return e.enter("lineEnding"),e.consume(j),e.exit("lineEnding"),J}function J(j){return j===null||Y(j)?q(j):(e.enter("htmlFlowData"),O(j))}function Q(j){return j===45?(e.consume(j),w):O(j)}function ee(j){return j===47?(e.consume(j),o="",D):O(j)}function D(j){if(j===62){const ge=o.toLowerCase();return xv.includes(ge)?(e.consume(j),X):O(j)}return hn(j)&&o.length<8?(e.consume(j),o+=String.fromCharCode(j),D):O(j)}function z(j){return j===93?(e.consume(j),w):O(j)}function w(j){return j===62?(e.consume(j),X):j===45&&a===2?(e.consume(j),w):O(j)}function X(j){return j===null||Y(j)?(e.exit("htmlFlowData"),te(j)):(e.consume(j),X)}function te(j){return e.exit("htmlFlow"),n(j)}}function W4(e,n,r){const t=this;return a;function a(o){return Y(o)?(e.enter("lineEnding"),e.consume(o),e.exit("lineEnding"),i):r(o)}function i(o){return t.parser.lazy[t.now().line]?r(o):n(o)}}function V4(e,n,r){return t;function t(a){return e.enter("lineEnding"),e.consume(a),e.exit("lineEnding"),e.attempt(fs,n,r)}}const $4={name:"htmlText",tokenize:G4};function G4(e,n,r){const t=this;let a,i,o;return s;function s(w){return e.enter("htmlText"),e.enter("htmlTextData"),e.consume(w),l}function l(w){return w===33?(e.consume(w),c):w===47?(e.consume(w),I):w===63?(e.consume(w),v):hn(w)?(e.consume(w),T):r(w)}function c(w){return w===45?(e.consume(w),u):w===91?(e.consume(w),i=0,g):hn(w)?(e.consume(w),h):r(w)}function u(w){return w===45?(e.consume(w),m):r(w)}function p(w){return w===null?r(w):w===45?(e.consume(w),d):Y(w)?(o=p,ee(w)):(e.consume(w),p)}function d(w){return w===45?(e.consume(w),m):p(w)}function m(w){return w===62?Q(w):w===45?d(w):p(w)}function g(w){const X="CDATA[";return w===X.charCodeAt(i++)?(e.consume(w),i===X.length?y:g):r(w)}function y(w){return w===null?r(w):w===93?(e.consume(w),k):Y(w)?(o=y,ee(w)):(e.consume(w),y)}function k(w){return w===93?(e.consume(w),f):y(w)}function f(w){return w===62?Q(w):w===93?(e.consume(w),f):y(w)}function h(w){return w===null||w===62?Q(w):Y(w)?(o=h,ee(w)):(e.consume(w),h)}function v(w){return w===null?r(w):w===63?(e.consume(w),x):Y(w)?(o=v,ee(w)):(e.consume(w),v)}function x(w){return w===62?Q(w):v(w)}function I(w){return hn(w)?(e.consume(w),S):r(w)}function S(w){return w===45||un(w)?(e.consume(w),S):E(w)}function E(w){return Y(w)?(o=E,ee(w)):oe(w)?(e.consume(w),E):Q(w)}function T(w){return w===45||un(w)?(e.consume(w),T):w===47||w===62||xe(w)?B(w):r(w)}function B(w){return w===47?(e.consume(w),Q):w===58||w===95||hn(w)?(e.consume(w),C):Y(w)?(o=B,ee(w)):oe(w)?(e.consume(w),B):Q(w)}function C(w){return w===45||w===46||w===58||w===95||un(w)?(e.consume(w),C):R(w)}function R(w){return w===61?(e.consume(w),O):Y(w)?(o=R,ee(w)):oe(w)?(e.consume(w),R):B(w)}function O(w){return w===null||w===60||w===61||w===62||w===96?r(w):w===34||w===39?(e.consume(w),a=w,q):Y(w)?(o=O,ee(w)):oe(w)?(e.consume(w),O):(e.consume(w),$)}function q(w){return w===a?(e.consume(w),a=void 0,J):w===null?r(w):Y(w)?(o=q,ee(w)):(e.consume(w),q)}function $(w){return w===null||w===34||w===39||w===60||w===61||w===96?r(w):w===47||w===62||xe(w)?B(w):(e.consume(w),$)}function J(w){return w===47||w===62||xe(w)?B(w):r(w)}function Q(w){return w===62?(e.consume(w),e.exit("htmlTextData"),e.exit("htmlText"),n):r(w)}function ee(w){return e.exit("htmlTextData"),e.enter("lineEnding"),e.consume(w),e.exit("lineEnding"),D}function D(w){return oe(w)?pe(e,z,"linePrefix",t.parser.constructs.disable.null.includes("codeIndented")?void 0:4)(w):z(w)}function z(w){return e.enter("htmlTextData"),o(w)}}const Ug={name:"labelEnd",tokenize:eL,resolveTo:Z4,resolveAll:X4},K4={tokenize:nL},Y4={tokenize:rL},Q4={tokenize:tL};function X4(e){let n=-1;for(;++n<e.length;){const r=e[n][1];(r.type==="labelImage"||r.type==="labelLink"||r.type==="labelEnd")&&(e.splice(n+1,r.type==="labelImage"?4:2),r.type="data",n++)}return e}function Z4(e,n){let r=e.length,t=0,a,i,o,s;for(;r--;)if(a=e[r][1],i){if(a.type==="link"||a.type==="labelLink"&&a._inactive)break;e[r][0]==="enter"&&a.type==="labelLink"&&(a._inactive=!0)}else if(o){if(e[r][0]==="enter"&&(a.type==="labelImage"||a.type==="labelLink")&&!a._balanced&&(i=r,a.type!=="labelLink")){t=2;break}}else a.type==="labelEnd"&&(o=r);const l={type:e[i][1].type==="labelLink"?"link":"image",start:Object.assign({},e[i][1].start),end:Object.assign({},e[e.length-1][1].end)},c={type:"label",start:Object.assign({},e[i][1].start),end:Object.assign({},e[o][1].end)},u={type:"labelText",start:Object.assign({},e[i+t+2][1].end),end:Object.assign({},e[o-2][1].start)};return s=[["enter",l,n],["enter",c,n]],s=Kn(s,e.slice(i+1,i+t+3)),s=Kn(s,[["enter",u,n]]),s=Kn(s,eu(n.parser.constructs.insideSpan.null,e.slice(i+t+4,o-3),n)),s=Kn(s,[["exit",u,n],e[o-2],e[o-1],["exit",c,n]]),s=Kn(s,e.slice(o+1)),s=Kn(s,[["exit",l,n]]),Xn(e,i,e.length,s),e}function eL(e,n,r){const t=this;let a=t.events.length,i,o;for(;a--;)if((t.events[a][1].type==="labelImage"||t.events[a][1].type==="labelLink")&&!t.events[a][1]._balanced){i=t.events[a][1];break}return s;function s(d){return i?i._inactive?p(d):(o=t.parser.defined.includes(hr(t.sliceSerialize({start:i.end,end:t.now()}))),e.enter("labelEnd"),e.enter("labelMarker"),e.consume(d),e.exit("labelMarker"),e.exit("labelEnd"),l):r(d)}function l(d){return d===40?e.attempt(K4,u,o?u:p)(d):d===91?e.attempt(Y4,u,o?c:p)(d):o?u(d):p(d)}function c(d){return e.attempt(Q4,u,p)(d)}function u(d){return n(d)}function p(d){return i._balanced=!0,r(d)}}function nL(e,n,r){return t;function t(p){return e.enter("resource"),e.enter("resourceMarker"),e.consume(p),e.exit("resourceMarker"),a}function a(p){return xe(p)?bo(e,i)(p):i(p)}function i(p){return p===41?u(p):CS(e,o,s,"resourceDestination","resourceDestinationLiteral","resourceDestinationLiteralMarker","resourceDestinationRaw","resourceDestinationString",32)(p)}function o(p){return xe(p)?bo(e,l)(p):u(p)}function s(p){return r(p)}function l(p){return p===34||p===39||p===40?ES(e,c,r,"resourceTitle","resourceTitleMarker","resourceTitleString")(p):u(p)}function c(p){return xe(p)?bo(e,u)(p):u(p)}function u(p){return p===41?(e.enter("resourceMarker"),e.consume(p),e.exit("resourceMarker"),e.exit("resource"),n):r(p)}}function rL(e,n,r){const t=this;return a;function a(s){return IS.call(t,e,i,o,"reference","referenceMarker","referenceString")(s)}function i(s){return t.parser.defined.includes(hr(t.sliceSerialize(t.events[t.events.length-1][1]).slice(1,-1)))?n(s):r(s)}function o(s){return r(s)}}function tL(e,n,r){return t;function t(i){return e.enter("reference"),e.enter("referenceMarker"),e.consume(i),e.exit("referenceMarker"),a}function a(i){return i===93?(e.enter("referenceMarker"),e.consume(i),e.exit("referenceMarker"),e.exit("reference"),n):r(i)}}const aL={name:"labelStartImage",tokenize:iL,resolveAll:Ug.resolveAll};function iL(e,n,r){const t=this;return a;function a(s){return e.enter("labelImage"),e.enter("labelImageMarker"),e.consume(s),e.exit("labelImageMarker"),i}function i(s){return s===91?(e.enter("labelMarker"),e.consume(s),e.exit("labelMarker"),e.exit("labelImage"),o):r(s)}function o(s){return s===94&&"_hiddenFootnoteSupport"in t.parser.constructs?r(s):n(s)}}const oL={name:"labelStartLink",tokenize:sL,resolveAll:Ug.resolveAll};function sL(e,n,r){const t=this;return a;function a(o){return e.enter("labelLink"),e.enter("labelMarker"),e.consume(o),e.exit("labelMarker"),e.exit("labelLink"),i}function i(o){return o===94&&"_hiddenFootnoteSupport"in t.parser.constructs?r(o):n(o)}}const Ku={name:"lineEnding",tokenize:lL};function lL(e,n){return r;function r(t){return e.enter("lineEnding"),e.consume(t),e.exit("lineEnding"),pe(e,n,"linePrefix")}}const gl={name:"thematicBreak",tokenize:cL};function cL(e,n,r){let t=0,a;return i;function i(c){return e.enter("thematicBreak"),o(c)}function o(c){return a=c,s(c)}function s(c){return c===a?(e.enter("thematicBreakSequence"),l(c)):t>=3&&(c===null||Y(c))?(e.exit("thematicBreak"),n(c)):r(c)}function l(c){return c===a?(e.consume(c),t++,l):(e.exit("thematicBreakSequence"),oe(c)?pe(e,s,"whitespace")(c):s(c))}}const Sn={name:"list",tokenize:dL,continuation:{tokenize:mL},exit:fL},uL={tokenize:hL,partial:!0},pL={tokenize:gL,partial:!0};function dL(e,n,r){const t=this,a=t.events[t.events.length-1];let i=a&&a[1].type==="linePrefix"?a[2].sliceSerialize(a[1],!0).length:0,o=0;return s;function s(m){const g=t.containerState.type||(m===42||m===43||m===45?"listUnordered":"listOrdered");if(g==="listUnordered"?!t.containerState.marker||m===t.containerState.marker:Md(m)){if(t.containerState.type||(t.containerState.type=g,e.enter(g,{_container:!0})),g==="listUnordered")return e.enter("listItemPrefix"),m===42||m===45?e.check(gl,r,c)(m):c(m);if(!t.interrupt||m===49)return e.enter("listItemPrefix"),e.enter("listItemValue"),l(m)}return r(m)}function l(m){return Md(m)&&++o<10?(e.consume(m),l):(!t.interrupt||o<2)&&(t.containerState.marker?m===t.containerState.marker:m===41||m===46)?(e.exit("listItemValue"),c(m)):r(m)}function c(m){return e.enter("listItemMarker"),e.consume(m),e.exit("listItemMarker"),t.containerState.marker=t.containerState.marker||m,e.check(fs,t.interrupt?r:u,e.attempt(uL,d,p))}function u(m){return t.containerState.initialBlankLine=!0,i++,d(m)}function p(m){return oe(m)?(e.enter("listItemPrefixWhitespace"),e.consume(m),e.exit("listItemPrefixWhitespace"),d):r(m)}function d(m){return t.containerState.size=i+t.sliceSerialize(e.exit("listItemPrefix"),!0).length,n(m)}}function mL(e,n,r){const t=this;return t.containerState._closeFlow=void 0,e.check(fs,a,i);function a(s){return t.containerState.furtherBlankLines=t.containerState.furtherBlankLines||t.containerState.initialBlankLine,pe(e,n,"listItemIndent",t.containerState.size+1)(s)}function i(s){return t.containerState.furtherBlankLines||!oe(s)?(t.containerState.furtherBlankLines=void 0,t.containerState.initialBlankLine=void 0,o(s)):(t.containerState.furtherBlankLines=void 0,t.containerState.initialBlankLine=void 0,e.attempt(pL,n,o)(s))}function o(s){return t.containerState._closeFlow=!0,t.interrupt=void 0,pe(e,e.attempt(Sn,n,r),"linePrefix",t.parser.constructs.disable.null.includes("codeIndented")?void 0:4)(s)}}function gL(e,n,r){const t=this;return pe(e,a,"listItemIndent",t.containerState.size+1);function a(i){const o=t.events[t.events.length-1];return o&&o[1].type==="listItemIndent"&&o[2].sliceSerialize(o[1],!0).length===t.containerState.size?n(i):r(i)}}function fL(e){e.exit(this.containerState.type)}function hL(e,n,r){const t=this;return pe(e,a,"listItemPrefixWhitespace",t.parser.constructs.disable.null.includes("codeIndented")?void 0:5);function a(i){const o=t.events[t.events.length-1];return!oe(i)&&o&&o[1].type==="listItemPrefixWhitespace"?n(i):r(i)}}const jv={name:"setextUnderline",tokenize:bL,resolveTo:vL};function vL(e,n){let r=e.length,t,a,i;for(;r--;)if(e[r][0]==="enter"){if(e[r][1].type==="content"){t=r;break}e[r][1].type==="paragraph"&&(a=r)}else e[r][1].type==="content"&&e.splice(r,1),!i&&e[r][1].type==="definition"&&(i=r);const o={type:"setextHeading",start:Object.assign({},e[a][1].start),end:Object.assign({},e[e.length-1][1].end)};return e[a][1].type="setextHeadingText",i?(e.splice(a,0,["enter",o,n]),e.splice(i+1,0,["exit",e[t][1],n]),e[t][1].end=Object.assign({},e[i][1].end)):e[t][1]=o,e.push(["exit",o,n]),e}function bL(e,n,r){const t=this;let a;return i;function i(c){let u=t.events.length,p;for(;u--;)if(t.events[u][1].type!=="lineEnding"&&t.events[u][1].type!=="linePrefix"&&t.events[u][1].type!=="content"){p=t.events[u][1].type==="paragraph";break}return!t.parser.lazy[t.now().line]&&(t.interrupt||p)?(e.enter("setextHeadingLine"),a=c,o(c)):r(c)}function o(c){return e.enter("setextHeadingLineSequence"),s(c)}function s(c){return c===a?(e.consume(c),s):(e.exit("setextHeadingLineSequence"),oe(c)?pe(e,l,"lineSuffix")(c):l(c))}function l(c){return c===null||Y(c)?(e.exit("setextHeadingLine"),n(c)):r(c)}}const yL={tokenize:kL};function kL(e){const n=this,r=e.attempt(fs,t,e.attempt(this.parser.constructs.flowInitial,a,pe(e,e.attempt(this.parser.constructs.flow,a,e.attempt(C4,a)),"linePrefix")));return r;function t(i){if(i===null){e.consume(i);return}return e.enter("lineEndingBlank"),e.consume(i),e.exit("lineEndingBlank"),n.currentConstruct=void 0,r}function a(i){if(i===null){e.consume(i);return}return e.enter("lineEnding"),e.consume(i),e.exit("lineEnding"),n.currentConstruct=void 0,r}}const SL={resolveAll:MS()},wL=TS("string"),xL=TS("text");function TS(e){return{tokenize:n,resolveAll:MS(e==="text"?jL:void 0)};function n(r){const t=this,a=this.parser.constructs[e],i=r.attempt(a,o,s);return o;function o(u){return c(u)?i(u):s(u)}function s(u){if(u===null){r.consume(u);return}return r.enter("data"),r.consume(u),l}function l(u){return c(u)?(r.exit("data"),i(u)):(r.consume(u),l)}function c(u){if(u===null)return!0;const p=a[u];let d=-1;if(p)for(;++d<p.length;){const m=p[d];if(!m.previous||m.previous.call(t,t.previous))return!0}return!1}}}function MS(e){return n;function n(r,t){let a=-1,i;for(;++a<=r.length;)i===void 0?r[a]&&r[a][1].type==="data"&&(i=a,a++):(!r[a]||r[a][1].type!=="data")&&(a!==i+2&&(r[i][1].end=r[a-1][1].end,r.splice(i+2,a-i-2),a=i+2),i=void 0);return e?e(r,t):r}}function jL(e,n){let r=0;for(;++r<=e.length;)if((r===e.length||e[r][1].type==="lineEnding")&&e[r-1][1].type==="data"){const t=e[r-1][1],a=n.sliceStream(t);let i=a.length,o=-1,s=0,l;for(;i--;){const c=a[i];if(typeof c=="string"){for(o=c.length;c.charCodeAt(o-1)===32;)s++,o--;if(o)break;o=-1}else if(c===-2)l=!0,s++;else if(c!==-1){i++;break}}if(s){const c={type:r===e.length||l||s<2?"lineSuffix":"hardBreakTrailing",start:{line:t.end.line,column:t.end.column-s,offset:t.end.offset-s,_index:t.start._index+i,_bufferIndex:i?o:t.start._bufferIndex+o},end:Object.assign({},t.end)};t.end=Object.assign({},c.start),t.start.offset===t.end.offset?Object.assign(t,c):(e.splice(r,0,["enter",c,n],["exit",c,n]),r+=2)}r++}return e}function CL(e,n,r){let t=Object.assign(r?Object.assign({},r):{line:1,column:1,offset:0},{_index:0,_bufferIndex:-1});const a={},i=[];let o=[],s=[];const l={consume:h,enter:v,exit:x,attempt:E(I),check:E(S),interrupt:E(S,{interrupt:!0})},c={previous:null,code:null,containerState:{},events:[],parser:e,sliceStream:m,sliceSerialize:d,now:g,defineSkip:y,write:p};let u=n.tokenize.call(c,l);return n.resolveAll&&i.push(n),c;function p(R){return o=Kn(o,R),k(),o[o.length-1]!==null?[]:(T(n,0),c.events=eu(i,c.events,c),c.events)}function d(R,O){return EL(m(R),O)}function m(R){return IL(o,R)}function g(){const{line:R,column:O,offset:q,_index:$,_bufferIndex:J}=t;return{line:R,column:O,offset:q,_index:$,_bufferIndex:J}}function y(R){a[R.line]=R.column,C()}function k(){let R;for(;t._index<o.length;){const O=o[t._index];if(typeof O=="string")for(R=t._index,t._bufferIndex<0&&(t._bufferIndex=0);t._index===R&&t._bufferIndex<O.length;)f(O.charCodeAt(t._bufferIndex));else f(O)}}function f(R){u=u(R)}function h(R){Y(R)?(t.line++,t.column=1,t.offset+=R===-3?2:1,C()):R!==-1&&(t.column++,t.offset++),t._bufferIndex<0?t._index++:(t._bufferIndex++,t._bufferIndex===o[t._index].length&&(t._bufferIndex=-1,t._index++)),c.previous=R}function v(R,O){const q=O||{};return q.type=R,q.start=g(),c.events.push(["enter",q,c]),s.push(q),q}function x(R){const O=s.pop();return O.end=g(),c.events.push(["exit",O,c]),O}function I(R,O){T(R,O.from)}function S(R,O){O.restore()}function E(R,O){return q;function q($,J,Q){let ee,D,z,w;return Array.isArray($)?te($):"tokenize"in $?te([$]):X($);function X(ie){return en;function en(Ge){const kn=Ge!==null&&ie[Ge],Wn=Ge!==null&&ie.null,Sr=[...Array.isArray(kn)?kn:kn?[kn]:[],...Array.isArray(Wn)?Wn:Wn?[Wn]:[]];return te(Sr)(Ge)}}function te(ie){return ee=ie,D=0,ie.length===0?Q:j(ie[D])}function j(ie){return en;function en(Ge){return w=B(),z=ie,ie.partial||(c.currentConstruct=ie),ie.name&&c.parser.constructs.disable.null.includes(ie.name)?ce():ie.tokenize.call(O?Object.assign(Object.create(c),O):c,l,ge,ce)(Ge)}}function ge(ie){return R(z,w),J}function ce(ie){return w.restore(),++D<ee.length?j(ee[D]):Q}}}function T(R,O){R.resolveAll&&!i.includes(R)&&i.push(R),R.resolve&&Xn(c.events,O,c.events.length-O,R.resolve(c.events.slice(O),c)),R.resolveTo&&(c.events=R.resolveTo(c.events,c))}function B(){const R=g(),O=c.previous,q=c.currentConstruct,$=c.events.length,J=Array.from(s);return{restore:Q,from:$};function Q(){t=R,c.previous=O,c.currentConstruct=q,c.events.length=$,s=J,C()}}function C(){t.line in a&&t.column<2&&(t.column=a[t.line],t.offset+=a[t.line]-1)}}function IL(e,n){const r=n.start._index,t=n.start._bufferIndex,a=n.end._index,i=n.end._bufferIndex;let o;if(r===a)o=[e[r].slice(t,i)];else{if(o=e.slice(r,a),t>-1){const s=o[0];typeof s=="string"?o[0]=s.slice(t):o.shift()}i>0&&o.push(e[a].slice(0,i))}return o}function EL(e,n){let r=-1;const t=[];let a;for(;++r<e.length;){const i=e[r];let o;if(typeof i=="string")o=i;else switch(i){case-5:{o="\r";break}case-4:{o=`
`;break}case-3:{o=`\r
`;break}case-2:{o=n?" ":"	";break}case-1:{if(!n&&a)continue;o=" ";break}default:o=String.fromCharCode(i)}a=i===-2,t.push(o)}return t.join("")}const TL={42:Sn,43:Sn,45:Sn,48:Sn,49:Sn,50:Sn,51:Sn,52:Sn,53:Sn,54:Sn,55:Sn,56:Sn,57:Sn,62:SS},ML={91:A4},AL={[-2]:Gu,[-1]:Gu,32:Gu},PL={35:_4,42:gl,45:[jv,gl],60:q4,61:jv,95:gl,96:wv,126:wv},RL={38:xS,92:wS},DL={[-5]:Ku,[-4]:Ku,[-3]:Ku,33:aL,38:xS,42:Ad,60:[o4,$4],91:oL,92:[O4,wS],93:Ug,95:Ad,96:y4},OL={null:[Ad,SL]},LL={null:[42,95]},_L={null:[]},NL=Object.freeze(Object.defineProperty({__proto__:null,attentionMarkers:LL,contentInitial:ML,disable:_L,document:TL,flow:PL,flowInitial:AL,insideSpan:OL,string:RL,text:DL},Symbol.toStringTag,{value:"Module"}));function BL(e){const r=yS([NL,...(e||{}).extensions||[]]),t={defined:[],lazy:{},constructs:r,content:a(ZO),document:a(n4),flow:a(yL),string:a(wL),text:a(xL)};return t;function a(i){return o;function o(s){return CL(t,i,s)}}}function HL(e){for(;!jS(e););return e}const Cv=/[\0\t\n\r]/g;function qL(){let e=1,n="",r=!0,t;return a;function a(i,o,s){const l=[];let c,u,p,d,m;for(i=n+(typeof i=="string"?i.toString():new TextDecoder(o||void 0).decode(i)),p=0,n="",r&&(i.charCodeAt(0)===65279&&p++,r=void 0);p<i.length;){if(Cv.lastIndex=p,c=Cv.exec(i),d=c&&c.index!==void 0?c.index:i.length,m=i.charCodeAt(d),!c){n=i.slice(p);break}if(m===10&&p===d&&t)l.push(-3),t=void 0;else switch(t&&(l.push(-5),t=void 0),p<d&&(l.push(i.slice(p,d)),e+=d-p),m){case 0:{l.push(65533),e++;break}case 9:{for(u=Math.ceil(e/4)*4,l.push(-2);e++<u;)l.push(-1);break}case 10:{l.push(-4),e=1;break}default:t=!0,e=1}p=d+1}return s&&(t&&l.push(-5),n&&l.push(n),l.push(null)),l}}const FL=/\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi;function JL(e){return e.replace(FL,zL)}function zL(e,n,r){if(n)return n;if(r.charCodeAt(0)===35){const a=r.charCodeAt(1),i=a===120||a===88;return kS(r.slice(i?2:1),i?16:10)}return zg(r)||e}const AS={}.hasOwnProperty;function UL(e,n,r){return typeof n!="string"&&(r=n,n=void 0),WL(r)(HL(BL(r).document().write(qL()(e,n,!0))))}function WL(e){const n={transforms:[],canContainEols:["emphasis","fragment","heading","paragraph","strong"],enter:{autolink:i(vs),autolinkProtocol:B,autolinkEmail:B,atxHeading:i(je),blockQuote:i(Wn),characterEscape:B,characterReference:B,codeFenced:i(Sr),codeFencedFenceInfo:o,codeFencedFenceMeta:o,codeIndented:i(Sr,o),codeText:i(Ma,o),codeTextData:B,data:B,codeFlowValue:B,definition:i(bt),definitionDestinationString:o,definitionLabelString:o,definitionTitleString:o,emphasis:i(yt),hardBreakEscape:i(kt),hardBreakTrailing:i(kt),htmlFlow:i(Jr,o),htmlFlowData:B,htmlText:i(Jr,o),htmlTextData:B,image:i(iu),label:o,link:i(vs),listItem:i(Aa),listItemValue:d,listOrdered:i(wr,p),listUnordered:i(wr),paragraph:i(bs),reference:j,referenceString:o,resourceDestinationString:o,resourceTitleString:o,setextHeading:i(je),strong:i(ys),thematicBreak:i(ks)},exit:{atxHeading:l(),atxHeadingSequence:I,autolink:l(),autolinkEmail:kn,autolinkProtocol:Ge,blockQuote:l(),characterEscapeValue:C,characterReferenceMarkerHexadecimal:ce,characterReferenceMarkerNumeric:ce,characterReferenceValue:ie,characterReference:en,codeFenced:l(k),codeFencedFence:y,codeFencedFenceInfo:m,codeFencedFenceMeta:g,codeFlowValue:C,codeIndented:l(f),codeText:l(J),codeTextData:C,data:C,definition:l(),definitionDestinationString:x,definitionLabelString:h,definitionTitleString:v,emphasis:l(),hardBreakEscape:l(O),hardBreakTrailing:l(O),htmlFlow:l(q),htmlFlowData:C,htmlText:l($),htmlTextData:C,image:l(ee),label:z,labelText:D,lineEnding:R,link:l(Q),listItem:l(),listOrdered:l(),listUnordered:l(),paragraph:l(),referenceString:ge,resourceDestinationString:w,resourceTitleString:X,resource:te,setextHeading:l(T),setextHeadingLineSequence:E,setextHeadingText:S,strong:l(),thematicBreak:l()}};PS(n,(e||{}).mdastExtensions||[]);const r={};return t;function t(P){let H={type:"root",children:[]};const Z={stack:[H],tokenStack:[],config:n,enter:s,exit:c,buffer:o,resume:u,data:r},ue=[];let we=-1;for(;++we<P.length;)if(P[we][1].type==="listOrdered"||P[we][1].type==="listUnordered")if(P[we][0]==="enter")ue.push(we);else{const or=ue.pop();we=a(P,or,we)}for(we=-1;++we<P.length;){const or=n[P[we][0]];AS.call(or,P[we][1].type)&&or[P[we][1].type].call(Object.assign({sliceSerialize:P[we][2].sliceSerialize},Z),P[we][1])}if(Z.tokenStack.length>0){const or=Z.tokenStack[Z.tokenStack.length-1];(or[1]||Iv).call(Z,void 0,or[0])}for(H.position={start:wt(P.length>0?P[0][1].start:{line:1,column:1,offset:0}),end:wt(P.length>0?P[P.length-2][1].end:{line:1,column:1,offset:0})},we=-1;++we<n.transforms.length;)H=n.transforms[we](H)||H;return H}function a(P,H,Z){let ue=H-1,we=-1,or=!1,ea,zr,Li,_i;for(;++ue<=Z;){const Dn=P[ue];switch(Dn[1].type){case"listUnordered":case"listOrdered":case"blockQuote":{Dn[0]==="enter"?we++:we--,_i=void 0;break}case"lineEndingBlank":{Dn[0]==="enter"&&(ea&&!_i&&!we&&!Li&&(Li=ue),_i=void 0);break}case"linePrefix":case"listItemValue":case"listItemMarker":case"listItemPrefix":case"listItemPrefixWhitespace":break;default:_i=void 0}if(!we&&Dn[0]==="enter"&&Dn[1].type==="listItemPrefix"||we===-1&&Dn[0]==="exit"&&(Dn[1].type==="listUnordered"||Dn[1].type==="listOrdered")){if(ea){let Pa=ue;for(zr=void 0;Pa--;){const Ur=P[Pa];if(Ur[1].type==="lineEnding"||Ur[1].type==="lineEndingBlank"){if(Ur[0]==="exit")continue;zr&&(P[zr][1].type="lineEndingBlank",or=!0),Ur[1].type="lineEnding",zr=Pa}else if(!(Ur[1].type==="linePrefix"||Ur[1].type==="blockQuotePrefix"||Ur[1].type==="blockQuotePrefixWhitespace"||Ur[1].type==="blockQuoteMarker"||Ur[1].type==="listItemIndent"))break}Li&&(!zr||Li<zr)&&(ea._spread=!0),ea.end=Object.assign({},zr?P[zr][1].start:Dn[1].end),P.splice(zr||ue,0,["exit",ea,Dn[2]]),ue++,Z++}if(Dn[1].type==="listItemPrefix"){const Pa={type:"listItem",_spread:!1,start:Object.assign({},Dn[1].start),end:void 0};ea=Pa,P.splice(ue,0,["enter",Pa,Dn[2]]),ue++,Z++,Li=void 0,_i=!0}}}return P[H][1]._spread=or,Z}function i(P,H){return Z;function Z(ue){s.call(this,P(ue),ue),H&&H.call(this,ue)}}function o(){this.stack.push({type:"fragment",children:[]})}function s(P,H,Z){this.stack[this.stack.length-1].children.push(P),this.stack.push(P),this.tokenStack.push([H,Z]),P.position={start:wt(H.start),end:void 0}}function l(P){return H;function H(Z){P&&P.call(this,Z),c.call(this,Z)}}function c(P,H){const Z=this.stack.pop(),ue=this.tokenStack.pop();if(ue)ue[0].type!==P.type&&(H?H.call(this,P,ue[0]):(ue[1]||Iv).call(this,P,ue[0]));else throw new Error("Cannot close `"+P.type+"` ("+vo({start:P.start,end:P.end})+"): it’s not open");Z.position.end=wt(P.end)}function u(){return Jg(this.stack.pop())}function p(){this.data.expectingFirstListItemValue=!0}function d(P){if(this.data.expectingFirstListItemValue){const H=this.stack[this.stack.length-2];H.start=Number.parseInt(this.sliceSerialize(P),10),this.data.expectingFirstListItemValue=void 0}}function m(){const P=this.resume(),H=this.stack[this.stack.length-1];H.lang=P}function g(){const P=this.resume(),H=this.stack[this.stack.length-1];H.meta=P}function y(){this.data.flowCodeInside||(this.buffer(),this.data.flowCodeInside=!0)}function k(){const P=this.resume(),H=this.stack[this.stack.length-1];H.value=P.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g,""),this.data.flowCodeInside=void 0}function f(){const P=this.resume(),H=this.stack[this.stack.length-1];H.value=P.replace(/(\r?\n|\r)$/g,"")}function h(P){const H=this.resume(),Z=this.stack[this.stack.length-1];Z.label=H,Z.identifier=hr(this.sliceSerialize(P)).toLowerCase()}function v(){const P=this.resume(),H=this.stack[this.stack.length-1];H.title=P}function x(){const P=this.resume(),H=this.stack[this.stack.length-1];H.url=P}function I(P){const H=this.stack[this.stack.length-1];if(!H.depth){const Z=this.sliceSerialize(P).length;H.depth=Z}}function S(){this.data.setextHeadingSlurpLineEnding=!0}function E(P){const H=this.stack[this.stack.length-1];H.depth=this.sliceSerialize(P).codePointAt(0)===61?1:2}function T(){this.data.setextHeadingSlurpLineEnding=void 0}function B(P){const Z=this.stack[this.stack.length-1].children;let ue=Z[Z.length-1];(!ue||ue.type!=="text")&&(ue=Oi(),ue.position={start:wt(P.start),end:void 0},Z.push(ue)),this.stack.push(ue)}function C(P){const H=this.stack.pop();H.value+=this.sliceSerialize(P),H.position.end=wt(P.end)}function R(P){const H=this.stack[this.stack.length-1];if(this.data.atHardBreak){const Z=H.children[H.children.length-1];Z.position.end=wt(P.end),this.data.atHardBreak=void 0;return}!this.data.setextHeadingSlurpLineEnding&&n.canContainEols.includes(H.type)&&(B.call(this,P),C.call(this,P))}function O(){this.data.atHardBreak=!0}function q(){const P=this.resume(),H=this.stack[this.stack.length-1];H.value=P}function $(){const P=this.resume(),H=this.stack[this.stack.length-1];H.value=P}function J(){const P=this.resume(),H=this.stack[this.stack.length-1];H.value=P}function Q(){const P=this.stack[this.stack.length-1];if(this.data.inReference){const H=this.data.referenceType||"shortcut";P.type+="Reference",P.referenceType=H,delete P.url,delete P.title}else delete P.identifier,delete P.label;this.data.referenceType=void 0}function ee(){const P=this.stack[this.stack.length-1];if(this.data.inReference){const H=this.data.referenceType||"shortcut";P.type+="Reference",P.referenceType=H,delete P.url,delete P.title}else delete P.identifier,delete P.label;this.data.referenceType=void 0}function D(P){const H=this.sliceSerialize(P),Z=this.stack[this.stack.length-2];Z.label=JL(H),Z.identifier=hr(H).toLowerCase()}function z(){const P=this.stack[this.stack.length-1],H=this.resume(),Z=this.stack[this.stack.length-1];if(this.data.inReference=!0,Z.type==="link"){const ue=P.children;Z.children=ue}else Z.alt=H}function w(){const P=this.resume(),H=this.stack[this.stack.length-1];H.url=P}function X(){const P=this.resume(),H=this.stack[this.stack.length-1];H.title=P}function te(){this.data.inReference=void 0}function j(){this.data.referenceType="collapsed"}function ge(P){const H=this.resume(),Z=this.stack[this.stack.length-1];Z.label=H,Z.identifier=hr(this.sliceSerialize(P)).toLowerCase(),this.data.referenceType="full"}function ce(P){this.data.characterReferenceType=P.type}function ie(P){const H=this.sliceSerialize(P),Z=this.data.characterReferenceType;let ue;Z?(ue=kS(H,Z==="characterReferenceMarkerNumeric"?10:16),this.data.characterReferenceType=void 0):ue=zg(H);const we=this.stack[this.stack.length-1];we.value+=ue}function en(P){const H=this.stack.pop();H.position.end=wt(P.end)}function Ge(P){C.call(this,P);const H=this.stack[this.stack.length-1];H.url=this.sliceSerialize(P)}function kn(P){C.call(this,P);const H=this.stack[this.stack.length-1];H.url="mailto:"+this.sliceSerialize(P)}function Wn(){return{type:"blockquote",children:[]}}function Sr(){return{type:"code",lang:null,meta:null,value:""}}function Ma(){return{type:"inlineCode",value:""}}function bt(){return{type:"definition",identifier:"",label:null,title:null,url:""}}function yt(){return{type:"emphasis",children:[]}}function je(){return{type:"heading",depth:0,children:[]}}function kt(){return{type:"break"}}function Jr(){return{type:"html",value:""}}function iu(){return{type:"image",title:null,url:"",alt:null}}function vs(){return{type:"link",title:null,url:"",children:[]}}function wr(P){return{type:"list",ordered:P.type==="listOrdered",start:null,spread:P._spread,children:[]}}function Aa(P){return{type:"listItem",spread:P._spread,checked:null,children:[]}}function bs(){return{type:"paragraph",children:[]}}function ys(){return{type:"strong",children:[]}}function Oi(){return{type:"text",value:""}}function ks(){return{type:"thematicBreak"}}}function wt(e){return{line:e.line,column:e.column,offset:e.offset}}function PS(e,n){let r=-1;for(;++r<n.length;){const t=n[r];Array.isArray(t)?PS(e,t):VL(e,t)}}function VL(e,n){let r;for(r in n)if(AS.call(n,r))switch(r){case"canContainEols":{const t=n[r];t&&e[r].push(...t);break}case"transforms":{const t=n[r];t&&e[r].push(...t);break}case"enter":case"exit":{const t=n[r];t&&Object.assign(e[r],t);break}}}function Iv(e,n){throw e?new Error("Cannot close `"+e.type+"` ("+vo({start:e.start,end:e.end})+"): a different token (`"+n.type+"`, "+vo({start:n.start,end:n.end})+") is open"):new Error("Cannot close document, a token (`"+n.type+"`, "+vo({start:n.start,end:n.end})+") is still open")}function $L(e){const n=this;n.parser=r;function r(t){return UL(t,{...n.data("settings"),...e,extensions:n.data("micromarkExtensions")||[],mdastExtensions:n.data("fromMarkdownExtensions")||[]})}}function GL(e,n){const r={type:"element",tagName:"blockquote",properties:{},children:e.wrap(e.all(n),!0)};return e.patch(n,r),e.applyData(n,r)}function KL(e,n){const r={type:"element",tagName:"br",properties:{},children:[]};return e.patch(n,r),[e.applyData(n,r),{type:"text",value:`
`}]}function YL(e,n){const r=n.value?n.value+`
`:"",t={};n.lang&&(t.className=["language-"+n.lang]);let a={type:"element",tagName:"code",properties:t,children:[{type:"text",value:r}]};return n.meta&&(a.data={meta:n.meta}),e.patch(n,a),a=e.applyData(n,a),a={type:"element",tagName:"pre",properties:{},children:[a]},e.patch(n,a),a}function QL(e,n){const r={type:"element",tagName:"del",properties:{},children:e.all(n)};return e.patch(n,r),e.applyData(n,r)}function XL(e,n){const r={type:"element",tagName:"em",properties:{},children:e.all(n)};return e.patch(n,r),e.applyData(n,r)}function ZL(e,n){const r=typeof e.options.clobberPrefix=="string"?e.options.clobberPrefix:"user-content-",t=String(n.identifier).toUpperCase(),a=Di(t.toLowerCase()),i=e.footnoteOrder.indexOf(t);let o,s=e.footnoteCounts.get(t);s===void 0?(s=0,e.footnoteOrder.push(t),o=e.footnoteOrder.length):o=i+1,s+=1,e.footnoteCounts.set(t,s);const l={type:"element",tagName:"a",properties:{href:"#"+r+"fn-"+a,id:r+"fnref-"+a+(s>1?"-"+s:""),dataFootnoteRef:!0,ariaDescribedBy:["footnote-label"]},children:[{type:"text",value:String(o)}]};e.patch(n,l);const c={type:"element",tagName:"sup",properties:{},children:[l]};return e.patch(n,c),e.applyData(n,c)}function e_(e,n){const r={type:"element",tagName:"h"+n.depth,properties:{},children:e.all(n)};return e.patch(n,r),e.applyData(n,r)}function n_(e,n){if(e.options.allowDangerousHtml){const r={type:"raw",value:n.value};return e.patch(n,r),e.applyData(n,r)}}function RS(e,n){const r=n.referenceType;let t="]";if(r==="collapsed"?t+="[]":r==="full"&&(t+="["+(n.label||n.identifier)+"]"),n.type==="imageReference")return[{type:"text",value:"!["+n.alt+t}];const a=e.all(n),i=a[0];i&&i.type==="text"?i.value="["+i.value:a.unshift({type:"text",value:"["});const o=a[a.length-1];return o&&o.type==="text"?o.value+=t:a.push({type:"text",value:t}),a}function r_(e,n){const r=String(n.identifier).toUpperCase(),t=e.definitionById.get(r);if(!t)return RS(e,n);const a={src:Di(t.url||""),alt:n.alt};t.title!==null&&t.title!==void 0&&(a.title=t.title);const i={type:"element",tagName:"img",properties:a,children:[]};return e.patch(n,i),e.applyData(n,i)}function t_(e,n){const r={src:Di(n.url)};n.alt!==null&&n.alt!==void 0&&(r.alt=n.alt),n.title!==null&&n.title!==void 0&&(r.title=n.title);const t={type:"element",tagName:"img",properties:r,children:[]};return e.patch(n,t),e.applyData(n,t)}function a_(e,n){const r={type:"text",value:n.value.replace(/\r?\n|\r/g," ")};e.patch(n,r);const t={type:"element",tagName:"code",properties:{},children:[r]};return e.patch(n,t),e.applyData(n,t)}function i_(e,n){const r=String(n.identifier).toUpperCase(),t=e.definitionById.get(r);if(!t)return RS(e,n);const a={href:Di(t.url||"")};t.title!==null&&t.title!==void 0&&(a.title=t.title);const i={type:"element",tagName:"a",properties:a,children:e.all(n)};return e.patch(n,i),e.applyData(n,i)}function o_(e,n){const r={href:Di(n.url)};n.title!==null&&n.title!==void 0&&(r.title=n.title);const t={type:"element",tagName:"a",properties:r,children:e.all(n)};return e.patch(n,t),e.applyData(n,t)}function s_(e,n,r){const t=e.all(n),a=r?l_(r):DS(n),i={},o=[];if(typeof n.checked=="boolean"){const u=t[0];let p;u&&u.type==="element"&&u.tagName==="p"?p=u:(p={type:"element",tagName:"p",properties:{},children:[]},t.unshift(p)),p.children.length>0&&p.children.unshift({type:"text",value:" "}),p.children.unshift({type:"element",tagName:"input",properties:{type:"checkbox",checked:n.checked,disabled:!0},children:[]}),i.className=["task-list-item"]}let s=-1;for(;++s<t.length;){const u=t[s];(a||s!==0||u.type!=="element"||u.tagName!=="p")&&o.push({type:"text",value:`
`}),u.type==="element"&&u.tagName==="p"&&!a?o.push(...u.children):o.push(u)}const l=t[t.length-1];l&&(a||l.type!=="element"||l.tagName!=="p")&&o.push({type:"text",value:`
`});const c={type:"element",tagName:"li",properties:i,children:o};return e.patch(n,c),e.applyData(n,c)}function l_(e){let n=!1;if(e.type==="list"){n=e.spread||!1;const r=e.children;let t=-1;for(;!n&&++t<r.length;)n=DS(r[t])}return n}function DS(e){const n=e.spread;return n??e.children.length>1}function c_(e,n){const r={},t=e.all(n);let a=-1;for(typeof n.start=="number"&&n.start!==1&&(r.start=n.start);++a<t.length;){const o=t[a];if(o.type==="element"&&o.tagName==="li"&&o.properties&&Array.isArray(o.properties.className)&&o.properties.className.includes("task-list-item")){r.className=["contains-task-list"];break}}const i={type:"element",tagName:n.ordered?"ol":"ul",properties:r,children:e.wrap(t,!0)};return e.patch(n,i),e.applyData(n,i)}function u_(e,n){const r={type:"element",tagName:"p",properties:{},children:e.all(n)};return e.patch(n,r),e.applyData(n,r)}function p_(e,n){const r={type:"root",children:e.wrap(e.all(n))};return e.patch(n,r),e.applyData(n,r)}function d_(e,n){const r={type:"element",tagName:"strong",properties:{},children:e.all(n)};return e.patch(n,r),e.applyData(n,r)}function m_(e,n){const r=e.all(n),t=r.shift(),a=[];if(t){const o={type:"element",tagName:"thead",properties:{},children:e.wrap([t],!0)};e.patch(n.children[0],o),a.push(o)}if(r.length>0){const o={type:"element",tagName:"tbody",properties:{},children:e.wrap(r,!0)},s=Bg(n.children[1]),l=dS(n.children[n.children.length-1]);s&&l&&(o.position={start:s,end:l}),a.push(o)}const i={type:"element",tagName:"table",properties:{},children:e.wrap(a,!0)};return e.patch(n,i),e.applyData(n,i)}function g_(e,n,r){const t=r?r.children:void 0,i=(t?t.indexOf(n):1)===0?"th":"td",o=r&&r.type==="table"?r.align:void 0,s=o?o.length:n.children.length;let l=-1;const c=[];for(;++l<s;){const p=n.children[l],d={},m=o?o[l]:void 0;m&&(d.align=m);let g={type:"element",tagName:i,properties:d,children:[]};p&&(g.children=e.all(p),e.patch(p,g),g=e.applyData(p,g)),c.push(g)}const u={type:"element",tagName:"tr",properties:{},children:e.wrap(c,!0)};return e.patch(n,u),e.applyData(n,u)}function f_(e,n){const r={type:"element",tagName:"td",properties:{},children:e.all(n)};return e.patch(n,r),e.applyData(n,r)}const Ev=9,Tv=32;function h_(e){const n=String(e),r=/\r?\n|\r/g;let t=r.exec(n),a=0;const i=[];for(;t;)i.push(Mv(n.slice(a,t.index),a>0,!0),t[0]),a=t.index+t[0].length,t=r.exec(n);return i.push(Mv(n.slice(a),a>0,!1)),i.join("")}function Mv(e,n,r){let t=0,a=e.length;if(n){let i=e.codePointAt(t);for(;i===Ev||i===Tv;)t++,i=e.codePointAt(t)}if(r){let i=e.codePointAt(a-1);for(;i===Ev||i===Tv;)a--,i=e.codePointAt(a-1)}return a>t?e.slice(t,a):""}function v_(e,n){const r={type:"text",value:h_(String(n.value))};return e.patch(n,r),e.applyData(n,r)}function b_(e,n){const r={type:"element",tagName:"hr",properties:{},children:[]};return e.patch(n,r),e.applyData(n,r)}const y_={blockquote:GL,break:KL,code:YL,delete:QL,emphasis:XL,footnoteReference:ZL,heading:e_,html:n_,imageReference:r_,image:t_,inlineCode:a_,linkReference:i_,link:o_,listItem:s_,list:c_,paragraph:u_,root:p_,strong:d_,table:m_,tableCell:f_,tableRow:g_,text:v_,thematicBreak:b_,toml:zs,yaml:zs,definition:zs,footnoteDefinition:zs};function zs(){}const OS=-1,nu=0,nc=1,rc=2,Wg=3,Vg=4,$g=5,Gg=6,LS=7,_S=8,Av=typeof self=="object"?self:globalThis,k_=(e,n)=>{const r=(a,i)=>(e.set(i,a),a),t=a=>{if(e.has(a))return e.get(a);const[i,o]=n[a];switch(i){case nu:case OS:return r(o,a);case nc:{const s=r([],a);for(const l of o)s.push(t(l));return s}case rc:{const s=r({},a);for(const[l,c]of o)s[t(l)]=t(c);return s}case Wg:return r(new Date(o),a);case Vg:{const{source:s,flags:l}=o;return r(new RegExp(s,l),a)}case $g:{const s=r(new Map,a);for(const[l,c]of o)s.set(t(l),t(c));return s}case Gg:{const s=r(new Set,a);for(const l of o)s.add(t(l));return s}case LS:{const{name:s,message:l}=o;return r(new Av[s](l),a)}case _S:return r(BigInt(o),a);case"BigInt":return r(Object(BigInt(o)),a)}return r(new Av[i](o),a)};return t},Pv=e=>k_(new Map,e)(0),Na="",{toString:S_}={},{keys:w_}=Object,Qi=e=>{const n=typeof e;if(n!=="object"||!e)return[nu,n];const r=S_.call(e).slice(8,-1);switch(r){case"Array":return[nc,Na];case"Object":return[rc,Na];case"Date":return[Wg,Na];case"RegExp":return[Vg,Na];case"Map":return[$g,Na];case"Set":return[Gg,Na]}return r.includes("Array")?[nc,r]:r.includes("Error")?[LS,r]:[rc,r]},Us=([e,n])=>e===nu&&(n==="function"||n==="symbol"),x_=(e,n,r,t)=>{const a=(o,s)=>{const l=t.push(o)-1;return r.set(s,l),l},i=o=>{if(r.has(o))return r.get(o);let[s,l]=Qi(o);switch(s){case nu:{let u=o;switch(l){case"bigint":s=_S,u=o.toString();break;case"function":case"symbol":if(e)throw new TypeError("unable to serialize "+l);u=null;break;case"undefined":return a([OS],o)}return a([s,u],o)}case nc:{if(l)return a([l,[...o]],o);const u=[],p=a([s,u],o);for(const d of o)u.push(i(d));return p}case rc:{if(l)switch(l){case"BigInt":return a([l,o.toString()],o);case"Boolean":case"Number":case"String":return a([l,o.valueOf()],o)}if(n&&"toJSON"in o)return i(o.toJSON());const u=[],p=a([s,u],o);for(const d of w_(o))(e||!Us(Qi(o[d])))&&u.push([i(d),i(o[d])]);return p}case Wg:return a([s,o.toISOString()],o);case Vg:{const{source:u,flags:p}=o;return a([s,{source:u,flags:p}],o)}case $g:{const u=[],p=a([s,u],o);for(const[d,m]of o)(e||!(Us(Qi(d))||Us(Qi(m))))&&u.push([i(d),i(m)]);return p}case Gg:{const u=[],p=a([s,u],o);for(const d of o)(e||!Us(Qi(d)))&&u.push(i(d));return p}}const{message:c}=o;return a([s,{name:l,message:c}],o)};return i},Rv=(e,{json:n,lossy:r}={})=>{const t=[];return x_(!(n||r),!!n,new Map,t)(e),t},tc=typeof structuredClone=="function"?(e,n)=>n&&("json"in n||"lossy"in n)?Pv(Rv(e,n)):structuredClone(e):(e,n)=>Pv(Rv(e,n));function j_(e,n){const r=[{type:"text",value:"↩"}];return n>1&&r.push({type:"element",tagName:"sup",properties:{},children:[{type:"text",value:String(n)}]}),r}function C_(e,n){return"Back to reference "+(e+1)+(n>1?"-"+n:"")}function I_(e){const n=typeof e.options.clobberPrefix=="string"?e.options.clobberPrefix:"user-content-",r=e.options.footnoteBackContent||j_,t=e.options.footnoteBackLabel||C_,a=e.options.footnoteLabel||"Footnotes",i=e.options.footnoteLabelTagName||"h2",o=e.options.footnoteLabelProperties||{className:["sr-only"]},s=[];let l=-1;for(;++l<e.footnoteOrder.length;){const c=e.footnoteById.get(e.footnoteOrder[l]);if(!c)continue;const u=e.all(c),p=String(c.identifier).toUpperCase(),d=Di(p.toLowerCase());let m=0;const g=[],y=e.footnoteCounts.get(p);for(;y!==void 0&&++m<=y;){g.length>0&&g.push({type:"text",value:" "});let h=typeof r=="string"?r:r(l,m);typeof h=="string"&&(h={type:"text",value:h}),g.push({type:"element",tagName:"a",properties:{href:"#"+n+"fnref-"+d+(m>1?"-"+m:""),dataFootnoteBackref:"",ariaLabel:typeof t=="string"?t:t(l,m),className:["data-footnote-backref"]},children:Array.isArray(h)?h:[h]})}const k=u[u.length-1];if(k&&k.type==="element"&&k.tagName==="p"){const h=k.children[k.children.length-1];h&&h.type==="text"?h.value+=" ":k.children.push({type:"text",value:" "}),k.children.push(...g)}else u.push(...g);const f={type:"element",tagName:"li",properties:{id:n+"fn-"+d},children:e.wrap(u,!0)};e.patch(c,f),s.push(f)}if(s.length!==0)return{type:"element",tagName:"section",properties:{dataFootnotes:!0,className:["footnotes"]},children:[{type:"element",tagName:i,properties:{...tc(o),id:"footnote-label"},children:[{type:"text",value:a}]},{type:"text",value:`
`},{type:"element",tagName:"ol",properties:{},children:e.wrap(s,!0)},{type:"text",value:`
`}]}}const ru=function(e){if(e==null)return A_;if(typeof e=="function")return tu(e);if(typeof e=="object")return Array.isArray(e)?E_(e):T_(e);if(typeof e=="string")return M_(e);throw new Error("Expected function, string, or object as test")};function E_(e){const n=[];let r=-1;for(;++r<e.length;)n[r]=ru(e[r]);return tu(t);function t(...a){let i=-1;for(;++i<n.length;)if(n[i].apply(this,a))return!0;return!1}}function T_(e){const n=e;return tu(r);function r(t){const a=t;let i;for(i in e)if(a[i]!==n[i])return!1;return!0}}function M_(e){return tu(n);function n(r){return r&&r.type===e}}function tu(e){return n;function n(r,t,a){return!!(P_(r)&&e.call(this,r,typeof t=="number"?t:void 0,a||void 0))}}function A_(){return!0}function P_(e){return e!==null&&typeof e=="object"&&"type"in e}const NS=[],R_=!0,Pd=!1,D_="skip";function BS(e,n,r,t){let a;typeof n=="function"&&typeof r!="function"?(t=r,r=n):a=n;const i=ru(a),o=t?-1:1;s(e,void 0,[])();function s(l,c,u){const p=l&&typeof l=="object"?l:{};if(typeof p.type=="string"){const m=typeof p.tagName=="string"?p.tagName:typeof p.name=="string"?p.name:void 0;Object.defineProperty(d,"name",{value:"node ("+(l.type+(m?"<"+m+">":""))+")"})}return d;function d(){let m=NS,g,y,k;if((!n||i(l,c,u[u.length-1]||void 0))&&(m=O_(r(l,u)),m[0]===Pd))return m;if("children"in l&&l.children){const f=l;if(f.children&&m[0]!==D_)for(y=(t?f.children.length:-1)+o,k=u.concat(f);y>-1&&y<f.children.length;){const h=f.children[y];if(g=s(h,y,k)(),g[0]===Pd)return g;y=typeof g[1]=="number"?g[1]:y+o}}return m}}}function O_(e){return Array.isArray(e)?e:typeof e=="number"?[R_,e]:e==null?NS:[e]}function Kg(e,n,r,t){let a,i,o;typeof n=="function"&&typeof r!="function"?(i=void 0,o=n,a=r):(i=n,o=r,a=t),BS(e,i,s,a);function s(l,c){const u=c[c.length-1],p=u?u.children.indexOf(l):void 0;return o(l,p,u)}}const Rd={}.hasOwnProperty,L_={};function __(e,n){const r=n||L_,t=new Map,a=new Map,i=new Map,o={...y_,...r.handlers},s={all:c,applyData:B_,definitionById:t,footnoteById:a,footnoteCounts:i,footnoteOrder:[],handlers:o,one:l,options:r,patch:N_,wrap:q_};return Kg(e,function(u){if(u.type==="definition"||u.type==="footnoteDefinition"){const p=u.type==="definition"?t:a,d=String(u.identifier).toUpperCase();p.has(d)||p.set(d,u)}}),s;function l(u,p){const d=u.type,m=s.handlers[d];if(Rd.call(s.handlers,d)&&m)return m(s,u,p);if(s.options.passThrough&&s.options.passThrough.includes(d)){if("children"in u){const{children:y,...k}=u,f=tc(k);return f.children=s.all(u),f}return tc(u)}return(s.options.unknownHandler||H_)(s,u,p)}function c(u){const p=[];if("children"in u){const d=u.children;let m=-1;for(;++m<d.length;){const g=s.one(d[m],u);if(g){if(m&&d[m-1].type==="break"&&(!Array.isArray(g)&&g.type==="text"&&(g.value=Dv(g.value)),!Array.isArray(g)&&g.type==="element")){const y=g.children[0];y&&y.type==="text"&&(y.value=Dv(y.value))}Array.isArray(g)?p.push(...g):p.push(g)}}}return p}}function N_(e,n){e.position&&(n.position=xO(e))}function B_(e,n){let r=n;if(e&&e.data){const t=e.data.hName,a=e.data.hChildren,i=e.data.hProperties;if(typeof t=="string")if(r.type==="element")r.tagName=t;else{const o="children"in r?r.children:[r];r={type:"element",tagName:t,properties:{},children:o}}r.type==="element"&&i&&Object.assign(r.properties,tc(i)),"children"in r&&r.children&&a!==null&&a!==void 0&&(r.children=a)}return r}function H_(e,n){const r=n.data||{},t="value"in n&&!(Rd.call(r,"hProperties")||Rd.call(r,"hChildren"))?{type:"text",value:n.value}:{type:"element",tagName:"div",properties:{},children:e.all(n)};return e.patch(n,t),e.applyData(n,t)}function q_(e,n){const r=[];let t=-1;for(n&&r.push({type:"text",value:`
`});++t<e.length;)t&&r.push({type:"text",value:`
`}),r.push(e[t]);return n&&e.length>0&&r.push({type:"text",value:`
`}),r}function Dv(e){let n=0,r=e.charCodeAt(n);for(;r===9||r===32;)n++,r=e.charCodeAt(n);return e.slice(n)}function Ov(e,n){const r=__(e,n),t=r.one(e,void 0),a=I_(r),i=Array.isArray(t)?{type:"root",children:t}:t||{type:"root",children:[]};return a&&i.children.push({type:"text",value:`
`},a),i}function F_(e,n){return e&&"run"in e?async function(r,t){const a=Ov(r,{file:t,...n});await e.run(a,t)}:function(r,t){return Ov(r,{file:t,...n||e})}}function Lv(e){if(e)throw e}var fl=Object.prototype.hasOwnProperty,HS=Object.prototype.toString,_v=Object.defineProperty,Nv=Object.getOwnPropertyDescriptor,Bv=function(n){return typeof Array.isArray=="function"?Array.isArray(n):HS.call(n)==="[object Array]"},Hv=function(n){if(!n||HS.call(n)!=="[object Object]")return!1;var r=fl.call(n,"constructor"),t=n.constructor&&n.constructor.prototype&&fl.call(n.constructor.prototype,"isPrototypeOf");if(n.constructor&&!r&&!t)return!1;var a;for(a in n);return typeof a>"u"||fl.call(n,a)},qv=function(n,r){_v&&r.name==="__proto__"?_v(n,r.name,{enumerable:!0,configurable:!0,value:r.newValue,writable:!0}):n[r.name]=r.newValue},Fv=function(n,r){if(r==="__proto__")if(fl.call(n,r)){if(Nv)return Nv(n,r).value}else return;return n[r]},J_=function e(){var n,r,t,a,i,o,s=arguments[0],l=1,c=arguments.length,u=!1;for(typeof s=="boolean"&&(u=s,s=arguments[1]||{},l=2),(s==null||typeof s!="object"&&typeof s!="function")&&(s={});l<c;++l)if(n=arguments[l],n!=null)for(r in n)t=Fv(s,r),a=Fv(n,r),s!==a&&(u&&a&&(Hv(a)||(i=Bv(a)))?(i?(i=!1,o=t&&Bv(t)?t:[]):o=t&&Hv(t)?t:{},qv(s,{name:r,newValue:e(u,o,a)})):typeof a<"u"&&qv(s,{name:r,newValue:a}));return s};const Yu=wi(J_);function Dd(e){if(typeof e!="object"||e===null)return!1;const n=Object.getPrototypeOf(e);return(n===null||n===Object.prototype||Object.getPrototypeOf(n)===null)&&!(Symbol.toStringTag in e)&&!(Symbol.iterator in e)}function z_(){const e=[],n={run:r,use:t};return n;function r(...a){let i=-1;const o=a.pop();if(typeof o!="function")throw new TypeError("Expected function as last argument, not "+o);s(null,...a);function s(l,...c){const u=e[++i];let p=-1;if(l){o(l);return}for(;++p<a.length;)(c[p]===null||c[p]===void 0)&&(c[p]=a[p]);a=c,u?U_(u,s)(...c):o(null,...c)}}function t(a){if(typeof a!="function")throw new TypeError("Expected `middelware` to be a function, not "+a);return e.push(a),n}}function U_(e,n){let r;return t;function t(...o){const s=e.length>o.length;let l;s&&o.push(a);try{l=e.apply(this,o)}catch(c){const u=c;if(s&&r)throw u;return a(u)}s||(l&&l.then&&typeof l.then=="function"?l.then(i,a):l instanceof Error?a(l):i(l))}function a(o,...s){r||(r=!0,n(o,...s))}function i(o){a(null,o)}}const Ir={basename:W_,dirname:V_,extname:$_,join:G_,sep:"/"};function W_(e,n){if(n!==void 0&&typeof n!="string")throw new TypeError('"ext" argument must be a string');hs(e);let r=0,t=-1,a=e.length,i;if(n===void 0||n.length===0||n.length>e.length){for(;a--;)if(e.codePointAt(a)===47){if(i){r=a+1;break}}else t<0&&(i=!0,t=a+1);return t<0?"":e.slice(r,t)}if(n===e)return"";let o=-1,s=n.length-1;for(;a--;)if(e.codePointAt(a)===47){if(i){r=a+1;break}}else o<0&&(i=!0,o=a+1),s>-1&&(e.codePointAt(a)===n.codePointAt(s--)?s<0&&(t=a):(s=-1,t=o));return r===t?t=o:t<0&&(t=e.length),e.slice(r,t)}function V_(e){if(hs(e),e.length===0)return".";let n=-1,r=e.length,t;for(;--r;)if(e.codePointAt(r)===47){if(t){n=r;break}}else t||(t=!0);return n<0?e.codePointAt(0)===47?"/":".":n===1&&e.codePointAt(0)===47?"//":e.slice(0,n)}function $_(e){hs(e);let n=e.length,r=-1,t=0,a=-1,i=0,o;for(;n--;){const s=e.codePointAt(n);if(s===47){if(o){t=n+1;break}continue}r<0&&(o=!0,r=n+1),s===46?a<0?a=n:i!==1&&(i=1):a>-1&&(i=-1)}return a<0||r<0||i===0||i===1&&a===r-1&&a===t+1?"":e.slice(a,r)}function G_(...e){let n=-1,r;for(;++n<e.length;)hs(e[n]),e[n]&&(r=r===void 0?e[n]:r+"/"+e[n]);return r===void 0?".":K_(r)}function K_(e){hs(e);const n=e.codePointAt(0)===47;let r=Y_(e,!n);return r.length===0&&!n&&(r="."),r.length>0&&e.codePointAt(e.length-1)===47&&(r+="/"),n?"/"+r:r}function Y_(e,n){let r="",t=0,a=-1,i=0,o=-1,s,l;for(;++o<=e.length;){if(o<e.length)s=e.codePointAt(o);else{if(s===47)break;s=47}if(s===47){if(!(a===o-1||i===1))if(a!==o-1&&i===2){if(r.length<2||t!==2||r.codePointAt(r.length-1)!==46||r.codePointAt(r.length-2)!==46){if(r.length>2){if(l=r.lastIndexOf("/"),l!==r.length-1){l<0?(r="",t=0):(r=r.slice(0,l),t=r.length-1-r.lastIndexOf("/")),a=o,i=0;continue}}else if(r.length>0){r="",t=0,a=o,i=0;continue}}n&&(r=r.length>0?r+"/..":"..",t=2)}else r.length>0?r+="/"+e.slice(a+1,o):r=e.slice(a+1,o),t=o-a-1;a=o,i=0}else s===46&&i>-1?i++:i=-1}return r}function hs(e){if(typeof e!="string")throw new TypeError("Path must be a string. Received "+JSON.stringify(e))}const Q_={cwd:X_};function X_(){return"/"}function Od(e){return!!(e!==null&&typeof e=="object"&&"href"in e&&e.href&&"protocol"in e&&e.protocol&&e.auth===void 0)}function Z_(e){if(typeof e=="string")e=new URL(e);else if(!Od(e)){const n=new TypeError('The "path" argument must be of type string or an instance of URL. Received `'+e+"`");throw n.code="ERR_INVALID_ARG_TYPE",n}if(e.protocol!=="file:"){const n=new TypeError("The URL must be of scheme file");throw n.code="ERR_INVALID_URL_SCHEME",n}return eN(e)}function eN(e){if(e.hostname!==""){const t=new TypeError('File URL host must be "localhost" or empty on darwin');throw t.code="ERR_INVALID_FILE_URL_HOST",t}const n=e.pathname;let r=-1;for(;++r<n.length;)if(n.codePointAt(r)===37&&n.codePointAt(r+1)===50){const t=n.codePointAt(r+2);if(t===70||t===102){const a=new TypeError("File URL path must not include encoded / characters");throw a.code="ERR_INVALID_FILE_URL_PATH",a}}return decodeURIComponent(n)}const Qu=["history","path","basename","stem","extname","dirname"];class qS{constructor(n){let r;n?Od(n)?r={path:n}:typeof n=="string"||nN(n)?r={value:n}:r=n:r={},this.cwd=Q_.cwd(),this.data={},this.history=[],this.messages=[],this.value,this.map,this.result,this.stored;let t=-1;for(;++t<Qu.length;){const i=Qu[t];i in r&&r[i]!==void 0&&r[i]!==null&&(this[i]=i==="history"?[...r[i]]:r[i])}let a;for(a in r)Qu.includes(a)||(this[a]=r[a])}get basename(){return typeof this.path=="string"?Ir.basename(this.path):void 0}set basename(n){Zu(n,"basename"),Xu(n,"basename"),this.path=Ir.join(this.dirname||"",n)}get dirname(){return typeof this.path=="string"?Ir.dirname(this.path):void 0}set dirname(n){Jv(this.basename,"dirname"),this.path=Ir.join(n||"",this.basename)}get extname(){return typeof this.path=="string"?Ir.extname(this.path):void 0}set extname(n){if(Xu(n,"extname"),Jv(this.dirname,"extname"),n){if(n.codePointAt(0)!==46)throw new Error("`extname` must start with `.`");if(n.includes(".",1))throw new Error("`extname` cannot contain multiple dots")}this.path=Ir.join(this.dirname,this.stem+(n||""))}get path(){return this.history[this.history.length-1]}set path(n){Od(n)&&(n=Z_(n)),Zu(n,"path"),this.path!==n&&this.history.push(n)}get stem(){return typeof this.path=="string"?Ir.basename(this.path,this.extname):void 0}set stem(n){Zu(n,"stem"),Xu(n,"stem"),this.path=Ir.join(this.dirname||"",n+(this.extname||""))}fail(n,r,t){const a=this.message(n,r,t);throw a.fatal=!0,a}info(n,r,t){const a=this.message(n,r,t);return a.fatal=void 0,a}message(n,r,t){const a=new mn(n,r,t);return this.path&&(a.name=this.path+":"+a.name,a.file=this.path),a.fatal=!1,this.messages.push(a),a}toString(n){return this.value===void 0?"":typeof this.value=="string"?this.value:new TextDecoder(n||void 0).decode(this.value)}}function Xu(e,n){if(e&&e.includes(Ir.sep))throw new Error("`"+n+"` cannot be a path: did not expect `"+Ir.sep+"`")}function Zu(e,n){if(!e)throw new Error("`"+n+"` cannot be empty")}function Jv(e,n){if(!e)throw new Error("Setting `"+n+"` requires `path` to be set too")}function nN(e){return!!(e&&typeof e=="object"&&"byteLength"in e&&"byteOffset"in e)}const rN=function(e){const t=this.constructor.prototype,a=t[e],i=function(){return a.apply(i,arguments)};Object.setPrototypeOf(i,t);const o=Object.getOwnPropertyNames(a);for(const s of o){const l=Object.getOwnPropertyDescriptor(a,s);l&&Object.defineProperty(i,s,l)}return i},tN={}.hasOwnProperty;class Yg extends rN{constructor(){super("copy"),this.Compiler=void 0,this.Parser=void 0,this.attachers=[],this.compiler=void 0,this.freezeIndex=-1,this.frozen=void 0,this.namespace={},this.parser=void 0,this.transformers=z_()}copy(){const n=new Yg;let r=-1;for(;++r<this.attachers.length;){const t=this.attachers[r];n.use(...t)}return n.data(Yu(!0,{},this.namespace)),n}data(n,r){return typeof n=="string"?arguments.length===2?(rp("data",this.frozen),this.namespace[n]=r,this):tN.call(this.namespace,n)&&this.namespace[n]||void 0:n?(rp("data",this.frozen),this.namespace=n,this):this.namespace}freeze(){if(this.frozen)return this;const n=this;for(;++this.freezeIndex<this.attachers.length;){const[r,...t]=this.attachers[this.freezeIndex];if(t[0]===!1)continue;t[0]===!0&&(t[0]=void 0);const a=r.call(n,...t);typeof a=="function"&&this.transformers.use(a)}return this.frozen=!0,this.freezeIndex=Number.POSITIVE_INFINITY,this}parse(n){this.freeze();const r=Ws(n),t=this.parser||this.Parser;return ep("parse",t),t(String(r),r)}process(n,r){const t=this;return this.freeze(),ep("process",this.parser||this.Parser),np("process",this.compiler||this.Compiler),r?a(void 0,r):new Promise(a);function a(i,o){const s=Ws(n),l=t.parse(s);t.run(l,s,function(u,p,d){if(u||!p||!d)return c(u);const m=p,g=t.stringify(m,d);oN(g)?d.value=g:d.result=g,c(u,d)});function c(u,p){u||!p?o(u):i?i(p):r(void 0,p)}}}processSync(n){let r=!1,t;return this.freeze(),ep("processSync",this.parser||this.Parser),np("processSync",this.compiler||this.Compiler),this.process(n,a),Uv("processSync","process",r),t;function a(i,o){r=!0,Lv(i),t=o}}run(n,r,t){zv(n),this.freeze();const a=this.transformers;return!t&&typeof r=="function"&&(t=r,r=void 0),t?i(void 0,t):new Promise(i);function i(o,s){const l=Ws(r);a.run(n,l,c);function c(u,p,d){const m=p||n;u?s(u):o?o(m):t(void 0,m,d)}}}runSync(n,r){let t=!1,a;return this.run(n,r,i),Uv("runSync","run",t),a;function i(o,s){Lv(o),a=s,t=!0}}stringify(n,r){this.freeze();const t=Ws(r),a=this.compiler||this.Compiler;return np("stringify",a),zv(n),a(n,t)}use(n,...r){const t=this.attachers,a=this.namespace;if(rp("use",this.frozen),n!=null)if(typeof n=="function")l(n,r);else if(typeof n=="object")Array.isArray(n)?s(n):o(n);else throw new TypeError("Expected usable value, not `"+n+"`");return this;function i(c){if(typeof c=="function")l(c,[]);else if(typeof c=="object")if(Array.isArray(c)){const[u,...p]=c;l(u,p)}else o(c);else throw new TypeError("Expected usable value, not `"+c+"`")}function o(c){if(!("plugins"in c)&&!("settings"in c))throw new Error("Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither");s(c.plugins),c.settings&&(a.settings=Yu(!0,a.settings,c.settings))}function s(c){let u=-1;if(c!=null)if(Array.isArray(c))for(;++u<c.length;){const p=c[u];i(p)}else throw new TypeError("Expected a list of plugins, not `"+c+"`")}function l(c,u){let p=-1,d=-1;for(;++p<t.length;)if(t[p][0]===c){d=p;break}if(d===-1)t.push([c,...u]);else if(u.length>0){let[m,...g]=u;const y=t[d][1];Dd(y)&&Dd(m)&&(m=Yu(!0,y,m)),t[d]=[c,m,...g]}}}}const aN=new Yg().freeze();function ep(e,n){if(typeof n!="function")throw new TypeError("Cannot `"+e+"` without `parser`")}function np(e,n){if(typeof n!="function")throw new TypeError("Cannot `"+e+"` without `compiler`")}function rp(e,n){if(n)throw new Error("Cannot call `"+e+"` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.")}function zv(e){if(!Dd(e)||typeof e.type!="string")throw new TypeError("Expected node, got `"+e+"`")}function Uv(e,n,r){if(!r)throw new Error("`"+e+"` finished async. Use `"+n+"` instead")}function Ws(e){return iN(e)?e:new qS(e)}function iN(e){return!!(e&&typeof e=="object"&&"message"in e&&"messages"in e)}function oN(e){return typeof e=="string"||sN(e)}function sN(e){return!!(e&&typeof e=="object"&&"byteLength"in e&&"byteOffset"in e)}const lN="https://github.com/remarkjs/react-markdown/blob/main/changelog.md",Wv=[],Vv={allowDangerousHtml:!0},cN=/^(https?|ircs?|mailto|xmpp)$/i,uN=[{from:"astPlugins",id:"remove-buggy-html-in-markdown-parser"},{from:"allowDangerousHtml",id:"remove-buggy-html-in-markdown-parser"},{from:"allowNode",id:"replace-allownode-allowedtypes-and-disallowedtypes",to:"allowElement"},{from:"allowedTypes",id:"replace-allownode-allowedtypes-and-disallowedtypes",to:"allowedElements"},{from:"disallowedTypes",id:"replace-allownode-allowedtypes-and-disallowedtypes",to:"disallowedElements"},{from:"escapeHtml",id:"remove-buggy-html-in-markdown-parser"},{from:"includeElementIndex",id:"#remove-includeelementindex"},{from:"includeNodeIndex",id:"change-includenodeindex-to-includeelementindex"},{from:"linkTarget",id:"remove-linktarget"},{from:"plugins",id:"change-plugins-to-remarkplugins",to:"remarkPlugins"},{from:"rawSourcePos",id:"#remove-rawsourcepos"},{from:"renderers",id:"change-renderers-to-components",to:"components"},{from:"source",id:"change-source-to-children",to:"children"},{from:"sourcePos",id:"#remove-sourcepos"},{from:"transformImageUri",id:"#add-urltransform",to:"urlTransform"},{from:"transformLinkUri",id:"#add-urltransform",to:"urlTransform"}];function pN(e){const n=e.allowedElements,r=e.allowElement,t=e.children||"",a=e.className,i=e.components,o=e.disallowedElements,s=e.rehypePlugins||Wv,l=e.remarkPlugins||Wv,c=e.remarkRehypeOptions?{...e.remarkRehypeOptions,...Vv}:Vv,u=e.skipHtml,p=e.unwrapDisallowed,d=e.urlTransform||dN,m=aN().use($L).use(l).use(F_,c).use(s),g=new qS;typeof t=="string"&&(g.value=t);for(const h of uN)Object.hasOwn(e,h.from)&&(""+h.from+(h.to?"use `"+h.to+"` instead":"remove it")+lN+h.id,void 0);const y=m.parse(g);let k=m.runSync(y,g);return a&&(k={type:"element",tagName:"div",properties:{className:a},children:k.type==="root"?k.children:[k]}),Kg(k,f),MO(k,{Fragment:A.Fragment,components:i,ignoreInvalidStyle:!0,jsx:A.jsx,jsxs:A.jsxs,passKeys:!0,passNode:!0});function f(h,v,x){if(h.type==="raw"&&x&&typeof v=="number")return u?x.children.splice(v,1):x.children[v]={type:"text",value:h.value},v;if(h.type==="element"){let I;for(I in $u)if(Object.hasOwn($u,I)&&Object.hasOwn(h.properties,I)){const S=h.properties[I],E=$u[I];(E===null||E.includes(h.tagName))&&(h.properties[I]=d(String(S||""),I,h))}}if(h.type==="element"){let I=n?!n.includes(h.tagName):o?o.includes(h.tagName):!1;if(!I&&r&&typeof v=="number"&&(I=!r(h,v,x)),I&&x&&typeof v=="number")return p&&h.children?x.children.splice(v,1,...h.children):x.children.splice(v,1),v}}}function dN(e){const n=e.indexOf(":"),r=e.indexOf("?"),t=e.indexOf("#"),a=e.indexOf("/");return n<0||a>-1&&n>a||r>-1&&n>r||t>-1&&n>t||cN.test(e.slice(0,n))?e:""}function $v(e,n){const r=String(e);if(typeof n!="string")throw new TypeError("Expected character");let t=0,a=r.indexOf(n);for(;a!==-1;)t++,a=r.indexOf(n,a+n.length);return t}function mN(e){if(typeof e!="string")throw new TypeError("Expected a string");return e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}function gN(e,n,r){const a=ru((r||{}).ignore||[]),i=fN(n);let o=-1;for(;++o<i.length;)BS(e,"text",s);function s(c,u){let p=-1,d;for(;++p<u.length;){const m=u[p],g=d?d.children:void 0;if(a(m,g?g.indexOf(m):void 0,d))return;d=m}if(d)return l(c,u)}function l(c,u){const p=u[u.length-1],d=i[o][0],m=i[o][1];let g=0;const k=p.children.indexOf(c);let f=!1,h=[];d.lastIndex=0;let v=d.exec(c.value);for(;v;){const x=v.index,I={index:v.index,input:v.input,stack:[...u,c]};let S=m(...v,I);if(typeof S=="string"&&(S=S.length>0?{type:"text",value:S}:void 0),S===!1?d.lastIndex=x+1:(g!==x&&h.push({type:"text",value:c.value.slice(g,x)}),Array.isArray(S)?h.push(...S):S&&h.push(S),g=x+v[0].length,f=!0),!d.global)break;v=d.exec(c.value)}return f?(g<c.value.length&&h.push({type:"text",value:c.value.slice(g)}),p.children.splice(k,1,...h)):h=[c],k+h.length}}function fN(e){const n=[];if(!Array.isArray(e))throw new TypeError("Expected find and replace tuple or list of tuples");const r=!e[0]||Array.isArray(e[0])?e:[e];let t=-1;for(;++t<r.length;){const a=r[t];n.push([hN(a[0]),vN(a[1])])}return n}function hN(e){return typeof e=="string"?new RegExp(mN(e),"g"):e}function vN(e){return typeof e=="function"?e:function(){return e}}const tp="phrasing",ap=["autolink","link","image","label"];function bN(){return{transforms:[CN],enter:{literalAutolink:kN,literalAutolinkEmail:ip,literalAutolinkHttp:ip,literalAutolinkWww:ip},exit:{literalAutolink:jN,literalAutolinkEmail:xN,literalAutolinkHttp:SN,literalAutolinkWww:wN}}}function yN(){return{unsafe:[{character:"@",before:"[+\\-.\\w]",after:"[\\-.\\w]",inConstruct:tp,notInConstruct:ap},{character:".",before:"[Ww]",after:"[\\-.\\w]",inConstruct:tp,notInConstruct:ap},{character:":",before:"[ps]",after:"\\/",inConstruct:tp,notInConstruct:ap}]}}function kN(e){this.enter({type:"link",title:null,url:"",children:[]},e)}function ip(e){this.config.enter.autolinkProtocol.call(this,e)}function SN(e){this.config.exit.autolinkProtocol.call(this,e)}function wN(e){this.config.exit.data.call(this,e);const n=this.stack[this.stack.length-1];n.type,n.url="http://"+this.sliceSerialize(e)}function xN(e){this.config.exit.autolinkEmail.call(this,e)}function jN(e){this.exit(e)}function CN(e){gN(e,[[/(https?:\/\/|www(?=\.))([-.\w]+)([^ \t\r\n]*)/gi,IN],[/([-.\w+]+)@([-\w]+(?:\.[-\w]+)+)/g,EN]],{ignore:["link","linkReference"]})}function IN(e,n,r,t,a){let i="";if(!FS(a)||(/^w/i.test(n)&&(r=n+r,n="",i="http://"),!TN(r)))return!1;const o=MN(r+t);if(!o[0])return!1;const s={type:"link",title:null,url:i+n+o[0],children:[{type:"text",value:n+o[0]}]};return o[1]?[s,{type:"text",value:o[1]}]:s}function EN(e,n,r,t){return!FS(t,!0)||/[-\d_]$/.test(r)?!1:{type:"link",title:null,url:"mailto:"+n+"@"+r,children:[{type:"text",value:n+"@"+r}]}}function TN(e){const n=e.split(".");return!(n.length<2||n[n.length-1]&&(/_/.test(n[n.length-1])||!/[a-zA-Z\d]/.test(n[n.length-1]))||n[n.length-2]&&(/_/.test(n[n.length-2])||!/[a-zA-Z\d]/.test(n[n.length-2])))}function MN(e){const n=/[!"&'),.:;<>?\]}]+$/.exec(e);if(!n)return[e,void 0];e=e.slice(0,n.index);let r=n[0],t=r.indexOf(")");const a=$v(e,"(");let i=$v(e,")");for(;t!==-1&&a>i;)e+=r.slice(0,t+1),r=r.slice(t+1),t=r.indexOf(")"),i++;return[e,r]}function FS(e,n){const r=e.input.charCodeAt(e.index-1);return(e.index===0||wa(r)||Zc(r))&&(!n||r!==47)}JS.peek=qN;function AN(){return{enter:{gfmFootnoteDefinition:RN,gfmFootnoteDefinitionLabelString:DN,gfmFootnoteCall:_N,gfmFootnoteCallString:NN},exit:{gfmFootnoteDefinition:LN,gfmFootnoteDefinitionLabelString:ON,gfmFootnoteCall:HN,gfmFootnoteCallString:BN}}}function PN(){return{unsafe:[{character:"[",inConstruct:["phrasing","label","reference"]}],handlers:{footnoteDefinition:FN,footnoteReference:JS}}}function RN(e){this.enter({type:"footnoteDefinition",identifier:"",label:"",children:[]},e)}function DN(){this.buffer()}function ON(e){const n=this.resume(),r=this.stack[this.stack.length-1];r.type,r.label=n,r.identifier=hr(this.sliceSerialize(e)).toLowerCase()}function LN(e){this.exit(e)}function _N(e){this.enter({type:"footnoteReference",identifier:"",label:""},e)}function NN(){this.buffer()}function BN(e){const n=this.resume(),r=this.stack[this.stack.length-1];r.type,r.label=n,r.identifier=hr(this.sliceSerialize(e)).toLowerCase()}function HN(e){this.exit(e)}function JS(e,n,r,t){const a=r.createTracker(t);let i=a.move("[^");const o=r.enter("footnoteReference"),s=r.enter("reference");return i+=a.move(r.safe(r.associationId(e),{...a.current(),before:i,after:"]"})),s(),o(),i+=a.move("]"),i}function qN(){return"["}function FN(e,n,r,t){const a=r.createTracker(t);let i=a.move("[^");const o=r.enter("footnoteDefinition"),s=r.enter("label");return i+=a.move(r.safe(r.associationId(e),{...a.current(),before:i,after:"]"})),s(),i+=a.move("]:"+(e.children&&e.children.length>0?" ":"")),a.shift(4),i+=a.move(r.indentLines(r.containerFlow(e,a.current()),JN)),o(),i}function JN(e,n,r){return n===0?e:(r?"":"    ")+e}const zN=["autolink","destinationLiteral","destinationRaw","reference","titleQuote","titleApostrophe"];zS.peek=GN;function UN(){return{canContainEols:["delete"],enter:{strikethrough:VN},exit:{strikethrough:$N}}}function WN(){return{unsafe:[{character:"~",inConstruct:"phrasing",notInConstruct:zN}],handlers:{delete:zS}}}function VN(e){this.enter({type:"delete",children:[]},e)}function $N(e){this.exit(e)}function zS(e,n,r,t){const a=r.createTracker(t),i=r.enter("strikethrough");let o=a.move("~~");return o+=r.containerPhrasing(e,{...a.current(),before:o,after:"~"}),o+=a.move("~~"),i(),o}function GN(){return"~"}function KN(e,n={}){const r=(n.align||[]).concat(),t=n.stringLength||QN,a=[],i=[],o=[],s=[];let l=0,c=-1;for(;++c<e.length;){const g=[],y=[];let k=-1;for(e[c].length>l&&(l=e[c].length);++k<e[c].length;){const f=YN(e[c][k]);if(n.alignDelimiters!==!1){const h=t(f);y[k]=h,(s[k]===void 0||h>s[k])&&(s[k]=h)}g.push(f)}i[c]=g,o[c]=y}let u=-1;if(typeof r=="object"&&"length"in r)for(;++u<l;)a[u]=Gv(r[u]);else{const g=Gv(r);for(;++u<l;)a[u]=g}u=-1;const p=[],d=[];for(;++u<l;){const g=a[u];let y="",k="";g===99?(y=":",k=":"):g===108?y=":":g===114&&(k=":");let f=n.alignDelimiters===!1?1:Math.max(1,s[u]-y.length-k.length);const h=y+"-".repeat(f)+k;n.alignDelimiters!==!1&&(f=y.length+f+k.length,f>s[u]&&(s[u]=f),d[u]=f),p[u]=h}i.splice(1,0,p),o.splice(1,0,d),c=-1;const m=[];for(;++c<i.length;){const g=i[c],y=o[c];u=-1;const k=[];for(;++u<l;){const f=g[u]||"";let h="",v="";if(n.alignDelimiters!==!1){const x=s[u]-(y[u]||0),I=a[u];I===114?h=" ".repeat(x):I===99?x%2?(h=" ".repeat(x/2+.5),v=" ".repeat(x/2-.5)):(h=" ".repeat(x/2),v=h):v=" ".repeat(x)}n.delimiterStart!==!1&&!u&&k.push("|"),n.padding!==!1&&!(n.alignDelimiters===!1&&f==="")&&(n.delimiterStart!==!1||u)&&k.push(" "),n.alignDelimiters!==!1&&k.push(h),k.push(f),n.alignDelimiters!==!1&&k.push(v),n.padding!==!1&&k.push(" "),(n.delimiterEnd!==!1||u!==l-1)&&k.push("|")}m.push(n.delimiterEnd===!1?k.join("").replace(/ +$/,""):k.join(""))}return m.join(`
`)}function YN(e){return e==null?"":String(e)}function QN(e){return e.length}function Gv(e){const n=typeof e=="string"?e.codePointAt(0):0;return n===67||n===99?99:n===76||n===108?108:n===82||n===114?114:0}function XN(e,n,r,t){const a=r.enter("blockquote"),i=r.createTracker(t);i.move("> "),i.shift(2);const o=r.indentLines(r.containerFlow(e,i.current()),ZN);return a(),o}function ZN(e,n,r){return">"+(r?"":" ")+e}function e5(e,n){return Kv(e,n.inConstruct,!0)&&!Kv(e,n.notInConstruct,!1)}function Kv(e,n,r){if(typeof n=="string"&&(n=[n]),!n||n.length===0)return r;let t=-1;for(;++t<n.length;)if(e.includes(n[t]))return!0;return!1}function Yv(e,n,r,t){let a=-1;for(;++a<r.unsafe.length;)if(r.unsafe[a].character===`
`&&e5(r.stack,r.unsafe[a]))return/[ \t]/.test(t.before)?"":" ";return`\\
`}function n5(e,n){const r=String(e);let t=r.indexOf(n),a=t,i=0,o=0;if(typeof n!="string")throw new TypeError("Expected substring");for(;t!==-1;)t===a?++i>o&&(o=i):i=1,a=t+n.length,t=r.indexOf(n,a);return o}function r5(e,n){return!!(n.options.fences===!1&&e.value&&!e.lang&&/[^ \r\n]/.test(e.value)&&!/^[\t ]*(?:[\r\n]|$)|(?:^|[\r\n])[\t ]*$/.test(e.value))}function t5(e){const n=e.options.fence||"`";if(n!=="`"&&n!=="~")throw new Error("Cannot serialize code with `"+n+"` for `options.fence`, expected `` ` `` or `~`");return n}function a5(e,n,r,t){const a=t5(r),i=e.value||"",o=a==="`"?"GraveAccent":"Tilde";if(r5(e,r)){const p=r.enter("codeIndented"),d=r.indentLines(i,i5);return p(),d}const s=r.createTracker(t),l=a.repeat(Math.max(n5(i,a)+1,3)),c=r.enter("codeFenced");let u=s.move(l);if(e.lang){const p=r.enter(`codeFencedLang${o}`);u+=s.move(r.safe(e.lang,{before:u,after:" ",encode:["`"],...s.current()})),p()}if(e.lang&&e.meta){const p=r.enter(`codeFencedMeta${o}`);u+=s.move(" "),u+=s.move(r.safe(e.meta,{before:u,after:`
`,encode:["`"],...s.current()})),p()}return u+=s.move(`
`),i&&(u+=s.move(i+`
`)),u+=s.move(l),c(),u}function i5(e,n,r){return(r?"":"    ")+e}function Qg(e){const n=e.options.quote||'"';if(n!=='"'&&n!=="'")throw new Error("Cannot serialize title with `"+n+"` for `options.quote`, expected `\"`, or `'`");return n}function o5(e,n,r,t){const a=Qg(r),i=a==='"'?"Quote":"Apostrophe",o=r.enter("definition");let s=r.enter("label");const l=r.createTracker(t);let c=l.move("[");return c+=l.move(r.safe(r.associationId(e),{before:c,after:"]",...l.current()})),c+=l.move("]: "),s(),!e.url||/[\0- \u007F]/.test(e.url)?(s=r.enter("destinationLiteral"),c+=l.move("<"),c+=l.move(r.safe(e.url,{before:c,after:">",...l.current()})),c+=l.move(">")):(s=r.enter("destinationRaw"),c+=l.move(r.safe(e.url,{before:c,after:e.title?" ":`
`,...l.current()}))),s(),e.title&&(s=r.enter(`title${i}`),c+=l.move(" "+a),c+=l.move(r.safe(e.title,{before:c,after:a,...l.current()})),c+=l.move(a),s()),o(),c}function s5(e){const n=e.options.emphasis||"*";if(n!=="*"&&n!=="_")throw new Error("Cannot serialize emphasis with `"+n+"` for `options.emphasis`, expected `*`, or `_`");return n}US.peek=l5;function US(e,n,r,t){const a=s5(r),i=r.enter("emphasis"),o=r.createTracker(t);let s=o.move(a);return s+=o.move(r.containerPhrasing(e,{before:s,after:a,...o.current()})),s+=o.move(a),i(),s}function l5(e,n,r){return r.options.emphasis||"*"}function c5(e,n){let r=!1;return Kg(e,function(t){if("value"in t&&/\r?\n|\r/.test(t.value)||t.type==="break")return r=!0,Pd}),!!((!e.depth||e.depth<3)&&Jg(e)&&(n.options.setext||r))}function u5(e,n,r,t){const a=Math.max(Math.min(6,e.depth||1),1),i=r.createTracker(t);if(c5(e,r)){const u=r.enter("headingSetext"),p=r.enter("phrasing"),d=r.containerPhrasing(e,{...i.current(),before:`
`,after:`
`});return p(),u(),d+`
`+(a===1?"=":"-").repeat(d.length-(Math.max(d.lastIndexOf("\r"),d.lastIndexOf(`
`))+1))}const o="#".repeat(a),s=r.enter("headingAtx"),l=r.enter("phrasing");i.move(o+" ");let c=r.containerPhrasing(e,{before:"# ",after:`
`,...i.current()});return/^[\t ]/.test(c)&&(c="&#x"+c.charCodeAt(0).toString(16).toUpperCase()+";"+c.slice(1)),c=c?o+" "+c:o,r.options.closeAtx&&(c+=" "+o),l(),s(),c}WS.peek=p5;function WS(e){return e.value||""}function p5(){return"<"}VS.peek=d5;function VS(e,n,r,t){const a=Qg(r),i=a==='"'?"Quote":"Apostrophe",o=r.enter("image");let s=r.enter("label");const l=r.createTracker(t);let c=l.move("![");return c+=l.move(r.safe(e.alt,{before:c,after:"]",...l.current()})),c+=l.move("]("),s(),!e.url&&e.title||/[\0- \u007F]/.test(e.url)?(s=r.enter("destinationLiteral"),c+=l.move("<"),c+=l.move(r.safe(e.url,{before:c,after:">",...l.current()})),c+=l.move(">")):(s=r.enter("destinationRaw"),c+=l.move(r.safe(e.url,{before:c,after:e.title?" ":")",...l.current()}))),s(),e.title&&(s=r.enter(`title${i}`),c+=l.move(" "+a),c+=l.move(r.safe(e.title,{before:c,after:a,...l.current()})),c+=l.move(a),s()),c+=l.move(")"),o(),c}function d5(){return"!"}$S.peek=m5;function $S(e,n,r,t){const a=e.referenceType,i=r.enter("imageReference");let o=r.enter("label");const s=r.createTracker(t);let l=s.move("![");const c=r.safe(e.alt,{before:l,after:"]",...s.current()});l+=s.move(c+"]["),o();const u=r.stack;r.stack=[],o=r.enter("reference");const p=r.safe(r.associationId(e),{before:l,after:"]",...s.current()});return o(),r.stack=u,i(),a==="full"||!c||c!==p?l+=s.move(p+"]"):a==="shortcut"?l=l.slice(0,-1):l+=s.move("]"),l}function m5(){return"!"}GS.peek=g5;function GS(e,n,r){let t=e.value||"",a="`",i=-1;for(;new RegExp("(^|[^`])"+a+"([^`]|$)").test(t);)a+="`";for(/[^ \r\n]/.test(t)&&(/^[ \r\n]/.test(t)&&/[ \r\n]$/.test(t)||/^`|`$/.test(t))&&(t=" "+t+" ");++i<r.unsafe.length;){const o=r.unsafe[i],s=r.compilePattern(o);let l;if(o.atBreak)for(;l=s.exec(t);){let c=l.index;t.charCodeAt(c)===10&&t.charCodeAt(c-1)===13&&c--,t=t.slice(0,c)+" "+t.slice(l.index+1)}}return a+t+a}function g5(){return"`"}function KS(e,n){const r=Jg(e);return!!(!n.options.resourceLink&&e.url&&!e.title&&e.children&&e.children.length===1&&e.children[0].type==="text"&&(r===e.url||"mailto:"+r===e.url)&&/^[a-z][a-z+.-]+:/i.test(e.url)&&!/[\0- <>\u007F]/.test(e.url))}YS.peek=f5;function YS(e,n,r,t){const a=Qg(r),i=a==='"'?"Quote":"Apostrophe",o=r.createTracker(t);let s,l;if(KS(e,r)){const u=r.stack;r.stack=[],s=r.enter("autolink");let p=o.move("<");return p+=o.move(r.containerPhrasing(e,{before:p,after:">",...o.current()})),p+=o.move(">"),s(),r.stack=u,p}s=r.enter("link"),l=r.enter("label");let c=o.move("[");return c+=o.move(r.containerPhrasing(e,{before:c,after:"](",...o.current()})),c+=o.move("]("),l(),!e.url&&e.title||/[\0- \u007F]/.test(e.url)?(l=r.enter("destinationLiteral"),c+=o.move("<"),c+=o.move(r.safe(e.url,{before:c,after:">",...o.current()})),c+=o.move(">")):(l=r.enter("destinationRaw"),c+=o.move(r.safe(e.url,{before:c,after:e.title?" ":")",...o.current()}))),l(),e.title&&(l=r.enter(`title${i}`),c+=o.move(" "+a),c+=o.move(r.safe(e.title,{before:c,after:a,...o.current()})),c+=o.move(a),l()),c+=o.move(")"),s(),c}function f5(e,n,r){return KS(e,r)?"<":"["}QS.peek=h5;function QS(e,n,r,t){const a=e.referenceType,i=r.enter("linkReference");let o=r.enter("label");const s=r.createTracker(t);let l=s.move("[");const c=r.containerPhrasing(e,{before:l,after:"]",...s.current()});l+=s.move(c+"]["),o();const u=r.stack;r.stack=[],o=r.enter("reference");const p=r.safe(r.associationId(e),{before:l,after:"]",...s.current()});return o(),r.stack=u,i(),a==="full"||!c||c!==p?l+=s.move(p+"]"):a==="shortcut"?l=l.slice(0,-1):l+=s.move("]"),l}function h5(){return"["}function Xg(e){const n=e.options.bullet||"*";if(n!=="*"&&n!=="+"&&n!=="-")throw new Error("Cannot serialize items with `"+n+"` for `options.bullet`, expected `*`, `+`, or `-`");return n}function v5(e){const n=Xg(e),r=e.options.bulletOther;if(!r)return n==="*"?"-":"*";if(r!=="*"&&r!=="+"&&r!=="-")throw new Error("Cannot serialize items with `"+r+"` for `options.bulletOther`, expected `*`, `+`, or `-`");if(r===n)throw new Error("Expected `bullet` (`"+n+"`) and `bulletOther` (`"+r+"`) to be different");return r}function b5(e){const n=e.options.bulletOrdered||".";if(n!=="."&&n!==")")throw new Error("Cannot serialize items with `"+n+"` for `options.bulletOrdered`, expected `.` or `)`");return n}function XS(e){const n=e.options.rule||"*";if(n!=="*"&&n!=="-"&&n!=="_")throw new Error("Cannot serialize rules with `"+n+"` for `options.rule`, expected `*`, `-`, or `_`");return n}function y5(e,n,r,t){const a=r.enter("list"),i=r.bulletCurrent;let o=e.ordered?b5(r):Xg(r);const s=e.ordered?o==="."?")":".":v5(r);let l=n&&r.bulletLastUsed?o===r.bulletLastUsed:!1;if(!e.ordered){const u=e.children?e.children[0]:void 0;if((o==="*"||o==="-")&&u&&(!u.children||!u.children[0])&&r.stack[r.stack.length-1]==="list"&&r.stack[r.stack.length-2]==="listItem"&&r.stack[r.stack.length-3]==="list"&&r.stack[r.stack.length-4]==="listItem"&&r.indexStack[r.indexStack.length-1]===0&&r.indexStack[r.indexStack.length-2]===0&&r.indexStack[r.indexStack.length-3]===0&&(l=!0),XS(r)===o&&u){let p=-1;for(;++p<e.children.length;){const d=e.children[p];if(d&&d.type==="listItem"&&d.children&&d.children[0]&&d.children[0].type==="thematicBreak"){l=!0;break}}}}l&&(o=s),r.bulletCurrent=o;const c=r.containerFlow(e,t);return r.bulletLastUsed=o,r.bulletCurrent=i,a(),c}function k5(e){const n=e.options.listItemIndent||"one";if(n!=="tab"&&n!=="one"&&n!=="mixed")throw new Error("Cannot serialize items with `"+n+"` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`");return n}function S5(e,n,r,t){const a=k5(r);let i=r.bulletCurrent||Xg(r);n&&n.type==="list"&&n.ordered&&(i=(typeof n.start=="number"&&n.start>-1?n.start:1)+(r.options.incrementListMarker===!1?0:n.children.indexOf(e))+i);let o=i.length+1;(a==="tab"||a==="mixed"&&(n&&n.type==="list"&&n.spread||e.spread))&&(o=Math.ceil(o/4)*4);const s=r.createTracker(t);s.move(i+" ".repeat(o-i.length)),s.shift(o);const l=r.enter("listItem"),c=r.indentLines(r.containerFlow(e,s.current()),u);return l(),c;function u(p,d,m){return d?(m?"":" ".repeat(o))+p:(m?i:i+" ".repeat(o-i.length))+p}}function w5(e,n,r,t){const a=r.enter("paragraph"),i=r.enter("phrasing"),o=r.containerPhrasing(e,t);return i(),a(),o}const x5=ru(["break","delete","emphasis","footnote","footnoteReference","image","imageReference","inlineCode","inlineMath","link","linkReference","mdxJsxTextElement","mdxTextExpression","strong","text","textDirective"]);function j5(e,n,r,t){return(e.children.some(function(o){return x5(o)})?r.containerPhrasing:r.containerFlow).call(r,e,t)}function C5(e){const n=e.options.strong||"*";if(n!=="*"&&n!=="_")throw new Error("Cannot serialize strong with `"+n+"` for `options.strong`, expected `*`, or `_`");return n}ZS.peek=I5;function ZS(e,n,r,t){const a=C5(r),i=r.enter("strong"),o=r.createTracker(t);let s=o.move(a+a);return s+=o.move(r.containerPhrasing(e,{before:s,after:a,...o.current()})),s+=o.move(a+a),i(),s}function I5(e,n,r){return r.options.strong||"*"}function E5(e,n,r,t){return r.safe(e.value,t)}function T5(e){const n=e.options.ruleRepetition||3;if(n<3)throw new Error("Cannot serialize rules with repetition `"+n+"` for `options.ruleRepetition`, expected `3` or more");return n}function M5(e,n,r){const t=(XS(r)+(r.options.ruleSpaces?" ":"")).repeat(T5(r));return r.options.ruleSpaces?t.slice(0,-1):t}const ew={blockquote:XN,break:Yv,code:a5,definition:o5,emphasis:US,hardBreak:Yv,heading:u5,html:WS,image:VS,imageReference:$S,inlineCode:GS,link:YS,linkReference:QS,list:y5,listItem:S5,paragraph:w5,root:j5,strong:ZS,text:E5,thematicBreak:M5};function A5(){return{enter:{table:P5,tableData:Qv,tableHeader:Qv,tableRow:D5},exit:{codeText:O5,table:R5,tableData:op,tableHeader:op,tableRow:op}}}function P5(e){const n=e._align;this.enter({type:"table",align:n.map(function(r){return r==="none"?null:r}),children:[]},e),this.data.inTable=!0}function R5(e){this.exit(e),this.data.inTable=void 0}function D5(e){this.enter({type:"tableRow",children:[]},e)}function op(e){this.exit(e)}function Qv(e){this.enter({type:"tableCell",children:[]},e)}function O5(e){let n=this.resume();this.data.inTable&&(n=n.replace(/\\([\\|])/g,L5));const r=this.stack[this.stack.length-1];r.type,r.value=n,this.exit(e)}function L5(e,n){return n==="|"?n:e}function _5(e){const n=e||{},r=n.tableCellPadding,t=n.tablePipeAlign,a=n.stringLength,i=r?" ":"|";return{unsafe:[{character:"\r",inConstruct:"tableCell"},{character:`
`,inConstruct:"tableCell"},{atBreak:!0,character:"|",after:"[	 :-]"},{character:"|",inConstruct:"tableCell"},{atBreak:!0,character:":",after:"-"},{atBreak:!0,character:"-",after:"[:|-]"}],handlers:{inlineCode:d,table:o,tableCell:l,tableRow:s}};function o(m,g,y,k){return c(u(m,y,k),m.align)}function s(m,g,y,k){const f=p(m,y,k),h=c([f]);return h.slice(0,h.indexOf(`
`))}function l(m,g,y,k){const f=y.enter("tableCell"),h=y.enter("phrasing"),v=y.containerPhrasing(m,{...k,before:i,after:i});return h(),f(),v}function c(m,g){return KN(m,{align:g,alignDelimiters:t,padding:r,stringLength:a})}function u(m,g,y){const k=m.children;let f=-1;const h=[],v=g.enter("table");for(;++f<k.length;)h[f]=p(k[f],g,y);return v(),h}function p(m,g,y){const k=m.children;let f=-1;const h=[],v=g.enter("tableRow");for(;++f<k.length;)h[f]=l(k[f],m,g,y);return v(),h}function d(m,g,y){let k=ew.inlineCode(m,g,y);return y.stack.includes("tableCell")&&(k=k.replace(/\|/g,"\\$&")),k}}function N5(){return{exit:{taskListCheckValueChecked:Xv,taskListCheckValueUnchecked:Xv,paragraph:H5}}}function B5(){return{unsafe:[{atBreak:!0,character:"-",after:"[:|-]"}],handlers:{listItem:q5}}}function Xv(e){const n=this.stack[this.stack.length-2];n.type,n.checked=e.type==="taskListCheckValueChecked"}function H5(e){const n=this.stack[this.stack.length-2];if(n&&n.type==="listItem"&&typeof n.checked=="boolean"){const r=this.stack[this.stack.length-1];r.type;const t=r.children[0];if(t&&t.type==="text"){const a=n.children;let i=-1,o;for(;++i<a.length;){const s=a[i];if(s.type==="paragraph"){o=s;break}}o===r&&(t.value=t.value.slice(1),t.value.length===0?r.children.shift():r.position&&t.position&&typeof t.position.start.offset=="number"&&(t.position.start.column++,t.position.start.offset++,r.position.start=Object.assign({},t.position.start)))}}this.exit(e)}function q5(e,n,r,t){const a=e.children[0],i=typeof e.checked=="boolean"&&a&&a.type==="paragraph",o="["+(e.checked?"x":" ")+"] ",s=r.createTracker(t);i&&s.move(o);let l=ew.listItem(e,n,r,{...t,...s.current()});return i&&(l=l.replace(/^(?:[*+-]|\d+\.)([\r\n]| {1,3})/,c)),l;function c(u){return u+o}}function F5(){return[bN(),AN(),UN(),A5(),N5()]}function J5(e){return{extensions:[yN(),PN(),WN(),_5(e),B5()]}}const z5={tokenize:K5,partial:!0},nw={tokenize:Y5,partial:!0},rw={tokenize:Q5,partial:!0},tw={tokenize:X5,partial:!0},U5={tokenize:Z5,partial:!0},aw={tokenize:$5,previous:ow},iw={tokenize:G5,previous:sw},vt={tokenize:V5,previous:lw},Fr={};function W5(){return{text:Fr}}let ra=48;for(;ra<123;)Fr[ra]=vt,ra++,ra===58?ra=65:ra===91&&(ra=97);Fr[43]=vt;Fr[45]=vt;Fr[46]=vt;Fr[95]=vt;Fr[72]=[vt,iw];Fr[104]=[vt,iw];Fr[87]=[vt,aw];Fr[119]=[vt,aw];function V5(e,n,r){const t=this;let a,i;return o;function o(p){return!Ld(p)||!lw.call(t,t.previous)||Zg(t.events)?r(p):(e.enter("literalAutolink"),e.enter("literalAutolinkEmail"),s(p))}function s(p){return Ld(p)?(e.consume(p),s):p===64?(e.consume(p),l):r(p)}function l(p){return p===46?e.check(U5,u,c)(p):p===45||p===95||un(p)?(i=!0,e.consume(p),l):u(p)}function c(p){return e.consume(p),a=!0,l}function u(p){return i&&a&&hn(t.previous)?(e.exit("literalAutolinkEmail"),e.exit("literalAutolink"),n(p)):r(p)}}function $5(e,n,r){const t=this;return a;function a(o){return o!==87&&o!==119||!ow.call(t,t.previous)||Zg(t.events)?r(o):(e.enter("literalAutolink"),e.enter("literalAutolinkWww"),e.check(z5,e.attempt(nw,e.attempt(rw,i),r),r)(o))}function i(o){return e.exit("literalAutolinkWww"),e.exit("literalAutolink"),n(o)}}function G5(e,n,r){const t=this;let a="",i=!1;return o;function o(p){return(p===72||p===104)&&sw.call(t,t.previous)&&!Zg(t.events)?(e.enter("literalAutolink"),e.enter("literalAutolinkHttp"),a+=String.fromCodePoint(p),e.consume(p),s):r(p)}function s(p){if(hn(p)&&a.length<5)return a+=String.fromCodePoint(p),e.consume(p),s;if(p===58){const d=a.toLowerCase();if(d==="http"||d==="https")return e.consume(p),l}return r(p)}function l(p){return p===47?(e.consume(p),i?c:(i=!0,l)):r(p)}function c(p){return p===null||Zl(p)||xe(p)||wa(p)||Zc(p)?r(p):e.attempt(nw,e.attempt(rw,u),r)(p)}function u(p){return e.exit("literalAutolinkHttp"),e.exit("literalAutolink"),n(p)}}function K5(e,n,r){let t=0;return a;function a(o){return(o===87||o===119)&&t<3?(t++,e.consume(o),a):o===46&&t===3?(e.consume(o),i):r(o)}function i(o){return o===null?r(o):n(o)}}function Y5(e,n,r){let t,a,i;return o;function o(c){return c===46||c===95?e.check(tw,l,s)(c):c===null||xe(c)||wa(c)||c!==45&&Zc(c)?l(c):(i=!0,e.consume(c),o)}function s(c){return c===95?t=!0:(a=t,t=void 0),e.consume(c),o}function l(c){return a||t||!i?r(c):n(c)}}function Q5(e,n){let r=0,t=0;return a;function a(o){return o===40?(r++,e.consume(o),a):o===41&&t<r?i(o):o===33||o===34||o===38||o===39||o===41||o===42||o===44||o===46||o===58||o===59||o===60||o===63||o===93||o===95||o===126?e.check(tw,n,i)(o):o===null||xe(o)||wa(o)?n(o):(e.consume(o),a)}function i(o){return o===41&&t++,e.consume(o),a}}function X5(e,n,r){return t;function t(s){return s===33||s===34||s===39||s===41||s===42||s===44||s===46||s===58||s===59||s===63||s===95||s===126?(e.consume(s),t):s===38?(e.consume(s),i):s===93?(e.consume(s),a):s===60||s===null||xe(s)||wa(s)?n(s):r(s)}function a(s){return s===null||s===40||s===91||xe(s)||wa(s)?n(s):t(s)}function i(s){return hn(s)?o(s):r(s)}function o(s){return s===59?(e.consume(s),t):hn(s)?(e.consume(s),o):r(s)}}function Z5(e,n,r){return t;function t(i){return e.consume(i),a}function a(i){return un(i)?r(i):n(i)}}function ow(e){return e===null||e===40||e===42||e===95||e===91||e===93||e===126||xe(e)}function sw(e){return!hn(e)}function lw(e){return!(e===47||Ld(e))}function Ld(e){return e===43||e===45||e===46||e===95||un(e)}function Zg(e){let n=e.length,r=!1;for(;n--;){const t=e[n][1];if((t.type==="labelLink"||t.type==="labelImage")&&!t._balanced){r=!0;break}if(t._gfmAutolinkLiteralWalkedInto){r=!1;break}}return e.length>0&&!r&&(e[e.length-1][1]._gfmAutolinkLiteralWalkedInto=!0),r}const e6={tokenize:l6,partial:!0};function n6(){return{document:{91:{tokenize:i6,continuation:{tokenize:o6},exit:s6}},text:{91:{tokenize:a6},93:{add:"after",tokenize:r6,resolveTo:t6}}}}function r6(e,n,r){const t=this;let a=t.events.length;const i=t.parser.gfmFootnotes||(t.parser.gfmFootnotes=[]);let o;for(;a--;){const l=t.events[a][1];if(l.type==="labelImage"){o=l;break}if(l.type==="gfmFootnoteCall"||l.type==="labelLink"||l.type==="label"||l.type==="image"||l.type==="link")break}return s;function s(l){if(!o||!o._balanced)return r(l);const c=hr(t.sliceSerialize({start:o.end,end:t.now()}));return c.codePointAt(0)!==94||!i.includes(c.slice(1))?r(l):(e.enter("gfmFootnoteCallLabelMarker"),e.consume(l),e.exit("gfmFootnoteCallLabelMarker"),n(l))}}function t6(e,n){let r=e.length;for(;r--;)if(e[r][1].type==="labelImage"&&e[r][0]==="enter"){e[r][1];break}e[r+1][1].type="data",e[r+3][1].type="gfmFootnoteCallLabelMarker";const t={type:"gfmFootnoteCall",start:Object.assign({},e[r+3][1].start),end:Object.assign({},e[e.length-1][1].end)},a={type:"gfmFootnoteCallMarker",start:Object.assign({},e[r+3][1].end),end:Object.assign({},e[r+3][1].end)};a.end.column++,a.end.offset++,a.end._bufferIndex++;const i={type:"gfmFootnoteCallString",start:Object.assign({},a.end),end:Object.assign({},e[e.length-1][1].start)},o={type:"chunkString",contentType:"string",start:Object.assign({},i.start),end:Object.assign({},i.end)},s=[e[r+1],e[r+2],["enter",t,n],e[r+3],e[r+4],["enter",a,n],["exit",a,n],["enter",i,n],["enter",o,n],["exit",o,n],["exit",i,n],e[e.length-2],e[e.length-1],["exit",t,n]];return e.splice(r,e.length-r+1,...s),e}function a6(e,n,r){const t=this,a=t.parser.gfmFootnotes||(t.parser.gfmFootnotes=[]);let i=0,o;return s;function s(p){return e.enter("gfmFootnoteCall"),e.enter("gfmFootnoteCallLabelMarker"),e.consume(p),e.exit("gfmFootnoteCallLabelMarker"),l}function l(p){return p!==94?r(p):(e.enter("gfmFootnoteCallMarker"),e.consume(p),e.exit("gfmFootnoteCallMarker"),e.enter("gfmFootnoteCallString"),e.enter("chunkString").contentType="string",c)}function c(p){if(i>999||p===93&&!o||p===null||p===91||xe(p))return r(p);if(p===93){e.exit("chunkString");const d=e.exit("gfmFootnoteCallString");return a.includes(hr(t.sliceSerialize(d)))?(e.enter("gfmFootnoteCallLabelMarker"),e.consume(p),e.exit("gfmFootnoteCallLabelMarker"),e.exit("gfmFootnoteCall"),n):r(p)}return xe(p)||(o=!0),i++,e.consume(p),p===92?u:c}function u(p){return p===91||p===92||p===93?(e.consume(p),i++,c):c(p)}}function i6(e,n,r){const t=this,a=t.parser.gfmFootnotes||(t.parser.gfmFootnotes=[]);let i,o=0,s;return l;function l(g){return e.enter("gfmFootnoteDefinition")._container=!0,e.enter("gfmFootnoteDefinitionLabel"),e.enter("gfmFootnoteDefinitionLabelMarker"),e.consume(g),e.exit("gfmFootnoteDefinitionLabelMarker"),c}function c(g){return g===94?(e.enter("gfmFootnoteDefinitionMarker"),e.consume(g),e.exit("gfmFootnoteDefinitionMarker"),e.enter("gfmFootnoteDefinitionLabelString"),e.enter("chunkString").contentType="string",u):r(g)}function u(g){if(o>999||g===93&&!s||g===null||g===91||xe(g))return r(g);if(g===93){e.exit("chunkString");const y=e.exit("gfmFootnoteDefinitionLabelString");return i=hr(t.sliceSerialize(y)),e.enter("gfmFootnoteDefinitionLabelMarker"),e.consume(g),e.exit("gfmFootnoteDefinitionLabelMarker"),e.exit("gfmFootnoteDefinitionLabel"),d}return xe(g)||(s=!0),o++,e.consume(g),g===92?p:u}function p(g){return g===91||g===92||g===93?(e.consume(g),o++,u):u(g)}function d(g){return g===58?(e.enter("definitionMarker"),e.consume(g),e.exit("definitionMarker"),a.includes(i)||a.push(i),pe(e,m,"gfmFootnoteDefinitionWhitespace")):r(g)}function m(g){return n(g)}}function o6(e,n,r){return e.check(fs,n,e.attempt(e6,n,r))}function s6(e){e.exit("gfmFootnoteDefinition")}function l6(e,n,r){const t=this;return pe(e,a,"gfmFootnoteDefinitionIndent",5);function a(i){const o=t.events[t.events.length-1];return o&&o[1].type==="gfmFootnoteDefinitionIndent"&&o[2].sliceSerialize(o[1],!0).length===4?n(i):r(i)}}function c6(e){let r=(e||{}).singleTilde;const t={tokenize:i,resolveAll:a};return r==null&&(r=!0),{text:{126:t},insideSpan:{null:[t]},attentionMarkers:{null:[126]}};function a(o,s){let l=-1;for(;++l<o.length;)if(o[l][0]==="enter"&&o[l][1].type==="strikethroughSequenceTemporary"&&o[l][1]._close){let c=l;for(;c--;)if(o[c][0]==="exit"&&o[c][1].type==="strikethroughSequenceTemporary"&&o[c][1]._open&&o[l][1].end.offset-o[l][1].start.offset===o[c][1].end.offset-o[c][1].start.offset){o[l][1].type="strikethroughSequence",o[c][1].type="strikethroughSequence";const u={type:"strikethrough",start:Object.assign({},o[c][1].start),end:Object.assign({},o[l][1].end)},p={type:"strikethroughText",start:Object.assign({},o[c][1].end),end:Object.assign({},o[l][1].start)},d=[["enter",u,s],["enter",o[c][1],s],["exit",o[c][1],s],["enter",p,s]],m=s.parser.constructs.insideSpan.null;m&&Xn(d,d.length,0,eu(m,o.slice(c+1,l),s)),Xn(d,d.length,0,[["exit",p,s],["enter",o[l][1],s],["exit",o[l][1],s],["exit",u,s]]),Xn(o,c-1,l-c+3,d),l=c+d.length-2;break}}for(l=-1;++l<o.length;)o[l][1].type==="strikethroughSequenceTemporary"&&(o[l][1].type="data");return o}function i(o,s,l){const c=this.previous,u=this.events;let p=0;return d;function d(g){return c===126&&u[u.length-1][1].type!=="characterEscape"?l(g):(o.enter("strikethroughSequenceTemporary"),m(g))}function m(g){const y=ec(c);if(g===126)return p>1?l(g):(o.consume(g),p++,m);if(p<2&&!r)return l(g);const k=o.exit("strikethroughSequenceTemporary"),f=ec(g);return k._open=!f||f===2&&!!y,k._close=!y||y===2&&!!f,s(g)}}}class u6{constructor(){this.map=[]}add(n,r,t){p6(this,n,r,t)}consume(n){if(this.map.sort(function(i,o){return i[0]-o[0]}),this.map.length===0)return;let r=this.map.length;const t=[];for(;r>0;)r-=1,t.push(n.slice(this.map[r][0]+this.map[r][1]),this.map[r][2]),n.length=this.map[r][0];t.push([...n]),n.length=0;let a=t.pop();for(;a;)n.push(...a),a=t.pop();this.map.length=0}}function p6(e,n,r,t){let a=0;if(!(r===0&&t.length===0)){for(;a<e.map.length;){if(e.map[a][0]===n){e.map[a][1]+=r,e.map[a][2].push(...t);return}a+=1}e.map.push([n,r,t])}}function d6(e,n){let r=!1;const t=[];for(;n<e.length;){const a=e[n];if(r){if(a[0]==="enter")a[1].type==="tableContent"&&t.push(e[n+1][1].type==="tableDelimiterMarker"?"left":"none");else if(a[1].type==="tableContent"){if(e[n-1][1].type==="tableDelimiterMarker"){const i=t.length-1;t[i]=t[i]==="left"?"center":"right"}}else if(a[1].type==="tableDelimiterRow")break}else a[0]==="enter"&&a[1].type==="tableDelimiterRow"&&(r=!0);n+=1}return t}function m6(){return{flow:{null:{tokenize:g6,resolveAll:f6}}}}function g6(e,n,r){const t=this;let a=0,i=0,o;return s;function s(C){let R=t.events.length-1;for(;R>-1;){const $=t.events[R][1].type;if($==="lineEnding"||$==="linePrefix")R--;else break}const O=R>-1?t.events[R][1].type:null,q=O==="tableHead"||O==="tableRow"?S:l;return q===S&&t.parser.lazy[t.now().line]?r(C):q(C)}function l(C){return e.enter("tableHead"),e.enter("tableRow"),c(C)}function c(C){return C===124||(o=!0,i+=1),u(C)}function u(C){return C===null?r(C):Y(C)?i>1?(i=0,t.interrupt=!0,e.exit("tableRow"),e.enter("lineEnding"),e.consume(C),e.exit("lineEnding"),m):r(C):oe(C)?pe(e,u,"whitespace")(C):(i+=1,o&&(o=!1,a+=1),C===124?(e.enter("tableCellDivider"),e.consume(C),e.exit("tableCellDivider"),o=!0,u):(e.enter("data"),p(C)))}function p(C){return C===null||C===124||xe(C)?(e.exit("data"),u(C)):(e.consume(C),C===92?d:p)}function d(C){return C===92||C===124?(e.consume(C),p):p(C)}function m(C){return t.interrupt=!1,t.parser.lazy[t.now().line]?r(C):(e.enter("tableDelimiterRow"),o=!1,oe(C)?pe(e,g,"linePrefix",t.parser.constructs.disable.null.includes("codeIndented")?void 0:4)(C):g(C))}function g(C){return C===45||C===58?k(C):C===124?(o=!0,e.enter("tableCellDivider"),e.consume(C),e.exit("tableCellDivider"),y):I(C)}function y(C){return oe(C)?pe(e,k,"whitespace")(C):k(C)}function k(C){return C===58?(i+=1,o=!0,e.enter("tableDelimiterMarker"),e.consume(C),e.exit("tableDelimiterMarker"),f):C===45?(i+=1,f(C)):C===null||Y(C)?x(C):I(C)}function f(C){return C===45?(e.enter("tableDelimiterFiller"),h(C)):I(C)}function h(C){return C===45?(e.consume(C),h):C===58?(o=!0,e.exit("tableDelimiterFiller"),e.enter("tableDelimiterMarker"),e.consume(C),e.exit("tableDelimiterMarker"),v):(e.exit("tableDelimiterFiller"),v(C))}function v(C){return oe(C)?pe(e,x,"whitespace")(C):x(C)}function x(C){return C===124?g(C):C===null||Y(C)?!o||a!==i?I(C):(e.exit("tableDelimiterRow"),e.exit("tableHead"),n(C)):I(C)}function I(C){return r(C)}function S(C){return e.enter("tableRow"),E(C)}function E(C){return C===124?(e.enter("tableCellDivider"),e.consume(C),e.exit("tableCellDivider"),E):C===null||Y(C)?(e.exit("tableRow"),n(C)):oe(C)?pe(e,E,"whitespace")(C):(e.enter("data"),T(C))}function T(C){return C===null||C===124||xe(C)?(e.exit("data"),E(C)):(e.consume(C),C===92?B:T)}function B(C){return C===92||C===124?(e.consume(C),T):T(C)}}function f6(e,n){let r=-1,t=!0,a=0,i=[0,0,0,0],o=[0,0,0,0],s=!1,l=0,c,u,p;const d=new u6;for(;++r<e.length;){const m=e[r],g=m[1];m[0]==="enter"?g.type==="tableHead"?(s=!1,l!==0&&(Zv(d,n,l,c,u),u=void 0,l=0),c={type:"table",start:Object.assign({},g.start),end:Object.assign({},g.end)},d.add(r,0,[["enter",c,n]])):g.type==="tableRow"||g.type==="tableDelimiterRow"?(t=!0,p=void 0,i=[0,0,0,0],o=[0,r+1,0,0],s&&(s=!1,u={type:"tableBody",start:Object.assign({},g.start),end:Object.assign({},g.end)},d.add(r,0,[["enter",u,n]])),a=g.type==="tableDelimiterRow"?2:u?3:1):a&&(g.type==="data"||g.type==="tableDelimiterMarker"||g.type==="tableDelimiterFiller")?(t=!1,o[2]===0&&(i[1]!==0&&(o[0]=o[1],p=Vs(d,n,i,a,void 0,p),i=[0,0,0,0]),o[2]=r)):g.type==="tableCellDivider"&&(t?t=!1:(i[1]!==0&&(o[0]=o[1],p=Vs(d,n,i,a,void 0,p)),i=o,o=[i[1],r,0,0])):g.type==="tableHead"?(s=!0,l=r):g.type==="tableRow"||g.type==="tableDelimiterRow"?(l=r,i[1]!==0?(o[0]=o[1],p=Vs(d,n,i,a,r,p)):o[1]!==0&&(p=Vs(d,n,o,a,r,p)),a=0):a&&(g.type==="data"||g.type==="tableDelimiterMarker"||g.type==="tableDelimiterFiller")&&(o[3]=r)}for(l!==0&&Zv(d,n,l,c,u),d.consume(n.events),r=-1;++r<n.events.length;){const m=n.events[r];m[0]==="enter"&&m[1].type==="table"&&(m[1]._align=d6(n.events,r))}return e}function Vs(e,n,r,t,a,i){const o=t===1?"tableHeader":t===2?"tableDelimiter":"tableData",s="tableContent";r[0]!==0&&(i.end=Object.assign({},Ha(n.events,r[0])),e.add(r[0],0,[["exit",i,n]]));const l=Ha(n.events,r[1]);if(i={type:o,start:Object.assign({},l),end:Object.assign({},l)},e.add(r[1],0,[["enter",i,n]]),r[2]!==0){const c=Ha(n.events,r[2]),u=Ha(n.events,r[3]),p={type:s,start:Object.assign({},c),end:Object.assign({},u)};if(e.add(r[2],0,[["enter",p,n]]),t!==2){const d=n.events[r[2]],m=n.events[r[3]];if(d[1].end=Object.assign({},m[1].end),d[1].type="chunkText",d[1].contentType="text",r[3]>r[2]+1){const g=r[2]+1,y=r[3]-r[2]-1;e.add(g,y,[])}}e.add(r[3]+1,0,[["exit",p,n]])}return a!==void 0&&(i.end=Object.assign({},Ha(n.events,a)),e.add(a,0,[["exit",i,n]]),i=void 0),i}function Zv(e,n,r,t,a){const i=[],o=Ha(n.events,r);a&&(a.end=Object.assign({},o),i.push(["exit",a,n])),t.end=Object.assign({},o),i.push(["exit",t,n]),e.add(r+1,0,i)}function Ha(e,n){const r=e[n],t=r[0]==="enter"?"start":"end";return r[1][t]}const h6={tokenize:b6};function v6(){return{text:{91:h6}}}function b6(e,n,r){const t=this;return a;function a(l){return t.previous!==null||!t._gfmTasklistFirstContentOfListItem?r(l):(e.enter("taskListCheck"),e.enter("taskListCheckMarker"),e.consume(l),e.exit("taskListCheckMarker"),i)}function i(l){return xe(l)?(e.enter("taskListCheckValueUnchecked"),e.consume(l),e.exit("taskListCheckValueUnchecked"),o):l===88||l===120?(e.enter("taskListCheckValueChecked"),e.consume(l),e.exit("taskListCheckValueChecked"),o):r(l)}function o(l){return l===93?(e.enter("taskListCheckMarker"),e.consume(l),e.exit("taskListCheckMarker"),e.exit("taskListCheck"),s):r(l)}function s(l){return Y(l)?n(l):oe(l)?e.check({tokenize:y6},n,r)(l):r(l)}}function y6(e,n,r){return pe(e,t,"whitespace");function t(a){return a===null?r(a):n(a)}}function k6(e){return yS([W5(),n6(),c6(e),m6(),v6()])}const S6={};function w6(e){const n=this,r=e||S6,t=n.data(),a=t.micromarkExtensions||(t.micromarkExtensions=[]),i=t.fromMarkdownExtensions||(t.fromMarkdownExtensions=[]),o=t.toMarkdownExtensions||(t.toMarkdownExtensions=[]);a.push(k6(r)),i.push(F5()),o.push(J5(r))}function x6(e){return M("div",{className:"paragraph",...e})}const j6=({hovered:e})=>jn`
	a {
		color: ${e?"#3f51b5":"#0288d1"} !important;
		transition: 250ms;
		position: relative;
		font-weight: bold;
		text-decoration: none;

		&::after {
			content: "";
			position: absolute;
			bottom: 0;
			left: 0;
			width: ${e?100:0}%;
			height: 1px;
			background: #3f51b5;
			transition: 250ms;
		}
	}
`;function C6(e){const{href:n,children:r}=e,[t,a]=b.useState(!1);return M("span",{css:j6({hovered:t}),onMouseEnter:()=>a(!0),onMouseOver:()=>a(!0),onMouseLeave:()=>a(!1),onTouchStart:()=>a(!0),onTouchEnd:()=>a(!1),onTouchCancel:()=>a(!1),onClick:()=>a(!1),children:n.startsWith("#")?M(Or,{to:n,replace:!0,className:"allow-select",children:r}):n.startsWith("http")?M("a",{href:n,target:"_blank",rel:"external nofollow noopener noreferrer",className:"allow-select",children:r}):M(Or,{to:n,className:"allow-select",children:r})})}function I6(e){const{href:n,...r}=e;return M(C6,{href:decodeURIComponent(n),...r})}const E6=jn`
	overflow-x: auto;
	margin-top: 20px;
	margin-bottom: 20px;
`;function T6(e){const{children:n}=e;return M("div",{css:E6,children:M("div",{style:{display:"inline-block",margin:"1px"},children:M("table",{children:n})})})}function M6(e){const{src:n,style:r,...t}=e,[a,i]=b.useState(!1),[o,s]=b.useState(`?${Math.random()}`);return ae("picture",{children:[M("source",{type:"image/webp",srcSet:`/eportfolio2/${n.replace(/\.(jpg|png|gif)/,".webp")}${o}`}),M("img",{...t,src:`/eportfolio2/${n}${o}`,alt:n.replace(/\.(jpg|png|gif)/,""),draggable:"false",onContextMenu:l=>l.preventDefault(),onMouseEnter:()=>i(!0),onMouseOver:()=>i(!0),onMouseLeave:()=>i(!1),onTouchStart:()=>i(!0),onTouchEnd:()=>i(!1),onTouchCancel:()=>i(!1),onClick:()=>{},onError:()=>setTimeout(()=>s(`?${Math.random()}`),1e3),style:{...r,...a&&{transform:"scale(1.2)",boxShadow:"0 0 30px rgba(0, 0, 0, 1)",zIndex:1}}})]})}function A6(e){return M(M6,{...e})}const P6=jn`
	word-wrap: break-word;

	.paragraph {
		line-height: 1.75em !important;
		margin-bottom: 1em !important;
	}

	li {
		line-height: 1.75em !important;
	}

	pre {
		overflow: auto;
		border-radius: 5px;
		padding: 20px;
		color: #455a64;
		background-color: rgba(144, 164, 174, 0.2);
		border: 1px solid #90a4ae;
		line-height: 1.2em;
		transition: 250ms;
	}

	*:not(pre):not(code) > code {
		color: #d81b60;
		background-color: rgba(27, 31, 35, 0.05);
		border-radius: 3px;
		padding: 0.2em 0.4em;
		transition: 250ms;
	}

	span.react-syntax-highlighter-line-number {
		-webkit-touch-callout: none;
		-webkit-user-select: none;
		-khtml-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		user-select: none;

		-webkit-user-drag: none;
		-khtml-user-drag: none;
		-moz-user-drag: none;
		-ms-user-drag: none;
		user-drag: none;
	}

	hr {
		margin: 20px auto;
		border: 1px solid rgba(144, 164, 174, 0.5);
		opacity: 1;
	}

	img {
		position: relative;
		max-width: 50%;
		max-height: 400px;
		display: block;
		margin: 20px auto;
		padding: 3px;
		border-radius: 15px;
		box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);
		background: linear-gradient(to right, red, orange, yellow);
		background-size: 200% 200%;
		transition: 400ms cubic-bezier(0, 1.2, 0.2, 1.5);
		animation: animated-border 3s ease infinite;
		cursor: zoom-in;
	}

	@keyframes animated-border {
		0% {
			background-position: 0% 0%;
		}

		50% {
			background-position: 100% 100%;
		}

		100% {
			background-position: 0% 0%;
		}
	}

	blockquote {
		font-style: italic;
		opacity: 0.5;
		padding-left: 25px;
		border-left: 5px solid rgba(41, 182, 246, 0.5);
		transition: 250ms;
	}

	ul,
	ol {
		padding-inline-start: 20px;
	}

	table {
		border-collapse: collapse;
		border-style: hidden;
		border-radius: 5px !important;
		box-shadow: 0 0 0 1px #90a4ae !important;
	}

	thead th {
		background-color: rgba(144, 164, 174, 0.25);
	}
	tr:nth-of-type(even) td {
		background-color: rgba(144, 164, 174, 0.05);
	}

	th:first-of-type {
		border-top-left-radius: 5px;
	}
	th:last-of-type {
		border-top-right-radius: 5px;
	}
	tr:last-of-type td:first-of-type {
		border-bottom-left-radius: 5px;
	}
	tr:last-of-type td:last-of-type {
		border-bottom-right-radius: 5px;
	}

	th,
	td {
		border: 1px solid #90a4ae;
		padding: 8px;
		line-height: 1.75em !important;
	}

	@media (hover: hover) {
		pre:hover {
			background-color: rgba(224, 224, 224, 0.4);
		}

		*:not(pre):not(code) > code:hover {
			background-color: rgba(236, 64, 122, 0.15);
		}

		blockquote:hover {
			border-radius: 0 15px 15px 0;
			background-color: rgba(144, 164, 174, 0.25);
		}
	}
`,R6=e=>e.replace(/\t/g,"    ").replace(/^<!-- [\w-]*prettier[\w-]* -->$/gm,"");function D6(){const{blogPostId:e}=Fm();document.title=`Blog post - ${e}`;const n=rS.filter(a=>a.postId===e)[0],t=R6(Object.assign({"../../config/blog/2020-09/coding-java-1.md":SR,"../../config/blog/2020-09/coding-java-2.md":wR,"../../config/blog/2020-09/coding-java-3.md":xR,"../../config/blog/2020-09/coding-java-4.md":jR,"../../config/blog/2020-09/coding-java-5.md":CR,"../../config/blog/2020-09/coding-java-6.md":IR,"../../config/blog/2020-09/git-basics.md":ER,"../../config/blog/2020-09/spring-mapstruct.md":TR,"../../config/blog/2020-09/web-scraping-with-jsoup.md":MR,"../../config/blog/2020-10/new-jdk-features-after-8.md":AR,"../../config/blog/2020-10/react-web-1.md":PR,"../../config/blog/2020-10/using-lombok.md":RR,"../../config/blog/2020-10/web-scraping-with-selenide.md":DR,"../../config/blog/2020-10/writing-chrome-extensions.md":OR,"../../config/blog/2021-04/pull-data-with-retrofit.md":LR,"../../config/blog/2021-05/ffmpeg-basics.md":_R,"../../config/blog/2021-05/js-advanced-syntax.md":NR,"../../config/blog/2021-05/react-calculator.md":BR,"../../config/blog/2021-05/web-security.md":HR,"../../config/blog/2021-06/java-collections-generic-type-covariance.md":qR,"../../config/blog/2021-06/task-scheduling-issue.md":FR,"../../config/blog/2021-08/charles-proxy.md":JR,"../../config/blog/2021-08/sql-basics-sql-server.md":zR,"../../config/blog/2021-09/html-webp.md":UR,"../../config/blog/2021-09/java-8-group-list-items.md":WR,"../../config/blog/2021-09/java-8-hashmap.md":VR,"../../config/blog/2021-09/java-logging.md":$R,"../../config/blog/2021-09/java-test-junit.md":GR,"../../config/blog/2021-09/java-test-mockito.md":KR,"../../config/blog/2021-09/java-test-overview.md":YR,"../../config/blog/2021-09/jpa-usage.md":QR,"../../config/blog/2021-09/kafka-cli.md":XR,"../../config/blog/2021-09/markdown-basics.md":ZR,"../../config/blog/2021-09/nodejs-cryptojs.md":eD,"../../config/blog/2021-09/spring-aop.md":nD,"../../config/blog/2021-09/spring-caching-redis.md":rD,"../../config/blog/2021-09/spring-graphql-api.md":tD,"../../config/blog/2021-10/spring-boot-elk-logging.md":aD,"../../config/blog/2021-10/spring-resttemplate-trap.md":iD,"../../config/blog/2021-11/java-remote-debug.md":oD,"../../config/blog/2022-06/spring-cloud-config-git.md":sD,"../../config/blog/2022-07/curl-basics.md":lD,"../../config/blog/2022-07/docker-basics.md":cD,"../../config/blog/2022-07/java-test-powermock.md":uD,"../../config/blog/2022-07/java-test-wiremock.md":pD,"../../config/blog/2022-07/redis-basics.md":dD,"../../config/blog/2022-07/spring-webflux-1.md":mD,"../../config/blog/2022-08/batch-download-files.md":gD,"../../config/blog/2023-01/spring-cloud-config-jdbc.md":fD,"../../config/blog/2023-04/kubectl-basics.md":hD,"../../config/blog/2023-04/spring-azure-service-bus.md":vD,"../../config/blog/2023-05/jmh-benchmark.md":bD,"../../config/blog/2023-05/picocli.md":yD,"../../config/blog/2023-06/custom-jre.md":kD,"../../config/blog/2023-07/cve-2023-20860.md":SD,"../../config/blog/2023-08/cve-2023-34034.md":wD,"../../config/blog/2023-11/java-spring-http-clients.md":xD,"../../config/blog/2023-11/support-101.md":jD,"../../config/blog/2024-01/google-lens-sort.md":CD,"../../config/blog/2024-01/spring-cloud-stream-rabbitmq.md":ID,"../../config/blog/2024-02/java-test-cucumber.md":ED,"../../config/blog/2024-02/jira-101.md":TD,"../../config/blog/2024-02/maven-advanced.md":MD,"../../config/blog/2024-02/railway-free-db-paas.md":AD,"../../config/blog/2024-03/bruno-http-api-test.md":PD,"../../config/blog/2024-03/linux-basic-commands.md":RD,"../../config/blog/2024-03/outbox-inbox-patterns.md":DD,"../../config/blog/2024-03/spring-boot-dockerfile.md":OD,"../../config/blog/2024-03/spring-boot-micrometer-tracing.md":LD,"../../config/blog/2024-04/java-snyk-scan.md":_D,"../../config/blog/2024-04/rabbitmq-basics.md":ND,"../../config/blog/2024-04/spring-boot-external-config.md":BD,"../../config/blog/2024-05/jmeter-perf-test.md":HD,"../../config/blog/2024-05/nexus-maven-repo.md":qD,"../../config/blog/2024-05/react-with-vite.md":FD,"../../config/blog/2024-05/spring-boot-openapi.md":JD,"../../config/blog/2024-05/write-maven-shared-lib.md":zD})[`../../${n.src}`]);return ae(Rn,{gap:5,children:[M(Qe,{className:"justify-content-center",children:M("h1",{className:"text-center",style:{marginBottom:"1rem"},children:M("strong",{children:n.title})})}),M(Qe,{className:"justify-content-center",children:M(tg,{src:n.thumbnail,className:"object-fit-contain",style:{maxWidth:"50%",maxHeight:"10rem",opacity:.75}})}),M(Qe,{children:t?M(pN,{remarkPlugins:[w6],css:P6,components:{p:x6,a:I6,table:T6,img:A6},children:t}):M("h2",{children:"Content not available."})})]})}const O6=b.memo(D6,(e,n)=>!0),L6={type:fn.string,tooltip:fn.bool,as:fn.elementType},au=b.forwardRef(({as:e="div",className:n,type:r="valid",tooltip:t=!1,...a},i)=>A.jsx(e,{...a,ref:i,className:V(n,`${r}-${t?"tooltip":"feedback"}`)}));au.displayName="Feedback";au.propTypes=L6;const dt=b.createContext({}),ef=b.forwardRef(({id:e,bsPrefix:n,className:r,type:t="checkbox",isValid:a=!1,isInvalid:i=!1,as:o="input",...s},l)=>{const{controlId:c}=b.useContext(dt);return n=G(n,"form-check-input"),A.jsx(o,{...s,ref:l,type:t,id:e||c,className:V(r,n,a&&"is-valid",i&&"is-invalid")})});ef.displayName="FormCheckInput";const ac=b.forwardRef(({bsPrefix:e,className:n,htmlFor:r,...t},a)=>{const{controlId:i}=b.useContext(dt);return e=G(e,"form-check-label"),A.jsx("label",{...t,ref:a,htmlFor:r||i,className:V(n,e)})});ac.displayName="FormCheckLabel";function _6(e,n){return b.Children.toArray(e).some(r=>b.isValidElement(r)&&r.type===n)}const cw=b.forwardRef(({id:e,bsPrefix:n,bsSwitchPrefix:r,inline:t=!1,reverse:a=!1,disabled:i=!1,isValid:o=!1,isInvalid:s=!1,feedbackTooltip:l=!1,feedback:c,feedbackType:u,className:p,style:d,title:m="",type:g="checkbox",label:y,children:k,as:f="input",...h},v)=>{n=G(n,"form-check"),r=G(r,"form-switch");const{controlId:x}=b.useContext(dt),I=b.useMemo(()=>({controlId:e||x}),[x,e]),S=!k&&y!=null&&y!==!1||_6(k,ac),E=A.jsx(ef,{...h,type:g==="switch"?"checkbox":g,ref:v,isValid:o,isInvalid:s,disabled:i,as:f});return A.jsx(dt.Provider,{value:I,children:A.jsx("div",{style:d,className:V(p,S&&n,t&&`${n}-inline`,a&&`${n}-reverse`,g==="switch"&&r),children:k||A.jsxs(A.Fragment,{children:[E,S&&A.jsx(ac,{title:m,children:y}),c&&A.jsx(au,{type:u,tooltip:l,children:c})]})})})});cw.displayName="FormCheck";const ic=Object.assign(cw,{Input:ef,Label:ac}),uw=b.forwardRef(({bsPrefix:e,type:n,size:r,htmlSize:t,id:a,className:i,isValid:o=!1,isInvalid:s=!1,plaintext:l,readOnly:c,as:u="input",...p},d)=>{const{controlId:m}=b.useContext(dt);return e=G(e,"form-control"),A.jsx(u,{...p,type:n,size:t,ref:d,readOnly:c,id:a||m,className:V(i,l?`${e}-plaintext`:e,r&&`${e}-${r}`,n==="color"&&`${e}-color`,o&&"is-valid",s&&"is-invalid")})});uw.displayName="FormControl";const N6=Object.assign(uw,{Feedback:au}),pw=b.forwardRef(({className:e,bsPrefix:n,as:r="div",...t},a)=>(n=G(n,"form-floating"),A.jsx(r,{ref:a,className:V(e,n),...t})));pw.displayName="FormFloating";const nf=b.forwardRef(({controlId:e,as:n="div",...r},t)=>{const a=b.useMemo(()=>({controlId:e}),[e]);return A.jsx(dt.Provider,{value:a,children:A.jsx(n,{...r,ref:t})})});nf.displayName="FormGroup";const dw=b.forwardRef(({as:e="label",bsPrefix:n,column:r=!1,visuallyHidden:t=!1,className:a,htmlFor:i,...o},s)=>{const{controlId:l}=b.useContext(dt);n=G(n,"form-label");let c="col-form-label";typeof r=="string"&&(c=`${c} ${c}-${r}`);const u=V(a,n,t&&"visually-hidden",r&&c);return i=i||l,r?A.jsx(fr,{ref:s,as:"label",className:u,htmlFor:i,...o}):A.jsx(e,{ref:s,className:u,htmlFor:i,...o})});dw.displayName="FormLabel";const mw=b.forwardRef(({bsPrefix:e,className:n,id:r,...t},a)=>{const{controlId:i}=b.useContext(dt);return e=G(e,"form-range"),A.jsx("input",{...t,type:"range",ref:a,className:V(n,e),id:r||i})});mw.displayName="FormRange";const gw=b.forwardRef(({bsPrefix:e,size:n,htmlSize:r,className:t,isValid:a=!1,isInvalid:i=!1,id:o,...s},l)=>{const{controlId:c}=b.useContext(dt);return e=G(e,"form-select"),A.jsx("select",{...s,size:r,ref:l,className:V(t,e,n&&`${e}-${n}`,a&&"is-valid",i&&"is-invalid"),id:o||c})});gw.displayName="FormSelect";const fw=b.forwardRef(({bsPrefix:e,className:n,as:r="small",muted:t,...a},i)=>(e=G(e,"form-text"),A.jsx(r,{...a,ref:i,className:V(n,e,t&&"text-muted")})));fw.displayName="FormText";const hw=b.forwardRef((e,n)=>A.jsx(ic,{...e,ref:n,type:"switch"}));hw.displayName="Switch";const B6=Object.assign(hw,{Input:ic.Input,Label:ic.Label}),vw=b.forwardRef(({bsPrefix:e,className:n,children:r,controlId:t,label:a,...i},o)=>(e=G(e,"form-floating"),A.jsxs(nf,{ref:o,className:V(n,e),controlId:t,...i,children:[r,A.jsx("label",{htmlFor:t,children:a})]})));vw.displayName="FloatingLabel";const H6={_ref:fn.any,validated:fn.bool,as:fn.elementType},rf=b.forwardRef(({className:e,validated:n,as:r="form",...t},a)=>A.jsx(r,{...t,ref:a,className:V(e,n&&"was-validated")}));rf.displayName="Form";rf.propTypes=H6;const jr=Object.assign(rf,{Group:nf,Control:N6,Floating:pw,Check:ic,Switch:B6,Label:dw,Text:fw,Range:mw,Select:gw,FloatingLabel:vw});function q6(){return document.title="Contact",ae(Rn,{gap:4,className:"text-center",children:[M("h1",{style:{marginBottom:"1rem"},children:"Contact me 🤗"}),ae(jr,{children:[ae(jr.Group,{as:Qe,className:"mb-3",controlId:"formPlaintextEmail",children:[M(jr.Label,{column:!0,sm:"2",children:"Name"}),M(fr,{sm:"10",children:M(jr.Control,{placeholder:"Enter your name"})})]}),ae(jr.Group,{as:Qe,className:"mb-3",controlId:"formPlaintextPassword",children:[M(jr.Label,{column:!0,sm:"2",children:"Email"}),M(fr,{sm:"10",children:M(jr.Control,{placeholder:"Enter your email"})})]}),ae(jr.Group,{as:Qe,className:"mb-3",controlId:"formPlaintextPassword",children:[M(jr.Label,{column:!0,sm:"2",children:"Message"}),M(fr,{sm:"10",children:M(jr.Control,{as:"textarea",rows:3,placeholder:"Leave me a message"})})]}),M(Jt,{variant:"primary",type:"submit",children:"Submit"})]})]})}const F6=b.memo(q6,(e,n)=>!0);function J6(){return document.title="Page not found",M(G2,{children:M("h1",{style:{marginBottom:"1rem"},children:"Page not found"})})}const z6=b.memo(J6,(e,n)=>!0),bw=[{title:"Home",path:"/",component:M(EP,{})},{title:"Work",path:"/workExp",component:M(RP,{})},{title:"Work exp detail",path:"/workExp/:workExpId",component:M(OP,{})},{title:"Hobby projects",path:"/hobbyProjects",component:M(NP,{})},{title:"Hobby project detail",path:"/hobbyProject/:hobbyProjectId",component:M(HP,{})},{title:"Personality",path:"/personality",component:M(bR,{})},{title:"Blog",path:"/blog",component:M(kR,{})},{title:"Blog post",path:"/blog/:blogPostId",component:M(O6,{})},{title:"Contact",path:"/contact",component:M(F6,{})},{title:"Not found",path:"*",component:M(z6,{})}],U6=bw.filter(({path:e})=>e!=="*"&&!e.includes(":"));function W6(){const e=Ei();return ae(Hu,{variant:"dark",expand:"md",collapseOnSelect:!0,className:"justify-content-center",children:[M(Hu.Toggle,{style:{marginBottom:"1rem",background:"#212121"}}),M(Hu.Collapse,{className:"justify-content-center",children:M(qu,{variant:"underline",activeKey:e.pathname,className:"justify-content-center",children:U6.map((n,r)=>M(qu.Item,{children:M(qu.Link,{eventKey:n.path,as:Or,to:n.path,draggable:"false",children:n.title})},r))})})]})}const V6=b.memo(W6,(e,n)=>!0);function $6(){return ae(Rn,{gap:5,className:"text-center",children:[ae("div",{children:[M("code",{css:jn`
						color: #e91e63;
						font-size: 3em;
						display: block;
						-webkit-box-reflect: below 0em -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgba(0, 0, 0, 0)), to(rgba(255, 255, 255, 0.1)));
					`,children:"Chung Cheuk Hang Michael"}),M("code",{css:jn`
						color: #0277bd;
						font-size: 1.75em;
						display: block;
						-webkit-box-reflect: below 0em -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgba(0, 0, 0, 0)), to(rgba(255, 255, 255, 0.1)));
					`,children:"Web Developer"})]}),M(V6,{})]})}const G6=b.memo($6,(e,n)=>!0);function K6(){const e=Ei(),n=IC();return b.useEffect(()=>{n==="PUSH"&&((e.pathname.match(/\//g)||[]).length>=2?setTimeout(()=>window.scrollTo({top:0}),500):window.scrollTo({top:0}))},[e]),M("div",{children:M(JC,{caseSensitive:!0,children:bw.map((r,t)=>M(J1,{path:r.path,element:r.component},t))})})}const Y6=b.memo(K6,(e,n)=>!0),_d=2**31-1;function yw(e,n,r){const t=r-Date.now();e.current=t<=_d?setTimeout(n,t):setTimeout(()=>yw(e,n,r),_d)}function Q6(){const e=Gm(),n=b.useRef();return t0(()=>clearTimeout(n.current)),b.useMemo(()=>{const r=()=>clearTimeout(n.current);function t(a,i=0){e()&&(r(),i<=_d?n.current=setTimeout(a,i):yw(n,a,Date.now()+i))}return{set:t,clear:r,handleRef:n}},[])}const X6=()=>{};function Z6(e,n,{disabled:r,clickTrigger:t}={}){const a=n||X6;_k(e,a,{disabled:r,clickTrigger:t});const i=Ne(o=>{o0(o)&&a(o)});b.useEffect(()=>{if(r||e==null)return;const o=os(ml(e));let s=(o.defaultView||window).event;const l=Zr(o,"keyup",c=>{if(c===s){s=void 0;return}i(c)});return()=>{l()}},[e,r,i])}const kw=b.forwardRef((e,n)=>{const{flip:r,offset:t,placement:a,containerPadding:i,popperConfig:o={},transition:s,runTransition:l}=e,[c,u]=hd(),[p,d]=hd(),m=Br(u,n),g=dd(e.container),y=dd(e.target),[k,f]=b.useState(!e.show),h=Lk(y,c,Nk({placement:a,enableEvents:!!e.show,containerPadding:i||5,flip:r,offset:t,arrowElement:p,popperConfig:o}));e.show&&k&&f(!1);const v=(...R)=>{f(!0),e.onExited&&e.onExited(...R)},x=e.show||!k;if(Z6(c,e.onHide,{disabled:!e.rootClose||e.rootCloseDisabled,clickTrigger:e.rootCloseEvent}),!x)return null;const{onExit:I,onExiting:S,onEnter:E,onEntering:T,onEntered:B}=e;let C=e.children(Object.assign({},h.attributes.popper,{style:h.styles.popper,ref:m}),{popper:h,placement:a,show:!!e.show,arrowProps:Object.assign({},h.attributes.arrow,{style:h.styles.arrow,ref:d})});return C=md(s,l,{in:!!e.show,appear:!0,mountOnEnter:!0,unmountOnExit:!0,children:C,onExit:I,onExiting:S,onExited:v,onEnter:E,onEntering:T,onEntered:B}),g?ca.createPortal(C,g):null});kw.displayName="Overlay";const Sw=b.forwardRef(({className:e,bsPrefix:n,as:r="div",...t},a)=>(n=G(n,"popover-header"),A.jsx(r,{ref:a,className:V(e,n),...t})));Sw.displayName="PopoverHeader";const tf=b.forwardRef(({className:e,bsPrefix:n,as:r="div",...t},a)=>(n=G(n,"popover-body"),A.jsx(r,{ref:a,className:V(e,n),...t})));tf.displayName="PopoverBody";function ww(e,n){let r=e;return e==="left"?r=n?"end":"start":e==="right"&&(r=n?"start":"end"),r}function xw(e="absolute"){return{position:e,top:"0",left:"0",opacity:"0",pointerEvents:"none"}}const e8=b.forwardRef(({bsPrefix:e,placement:n="right",className:r,style:t,children:a,body:i,arrowProps:o,hasDoneInitialMeasure:s,popper:l,show:c,...u},p)=>{const d=G(e,"popover"),m=Um(),[g]=(n==null?void 0:n.split("-"))||[],y=ww(g,m);let k=t;return c&&!s&&(k={...t,...xw(l==null?void 0:l.strategy)}),A.jsxs("div",{ref:p,role:"tooltip",style:k,"x-placement":g,className:V(r,d,g&&`bs-popover-${y}`),...u,children:[A.jsx("div",{className:"popover-arrow",...o}),i?A.jsx(tf,{children:a}):a]})}),n8=Object.assign(e8,{Header:Sw,Body:tf,POPPER_OFFSET:[0,8]}),jw=b.forwardRef(({bsPrefix:e,placement:n="right",className:r,style:t,children:a,arrowProps:i,hasDoneInitialMeasure:o,popper:s,show:l,...c},u)=>{e=G(e,"tooltip");const p=Um(),[d]=(n==null?void 0:n.split("-"))||[],m=ww(d,p);let g=t;return l&&!o&&(g={...t,...xw(s==null?void 0:s.strategy)}),A.jsxs("div",{ref:u,style:g,role:"tooltip","x-placement":d,className:V(r,e,`bs-tooltip-${m}`),...c,children:[A.jsx("div",{className:"tooltip-arrow",...i}),A.jsx("div",{className:`${e}-inner`,children:a})]})});jw.displayName="Tooltip";const Nd=Object.assign(jw,{TOOLTIP_OFFSET:[0,6]});function r8(e){const n=b.useRef(null),r=G(void 0,"popover"),t=G(void 0,"tooltip"),a=b.useMemo(()=>({name:"offset",options:{offset:()=>{if(e)return e;if(n.current){if(gd(n.current,r))return n8.POPPER_OFFSET;if(gd(n.current,t))return Nd.TOOLTIP_OFFSET}return[0,0]}}}),[e,r,t]);return[n,[a]]}function t8(e,n){const{ref:r}=e,{ref:t}=n;e.ref=r.__wrapped||(r.__wrapped=a=>r(Ul(a))),n.ref=t.__wrapped||(t.__wrapped=a=>t(Ul(a)))}const Cw=b.forwardRef(({children:e,transition:n=Wl,popperConfig:r={},rootClose:t=!1,placement:a="top",show:i=!1,...o},s)=>{const l=b.useRef({}),[c,u]=b.useState(null),[p,d]=r8(o.offset),m=Br(s,p),g=n===!0?Wl:n||void 0,y=Ne(k=>{u(k),r==null||r.onFirstUpdate==null||r.onFirstUpdate(k)});return zo(()=>{c&&o.target&&(l.current.scheduleUpdate==null||l.current.scheduleUpdate())},[c,o.target]),b.useEffect(()=>{i||u(null)},[i]),A.jsx(kw,{...o,ref:m,popperConfig:{...r,modifiers:d.concat(r.modifiers||[]),onFirstUpdate:y},transition:g,rootClose:t,placement:a,show:i,children:(k,{arrowProps:f,popper:h,show:v})=>{var x,I;t8(k,f);const S=h==null?void 0:h.placement,E=Object.assign(l.current,{state:h==null?void 0:h.state,scheduleUpdate:h==null?void 0:h.update,placement:S,outOfBoundaries:(h==null||(x=h.state)==null||(I=x.modifiersData.hide)==null?void 0:I.isReferenceHidden)||!1,strategy:r.strategy}),T=!!c;return typeof e=="function"?e({...k,placement:S,show:v,...!n&&v&&{className:"show"},popper:E,arrowProps:f,hasDoneInitialMeasure:T}):b.cloneElement(e,{...k,placement:S,arrowProps:f,popper:E,hasDoneInitialMeasure:T,className:V(e.props.className,!n&&v&&"show"),style:{...e.props.style,...k.style}})}})});Cw.displayName="Overlay";function a8(e){return e&&typeof e=="object"?e:{show:e,hide:e}}function eb(e,n,r){const[t]=n,a=t.currentTarget,i=t.relatedTarget||t.nativeEvent[r];(!i||i!==a)&&!Uo(a,i)&&e(...n)}fn.oneOf(["click","hover","focus"]);const nb=({trigger:e=["hover","focus"],overlay:n,children:r,popperConfig:t={},show:a,defaultShow:i=!1,onToggle:o,delay:s,placement:l,flip:c=l&&l.indexOf("auto")!==-1,...u})=>{const p=b.useRef(null),d=Br(p,r.ref),m=Q6(),g=b.useRef(""),[y,k]=Y1(a,i,o),f=a8(s),{onFocus:h,onBlur:v,onClick:x}=typeof r!="function"?b.Children.only(r).props:{},I=J=>{d(Ul(J))},S=b.useCallback(()=>{if(m.clear(),g.current="show",!f.show){k(!0);return}m.set(()=>{g.current==="show"&&k(!0)},f.show)},[f.show,k,m]),E=b.useCallback(()=>{if(m.clear(),g.current="hide",!f.hide){k(!1);return}m.set(()=>{g.current==="hide"&&k(!1)},f.hide)},[f.hide,k,m]),T=b.useCallback((...J)=>{S(),h==null||h(...J)},[S,h]),B=b.useCallback((...J)=>{E(),v==null||v(...J)},[E,v]),C=b.useCallback((...J)=>{k(!y),x==null||x(...J)},[x,k,y]),R=b.useCallback((...J)=>{eb(S,J,"fromElement")},[S]),O=b.useCallback((...J)=>{eb(E,J,"toElement")},[E]),q=e==null?[]:[].concat(e),$={ref:I};return q.indexOf("click")!==-1&&($.onClick=C),q.indexOf("focus")!==-1&&($.onFocus=T,$.onBlur=B),q.indexOf("hover")!==-1&&($.onMouseOver=R,$.onMouseOut=O),A.jsxs(A.Fragment,{children:[typeof r=="function"?r($):b.cloneElement(r,$),A.jsx(Cw,{...u,show:y,onHide:E,flip:c,placement:l,popperConfig:t,target:p.current,children:n})]})},i8=[{icon:"bi-telephone-fill",link:"tel:+85263301333",displayText:"6330 1333",color:"#009688"},{icon:"bi-envelope-fill",link:"mailto:michaelboyboy@gmail.com",displayText:"michaelboyboy@gmail.com",color:"#f44336"},{icon:"bi-linkedin",link:"https://www.linkedin.com/in/mickchung",displayText:"www.linkedin.com/in/mickchung",color:"#2196f3"}];function o8(){const e=r=>M(Nd,{id:"button-tooltip",...r,children:"5 Jun 2024 00:35:00"}),n=r=>M(Nd,{id:"button-tooltip",...r,children:"a2bee51793808466a90ce4ab6155c918ebbe54e2"});return ae(Rn,{gap:3,children:[M(rg,{className:"text-center",children:M(Qe,{xs:1,sm:2,md:3,className:"justify-content-center g-5",children:i8.map(({icon:r,link:t,displayText:a,color:i},o)=>M(fr,{children:M(We,{as:Or,to:t,target:"_blank",rel:"external nofollow noopener noreferrer",css:jn`
									text-decoration: none;
									opacity: 0.75;
									transition: 250ms;

									* {
										transition: 250ms;
									}

									&:hover {
										opacity: 1;

										.card-body {
											transform: scale(1.1);
										}
									}
								`,children:ae(We.Body,{children:[M(We.Title,{children:M("i",{className:r,css:jn`
												color: ${i};
											`})}),ae(We.Text,{className:"text-muted",children:[a," "]})]})})},o))})}),ae("div",{css:jn`
					color: #4ba3c7;
					font-size: 0.9rem;
					text-align: center;
				`,children:[ae("div",{children:["Copyright © ",2024," Chung Cheuk Hang Michael. All rights reserved."]}),ae("div",{children:[M("span",{children:"Last Updated On: "}),M(nb,{placement:"top",delay:{show:250,hide:250},overlay:e,children:M("span",{style:{cursor:"help"},children:"5 Jun 2024"})}),M("span",{children:" / "}),M(nb,{placement:"top",delay:{show:250,hide:250},overlay:n,children:M("span",{style:{cursor:"help"},children:"a2bee51"})})]})]})]})}const s8=b.memo(o8,(e,n)=>!0);function l8(){return ae(Rn,{gap:5,children:[M(G6,{}),M(Y6,{}),M("hr",{}),M(s8,{})]})}const c8=b.memo(l8,(e,n)=>!0);dp.createRoot(document.getElementById("root")).render(M(Ye.StrictMode,{children:M(KC,{children:M(c8,{})})}))});export default u8();
